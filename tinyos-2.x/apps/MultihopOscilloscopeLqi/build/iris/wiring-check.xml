<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40497708"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403a2188"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403a2188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403a3548"/></to>
    </wire>
    <wire loc="27:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x404e4cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40532660"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40532660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4053c670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x404ed480"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40632988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40632988"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x411fd9b0"/></to>
    </wire>
    <wire loc="29:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404e0010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40513af0"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40513af0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4051b230"/></to>
    </wire>
    <wire loc="41:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x4049eb70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4085fbd0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4085fbd0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40889e98"/></to>
    </wire>
    <wire loc="42:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x404a1278"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40db3be0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40db3be0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ddbd18"/></to>
    </wire>
    <wire loc="43:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x404a98e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4072b348"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4072b348"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40746e58"/></to>
    </wire>
    <wire loc="45:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x404bcd00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d92358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40d92358"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4132c758"/></to>
    </wire>
    <wire loc="46:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x404c0868"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40fbd760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40fbd760"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4139d518"/></to>
    </wire>
    <wire loc="47:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x404b9f08"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40741b78"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4049d278"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407414c8"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x404cc178"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x4073f908"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x4073f908"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40759898"/></to>
    </wire>
    <wire loc="54:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="UARTMessagePool" scoped="" ref="0x404dfe18"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40fe2828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40fe2828"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x413bf920"/></to>
    </wire>
    <wire loc="55:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="UARTQueue" scoped="" ref="0x404d6ab8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40fca3d0"/></to>
    </wire>
    <wire loc="62:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40fe7380"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403a2188"/></to>
    </wire>
    <wire loc="63:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="UARTSend" scoped="" ref="0x4101dad8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40fec010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40fec010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413e85b8"/></to>
    </wire>
    <wire loc="64:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x40fe7848"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40ff3408"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40ff3408"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x413af920"/></to>
    </wire>
    <wire loc="65:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x40fe6e80"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40ff0748"/></to>
    </wire>
    <wire loc="66:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40746178"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40feac50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413af578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413bf578"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40eefca0"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40eeb760"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ebf730"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ddb980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412ba2e8"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40bbd670"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b76f08"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b1cbe0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ae9d98"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40acc220"/></to>
    </wire>
    <wire loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40764230"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40755db0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41235e80"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40539ea8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403a38e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402f8ed8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402f8ed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4037aa30"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403a3ea8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40c304c0"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403a3ea8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40bbd010"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403a3ea8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4039cef0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4039cef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403ac168"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404912f0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403a5ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f9c860"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403a5ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a2e860"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403a5ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40652df0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403a5760"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40480a60"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403ac950"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404806b0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403ac548"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405356e0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403ac548"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403a9c18"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403a9c18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403b2ba0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403b2010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403a5ec0"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x403b4218"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403b94b0"/></to>
    </wire>
    <wire loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403b94b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40405f28"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403b4c08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403b2010"/></to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403d8750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40459e98"/></to>
    </wire>
    <wire loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403cad08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40420d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40420d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410d9010"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403cc2f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4042bac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4042bac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4111aa88"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403d14b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4042e410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4042e410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411607f8"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403b88e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40403250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40403250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4104b0b0"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403d20a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4042f090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4042f090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411633b0"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403c1ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40408228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40408228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41099de8"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403c44b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40413e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40413e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410d3d70"/></to>
    </wire>
    <wire loc="159:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403c8c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4041e988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4041e988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41112010"/></to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403d4210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404297d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404297d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411539e8"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403bb670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40406250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40406250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41054d70"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403bfc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40411e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40411e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41090c08"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403c22f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4041bac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4041bac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410cec08"/></to>
    </wire>
    <wire loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403d0a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404256b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404256b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4110d010"/></to>
    </wire>
    <wire loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403d92f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4042c170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4042c170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115b6c0"/></to>
    </wire>
    <wire loc="185:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403d6830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4045c6c0"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403cfea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40421790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40421790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4111d6c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40405f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4104fc08"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403bdb18"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4040fac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4040fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4108ba88"/></to>
    </wire>
    <wire loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403d73d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404616c0"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403c5010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40415b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40415b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410d6938"/></to>
    </wire>
    <wire loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403c9750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4041f6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4041f6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411169e8"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403ccce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4042a4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4042a4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41118538"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403d1ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4042ed68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4042ed68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115e228"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403c12f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40403ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40403ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4104aa88"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403c0750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40408b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40408b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410937f8"/></to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403c4ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404127d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404127d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410d17f8"/></to>
    </wire>
    <wire loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403c7670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4041d330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4041d330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411119e8"/></to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403d4c08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40428170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40428170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41151538"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403ba0a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40406ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40406ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410527f8"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403be670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404107d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404107d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4108e6c0"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403c2ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4041a4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4041a4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410cb6c0"/></to>
    </wire>
    <wire loc="180:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403d9ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4042cac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4042cac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411590b0"/></to>
    </wire>
    <wire loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403ca210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404203d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404203d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410db538"/></to>
    </wire>
    <wire loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403cd8e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4042b170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4042b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4111b0b0"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403d2a98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4042f9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4042f9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41162d70"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403df2f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40465e98"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403b9ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40404890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40404890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4104d6c0"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403c6590"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4040e4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4040e4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41089538"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403d3670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404306f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404306f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41165938"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403c5a08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404134f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404134f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410d43b0"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403c8210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4041e030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4041e030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41114538"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403d5750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4042ae48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4042ae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41154010"/></to>
    </wire>
    <wire loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403da8e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4042d790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4042d790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115dc08"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403b1c20"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404078e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404078e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410553b0"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403bf210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404114f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404114f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41091228"/></to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403c38e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4041b170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4041b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410cf228"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403d00a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4041dc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4041dc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4110f538"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403d7dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4045fe98"/></to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403cf4b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40422dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40422dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4111fc20"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403cb750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4041ae48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4041ae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c90b0"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403baa98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404055d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404055d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41050228"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403bd120"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4040f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4040f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4108c0b0"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403792a8"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40379f10"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x402f3938"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4038de88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405a92c8"/></to>
    </wire>
    <wire loc="49:MultihopOscilloscopeC.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x404ec170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405356e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4051eeb8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4051bef8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x405278e8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405278e8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403ba0a0"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4051a8f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40526308"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40526308"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403bb670"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x405192e8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40526d10"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40526d10"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403b1c20"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4053c670"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40536698"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40536698"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405f8a60"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40539ea8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40542de0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40540718"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40628460"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40542de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405e4870"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x4062de30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4053ec60"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x405fd010"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40548610"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40548610"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x405e4ca8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40628df8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40546010"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40546010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405e1718"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x405e1718"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x411f46f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x405e4870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411f7818"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x405e4ca8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x411f7c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x411f38b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40599978"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40599978"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405a08d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x411f0a78"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405a5c80"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x405a5c80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405acbb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x411ef4a0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405a3878"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405a3878"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405ab798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x411eee98"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405a13c0"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x405a13c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405a9728"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x405fc9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40629050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x411fd9b0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4123d1f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x4123d1f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4064be90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4123dd78"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40720468"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40647280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4123dd78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40655c80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40645d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40652178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4123b310"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4064be90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406f3560"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x406482f0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40706178"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40725ea0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40655c80"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x407056b0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40647280"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40725280"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x407081d8"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40706de8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4064f740"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4064f740"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406596a8"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4065f970"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40659c30"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40645d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4069d910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4069d910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41231358"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x406f0010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40652178"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40664498"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40651a00"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40651a00"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40682740"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4065a968"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x403a5760"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x406ef9f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40659218"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406ee150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406f1470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406f1470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41231ea0"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4067fc18"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x406f1068"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41231a98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x406f1b08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41230580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41230a40"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406f0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41230e68"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x412321d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4122e080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x412574c8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x406ef9f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x412578c0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x406efde8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41257bd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406ee150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41256310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x406ee7e8"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x40712e90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40759898"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x407c9460"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x4073f120"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40759e18"/></to>
    </wire>
    <wire loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40759e18"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x407621f8"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x4073b7c0"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40743a38"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40743a38"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40763d68"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4072ba78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d5aac8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40741b78"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40743390"/></to>
    </wire>
    <wire loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40743390"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x407636c0"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x407379d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40759190"/></to>
    </wire>
    <wire loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40759190"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40761610"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407414c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40744cb0"/></to>
    </wire>
    <wire loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40744cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40763010"/></to>
    </wire>
    <wire loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40746e58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x407cb1b8"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <from><interface-ref name="RouteControl" scoped="" ref="0x4074a138"/></from>
      <to><interface-ref name="RouteControl" scoped="" ref="0x40743dd0"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="RouteControl" scoped="" ref="0x40743dd0"/></from>
      <to><interface-ref name="RouteControl" scoped="" ref="0x407629f0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d99280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407442a0"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407442a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40764578"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d99918"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40759190"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40758678"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40746178"/></to>
    </wire>
    <wire loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="LqiRouteStats" scoped="" ref="0x40742e00"/></from>
      <to><interface-ref name="LqiRouteStats" scoped="" ref="0x407612b8"/></to>
    </wire>
    <wire loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40761d68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4085fbd0"/></to>
    </wire>
    <wire loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="RouteSelectCntl" scoped="" ref="0x4075f860"/></from>
      <to><interface-ref name="RouteControl" scoped="" ref="0x407cbc58"/></to>
    </wire>
    <wire loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="RouteSelect" scoped="" ref="0x40771538"/></from>
      <to><interface-ref name="RouteSelect" scoped="" ref="0x407cb620"/></to>
    </wire>
    <wire loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40760880"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d4fc98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40d4fc98"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x412d4908"/></to>
    </wire>
    <wire loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="SubSendMine" scoped="" ref="0x4075f010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d4cce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40d4cce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4130dd30"/></to>
    </wire>
    <wire loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407604c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d49ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40d49ce0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4085cf10"/>
      <arguments>
        <value cst="I:116">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40771b20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40513af0"/></to>
    </wire>
    <wire loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40766990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40886288"/></to>
    </wire>
    <wire loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4075d830"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40877920"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40877920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40887b80"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40777248"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40876cf8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40876cf8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a1010"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40770620"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x407c9460"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4077c7e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b762a8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40b762a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b71cf8"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x407777b8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40758678"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x407e1d50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d262c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40d262c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x412445b8"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407e0440"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d54758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40d54758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4085cf10"/>
      <arguments>
        <value cst="I:115">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x407e0798"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b762a8"/></to>
    </wire>
    <wire loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407c9a80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d46030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40d46030"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4053c670"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="LqiRouteStats" scoped="" ref="0x407de010"/></from>
      <to><interface-ref name="LqiRouteStats" scoped="" ref="0x407612b8"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x407d9540"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x408a0368"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x408a0368"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x408fc030"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407df368"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x407e0bd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40877920"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407dd7a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d43f10"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x407d8488"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40758678"/></to>
    </wire>
    <wire loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <from><interface-ref name="SendRouteTask" scoped="" ref="0x407e92a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <from><interface-ref name="TimerTask" scoped="" ref="0x407e31e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d26958"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40877920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d25010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40d25c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40876cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41244c80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408384c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x412433f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408384c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408633d8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40863b48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4085c550"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4085c550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408887c0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40862230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40862e08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40877920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40861510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40861948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40889e98"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40aac8f8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4086b650"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40899af8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40899af8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40910ea8"/></to>
    </wire>
    <wire loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408887c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40a73c88"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408775c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40887828"/></to>
    </wire>
    <wire loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40887828"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40a6adb0"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40887b80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40894508"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4086ec68"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408a1598"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408a1598"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40ac1898"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4085cf10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40887190"/></to>
    </wire>
    <wire loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40887190"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a6a718"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a1010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408fd930"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40886288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40894bf8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40884c68"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4089a100"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4089a100"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40911500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40aac8f8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40ab2030"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4089db60"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40917798"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40917798"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40924658"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40894508"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40928658"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4089e7f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40918408"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40918408"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409252f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40ac1898"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40ac0040"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40911500"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4091e3a0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x408fc030"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40928f08"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408fd930"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40928140"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40894bf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4095e708"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40910ea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4091dd68"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x408dcea8"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x4090b858"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x4090b858"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x4095d8c0"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408b2d10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40894508"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x408d8f00"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a64478"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a68a50"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x408bba30"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40a69d10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4095e708"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4095e708"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40959708"/></to>
    </wire>
    <wire loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a69238"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a6bad8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40a6bad8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a9bda8"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a699a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a9c278"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a9c278"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a98518"/></to>
    </wire>
    <wire loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a9cd38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ad2e18"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40ad2e18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ae9258"/></to>
    </wire>
    <wire loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a9b4c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ac1580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40ac1580"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40ab2cc0"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40aea730"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x408a3710"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40aeba30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40aaceb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40aaceb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40ab2608"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40ab2030"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40aafc50"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40aafc50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40acfaf0"/></to>
    </wire>
    <wire loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ab2608"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ad1260"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40ad1260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40acc568"/></to>
    </wire>
    <wire loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ab2cc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ad1940"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40ad1940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40accc48"/></to>
    </wire>
    <wire loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ad0de0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40894508"/></to>
    </wire>
    <wire loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40ad0450"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40aec3b0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40aec3b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b22930"/></to>
    </wire>
    <wire loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40ad09a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40aeb550"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40aeb550"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40ae9970"/></to>
    </wire>
    <wire loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40ad1d10"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40aecd68"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40aecd68"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40b462f8"/></to>
    </wire>
    <wire loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40aea258"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40aec908"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40aec908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b22e88"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b23880"/></from>
      <to><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x408aa040"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b245e8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b6c6e8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40b6c6e8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b68940"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b24bc8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b6cc40"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b6cc40"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b68e98"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40b230b8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40b9b890"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40b9b890"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40bbd9f0"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b69c88"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x408b8850"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b69178"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b6a4a8"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40b6a4a8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b8f9c8"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b69758"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b6aa00"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b6aa00"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b8ff20"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b90a18"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x408af010"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b6af10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40ba1708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40ba1708"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x40ba0e48"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b90510"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b98568"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b98568"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40bbc708"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b9dc40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x408b1478"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x40ba0e48"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b98010"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40b98010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40bbc1b0"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40b9f788"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40b989b8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40b989b8"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40bbcb58"/></to>
    </wire>
    <wire loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0x40b98e50"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0x408ab920"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketSleepInterval" scoped="" ref="0x40916b68"/></from>
      <to><interface-ref name="PacketSleepInterval" scoped="" ref="0x40923ac0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40913010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40921e90"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x4091a4e0"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x4090b858"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409374f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40960548"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40960548"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40a4a4e8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40937f28"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x409b6ba8"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409b6ba8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40540718"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40975ce8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4095c748"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a4ae80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409a9490"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40a4c6f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409ab690"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409ab690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a0f470"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40a23630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409c7010"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x409c7010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409d8e40"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x409be9d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x409d21b0"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x409db770"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x409d2ea0"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x409bd998"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x409d0d58"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x409bd998"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x409cd990"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x409bd998"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x409ec5b8"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40a2ec48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409c7010"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a64478"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a5e1f8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a63010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40c1e030"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a5ead0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a63010"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40a58e68"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40a60200"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a6b4f0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40a9c6e8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a97078"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a9cd38"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a977e0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a9b4c0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x40a97b80"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x4090b858"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40ab4408"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40ab3b68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40ab53f0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40ab4b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40ab4820"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40ab0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40ab4010"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x40ab3750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40ab5a88"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x40ab3258"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40acb040"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40ad1d10"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40acb720"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40a60200"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40acbd38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40ad0450"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40aca2b0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40ad09a8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40aca6e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ad0de0"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x40ac4680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40ae5c58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x40af8ef8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40b06a40"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40b1c010"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40b1c010"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40b19010"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b04b88"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b0db50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b0db50"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b19a38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b0c238"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40aeba30"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b0c9d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40aea258"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x40b0ce50"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40aea730"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b455a0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b245e8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b45b80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b24bc8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40b44088"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40b230b8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40b46ab0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b23880"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b44880"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b4b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40b4b010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4053c670"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40b42ac8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40b1c010"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b402d8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b48ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b48ed8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b19a38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40b408d8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40a60200"/></to>
    </wire>
    <wire loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <from><interface-ref name="startStopTimer" scoped="" ref="0x40b4ebc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b653f8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b69178"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b64a80"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b69c88"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b659d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b69758"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40b65e38"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a64478"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40b64550"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b762a8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x40b60a38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40b74958"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40b71438"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b66738"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b76f08"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b8b448"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b6af10"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b8ba28"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b90510"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40b8a5e0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b90a18"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40b8be88"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a64478"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b735b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40b9fc20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40ba0010"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40b9f788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40ba1070"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40ba0790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40b73b68"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b9d250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40ba2548"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40ac0040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40ba0428"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b9dc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40ba1be0"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x40b9f370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40ba2230"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b9d908"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0x40bd1c98"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0x40b98e50"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40bb8bb0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x408fc030"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40bae010"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40918408"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40bac390"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40917798"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40bd5800"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40913010"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40bd4be0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40911500"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40bd13d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40960548"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40bd0c18"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a64478"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40c1e030"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40cdf820"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40bbb090"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40bbee90"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40bbee90"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403c1ce8"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40bbbab0"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40c218c8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40c218c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c43920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40bbaa90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40c20010"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40c20010"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40c1ad78"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0x40bb4278"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0x40c1c9c0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0x40c1c9c0"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0x40c30830"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40bb49d0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40c203e8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40c203e8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403c6590"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40bb93c8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40c20dd0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40c20dd0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403b88e0"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40bb14d0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40c1f820"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40c1f820"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40c31d70"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40bd05f8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40a60200"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40bb8010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40d16cb0"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40c1ad78"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40c47da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40cdf820"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x412e8138"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40c2c010"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403d00a0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40c2ca10"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403c8c08"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40c2f138"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x409db770"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40c431d0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40c6d1b0"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40c1a9f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c47a40"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c43920"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c6d8e0"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40c6a8c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ce5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ce5010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412b9630"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40c60010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ce5b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ce5b58"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x412b7230"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40c61bc8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40c6eb40"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40c6eb40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40c8ff18"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40c60490"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></to>
    </wire>
    <wire loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40c7d1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40c87598"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40c8ace8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403c1ce8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40c89730"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403c0750"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40c88128"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403bf210"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40c88b10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x403bfc08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40ce5750"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x412b9d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x412b76f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ce4030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x412b7b18"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x412ba620"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x412b6190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x412e7b38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409c7010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x412e5dd8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x409bd998"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d54a70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40877920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d50150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d4e3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40877920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d4ea88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40d4d6b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40876cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41317010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408384c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x413176a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d4b3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40877920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d4ba88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40d4a6b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40876cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4130a420"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408384c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4130aab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d48010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40877920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d486a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40d98010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40d98448"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d929f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x407379d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x4132ce30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4072ba78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x4132b530"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x4073f120"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40ddbd18"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40df4de8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40db0550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40dacc58"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40daf288"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ddd310"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40db0f10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40dab3b0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40dae690"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ddd9a8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40daf978"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40dab6d8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ddb980"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40df4a50"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40dd3840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40daebc8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ddded0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dd8c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ddc5a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40dd8618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40dd3338"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40fc7930"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40dd8c20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40eaf108"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40dd8618"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40eb0d10"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40eaf898"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40dd3338"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40df2340"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40dd3840"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40eae8c8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40dd3840"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ea0978"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40dd3840"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40eafd80"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40dec778"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40eae310"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40def5b8"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40de89f8"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40eacd40"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40e190b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40eab620"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40eab620"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ec6338"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40ea00f0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40eabaa0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40eabaa0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40ec6c28"/></to>
    </wire>
    <wire loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40e1cb90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40e09570"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40e1e970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40e1a880"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x40ead510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40ead948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40ec48f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40ec67a8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40ec67a8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40ebfe80"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40ec6c28"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40ebe2b0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40ec6338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ebfa68"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ec26f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ec3878"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ec3878"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40f54e68"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40f030a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ec26f0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40ebeb48"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40ef3918"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40ef3918"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40eec110"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40f04010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40ef3e28"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40ef3e28"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40eec640"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40f04448"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40ef2370"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40ef2370"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40eecb58"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40ef1a18"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40f20628"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40ef1010"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40eebbb0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40ef1520"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40f20110"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40f1f208"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x403a5760"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40f1f948"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40f910e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40f533c0"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40f533c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40f9ee40"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40f97050"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f52d20"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40f52d20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f44438"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40f4c090"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40f41770"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40f4cd80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40f40508"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40f4af20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40f3d450"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40f4af20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40f730b8"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40f4af20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40f71cb0"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40f9cc48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f52d20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fbddf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40daf288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fac4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40daf978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40fe5170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40dae690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4139dbe0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fb66f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4139c310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40daf978"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40fb66f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fb3db8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40fb2598"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40db0550"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fb2c40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40daf978"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40fb1850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40daf288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40fb1f28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40fb0370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fec6a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40daf288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fecd40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40daf978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40feb950"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40dae690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x413e8c80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fb66f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x413e73f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40daf978"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x410189a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2008/07/07 19:52:52 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeC" loc="22:MultihopOscilloscopeC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.TimerMilliC" loc="36(MultihopOscilloscopeAppC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40553b70"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.Sensor" loc="19(MultihopOscilloscopeAppC.Sensor):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.Sensor.DemoChannel" loc="29(MultihopOscilloscopeAppC.Sensor.DemoChannel):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC" loc="21(MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CollectionC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <configuration/>
    </component>
    <component qname="MultiHopLqiP" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqi.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Buonadonna&#10; @author Philip Levis (port from TinyOS 1.x)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LqiForwardingEngineP" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <module/>
    </component>
    <component qname="LqiRoutingEngineP" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqi.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Buonadonna&#10; @author Philip Levis (port from TinyOS 1.x)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MultiHopLqiP.BeaconSender" loc="39(MultiHopLqiP.BeaconSender):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:115">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultiHopLqiP.BeaconSender.AMQueueEntryP" loc="35(MultiHopLqiP.BeaconSender.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.h">
        <short>&#10; The number of alarm ticks per one microsecond (0.9216)&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <module/>
    </component>
    <component qname="RF230PacketC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <configuration/>
    </component>
    <component qname="RF230PacketP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <module/>
    </component>
    <component qname="IEEE154PacketC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154PacketP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <module/>
    </component>
    <component qname="IEEE154NetworkLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154NetworkLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.LowPowerListeningLayerC" loc="24(RF230ActiveMessageC.LowPowerListeningLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <module/>
    </component>
    <component qname="TrafficMonitorLayerC.UpdateTimerC" loc="36(TrafficMonitorLayerC.UpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC.NeighborhoodFlagC" loc="24(TrafficMonitorLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="1">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.CsmaLayerC" loc="24(RF230ActiveMessageC.CsmaLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230LayerC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230LayerP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2008/06/24 05:32:32 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="MultiHopLqiP.BeaconReceiver" loc="35(MultiHopLqiP.BeaconReceiver):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:115">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultiHopLqiP.DataSender" loc="39(MultiHopLqiP.DataSender):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:116">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultiHopLqiP.DataSender.AMQueueEntryP" loc="35(MultiHopLqiP.DataSender.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultiHopLqiP.DataSenderMine" loc="39(MultiHopLqiP.DataSenderMine):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:116">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultiHopLqiP.DataSenderMine.AMQueueEntryP" loc="35(MultiHopLqiP.DataSenderMine.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultiHopLqiP.DataReceiver" loc="35(MultiHopLqiP.DataReceiver):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:116">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultiHopLqiP.TimerMilliC" loc="36(MultiHopLqiP.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CollectionC.SendVirtualizerP" loc="36(CollectionC.SendVirtualizerP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/SendVirtualizerP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/SendVirtualizerP.nc">
        <short>&#10; A Send queue that provides a Service Instance pattern for formatted&#10; packets and calls an underlying Send in a round-robin fashion.</short>
        <long>&#10; A Send queue that provides a Service Instance pattern for formatted&#10; packets and calls an underlying Send in a round-robin fashion. Used&#10; to share L3 bandwidth between different communication clients.&#10;&#10; @author Philip Levis&#10; @date   April 6 2007&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SendVirtualizerP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.CollectionSenderC" loc="42(MultihopOscilloscopeAppC.CollectionSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionSenderC.nc">
      <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqi.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Buonadonna&#10; @author Philip Levis (port from TinyOS 1.x)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP" loc="34(MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x40374af0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.SerialAMSenderC" loc="39(MultihopOscilloscopeAppC.SerialAMSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP" loc="35(MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="37(SerialAMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.UARTMessagePoolP" loc="41(MultihopOscilloscopeAppC.UARTMessagePoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
            <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP" loc="53(MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40fe00f0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.UARTQueueP" loc="42(MultihopOscilloscopeAppC.UARTQueueP):/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
              <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugMessagePool" loc="41(MultihopOscilloscopeAppC.DebugMessagePool):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
            <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugMessagePool.PoolP" loc="53(MultihopOscilloscopeAppC.DebugMessagePool.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40fe00f0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugSendQueue" loc="42(MultihopOscilloscopeAppC.DebugSendQueue):/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
              <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugSerialSender" loc="39(MultihopOscilloscopeAppC.DebugSerialSender):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:117">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP" loc="35(MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UARTDebugSenderP" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403db0e8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403db300" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403db518" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403e84f0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403e8718" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403e8940" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403e8b30" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40435d90" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4043d010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4043d238" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4043d428" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40553b70" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40553b70"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40553d30" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40559110" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40559110"/></type-var>
        </typedef>
        <constant name="divider" ref="0x405592d0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4053f6e8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4053f6e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405fbd08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405fbd08"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x405fbee8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406263e8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406263e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc" abstract="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40684858" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x406aee10" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x406c1528" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x406f4940" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x406f4940"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40831728" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40829220" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x408379d0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40a2c010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40a2c010"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40a2c230" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40a11a68" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40a11a68"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40a11eb0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40a11eb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x409aaba8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x409aaba8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40a37038" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40a37038"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40a372a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40a372a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40a37710" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40a37710"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40a37978" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40a37e00" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40a37e00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40cba870" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2008/06/24 05:32:32 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40cb43a8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40d07488" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40d07488"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40d078d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40d078d0"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40d07a90" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40d53068" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SendVirtualizerP" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/SendVirtualizerP.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/SendVirtualizerP.nc">
        <short>&#10; A Send queue that provides a Service Instance pattern for formatted&#10; packets and calls an underlying Send in a round-robin fashion.</short>
        <long>&#10; A Send queue that provides a Service Instance pattern for formatted&#10; packets and calls an underlying Send in a round-robin fashion. Used&#10; to share L3 bandwidth between different communication clients.&#10;&#10; @author Philip Levis&#10; @date   April 6 2007&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40d5cc68" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/SendVirtualizerP.nc">
          <component-ref qname="SendVirtualizerP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionSenderC.nc" abstract="">
      <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqi.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Buonadonna&#10; @author Philip Levis (port from TinyOS 1.x)&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x40d94b88" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x40d90308" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40fbb010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40fe00f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40fe00f0"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40fe0310" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40fdd5e8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40fdd5e8"/></type-var>
        </typedef>
        <constant name="size" ref="0x40fdd7d8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40fcb6e8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40fcb6e8"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40fcb910" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403a2db8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403a2db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4039c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403a2188" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403a2188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403a2360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403a5ec0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403a5ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a70c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4039cef0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4039cef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403a5760" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403a5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403a5938"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403a5a18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403a5af8"/>
        <function-ref name="actualMicro" scoped="" ref="0x403a5bd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403a5cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403ac548" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403ac548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ac720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403ac168" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403ac168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ac340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403ac950" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403ac950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403acb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403b2010" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403a9c18" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403a9c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a9df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403b4c08" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403b4c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b4de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x403b4218" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x403b4218"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b43f0"/>
        <function-ref name="isInput" scoped="" ref="0x403b44d0"/>
        <function-ref name="toggle" scoped="" ref="0x403b45b0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b4690"/>
        <function-ref name="get" scoped="" ref="0x403b4770"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b4850"/>
        <function-ref name="set" scoped="" ref="0x403b4930"/>
        <function-ref name="clr" scoped="" ref="0x403b4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403b2ba0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403b2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b2d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403d8750" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403d8750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8b28"/>
        <function-ref name="isInput" scoped="" ref="0x403d8c08"/>
        <function-ref name="toggle" scoped="" ref="0x403d8ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8dc8"/>
        <function-ref name="get" scoped="" ref="0x403d8ea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7010"/>
        <function-ref name="set" scoped="" ref="0x403d70f0"/>
        <function-ref name="clr" scoped="" ref="0x403d71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403cad08" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403cad08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403caee0"/>
        <function-ref name="isInput" scoped="" ref="0x403c9010"/>
        <function-ref name="toggle" scoped="" ref="0x403c90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c91d0"/>
        <function-ref name="get" scoped="" ref="0x403c92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9390"/>
        <function-ref name="set" scoped="" ref="0x403c9470"/>
        <function-ref name="clr" scoped="" ref="0x403c9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403cc2f0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cc4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403cc5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403cc688"/>
        <function-ref name="isOutput" scoped="" ref="0x403cc768"/>
        <function-ref name="get" scoped="" ref="0x403cc848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cc928"/>
        <function-ref name="set" scoped="" ref="0x403cca08"/>
        <function-ref name="clr" scoped="" ref="0x403ccae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403d14b0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403d14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d1688"/>
        <function-ref name="isInput" scoped="" ref="0x403d1768"/>
        <function-ref name="toggle" scoped="" ref="0x403d1848"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1928"/>
        <function-ref name="get" scoped="" ref="0x403d1a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d1ae8"/>
        <function-ref name="set" scoped="" ref="0x403d1bc8"/>
        <function-ref name="clr" scoped="" ref="0x403d1ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403b88e0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403b88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b8ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403b8b98"/>
        <function-ref name="toggle" scoped="" ref="0x403b8c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403b8d58"/>
        <function-ref name="get" scoped="" ref="0x403b8e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b8f18"/>
        <function-ref name="set" scoped="" ref="0x403c1010"/>
        <function-ref name="clr" scoped="" ref="0x403c10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403d20a0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403d20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d2278"/>
        <function-ref name="isInput" scoped="" ref="0x403d2358"/>
        <function-ref name="toggle" scoped="" ref="0x403d2438"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2518"/>
        <function-ref name="get" scoped="" ref="0x403d25f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d26d8"/>
        <function-ref name="set" scoped="" ref="0x403d27b8"/>
        <function-ref name="clr" scoped="" ref="0x403d2898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403c1ce8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403c1ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c1ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403c0010"/>
        <function-ref name="toggle" scoped="" ref="0x403c00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c01d0"/>
        <function-ref name="get" scoped="" ref="0x403c02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c0390"/>
        <function-ref name="set" scoped="" ref="0x403c0470"/>
        <function-ref name="clr" scoped="" ref="0x403c0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403c44b0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403c44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c4688"/>
        <function-ref name="isInput" scoped="" ref="0x403c4768"/>
        <function-ref name="toggle" scoped="" ref="0x403c4848"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4928"/>
        <function-ref name="get" scoped="" ref="0x403c4a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c4ae8"/>
        <function-ref name="set" scoped="" ref="0x403c4bc8"/>
        <function-ref name="clr" scoped="" ref="0x403c4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403c8c08" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403c8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c8de0"/>
        <function-ref name="isInput" scoped="" ref="0x403c8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403c7010"/>
        <function-ref name="isOutput" scoped="" ref="0x403c70f0"/>
        <function-ref name="get" scoped="" ref="0x403c71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c72b0"/>
        <function-ref name="set" scoped="" ref="0x403c7390"/>
        <function-ref name="clr" scoped="" ref="0x403c7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403d4210" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403d4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d43e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d44c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d45a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d4688"/>
        <function-ref name="get" scoped="" ref="0x403d4768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d4848"/>
        <function-ref name="set" scoped="" ref="0x403d4928"/>
        <function-ref name="clr" scoped="" ref="0x403d4a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403bb670" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403bb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bb848"/>
        <function-ref name="isInput" scoped="" ref="0x403bb928"/>
        <function-ref name="toggle" scoped="" ref="0x403bba08"/>
        <function-ref name="isOutput" scoped="" ref="0x403bbae8"/>
        <function-ref name="get" scoped="" ref="0x403bbbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bbca8"/>
        <function-ref name="set" scoped="" ref="0x403bbd88"/>
        <function-ref name="clr" scoped="" ref="0x403bbe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403bfc08" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403bfc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bfde0"/>
        <function-ref name="isInput" scoped="" ref="0x403bfec0"/>
        <function-ref name="toggle" scoped="" ref="0x403be010"/>
        <function-ref name="isOutput" scoped="" ref="0x403be0f0"/>
        <function-ref name="get" scoped="" ref="0x403be1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403be2b0"/>
        <function-ref name="set" scoped="" ref="0x403be390"/>
        <function-ref name="clr" scoped="" ref="0x403be470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403c22f0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c24c8"/>
        <function-ref name="isInput" scoped="" ref="0x403c25a8"/>
        <function-ref name="toggle" scoped="" ref="0x403c2688"/>
        <function-ref name="isOutput" scoped="" ref="0x403c2768"/>
        <function-ref name="get" scoped="" ref="0x403c2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c2928"/>
        <function-ref name="set" scoped="" ref="0x403c2a08"/>
        <function-ref name="clr" scoped="" ref="0x403c2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403d0a98" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403d0a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0c70"/>
        <function-ref name="isInput" scoped="" ref="0x403d0d50"/>
        <function-ref name="toggle" scoped="" ref="0x403d0e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0f10"/>
        <function-ref name="get" scoped="" ref="0x403cf010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cf0f0"/>
        <function-ref name="set" scoped="" ref="0x403cf1d0"/>
        <function-ref name="clr" scoped="" ref="0x403cf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403d92f0" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403d92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d94c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d95a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d9688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9768"/>
        <function-ref name="get" scoped="" ref="0x403d9848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9928"/>
        <function-ref name="set" scoped="" ref="0x403d9a08"/>
        <function-ref name="clr" scoped="" ref="0x403d9ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403d6830" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403d6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d6a08"/>
        <function-ref name="isInput" scoped="" ref="0x403d6ae8"/>
        <function-ref name="toggle" scoped="" ref="0x403d6bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6ca8"/>
        <function-ref name="get" scoped="" ref="0x403d6d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6e68"/>
        <function-ref name="set" scoped="" ref="0x403df010"/>
        <function-ref name="clr" scoped="" ref="0x403df0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403cfea8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403cfea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cd0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403cd1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403cd280"/>
        <function-ref name="isOutput" scoped="" ref="0x403cd360"/>
        <function-ref name="get" scoped="" ref="0x403cd440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cd520"/>
        <function-ref name="set" scoped="" ref="0x403cd600"/>
        <function-ref name="clr" scoped="" ref="0x403cd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403b94b0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403b94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9688"/>
        <function-ref name="isInput" scoped="" ref="0x403b9768"/>
        <function-ref name="toggle" scoped="" ref="0x403b9848"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9928"/>
        <function-ref name="get" scoped="" ref="0x403b9a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b9ae8"/>
        <function-ref name="set" scoped="" ref="0x403b9bc8"/>
        <function-ref name="clr" scoped="" ref="0x403b9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403bdb18" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403bdb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bdcf0"/>
        <function-ref name="isInput" scoped="" ref="0x403bddd0"/>
        <function-ref name="toggle" scoped="" ref="0x403bdeb0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c6010"/>
        <function-ref name="get" scoped="" ref="0x403c60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c61d0"/>
        <function-ref name="set" scoped="" ref="0x403c62b0"/>
        <function-ref name="clr" scoped="" ref="0x403c6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403d73d0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403d73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d75a8"/>
        <function-ref name="isInput" scoped="" ref="0x403d7688"/>
        <function-ref name="toggle" scoped="" ref="0x403d7768"/>
        <function-ref name="isOutput" scoped="" ref="0x403d7848"/>
        <function-ref name="get" scoped="" ref="0x403d7928"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7a08"/>
        <function-ref name="set" scoped="" ref="0x403d7ae8"/>
        <function-ref name="clr" scoped="" ref="0x403d7bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403c5010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c51e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c52c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c5488"/>
        <function-ref name="get" scoped="" ref="0x403c5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c5648"/>
        <function-ref name="set" scoped="" ref="0x403c5728"/>
        <function-ref name="clr" scoped="" ref="0x403c5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403c9750" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403c9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c9928"/>
        <function-ref name="isInput" scoped="" ref="0x403c9a08"/>
        <function-ref name="toggle" scoped="" ref="0x403c9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9bc8"/>
        <function-ref name="get" scoped="" ref="0x403c9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9d88"/>
        <function-ref name="set" scoped="" ref="0x403c9e68"/>
        <function-ref name="clr" scoped="" ref="0x403c8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403ccce8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403ccce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ccec0"/>
        <function-ref name="isInput" scoped="" ref="0x403d5010"/>
        <function-ref name="toggle" scoped="" ref="0x403d50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d51d0"/>
        <function-ref name="get" scoped="" ref="0x403d52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5390"/>
        <function-ref name="set" scoped="" ref="0x403d5470"/>
        <function-ref name="clr" scoped="" ref="0x403d5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403d1ea8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403d1ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403da0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403da1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403da280"/>
        <function-ref name="isOutput" scoped="" ref="0x403da360"/>
        <function-ref name="get" scoped="" ref="0x403da440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403da520"/>
        <function-ref name="set" scoped="" ref="0x403da600"/>
        <function-ref name="clr" scoped="" ref="0x403da6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403c12f0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403c12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c14c8"/>
        <function-ref name="isInput" scoped="" ref="0x403c15a8"/>
        <function-ref name="toggle" scoped="" ref="0x403c1688"/>
        <function-ref name="isOutput" scoped="" ref="0x403c1768"/>
        <function-ref name="get" scoped="" ref="0x403c1848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1928"/>
        <function-ref name="set" scoped="" ref="0x403c1a08"/>
        <function-ref name="clr" scoped="" ref="0x403c1ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403c0750" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403c0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c0928"/>
        <function-ref name="isInput" scoped="" ref="0x403c0a08"/>
        <function-ref name="toggle" scoped="" ref="0x403c0ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c0bc8"/>
        <function-ref name="get" scoped="" ref="0x403c0ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c0d88"/>
        <function-ref name="set" scoped="" ref="0x403c0e68"/>
        <function-ref name="clr" scoped="" ref="0x403bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403c4ea8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403c4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c30c0"/>
        <function-ref name="isInput" scoped="" ref="0x403c31a0"/>
        <function-ref name="toggle" scoped="" ref="0x403c3280"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3360"/>
        <function-ref name="get" scoped="" ref="0x403c3440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c3520"/>
        <function-ref name="set" scoped="" ref="0x403c3600"/>
        <function-ref name="clr" scoped="" ref="0x403c36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403c7670" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c7848"/>
        <function-ref name="isInput" scoped="" ref="0x403c7928"/>
        <function-ref name="toggle" scoped="" ref="0x403c7a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403c7ae8"/>
        <function-ref name="get" scoped="" ref="0x403c7bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c7ca8"/>
        <function-ref name="set" scoped="" ref="0x403c7d88"/>
        <function-ref name="clr" scoped="" ref="0x403c7e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403d4c08" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403d4c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d4de0"/>
        <function-ref name="isInput" scoped="" ref="0x403d4ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403d3010"/>
        <function-ref name="isOutput" scoped="" ref="0x403d30f0"/>
        <function-ref name="get" scoped="" ref="0x403d31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d32b0"/>
        <function-ref name="set" scoped="" ref="0x403d3390"/>
        <function-ref name="clr" scoped="" ref="0x403d3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403ba0a0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403ba0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ba278"/>
        <function-ref name="isInput" scoped="" ref="0x403ba358"/>
        <function-ref name="toggle" scoped="" ref="0x403ba438"/>
        <function-ref name="isOutput" scoped="" ref="0x403ba518"/>
        <function-ref name="get" scoped="" ref="0x403ba5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ba6d8"/>
        <function-ref name="set" scoped="" ref="0x403ba7b8"/>
        <function-ref name="clr" scoped="" ref="0x403ba898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403be670" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403be8c8"/>
        <function-ref name="isInput" scoped="" ref="0x403be9a8"/>
        <function-ref name="toggle" scoped="" ref="0x403bea88"/>
        <function-ref name="isOutput" scoped="" ref="0x403beb68"/>
        <function-ref name="get" scoped="" ref="0x403bec48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bed28"/>
        <function-ref name="set" scoped="" ref="0x403bee08"/>
        <function-ref name="clr" scoped="" ref="0x403beee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403c2ce8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403c2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403cb010"/>
        <function-ref name="toggle" scoped="" ref="0x403cb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403cb1d0"/>
        <function-ref name="get" scoped="" ref="0x403cb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cb390"/>
        <function-ref name="set" scoped="" ref="0x403cb470"/>
        <function-ref name="clr" scoped="" ref="0x403cb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403d9ce8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403d9ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403d8010"/>
        <function-ref name="toggle" scoped="" ref="0x403d80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d81d0"/>
        <function-ref name="get" scoped="" ref="0x403d82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d8390"/>
        <function-ref name="set" scoped="" ref="0x403d8470"/>
        <function-ref name="clr" scoped="" ref="0x403d8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403ca210" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403ca210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ca4e8"/>
        <function-ref name="isInput" scoped="" ref="0x403ca5c8"/>
        <function-ref name="toggle" scoped="" ref="0x403ca6a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ca788"/>
        <function-ref name="get" scoped="" ref="0x403ca868"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ca948"/>
        <function-ref name="set" scoped="" ref="0x403caa28"/>
        <function-ref name="clr" scoped="" ref="0x403cab08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403cd8e0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403cd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cdab8"/>
        <function-ref name="isInput" scoped="" ref="0x403cdb98"/>
        <function-ref name="toggle" scoped="" ref="0x403cdc78"/>
        <function-ref name="isOutput" scoped="" ref="0x403cdd58"/>
        <function-ref name="get" scoped="" ref="0x403cde38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cdf18"/>
        <function-ref name="set" scoped="" ref="0x403cc010"/>
        <function-ref name="clr" scoped="" ref="0x403cc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403d2a98" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403d2a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d2c70"/>
        <function-ref name="isInput" scoped="" ref="0x403d2d50"/>
        <function-ref name="toggle" scoped="" ref="0x403d2e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2f10"/>
        <function-ref name="get" scoped="" ref="0x403d1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d10f0"/>
        <function-ref name="set" scoped="" ref="0x403d11d0"/>
        <function-ref name="clr" scoped="" ref="0x403d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403df2f0" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403df2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403df5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403df688"/>
        <function-ref name="isOutput" scoped="" ref="0x403df768"/>
        <function-ref name="get" scoped="" ref="0x403df848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df928"/>
        <function-ref name="set" scoped="" ref="0x403dfa08"/>
        <function-ref name="clr" scoped="" ref="0x403dfae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403b9ea8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403b9ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b80c0"/>
        <function-ref name="isInput" scoped="" ref="0x403b81a0"/>
        <function-ref name="toggle" scoped="" ref="0x403b8280"/>
        <function-ref name="isOutput" scoped="" ref="0x403b8360"/>
        <function-ref name="get" scoped="" ref="0x403b8440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b8520"/>
        <function-ref name="set" scoped="" ref="0x403b8600"/>
        <function-ref name="clr" scoped="" ref="0x403b86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403c6590" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403c6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c6768"/>
        <function-ref name="isInput" scoped="" ref="0x403c6848"/>
        <function-ref name="toggle" scoped="" ref="0x403c6928"/>
        <function-ref name="isOutput" scoped="" ref="0x403c6a08"/>
        <function-ref name="get" scoped="" ref="0x403c6ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c6bc8"/>
        <function-ref name="set" scoped="" ref="0x403c6ca8"/>
        <function-ref name="clr" scoped="" ref="0x403c6d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403d3670" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3848"/>
        <function-ref name="isInput" scoped="" ref="0x403d3928"/>
        <function-ref name="toggle" scoped="" ref="0x403d3a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3ae8"/>
        <function-ref name="get" scoped="" ref="0x403d3bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d3ca8"/>
        <function-ref name="set" scoped="" ref="0x403d3d88"/>
        <function-ref name="clr" scoped="" ref="0x403d3e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403c5a08" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403c5a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c5be0"/>
        <function-ref name="isInput" scoped="" ref="0x403c5cc0"/>
        <function-ref name="toggle" scoped="" ref="0x403c5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c5e80"/>
        <function-ref name="get" scoped="" ref="0x403c4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c40f0"/>
        <function-ref name="set" scoped="" ref="0x403c41d0"/>
        <function-ref name="clr" scoped="" ref="0x403c42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403c8210" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403c8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c83e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c84c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c85a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c8688"/>
        <function-ref name="get" scoped="" ref="0x403c8768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c8848"/>
        <function-ref name="set" scoped="" ref="0x403c8928"/>
        <function-ref name="clr" scoped="" ref="0x403c8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403d5750" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403d5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d5928"/>
        <function-ref name="isInput" scoped="" ref="0x403d5a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d5ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5bc8"/>
        <function-ref name="get" scoped="" ref="0x403d5ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5d88"/>
        <function-ref name="set" scoped="" ref="0x403d5e68"/>
        <function-ref name="clr" scoped="" ref="0x403d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403da8e0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403da8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403daab8"/>
        <function-ref name="isInput" scoped="" ref="0x403dab98"/>
        <function-ref name="toggle" scoped="" ref="0x403dac78"/>
        <function-ref name="isOutput" scoped="" ref="0x403dad58"/>
        <function-ref name="get" scoped="" ref="0x403dae38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403daf18"/>
        <function-ref name="set" scoped="" ref="0x403d9010"/>
        <function-ref name="clr" scoped="" ref="0x403d90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403b1c20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403b1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b1df8"/>
        <function-ref name="isInput" scoped="" ref="0x403b1ed8"/>
        <function-ref name="toggle" scoped="" ref="0x403bb010"/>
        <function-ref name="isOutput" scoped="" ref="0x403bb0f0"/>
        <function-ref name="get" scoped="" ref="0x403bb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bb2b0"/>
        <function-ref name="set" scoped="" ref="0x403bb390"/>
        <function-ref name="clr" scoped="" ref="0x403bb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403bf210" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403bf210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bf3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403bf4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403bf5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403bf688"/>
        <function-ref name="get" scoped="" ref="0x403bf768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bf848"/>
        <function-ref name="set" scoped="" ref="0x403bf928"/>
        <function-ref name="clr" scoped="" ref="0x403bfa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403c38e0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403c38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c3ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403c3b98"/>
        <function-ref name="toggle" scoped="" ref="0x403c3c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3d58"/>
        <function-ref name="get" scoped="" ref="0x403c3e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c3f18"/>
        <function-ref name="set" scoped="" ref="0x403c2010"/>
        <function-ref name="clr" scoped="" ref="0x403c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403d00a0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403d00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0278"/>
        <function-ref name="isInput" scoped="" ref="0x403d0358"/>
        <function-ref name="toggle" scoped="" ref="0x403d0438"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0518"/>
        <function-ref name="get" scoped="" ref="0x403d05f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d06d8"/>
        <function-ref name="set" scoped="" ref="0x403d07b8"/>
        <function-ref name="clr" scoped="" ref="0x403d0898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403d7dc8" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403d7dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d6010"/>
        <function-ref name="isInput" scoped="" ref="0x403d60f0"/>
        <function-ref name="toggle" scoped="" ref="0x403d61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d62b0"/>
        <function-ref name="get" scoped="" ref="0x403d6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6470"/>
        <function-ref name="set" scoped="" ref="0x403d6550"/>
        <function-ref name="clr" scoped="" ref="0x403d6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403cf4b0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403cf4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cf688"/>
        <function-ref name="isInput" scoped="" ref="0x403cf768"/>
        <function-ref name="toggle" scoped="" ref="0x403cf848"/>
        <function-ref name="isOutput" scoped="" ref="0x403cf928"/>
        <function-ref name="get" scoped="" ref="0x403cfa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cfae8"/>
        <function-ref name="set" scoped="" ref="0x403cfbc8"/>
        <function-ref name="clr" scoped="" ref="0x403cfca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403cb750" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403cb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cb928"/>
        <function-ref name="isInput" scoped="" ref="0x403cba08"/>
        <function-ref name="toggle" scoped="" ref="0x403cbae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403cbbc8"/>
        <function-ref name="get" scoped="" ref="0x403cbca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cbd88"/>
        <function-ref name="set" scoped="" ref="0x403cbe68"/>
        <function-ref name="clr" scoped="" ref="0x403ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403baa98" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403baa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bac70"/>
        <function-ref name="isInput" scoped="" ref="0x403bad50"/>
        <function-ref name="toggle" scoped="" ref="0x403bae30"/>
        <function-ref name="isOutput" scoped="" ref="0x403baf10"/>
        <function-ref name="get" scoped="" ref="0x403b9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b90f0"/>
        <function-ref name="set" scoped="" ref="0x403b91d0"/>
        <function-ref name="clr" scoped="" ref="0x403b92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403bd120" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403bd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bd2f8"/>
        <function-ref name="isInput" scoped="" ref="0x403bd3d8"/>
        <function-ref name="toggle" scoped="" ref="0x403bd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x403bd598"/>
        <function-ref name="get" scoped="" ref="0x403bd678"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bd758"/>
        <function-ref name="set" scoped="" ref="0x403bd838"/>
        <function-ref name="clr" scoped="" ref="0x403bd918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40406ba8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40406ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40406d80"/>
        <function-ref name="isInput" scoped="" ref="0x40406e60"/>
        <function-ref name="toggle" scoped="" ref="0x40405010"/>
        <function-ref name="isOutput" scoped="" ref="0x404050f0"/>
        <function-ref name="get" scoped="" ref="0x404051d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404052b0"/>
        <function-ref name="set" scoped="" ref="0x40405390"/>
        <function-ref name="clr" scoped="" ref="0x40405470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40404890" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40404890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404a68"/>
        <function-ref name="isInput" scoped="" ref="0x40404b48"/>
        <function-ref name="toggle" scoped="" ref="0x40404c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40404d08"/>
        <function-ref name="get" scoped="" ref="0x40404de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404ec8"/>
        <function-ref name="set" scoped="" ref="0x40403010"/>
        <function-ref name="clr" scoped="" ref="0x404030f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404078e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404078e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40407b98"/>
        <function-ref name="toggle" scoped="" ref="0x40407c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40407d58"/>
        <function-ref name="get" scoped="" ref="0x40407e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407f18"/>
        <function-ref name="set" scoped="" ref="0x40406010"/>
        <function-ref name="clr" scoped="" ref="0x404060f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404055d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404055d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404057a8"/>
        <function-ref name="isInput" scoped="" ref="0x40405888"/>
        <function-ref name="toggle" scoped="" ref="0x40405968"/>
        <function-ref name="isOutput" scoped="" ref="0x40405a48"/>
        <function-ref name="get" scoped="" ref="0x40405b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40405c08"/>
        <function-ref name="set" scoped="" ref="0x40405ce8"/>
        <function-ref name="clr" scoped="" ref="0x40405dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40403250" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40403250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403428"/>
        <function-ref name="isInput" scoped="" ref="0x40403508"/>
        <function-ref name="toggle" scoped="" ref="0x404035e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404036c8"/>
        <function-ref name="get" scoped="" ref="0x404037a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40403888"/>
        <function-ref name="set" scoped="" ref="0x40403968"/>
        <function-ref name="clr" scoped="" ref="0x40403a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40406250" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40406250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40406428"/>
        <function-ref name="isInput" scoped="" ref="0x40406508"/>
        <function-ref name="toggle" scoped="" ref="0x404065e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404066c8"/>
        <function-ref name="get" scoped="" ref="0x404067a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406888"/>
        <function-ref name="set" scoped="" ref="0x40406968"/>
        <function-ref name="clr" scoped="" ref="0x40406a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40405f28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40405f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404110"/>
        <function-ref name="isInput" scoped="" ref="0x404041f0"/>
        <function-ref name="toggle" scoped="" ref="0x404042d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404043b0"/>
        <function-ref name="get" scoped="" ref="0x40404490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404570"/>
        <function-ref name="set" scoped="" ref="0x40404650"/>
        <function-ref name="clr" scoped="" ref="0x40404730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40403ba8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40403ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403d80"/>
        <function-ref name="isInput" scoped="" ref="0x40403e60"/>
        <function-ref name="toggle" scoped="" ref="0x4040c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c0f0"/>
        <function-ref name="get" scoped="" ref="0x4040c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c2b0"/>
        <function-ref name="set" scoped="" ref="0x4040c390"/>
        <function-ref name="clr" scoped="" ref="0x4040c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410553b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410553b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41055588"/>
        <function-ref name="isInput" scoped="" ref="0x41055668"/>
        <function-ref name="toggle" scoped="" ref="0x41055748"/>
        <function-ref name="isOutput" scoped="" ref="0x41055828"/>
        <function-ref name="get" scoped="" ref="0x41055908"/>
        <function-ref name="makeOutput" scoped="" ref="0x410559e8"/>
        <function-ref name="set" scoped="" ref="0x41055ac8"/>
        <function-ref name="clr" scoped="" ref="0x41055ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41054d70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41054d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41053010"/>
        <function-ref name="isInput" scoped="" ref="0x410530f0"/>
        <function-ref name="toggle" scoped="" ref="0x410531d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410532b0"/>
        <function-ref name="get" scoped="" ref="0x41053390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41053470"/>
        <function-ref name="set" scoped="" ref="0x41053550"/>
        <function-ref name="clr" scoped="" ref="0x41053630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410527f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410527f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410529d0"/>
        <function-ref name="isInput" scoped="" ref="0x41052ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41052b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41052c70"/>
        <function-ref name="get" scoped="" ref="0x41052d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41052e30"/>
        <function-ref name="set" scoped="" ref="0x41052f10"/>
        <function-ref name="clr" scoped="" ref="0x41051010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41050228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41050228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41050400"/>
        <function-ref name="isInput" scoped="" ref="0x410504e0"/>
        <function-ref name="toggle" scoped="" ref="0x410505c0"/>
        <function-ref name="isOutput" scoped="" ref="0x410506a0"/>
        <function-ref name="get" scoped="" ref="0x41050780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41050860"/>
        <function-ref name="set" scoped="" ref="0x41050940"/>
        <function-ref name="clr" scoped="" ref="0x41050a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4104fc08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4104fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4104fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4104fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4104e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4104e0f0"/>
        <function-ref name="get" scoped="" ref="0x4104e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4104e2b0"/>
        <function-ref name="set" scoped="" ref="0x4104e390"/>
        <function-ref name="clr" scoped="" ref="0x4104e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4104d6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4104d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4104d898"/>
        <function-ref name="isInput" scoped="" ref="0x4104d978"/>
        <function-ref name="toggle" scoped="" ref="0x4104da58"/>
        <function-ref name="isOutput" scoped="" ref="0x4104db38"/>
        <function-ref name="get" scoped="" ref="0x4104dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4104dcf8"/>
        <function-ref name="set" scoped="" ref="0x4104ddd8"/>
        <function-ref name="clr" scoped="" ref="0x4104deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4104b0b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4104b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4104b288"/>
        <function-ref name="isInput" scoped="" ref="0x4104b368"/>
        <function-ref name="toggle" scoped="" ref="0x4104b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4104b528"/>
        <function-ref name="get" scoped="" ref="0x4104b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4104b6e8"/>
        <function-ref name="set" scoped="" ref="0x4104b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4104b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4104aa88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4104aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4104ac60"/>
        <function-ref name="isInput" scoped="" ref="0x4104ad40"/>
        <function-ref name="toggle" scoped="" ref="0x4104ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x4104af00"/>
        <function-ref name="get" scoped="" ref="0x41048010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410480f0"/>
        <function-ref name="set" scoped="" ref="0x410481d0"/>
        <function-ref name="clr" scoped="" ref="0x410482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404114f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404114f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404116c8"/>
        <function-ref name="isInput" scoped="" ref="0x404117a8"/>
        <function-ref name="toggle" scoped="" ref="0x40411888"/>
        <function-ref name="isOutput" scoped="" ref="0x40411968"/>
        <function-ref name="get" scoped="" ref="0x40411a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411b28"/>
        <function-ref name="set" scoped="" ref="0x40411c08"/>
        <function-ref name="clr" scoped="" ref="0x40411ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4040f170" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4040f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f348"/>
        <function-ref name="isInput" scoped="" ref="0x4040f428"/>
        <function-ref name="toggle" scoped="" ref="0x4040f508"/>
        <function-ref name="isOutput" scoped="" ref="0x4040f5e8"/>
        <function-ref name="get" scoped="" ref="0x4040f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040f7a8"/>
        <function-ref name="set" scoped="" ref="0x4040f888"/>
        <function-ref name="clr" scoped="" ref="0x4040f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40408228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40408228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40408400"/>
        <function-ref name="isInput" scoped="" ref="0x404084e0"/>
        <function-ref name="toggle" scoped="" ref="0x404085c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404086a0"/>
        <function-ref name="get" scoped="" ref="0x40408780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40408860"/>
        <function-ref name="set" scoped="" ref="0x40408940"/>
        <function-ref name="clr" scoped="" ref="0x40408a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40411e48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40411e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410050"/>
        <function-ref name="isInput" scoped="" ref="0x40410130"/>
        <function-ref name="toggle" scoped="" ref="0x40410210"/>
        <function-ref name="isOutput" scoped="" ref="0x404102f0"/>
        <function-ref name="get" scoped="" ref="0x404103d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404104b0"/>
        <function-ref name="set" scoped="" ref="0x40410590"/>
        <function-ref name="clr" scoped="" ref="0x40410670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4040fac8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4040fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040fca0"/>
        <function-ref name="isInput" scoped="" ref="0x4040fd80"/>
        <function-ref name="toggle" scoped="" ref="0x4040fe60"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e010"/>
        <function-ref name="get" scoped="" ref="0x4040e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e1d0"/>
        <function-ref name="set" scoped="" ref="0x4040e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4040e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40408b80" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40408b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40408d58"/>
        <function-ref name="isInput" scoped="" ref="0x40408e38"/>
        <function-ref name="toggle" scoped="" ref="0x40408f18"/>
        <function-ref name="isOutput" scoped="" ref="0x40411010"/>
        <function-ref name="get" scoped="" ref="0x404110f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404111d0"/>
        <function-ref name="set" scoped="" ref="0x404112b0"/>
        <function-ref name="clr" scoped="" ref="0x40411390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404107d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404107d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404109a8"/>
        <function-ref name="isInput" scoped="" ref="0x40410a88"/>
        <function-ref name="toggle" scoped="" ref="0x40410b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40410c48"/>
        <function-ref name="get" scoped="" ref="0x40410d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40410e08"/>
        <function-ref name="set" scoped="" ref="0x40410ee8"/>
        <function-ref name="clr" scoped="" ref="0x4040f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4040e4f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4040e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040e7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4040e888"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e968"/>
        <function-ref name="get" scoped="" ref="0x4040ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040eb28"/>
        <function-ref name="set" scoped="" ref="0x4040ec08"/>
        <function-ref name="clr" scoped="" ref="0x4040ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41099de8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41099de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41094010"/>
        <function-ref name="isInput" scoped="" ref="0x410940f0"/>
        <function-ref name="toggle" scoped="" ref="0x410941d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410942b0"/>
        <function-ref name="get" scoped="" ref="0x41094390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41094470"/>
        <function-ref name="set" scoped="" ref="0x41094550"/>
        <function-ref name="clr" scoped="" ref="0x41094630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410937f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410937f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410939d0"/>
        <function-ref name="isInput" scoped="" ref="0x41093ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41093b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41093c70"/>
        <function-ref name="get" scoped="" ref="0x41093d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41093e30"/>
        <function-ref name="set" scoped="" ref="0x41093f10"/>
        <function-ref name="clr" scoped="" ref="0x41092010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41091228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41091228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41091400"/>
        <function-ref name="isInput" scoped="" ref="0x410914e0"/>
        <function-ref name="toggle" scoped="" ref="0x410915c0"/>
        <function-ref name="isOutput" scoped="" ref="0x410916a0"/>
        <function-ref name="get" scoped="" ref="0x41091780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41091860"/>
        <function-ref name="set" scoped="" ref="0x41091940"/>
        <function-ref name="clr" scoped="" ref="0x41091a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41090c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41090c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41090de0"/>
        <function-ref name="isInput" scoped="" ref="0x41090ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4108f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4108f0f0"/>
        <function-ref name="get" scoped="" ref="0x4108f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4108f2b0"/>
        <function-ref name="set" scoped="" ref="0x4108f390"/>
        <function-ref name="clr" scoped="" ref="0x4108f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4108e6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4108e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4108e898"/>
        <function-ref name="isInput" scoped="" ref="0x4108e978"/>
        <function-ref name="toggle" scoped="" ref="0x4108ea58"/>
        <function-ref name="isOutput" scoped="" ref="0x4108eb38"/>
        <function-ref name="get" scoped="" ref="0x4108ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4108ecf8"/>
        <function-ref name="set" scoped="" ref="0x4108edd8"/>
        <function-ref name="clr" scoped="" ref="0x4108eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4108c0b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4108c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4108c288"/>
        <function-ref name="isInput" scoped="" ref="0x4108c368"/>
        <function-ref name="toggle" scoped="" ref="0x4108c448"/>
        <function-ref name="isOutput" scoped="" ref="0x4108c528"/>
        <function-ref name="get" scoped="" ref="0x4108c608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4108c6e8"/>
        <function-ref name="set" scoped="" ref="0x4108c7c8"/>
        <function-ref name="clr" scoped="" ref="0x4108c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4108ba88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4108ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4108bc60"/>
        <function-ref name="isInput" scoped="" ref="0x4108bd40"/>
        <function-ref name="toggle" scoped="" ref="0x4108be20"/>
        <function-ref name="isOutput" scoped="" ref="0x4108bf00"/>
        <function-ref name="get" scoped="" ref="0x4108a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4108a0f0"/>
        <function-ref name="set" scoped="" ref="0x4108a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4108a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41089538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41089538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41089710"/>
        <function-ref name="isInput" scoped="" ref="0x410897f0"/>
        <function-ref name="toggle" scoped="" ref="0x410898d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410899b0"/>
        <function-ref name="get" scoped="" ref="0x41089a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41089b70"/>
        <function-ref name="set" scoped="" ref="0x41089c50"/>
        <function-ref name="clr" scoped="" ref="0x41089d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40413e48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40413e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412050"/>
        <function-ref name="isInput" scoped="" ref="0x40412130"/>
        <function-ref name="toggle" scoped="" ref="0x40412210"/>
        <function-ref name="isOutput" scoped="" ref="0x404122f0"/>
        <function-ref name="get" scoped="" ref="0x404123d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404124b0"/>
        <function-ref name="set" scoped="" ref="0x40412590"/>
        <function-ref name="clr" scoped="" ref="0x40412670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4041bac8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4041bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041bca0"/>
        <function-ref name="isInput" scoped="" ref="0x4041bd80"/>
        <function-ref name="toggle" scoped="" ref="0x4041be60"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a010"/>
        <function-ref name="get" scoped="" ref="0x4041a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041a1d0"/>
        <function-ref name="set" scoped="" ref="0x4041a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4041a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40415b00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40415b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40415db8"/>
        <function-ref name="toggle" scoped="" ref="0x40415e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40413010"/>
        <function-ref name="get" scoped="" ref="0x404130f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404131d0"/>
        <function-ref name="set" scoped="" ref="0x404132b0"/>
        <function-ref name="clr" scoped="" ref="0x40413390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404127d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404127d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404129a8"/>
        <function-ref name="isInput" scoped="" ref="0x40412a88"/>
        <function-ref name="toggle" scoped="" ref="0x40412b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40412c48"/>
        <function-ref name="get" scoped="" ref="0x40412d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412e08"/>
        <function-ref name="set" scoped="" ref="0x40412ee8"/>
        <function-ref name="clr" scoped="" ref="0x4041b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4041a4f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4041a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041a6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4041a7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4041a888"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a968"/>
        <function-ref name="get" scoped="" ref="0x4041aa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041ab28"/>
        <function-ref name="set" scoped="" ref="0x4041ac08"/>
        <function-ref name="clr" scoped="" ref="0x4041ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404134f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404134f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404136c8"/>
        <function-ref name="isInput" scoped="" ref="0x404137a8"/>
        <function-ref name="toggle" scoped="" ref="0x40413888"/>
        <function-ref name="isOutput" scoped="" ref="0x40413968"/>
        <function-ref name="get" scoped="" ref="0x40413a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413b28"/>
        <function-ref name="set" scoped="" ref="0x40413c08"/>
        <function-ref name="clr" scoped="" ref="0x40413ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4041b170" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4041b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041b348"/>
        <function-ref name="isInput" scoped="" ref="0x4041b428"/>
        <function-ref name="toggle" scoped="" ref="0x4041b508"/>
        <function-ref name="isOutput" scoped="" ref="0x4041b5e8"/>
        <function-ref name="get" scoped="" ref="0x4041b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041b7a8"/>
        <function-ref name="set" scoped="" ref="0x4041b888"/>
        <function-ref name="clr" scoped="" ref="0x4041b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4041ae48" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4041ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419050"/>
        <function-ref name="isInput" scoped="" ref="0x40419130"/>
        <function-ref name="toggle" scoped="" ref="0x40419210"/>
        <function-ref name="isOutput" scoped="" ref="0x404192f0"/>
        <function-ref name="get" scoped="" ref="0x404193d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404194b0"/>
        <function-ref name="set" scoped="" ref="0x40419590"/>
        <function-ref name="clr" scoped="" ref="0x40419670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410d6938" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410d6938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410d6b10"/>
        <function-ref name="isInput" scoped="" ref="0x410d6bf0"/>
        <function-ref name="toggle" scoped="" ref="0x410d6cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x410d6db0"/>
        <function-ref name="get" scoped="" ref="0x410d6e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x410d5010"/>
        <function-ref name="set" scoped="" ref="0x410d50f0"/>
        <function-ref name="clr" scoped="" ref="0x410d51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410d43b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410d43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410d4588"/>
        <function-ref name="isInput" scoped="" ref="0x410d4668"/>
        <function-ref name="toggle" scoped="" ref="0x410d4748"/>
        <function-ref name="isOutput" scoped="" ref="0x410d4828"/>
        <function-ref name="get" scoped="" ref="0x410d4908"/>
        <function-ref name="makeOutput" scoped="" ref="0x410d49e8"/>
        <function-ref name="set" scoped="" ref="0x410d4ac8"/>
        <function-ref name="clr" scoped="" ref="0x410d4ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410d3d70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410d3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410d2010"/>
        <function-ref name="isInput" scoped="" ref="0x410d20f0"/>
        <function-ref name="toggle" scoped="" ref="0x410d21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410d22b0"/>
        <function-ref name="get" scoped="" ref="0x410d2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x410d2470"/>
        <function-ref name="set" scoped="" ref="0x410d2550"/>
        <function-ref name="clr" scoped="" ref="0x410d2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410d17f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410d17f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410d19d0"/>
        <function-ref name="isInput" scoped="" ref="0x410d1ab0"/>
        <function-ref name="toggle" scoped="" ref="0x410d1b90"/>
        <function-ref name="isOutput" scoped="" ref="0x410d1c70"/>
        <function-ref name="get" scoped="" ref="0x410d1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x410d1e30"/>
        <function-ref name="set" scoped="" ref="0x410d1f10"/>
        <function-ref name="clr" scoped="" ref="0x410d0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410cf228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410cf228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410cf400"/>
        <function-ref name="isInput" scoped="" ref="0x410cf4e0"/>
        <function-ref name="toggle" scoped="" ref="0x410cf5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x410cf6a0"/>
        <function-ref name="get" scoped="" ref="0x410cf780"/>
        <function-ref name="makeOutput" scoped="" ref="0x410cf860"/>
        <function-ref name="set" scoped="" ref="0x410cf940"/>
        <function-ref name="clr" scoped="" ref="0x410cfa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410cec08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410cec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410cede0"/>
        <function-ref name="isInput" scoped="" ref="0x410ceec0"/>
        <function-ref name="toggle" scoped="" ref="0x410cc010"/>
        <function-ref name="isOutput" scoped="" ref="0x410cc0f0"/>
        <function-ref name="get" scoped="" ref="0x410cc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410cc2b0"/>
        <function-ref name="set" scoped="" ref="0x410cc390"/>
        <function-ref name="clr" scoped="" ref="0x410cc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410cb6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410cb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410cb898"/>
        <function-ref name="isInput" scoped="" ref="0x410cb978"/>
        <function-ref name="toggle" scoped="" ref="0x410cba58"/>
        <function-ref name="isOutput" scoped="" ref="0x410cbb38"/>
        <function-ref name="get" scoped="" ref="0x410cbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x410cbcf8"/>
        <function-ref name="set" scoped="" ref="0x410cbdd8"/>
        <function-ref name="clr" scoped="" ref="0x410cbeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c90b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c9288"/>
        <function-ref name="isInput" scoped="" ref="0x410c9368"/>
        <function-ref name="toggle" scoped="" ref="0x410c9448"/>
        <function-ref name="isOutput" scoped="" ref="0x410c9528"/>
        <function-ref name="get" scoped="" ref="0x410c9608"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c96e8"/>
        <function-ref name="set" scoped="" ref="0x410c97c8"/>
        <function-ref name="clr" scoped="" ref="0x410c98a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4041f6b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4041f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f888"/>
        <function-ref name="isInput" scoped="" ref="0x4041f968"/>
        <function-ref name="toggle" scoped="" ref="0x4041fa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4041fb28"/>
        <function-ref name="get" scoped="" ref="0x4041fc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041fce8"/>
        <function-ref name="set" scoped="" ref="0x4041fdc8"/>
        <function-ref name="clr" scoped="" ref="0x4041fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4041d330" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4041d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d508"/>
        <function-ref name="isInput" scoped="" ref="0x4041d5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4041d6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d7a8"/>
        <function-ref name="get" scoped="" ref="0x4041d888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d968"/>
        <function-ref name="set" scoped="" ref="0x4041da48"/>
        <function-ref name="clr" scoped="" ref="0x4041db28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404203d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404203d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404205b0"/>
        <function-ref name="isInput" scoped="" ref="0x40420690"/>
        <function-ref name="toggle" scoped="" ref="0x40420770"/>
        <function-ref name="isOutput" scoped="" ref="0x40420850"/>
        <function-ref name="get" scoped="" ref="0x40420930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420a10"/>
        <function-ref name="set" scoped="" ref="0x40420af0"/>
        <function-ref name="clr" scoped="" ref="0x40420bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4041e030" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4041e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e208"/>
        <function-ref name="isInput" scoped="" ref="0x4041e2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4041e3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e4a8"/>
        <function-ref name="get" scoped="" ref="0x4041e588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e668"/>
        <function-ref name="set" scoped="" ref="0x4041e748"/>
        <function-ref name="clr" scoped="" ref="0x4041e828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4041dc88" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4041dc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041de60"/>
        <function-ref name="isInput" scoped="" ref="0x40425010"/>
        <function-ref name="toggle" scoped="" ref="0x404250f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404251d0"/>
        <function-ref name="get" scoped="" ref="0x404252b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40425390"/>
        <function-ref name="set" scoped="" ref="0x40425470"/>
        <function-ref name="clr" scoped="" ref="0x40425550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40420d30" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40420d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40420f08"/>
        <function-ref name="isInput" scoped="" ref="0x4041f010"/>
        <function-ref name="toggle" scoped="" ref="0x4041f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f1d0"/>
        <function-ref name="get" scoped="" ref="0x4041f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f390"/>
        <function-ref name="set" scoped="" ref="0x4041f470"/>
        <function-ref name="clr" scoped="" ref="0x4041f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4041e988" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4041e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041eb60"/>
        <function-ref name="isInput" scoped="" ref="0x4041ec40"/>
        <function-ref name="toggle" scoped="" ref="0x4041ed20"/>
        <function-ref name="isOutput" scoped="" ref="0x4041ee00"/>
        <function-ref name="get" scoped="" ref="0x4041eee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d010"/>
        <function-ref name="set" scoped="" ref="0x4041d0f0"/>
        <function-ref name="clr" scoped="" ref="0x4041d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404256b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404256b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425888"/>
        <function-ref name="isInput" scoped="" ref="0x40425968"/>
        <function-ref name="toggle" scoped="" ref="0x40425a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40425b28"/>
        <function-ref name="get" scoped="" ref="0x40425c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40425ce8"/>
        <function-ref name="set" scoped="" ref="0x40425dc8"/>
        <function-ref name="clr" scoped="" ref="0x40425ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410db538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410db538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410db710"/>
        <function-ref name="isInput" scoped="" ref="0x410db7f0"/>
        <function-ref name="toggle" scoped="" ref="0x410db8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410db9b0"/>
        <function-ref name="get" scoped="" ref="0x410dba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x410dbb70"/>
        <function-ref name="set" scoped="" ref="0x410dbc50"/>
        <function-ref name="clr" scoped="" ref="0x410dbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410d9010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410d9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410d91e8"/>
        <function-ref name="isInput" scoped="" ref="0x410d92c8"/>
        <function-ref name="toggle" scoped="" ref="0x410d93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x410d9488"/>
        <function-ref name="get" scoped="" ref="0x410d9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x410d9648"/>
        <function-ref name="set" scoped="" ref="0x410d9728"/>
        <function-ref name="clr" scoped="" ref="0x410d9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411169e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411169e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41116bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41116ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41116d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41116e60"/>
        <function-ref name="get" scoped="" ref="0x41115010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411150f0"/>
        <function-ref name="set" scoped="" ref="0x411151d0"/>
        <function-ref name="clr" scoped="" ref="0x411152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41114538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41114538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41114710"/>
        <function-ref name="isInput" scoped="" ref="0x411147f0"/>
        <function-ref name="toggle" scoped="" ref="0x411148d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411149b0"/>
        <function-ref name="get" scoped="" ref="0x41114a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41114b70"/>
        <function-ref name="set" scoped="" ref="0x41114c50"/>
        <function-ref name="clr" scoped="" ref="0x41114d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41112010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41112010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411121e8"/>
        <function-ref name="isInput" scoped="" ref="0x411122c8"/>
        <function-ref name="toggle" scoped="" ref="0x411123a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41112488"/>
        <function-ref name="get" scoped="" ref="0x41112568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41112648"/>
        <function-ref name="set" scoped="" ref="0x41112728"/>
        <function-ref name="clr" scoped="" ref="0x41112808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411119e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411119e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41111bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41111ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41111d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41111e60"/>
        <function-ref name="get" scoped="" ref="0x41110010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411100f0"/>
        <function-ref name="set" scoped="" ref="0x411101d0"/>
        <function-ref name="clr" scoped="" ref="0x411102b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4110f538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4110f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4110f710"/>
        <function-ref name="isInput" scoped="" ref="0x4110f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4110f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4110f9b0"/>
        <function-ref name="get" scoped="" ref="0x4110fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4110fb70"/>
        <function-ref name="set" scoped="" ref="0x4110fc50"/>
        <function-ref name="clr" scoped="" ref="0x4110fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4110d010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4110d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4110d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4110d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4110d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4110d488"/>
        <function-ref name="get" scoped="" ref="0x4110d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4110d648"/>
        <function-ref name="set" scoped="" ref="0x4110d728"/>
        <function-ref name="clr" scoped="" ref="0x4110d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4042b170" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4042b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b348"/>
        <function-ref name="isInput" scoped="" ref="0x4042b428"/>
        <function-ref name="toggle" scoped="" ref="0x4042b508"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b5e8"/>
        <function-ref name="get" scoped="" ref="0x4042b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042b7a8"/>
        <function-ref name="set" scoped="" ref="0x4042b888"/>
        <function-ref name="clr" scoped="" ref="0x4042b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4042ae48" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4042ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429050"/>
        <function-ref name="isInput" scoped="" ref="0x40429130"/>
        <function-ref name="toggle" scoped="" ref="0x40429210"/>
        <function-ref name="isOutput" scoped="" ref="0x404292f0"/>
        <function-ref name="get" scoped="" ref="0x404293d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404294b0"/>
        <function-ref name="set" scoped="" ref="0x40429590"/>
        <function-ref name="clr" scoped="" ref="0x40429670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40422dc8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40422dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421010"/>
        <function-ref name="isInput" scoped="" ref="0x404210f0"/>
        <function-ref name="toggle" scoped="" ref="0x404211d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404212b0"/>
        <function-ref name="get" scoped="" ref="0x40421390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40421470"/>
        <function-ref name="set" scoped="" ref="0x40421550"/>
        <function-ref name="clr" scoped="" ref="0x40421630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4042bac8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4042bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042bca0"/>
        <function-ref name="isInput" scoped="" ref="0x4042bd80"/>
        <function-ref name="toggle" scoped="" ref="0x4042be60"/>
        <function-ref name="isOutput" scoped="" ref="0x4042a010"/>
        <function-ref name="get" scoped="" ref="0x4042a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042a1d0"/>
        <function-ref name="set" scoped="" ref="0x4042a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4042a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404297d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404297d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404299a8"/>
        <function-ref name="isInput" scoped="" ref="0x40429a88"/>
        <function-ref name="toggle" scoped="" ref="0x40429b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40429c48"/>
        <function-ref name="get" scoped="" ref="0x40429d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429e08"/>
        <function-ref name="set" scoped="" ref="0x40429ee8"/>
        <function-ref name="clr" scoped="" ref="0x40428010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40421790" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40421790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421968"/>
        <function-ref name="isInput" scoped="" ref="0x40421a48"/>
        <function-ref name="toggle" scoped="" ref="0x40421b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40421c08"/>
        <function-ref name="get" scoped="" ref="0x40421ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40421dc8"/>
        <function-ref name="set" scoped="" ref="0x40421ea8"/>
        <function-ref name="clr" scoped="" ref="0x4042b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4042a4f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4042a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042a6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042a7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042a888"/>
        <function-ref name="isOutput" scoped="" ref="0x4042a968"/>
        <function-ref name="get" scoped="" ref="0x4042aa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042ab28"/>
        <function-ref name="set" scoped="" ref="0x4042ac08"/>
        <function-ref name="clr" scoped="" ref="0x4042ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40428170" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40428170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428348"/>
        <function-ref name="isInput" scoped="" ref="0x40428428"/>
        <function-ref name="toggle" scoped="" ref="0x40428508"/>
        <function-ref name="isOutput" scoped="" ref="0x404285e8"/>
        <function-ref name="get" scoped="" ref="0x404286c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404287a8"/>
        <function-ref name="set" scoped="" ref="0x40428888"/>
        <function-ref name="clr" scoped="" ref="0x40428968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4111fc20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4111fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4111fdf8"/>
        <function-ref name="isInput" scoped="" ref="0x4111fed8"/>
        <function-ref name="toggle" scoped="" ref="0x4111e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4111e0f0"/>
        <function-ref name="get" scoped="" ref="0x4111e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4111e2b0"/>
        <function-ref name="set" scoped="" ref="0x4111e390"/>
        <function-ref name="clr" scoped="" ref="0x4111e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4111d6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4111d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4111d898"/>
        <function-ref name="isInput" scoped="" ref="0x4111d978"/>
        <function-ref name="toggle" scoped="" ref="0x4111da58"/>
        <function-ref name="isOutput" scoped="" ref="0x4111db38"/>
        <function-ref name="get" scoped="" ref="0x4111dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4111dcf8"/>
        <function-ref name="set" scoped="" ref="0x4111ddd8"/>
        <function-ref name="clr" scoped="" ref="0x4111deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4111b0b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4111b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4111b288"/>
        <function-ref name="isInput" scoped="" ref="0x4111b368"/>
        <function-ref name="toggle" scoped="" ref="0x4111b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4111b528"/>
        <function-ref name="get" scoped="" ref="0x4111b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4111b6e8"/>
        <function-ref name="set" scoped="" ref="0x4111b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4111b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4111aa88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4111aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4111ac60"/>
        <function-ref name="isInput" scoped="" ref="0x4111ad40"/>
        <function-ref name="toggle" scoped="" ref="0x4111ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x4111af00"/>
        <function-ref name="get" scoped="" ref="0x41119010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411190f0"/>
        <function-ref name="set" scoped="" ref="0x411191d0"/>
        <function-ref name="clr" scoped="" ref="0x411192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41118538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41118538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41118710"/>
        <function-ref name="isInput" scoped="" ref="0x411187f0"/>
        <function-ref name="toggle" scoped="" ref="0x411188d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411189b0"/>
        <function-ref name="get" scoped="" ref="0x41118a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41118b70"/>
        <function-ref name="set" scoped="" ref="0x41118c50"/>
        <function-ref name="clr" scoped="" ref="0x41118d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41154010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41154010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411541e8"/>
        <function-ref name="isInput" scoped="" ref="0x411542c8"/>
        <function-ref name="toggle" scoped="" ref="0x411543a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41154488"/>
        <function-ref name="get" scoped="" ref="0x41154568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41154648"/>
        <function-ref name="set" scoped="" ref="0x41154728"/>
        <function-ref name="clr" scoped="" ref="0x41154808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411539e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411539e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41153bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41153ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41153d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41153e60"/>
        <function-ref name="get" scoped="" ref="0x41152010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411520f0"/>
        <function-ref name="set" scoped="" ref="0x411521d0"/>
        <function-ref name="clr" scoped="" ref="0x411522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41151538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41151538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41151710"/>
        <function-ref name="isInput" scoped="" ref="0x411517f0"/>
        <function-ref name="toggle" scoped="" ref="0x411518d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411519b0"/>
        <function-ref name="get" scoped="" ref="0x41151a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41151b70"/>
        <function-ref name="set" scoped="" ref="0x41151c50"/>
        <function-ref name="clr" scoped="" ref="0x41151d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4042f9e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4042f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042fbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4042fca0"/>
        <function-ref name="toggle" scoped="" ref="0x4042fd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4042fe60"/>
        <function-ref name="get" scoped="" ref="0x4042e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042e0f0"/>
        <function-ref name="set" scoped="" ref="0x4042e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4042e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4042d790" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4042d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042d968"/>
        <function-ref name="isInput" scoped="" ref="0x4042da48"/>
        <function-ref name="toggle" scoped="" ref="0x4042db28"/>
        <function-ref name="isOutput" scoped="" ref="0x4042dc08"/>
        <function-ref name="get" scoped="" ref="0x4042dce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042ddc8"/>
        <function-ref name="set" scoped="" ref="0x4042dea8"/>
        <function-ref name="clr" scoped="" ref="0x4042c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404306f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404306f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404308d0"/>
        <function-ref name="isInput" scoped="" ref="0x404309b0"/>
        <function-ref name="toggle" scoped="" ref="0x40430a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40430b70"/>
        <function-ref name="get" scoped="" ref="0x40430c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40430d30"/>
        <function-ref name="set" scoped="" ref="0x40430e10"/>
        <function-ref name="clr" scoped="" ref="0x40430ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4042e410" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4042e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042e5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4042e6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4042e7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042e888"/>
        <function-ref name="get" scoped="" ref="0x4042e968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042ea48"/>
        <function-ref name="set" scoped="" ref="0x4042eb28"/>
        <function-ref name="clr" scoped="" ref="0x4042ec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4042c170" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4042c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042c348"/>
        <function-ref name="isInput" scoped="" ref="0x4042c428"/>
        <function-ref name="toggle" scoped="" ref="0x4042c508"/>
        <function-ref name="isOutput" scoped="" ref="0x4042c5e8"/>
        <function-ref name="get" scoped="" ref="0x4042c6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042c7a8"/>
        <function-ref name="set" scoped="" ref="0x4042c888"/>
        <function-ref name="clr" scoped="" ref="0x4042c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4042f090" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4042f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f268"/>
        <function-ref name="isInput" scoped="" ref="0x4042f348"/>
        <function-ref name="toggle" scoped="" ref="0x4042f428"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f508"/>
        <function-ref name="get" scoped="" ref="0x4042f5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f6c8"/>
        <function-ref name="set" scoped="" ref="0x4042f7a8"/>
        <function-ref name="clr" scoped="" ref="0x4042f888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4042ed68" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4042ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042d010"/>
        <function-ref name="isInput" scoped="" ref="0x4042d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4042d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042d2b0"/>
        <function-ref name="get" scoped="" ref="0x4042d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042d470"/>
        <function-ref name="set" scoped="" ref="0x4042d550"/>
        <function-ref name="clr" scoped="" ref="0x4042d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4042cac8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4042cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042cca0"/>
        <function-ref name="isInput" scoped="" ref="0x4042cd80"/>
        <function-ref name="toggle" scoped="" ref="0x4042ce60"/>
        <function-ref name="isOutput" scoped="" ref="0x40437010"/>
        <function-ref name="get" scoped="" ref="0x404370f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404371d0"/>
        <function-ref name="set" scoped="" ref="0x404372b0"/>
        <function-ref name="clr" scoped="" ref="0x40437390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41165938" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41165938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41165b10"/>
        <function-ref name="isInput" scoped="" ref="0x41165bf0"/>
        <function-ref name="toggle" scoped="" ref="0x41165cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x41165db0"/>
        <function-ref name="get" scoped="" ref="0x41165e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41164010"/>
        <function-ref name="set" scoped="" ref="0x411640f0"/>
        <function-ref name="clr" scoped="" ref="0x411641d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411633b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411633b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41163588"/>
        <function-ref name="isInput" scoped="" ref="0x41163668"/>
        <function-ref name="toggle" scoped="" ref="0x41163748"/>
        <function-ref name="isOutput" scoped="" ref="0x41163828"/>
        <function-ref name="get" scoped="" ref="0x41163908"/>
        <function-ref name="makeOutput" scoped="" ref="0x411639e8"/>
        <function-ref name="set" scoped="" ref="0x41163ac8"/>
        <function-ref name="clr" scoped="" ref="0x41163ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41162d70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41162d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41161010"/>
        <function-ref name="isInput" scoped="" ref="0x411610f0"/>
        <function-ref name="toggle" scoped="" ref="0x411611d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411612b0"/>
        <function-ref name="get" scoped="" ref="0x41161390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41161470"/>
        <function-ref name="set" scoped="" ref="0x41161550"/>
        <function-ref name="clr" scoped="" ref="0x41161630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411607f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411607f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411609d0"/>
        <function-ref name="isInput" scoped="" ref="0x41160ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41160b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41160c70"/>
        <function-ref name="get" scoped="" ref="0x41160d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41160e30"/>
        <function-ref name="set" scoped="" ref="0x41160f10"/>
        <function-ref name="clr" scoped="" ref="0x4115f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115e228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115e400"/>
        <function-ref name="isInput" scoped="" ref="0x4115e4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4115e5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4115e6a0"/>
        <function-ref name="get" scoped="" ref="0x4115e780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115e860"/>
        <function-ref name="set" scoped="" ref="0x4115e940"/>
        <function-ref name="clr" scoped="" ref="0x4115ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115dc08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115dde0"/>
        <function-ref name="isInput" scoped="" ref="0x4115dec0"/>
        <function-ref name="toggle" scoped="" ref="0x4115c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4115c0f0"/>
        <function-ref name="get" scoped="" ref="0x4115c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115c2b0"/>
        <function-ref name="set" scoped="" ref="0x4115c390"/>
        <function-ref name="clr" scoped="" ref="0x4115c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115b6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115b898"/>
        <function-ref name="isInput" scoped="" ref="0x4115b978"/>
        <function-ref name="toggle" scoped="" ref="0x4115ba58"/>
        <function-ref name="isOutput" scoped="" ref="0x4115bb38"/>
        <function-ref name="get" scoped="" ref="0x4115bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115bcf8"/>
        <function-ref name="set" scoped="" ref="0x4115bdd8"/>
        <function-ref name="clr" scoped="" ref="0x4115beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411590b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411590b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41159288"/>
        <function-ref name="isInput" scoped="" ref="0x41159368"/>
        <function-ref name="toggle" scoped="" ref="0x41159448"/>
        <function-ref name="isOutput" scoped="" ref="0x41159528"/>
        <function-ref name="get" scoped="" ref="0x41159608"/>
        <function-ref name="makeOutput" scoped="" ref="0x411596e8"/>
        <function-ref name="set" scoped="" ref="0x411597c8"/>
        <function-ref name="clr" scoped="" ref="0x411598a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40434ca0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40434ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434e78"/>
        <function-ref name="isInput" scoped="" ref="0x40433010"/>
        <function-ref name="toggle" scoped="" ref="0x404330f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404331d0"/>
        <function-ref name="get" scoped="" ref="0x404332b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433390"/>
        <function-ref name="set" scoped="" ref="0x40433470"/>
        <function-ref name="clr" scoped="" ref="0x40433550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40448538" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40448538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40448710"/>
        <function-ref name="isInput" scoped="" ref="0x404487f0"/>
        <function-ref name="toggle" scoped="" ref="0x404488d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404489b0"/>
        <function-ref name="get" scoped="" ref="0x40448a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448b70"/>
        <function-ref name="set" scoped="" ref="0x40448c50"/>
        <function-ref name="clr" scoped="" ref="0x40448d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40446d48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40446d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40446f20"/>
        <function-ref name="isInput" scoped="" ref="0x40445018"/>
        <function-ref name="toggle" scoped="" ref="0x404450f8"/>
        <function-ref name="isOutput" scoped="" ref="0x404451d8"/>
        <function-ref name="get" scoped="" ref="0x404452b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40445398"/>
        <function-ref name="set" scoped="" ref="0x40445478"/>
        <function-ref name="clr" scoped="" ref="0x40445558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4044f538" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4044f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044f710"/>
        <function-ref name="isInput" scoped="" ref="0x4044f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4044f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044f9b0"/>
        <function-ref name="get" scoped="" ref="0x4044fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044fb70"/>
        <function-ref name="set" scoped="" ref="0x4044fc50"/>
        <function-ref name="clr" scoped="" ref="0x4044fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4044cd48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4044cd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044cf20"/>
        <function-ref name="isInput" scoped="" ref="0x4044b018"/>
        <function-ref name="toggle" scoped="" ref="0x4044b0f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044b1d8"/>
        <function-ref name="get" scoped="" ref="0x4044b2b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044b398"/>
        <function-ref name="set" scoped="" ref="0x4044b478"/>
        <function-ref name="clr" scoped="" ref="0x4044b558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40455538" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40455538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40455710"/>
        <function-ref name="isInput" scoped="" ref="0x404557f0"/>
        <function-ref name="toggle" scoped="" ref="0x404558d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404559b0"/>
        <function-ref name="get" scoped="" ref="0x40455a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40455b70"/>
        <function-ref name="set" scoped="" ref="0x40455c50"/>
        <function-ref name="clr" scoped="" ref="0x40455d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40453dc8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40453dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451010"/>
        <function-ref name="isInput" scoped="" ref="0x404510f0"/>
        <function-ref name="toggle" scoped="" ref="0x404511d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404512b0"/>
        <function-ref name="get" scoped="" ref="0x40451390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451470"/>
        <function-ref name="set" scoped="" ref="0x40451550"/>
        <function-ref name="clr" scoped="" ref="0x40451630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045b5e0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045b7b8"/>
        <function-ref name="isInput" scoped="" ref="0x4045b898"/>
        <function-ref name="toggle" scoped="" ref="0x4045b978"/>
        <function-ref name="isOutput" scoped="" ref="0x4045ba58"/>
        <function-ref name="get" scoped="" ref="0x4045bb38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045bc18"/>
        <function-ref name="set" scoped="" ref="0x4045bcf8"/>
        <function-ref name="clr" scoped="" ref="0x4045bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40459e98" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40459e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404580c0"/>
        <function-ref name="isInput" scoped="" ref="0x404581a0"/>
        <function-ref name="toggle" scoped="" ref="0x40458280"/>
        <function-ref name="isOutput" scoped="" ref="0x40458360"/>
        <function-ref name="get" scoped="" ref="0x40458440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40458520"/>
        <function-ref name="set" scoped="" ref="0x40458600"/>
        <function-ref name="clr" scoped="" ref="0x404586e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404616c0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404616c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40461898"/>
        <function-ref name="isInput" scoped="" ref="0x40461978"/>
        <function-ref name="toggle" scoped="" ref="0x40461a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40461b38"/>
        <function-ref name="get" scoped="" ref="0x40461c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40461cf8"/>
        <function-ref name="set" scoped="" ref="0x40461dd8"/>
        <function-ref name="clr" scoped="" ref="0x40461eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045fe98" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045fe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045e0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4045e1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4045e280"/>
        <function-ref name="isOutput" scoped="" ref="0x4045e360"/>
        <function-ref name="get" scoped="" ref="0x4045e440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045e520"/>
        <function-ref name="set" scoped="" ref="0x4045e600"/>
        <function-ref name="clr" scoped="" ref="0x4045e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045c6c0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045c898"/>
        <function-ref name="isInput" scoped="" ref="0x4045c978"/>
        <function-ref name="toggle" scoped="" ref="0x4045ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x4045cb38"/>
        <function-ref name="get" scoped="" ref="0x4045cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045ccf8"/>
        <function-ref name="set" scoped="" ref="0x4045cdd8"/>
        <function-ref name="clr" scoped="" ref="0x4045ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40465e98" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40465e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404640c0"/>
        <function-ref name="isInput" scoped="" ref="0x404641a0"/>
        <function-ref name="toggle" scoped="" ref="0x40464280"/>
        <function-ref name="isOutput" scoped="" ref="0x40464360"/>
        <function-ref name="get" scoped="" ref="0x40464440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40464520"/>
        <function-ref name="set" scoped="" ref="0x40464600"/>
        <function-ref name="clr" scoped="" ref="0x404646e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404806b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404806b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40480888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40480a60" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40480a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40480c38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40480d18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40480df8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40480ed8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4047f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404912f0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404912f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404914c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403a3548" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403a3548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403a3720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x403a3ea8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403a3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404910c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x403a38e0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403a38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a3ab8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403a3b98"/>
        <function-ref name="runNextTask" scoped="" ref="0x403a3c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402fe600" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402fe7d8"/>
        <function-ref name="runTask" scoped="" ref="0x402fe8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402f8ed8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402f8ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402f40c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402f41a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402f4280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403792a8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403792a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40379480"/>
        <function-ref name="runTask" scoped="" ref="0x40379560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40379f10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40379f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4037f108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4037aa30" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4037aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037ac08"/>
        <function-ref name="taskLoop" scoped="" ref="0x4037ace8"/>
        <function-ref name="runNextTask" scoped="" ref="0x4037adc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4038de88" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4038de88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40388070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x402f3938" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x402f3938"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x402f3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4038e680" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4038e858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x404cc178" loc="36:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x404cc178"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x404cc350"/>
        <function-ref name="setRoot" scoped="" ref="0x404cc430"/>
        <function-ref name="unsetRoot" scoped="" ref="0x404cc510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x404ce920" loc="35:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x404ce920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x404ceaf8"/>
        <function-ref name="setOrigin" scoped="" ref="0x404cebd8"/>
        <function-ref name="setType" scoped="" ref="0x404cecb8"/>
        <function-ref name="getOrigin" scoped="" ref="0x404ced98"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x404cee78"/>
        <function-ref name="getType" scoped="" ref="0x404b8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40497708" loc="25:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40497708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404978e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x404a1278" loc="27:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x404a1278"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404a1450"/>
        <function-ref name="stopDone" scoped="" ref="0x404a1530"/>
        <function-ref name="start" scoped="" ref="0x404a1610"/>
        <function-ref name="stop" scoped="" ref="0x404a16f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x404ec170" loc="49:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x404ec170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404ec348"/>
        <function-ref name="runTask" scoped="" ref="0x404ec428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Snoop" ref="0x404b9f08" loc="32:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x404b9f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4049d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x4049eb70" loc="26:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x4049eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4049ed48"/>
        <function-ref name="stopDone" scoped="" ref="0x4049ee28"/>
        <function-ref name="start" scoped="" ref="0x4049ef08"/>
        <function-ref name="stop" scoped="" ref="0x404a1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x404bcd00" loc="31:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x404bcd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404bced8"/>
        <function-ref name="getPayload" scoped="" ref="0x404a0010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404a00f0"/>
        <function-ref name="cancel" scoped="" ref="0x404a01d0"/>
        <function-ref name="sendDone" scoped="" ref="0x404a02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTMessagePool" ref="0x404dfe18" loc="39:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTMessagePool" scoped="" ref="0x404dfe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
            <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404d4f00"/>
        <function-ref name="maxSize" scoped="" ref="0x404d4918"/>
        <function-ref name="empty" scoped="" ref="0x404d4468"/>
        <function-ref name="put" scoped="" ref="0x404d4b70"/>
        <function-ref name="size" scoped="" ref="0x404d46c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x404ed480" loc="43:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x404ed480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x404edaa8"/>
        <function-ref name="readDone" scoped="" ref="0x404edd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x404c0868" loc="34:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x404c0868"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404c0a40"/>
        <function-ref name="getPayload" scoped="" ref="0x404c0b20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404c0c00"/>
        <function-ref name="cancel" scoped="" ref="0x404c0ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x404c0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x404a98e0" loc="28:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x404a98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x404a9ab8"/>
        <function-ref name="stop" scoped="" ref="0x404a9b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x4049d278" loc="33:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4049d278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4049d450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404e0010" loc="44:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404e0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404e01e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404e02c8"/>
        <function-ref name="led1On" scoped="" ref="0x404e03a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404e0488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404e0568"/>
        <function-ref name="get" scoped="" ref="0x404e0648"/>
        <function-ref name="led1Off" scoped="" ref="0x404e0728"/>
        <function-ref name="led2Off" scoped="" ref="0x404e0aa8"/>
        <function-ref name="set" scoped="" ref="0x404e0808"/>
        <function-ref name="led0On" scoped="" ref="0x404e08e8"/>
        <function-ref name="led2On" scoped="" ref="0x404e09c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTQueue" ref="0x404d6ab8" loc="38:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTQueue" scoped="" ref="0x404d6ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
              <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x404bf808"/>
        <function-ref name="enqueue" scoped="" ref="0x404bfee8"/>
        <function-ref name="element" scoped="" ref="0x404cd270"/>
        <function-ref name="maxSize" scoped="" ref="0x404bf5b0"/>
        <function-ref name="dequeue" scoped="" ref="0x404bfb78"/>
        <function-ref name="empty" scoped="" ref="0x404bf100"/>
        <function-ref name="size" scoped="" ref="0x404bf358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x404e4cd0" loc="42:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x404e4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404db8a8"/>
        <function-ref name="fired" scoped="" ref="0x404ddb18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404db268"/>
        <function-ref name="isOneShot" scoped="" ref="0x404db010"/>
        <function-ref name="getdt" scoped="" ref="0x404dbd58"/>
        <function-ref name="gett0" scoped="" ref="0x404dbb00"/>
        <function-ref name="isRunning" scoped="" ref="0x404ddd70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404dd3c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404db588"/>
        <function-ref name="startOneShot" scoped="" ref="0x404dd640"/>
        <function-ref name="stop" scoped="" ref="0x404dd8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40513af0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40513af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40513cc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40513da8"/>
        <function-ref name="led1On" scoped="" ref="0x40513e88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4051e010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4051e0f0"/>
        <function-ref name="get" scoped="" ref="0x4051e1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x4051e2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x4051e630"/>
        <function-ref name="set" scoped="" ref="0x4051e390"/>
        <function-ref name="led0On" scoped="" ref="0x4051e470"/>
        <function-ref name="led2On" scoped="" ref="0x4051e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x4051bef8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4051bef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x4051a1c0"/>
        <function-ref name="toggle" scoped="" ref="0x4051a2a0"/>
        <function-ref name="isOutput" scoped="" ref="0x4051a380"/>
        <function-ref name="get" scoped="" ref="0x4051a460"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051a540"/>
        <function-ref name="set" scoped="" ref="0x4051a620"/>
        <function-ref name="clr" scoped="" ref="0x4051a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4051eeb8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4051eeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4051b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x4051a8f0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4051a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051aac8"/>
        <function-ref name="isInput" scoped="" ref="0x4051aba8"/>
        <function-ref name="toggle" scoped="" ref="0x4051ac88"/>
        <function-ref name="isOutput" scoped="" ref="0x4051ad68"/>
        <function-ref name="get" scoped="" ref="0x4051ae48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051af28"/>
        <function-ref name="set" scoped="" ref="0x40519018"/>
        <function-ref name="clr" scoped="" ref="0x405190f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4051b230" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4051b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4051b408"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4051b4e8"/>
        <function-ref name="led1On" scoped="" ref="0x4051b5c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4051b6a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4051b788"/>
        <function-ref name="get" scoped="" ref="0x4051b868"/>
        <function-ref name="led1Off" scoped="" ref="0x4051b948"/>
        <function-ref name="led2Off" scoped="" ref="0x4051bcc8"/>
        <function-ref name="set" scoped="" ref="0x4051ba28"/>
        <function-ref name="led0On" scoped="" ref="0x4051bb08"/>
        <function-ref name="led2On" scoped="" ref="0x4051bbe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x405192e8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x405192e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405194c0"/>
        <function-ref name="isInput" scoped="" ref="0x405195a0"/>
        <function-ref name="toggle" scoped="" ref="0x40519680"/>
        <function-ref name="isOutput" scoped="" ref="0x40519760"/>
        <function-ref name="get" scoped="" ref="0x40519840"/>
        <function-ref name="makeOutput" scoped="" ref="0x40519920"/>
        <function-ref name="set" scoped="" ref="0x40519a00"/>
        <function-ref name="clr" scoped="" ref="0x40519ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x405278e8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x405278e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40527ac0"/>
        <function-ref name="isInput" scoped="" ref="0x40527ba0"/>
        <function-ref name="toggle" scoped="" ref="0x40527c80"/>
        <function-ref name="isOutput" scoped="" ref="0x40527d60"/>
        <function-ref name="get" scoped="" ref="0x40527e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40527f20"/>
        <function-ref name="set" scoped="" ref="0x40526018"/>
        <function-ref name="clr" scoped="" ref="0x405260f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40526308" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40526308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405264e0"/>
        <function-ref name="isInput" scoped="" ref="0x405265c0"/>
        <function-ref name="toggle" scoped="" ref="0x405266a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40526780"/>
        <function-ref name="get" scoped="" ref="0x40526860"/>
        <function-ref name="makeOutput" scoped="" ref="0x40526940"/>
        <function-ref name="set" scoped="" ref="0x40526a20"/>
        <function-ref name="clr" scoped="" ref="0x40526b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x405356e0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405356e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405358b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40526d10" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40526d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40526ee8"/>
        <function-ref name="isInput" scoped="" ref="0x40535010"/>
        <function-ref name="toggle" scoped="" ref="0x405350f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405351d0"/>
        <function-ref name="get" scoped="" ref="0x405352b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40535390"/>
        <function-ref name="set" scoped="" ref="0x40535470"/>
        <function-ref name="clr" scoped="" ref="0x40535550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40532660" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40532660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4053d170"/>
        <function-ref name="fired" scoped="" ref="0x405313f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40531b00"/>
        <function-ref name="isOneShot" scoped="" ref="0x405318a8"/>
        <function-ref name="getdt" scoped="" ref="0x4053d620"/>
        <function-ref name="gett0" scoped="" ref="0x4053d3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40531650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40532c88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40531e20"/>
        <function-ref name="startOneShot" scoped="" ref="0x40532f08"/>
        <function-ref name="stop" scoped="" ref="0x405311a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4053c670" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4053c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40539170"/>
        <function-ref name="fired" scoped="" ref="0x4053b408"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4053bb10"/>
        <function-ref name="isOneShot" scoped="" ref="0x4053b8b8"/>
        <function-ref name="getdt" scoped="" ref="0x40539620"/>
        <function-ref name="gett0" scoped="" ref="0x405393c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4053b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4053cc98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4053be30"/>
        <function-ref name="startOneShot" scoped="" ref="0x4053cf18"/>
        <function-ref name="stop" scoped="" ref="0x4053b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40536698" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40536698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40543248"/>
        <function-ref name="fired" scoped="" ref="0x405454e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40545bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40545998"/>
        <function-ref name="getdt" scoped="" ref="0x405436f8"/>
        <function-ref name="gett0" scoped="" ref="0x405434a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40545740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40536cc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40545f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40545010"/>
        <function-ref name="stop" scoped="" ref="0x40545290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40540718" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40540718"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40540d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40539ea8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40539ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405360c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40546010" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40546010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40546760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40546c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405469d8"/>
        <function-ref name="overflow" scoped="" ref="0x40546ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40542de0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40542de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4054d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40548610" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40548610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4054cab8"/>
        <function-ref name="fired" scoped="" ref="0x4054c288"/>
        <function-ref name="startAt" scoped="" ref="0x4054c778"/>
        <function-ref name="isRunning" scoped="" ref="0x4054c500"/>
        <function-ref name="getAlarm" scoped="" ref="0x4054cd30"/>
        <function-ref name="start" scoped="" ref="0x40548d60"/>
        <function-ref name="stop" scoped="" ref="0x4054c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x405e4ca8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405e4ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405e1170"/>
        <function-ref name="fired" scoped="" ref="0x405e3928"/>
        <function-ref name="startAt" scoped="" ref="0x405e3e18"/>
        <function-ref name="isRunning" scoped="" ref="0x405e3ba0"/>
        <function-ref name="getAlarm" scoped="" ref="0x405e13e8"/>
        <function-ref name="start" scoped="" ref="0x405e3410"/>
        <function-ref name="stop" scoped="" ref="0x405e36b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405e4870" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405e4870"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405e4a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405e1718" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405e1718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405e1e68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405e0388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405e0110"/>
        <function-ref name="overflow" scoped="" ref="0x405e0600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x411f0a78" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x411f0a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x411f0c50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x411f0d30"/>
        <function-ref name="getControlA" scoped="" ref="0x411f0e10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x411f0ef0"/>
        <function-ref name="setControlB" scoped="" ref="0x411ef010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x411ef0f0"/>
        <function-ref name="getControlB" scoped="" ref="0x411ef1d0"/>
        <function-ref name="setControlA" scoped="" ref="0x411ef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x411f7c50" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x411f7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411f4150"/>
        <function-ref name="fired" scoped="" ref="0x411f5908"/>
        <function-ref name="startAt" scoped="" ref="0x411f5df8"/>
        <function-ref name="isRunning" scoped="" ref="0x411f5b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x411f43c8"/>
        <function-ref name="start" scoped="" ref="0x411f53f0"/>
        <function-ref name="stop" scoped="" ref="0x411f5690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411f7818" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411f7818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411f79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x411f46f8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x411f46f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x411f4e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x411f3350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x411f30d8"/>
        <function-ref name="overflow" scoped="" ref="0x411f35c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x411eee98" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x411eee98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x411ec0c0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x411ec1a0"/>
        <function-ref name="controlABusy" scoped="" ref="0x411ec280"/>
        <function-ref name="controlBBusy" scoped="" ref="0x411ec360"/>
        <function-ref name="countBusy" scoped="" ref="0x411ec440"/>
        <function-ref name="compareABusy" scoped="" ref="0x411ec520"/>
        <function-ref name="getAssr" scoped="" ref="0x411ec600"/>
        <function-ref name="setAssr" scoped="" ref="0x411ec6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x411ef4a0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x411ef4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x411ee9f0"/>
        <function-ref name="fired" scoped="" ref="0x411ee010"/>
        <function-ref name="get" scoped="" ref="0x411efae8"/>
        <function-ref name="reset" scoped="" ref="0x411ee288"/>
        <function-ref name="isOn" scoped="" ref="0x411eec68"/>
        <function-ref name="set" scoped="" ref="0x411efd60"/>
        <function-ref name="start" scoped="" ref="0x411ee500"/>
        <function-ref name="stop" scoped="" ref="0x411ee778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x411f38b8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411f38b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x411f0330"/>
        <function-ref name="test" scoped="" ref="0x411f2e20"/>
        <function-ref name="get" scoped="" ref="0x411f3f00"/>
        <function-ref name="setScale" scoped="" ref="0x411f05a8"/>
        <function-ref name="getScale" scoped="" ref="0x411f0848"/>
        <function-ref name="reset" scoped="" ref="0x411f26b8"/>
        <function-ref name="overflow" scoped="" ref="0x411f2440"/>
        <function-ref name="isOn" scoped="" ref="0x411f00b8"/>
        <function-ref name="set" scoped="" ref="0x411f21a0"/>
        <function-ref name="start" scoped="" ref="0x411f2930"/>
        <function-ref name="stop" scoped="" ref="0x411f2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405a5c80" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405a5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405a5e58"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405a3010"/>
        <function-ref name="getControlA" scoped="" ref="0x405a30f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405a31d0"/>
        <function-ref name="setControlB" scoped="" ref="0x405a32b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405a3390"/>
        <function-ref name="getControlB" scoped="" ref="0x405a3470"/>
        <function-ref name="setControlA" scoped="" ref="0x405a3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405a13c0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405a13c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x405a1598"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x405a1678"/>
        <function-ref name="controlABusy" scoped="" ref="0x405a1758"/>
        <function-ref name="controlBBusy" scoped="" ref="0x405a1838"/>
        <function-ref name="countBusy" scoped="" ref="0x405a1918"/>
        <function-ref name="compareABusy" scoped="" ref="0x405a19f8"/>
        <function-ref name="getAssr" scoped="" ref="0x405a1ad8"/>
        <function-ref name="setAssr" scoped="" ref="0x405a1bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405a3878" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405a3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405a2dd0"/>
        <function-ref name="fired" scoped="" ref="0x405a23f0"/>
        <function-ref name="get" scoped="" ref="0x405a3ec0"/>
        <function-ref name="reset" scoped="" ref="0x405a2668"/>
        <function-ref name="isOn" scoped="" ref="0x405a1068"/>
        <function-ref name="set" scoped="" ref="0x405a2150"/>
        <function-ref name="start" scoped="" ref="0x405a28e0"/>
        <function-ref name="stop" scoped="" ref="0x405a2b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40599978" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40599978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405a5418"/>
        <function-ref name="test" scoped="" ref="0x40596f08"/>
        <function-ref name="get" scoped="" ref="0x40596010"/>
        <function-ref name="setScale" scoped="" ref="0x405a5690"/>
        <function-ref name="getScale" scoped="" ref="0x405a5930"/>
        <function-ref name="reset" scoped="" ref="0x405967a0"/>
        <function-ref name="overflow" scoped="" ref="0x40596528"/>
        <function-ref name="isOn" scoped="" ref="0x405a51a0"/>
        <function-ref name="set" scoped="" ref="0x40596288"/>
        <function-ref name="start" scoped="" ref="0x40596a18"/>
        <function-ref name="stop" scoped="" ref="0x40596c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405acbb8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405acbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405acd90"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405ace70"/>
        <function-ref name="getControlA" scoped="" ref="0x405ab010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405ab0f0"/>
        <function-ref name="setControlB" scoped="" ref="0x405ab1d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405ab2b0"/>
        <function-ref name="getControlB" scoped="" ref="0x405ab390"/>
        <function-ref name="setControlA" scoped="" ref="0x405ab470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405a92c8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405a92c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405a94a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405a9728" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405a9728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x405a9900"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x405a99e0"/>
        <function-ref name="controlABusy" scoped="" ref="0x405a9ac0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x405a9ba0"/>
        <function-ref name="countBusy" scoped="" ref="0x405a9c80"/>
        <function-ref name="compareABusy" scoped="" ref="0x405a9d60"/>
        <function-ref name="getAssr" scoped="" ref="0x405a9e40"/>
        <function-ref name="setAssr" scoped="" ref="0x405a9f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405ab798" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405ab798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405aace8"/>
        <function-ref name="fired" scoped="" ref="0x405aa308"/>
        <function-ref name="get" scoped="" ref="0x405abde0"/>
        <function-ref name="reset" scoped="" ref="0x405aa580"/>
        <function-ref name="isOn" scoped="" ref="0x405a9010"/>
        <function-ref name="set" scoped="" ref="0x405aa068"/>
        <function-ref name="start" scoped="" ref="0x405aa7f8"/>
        <function-ref name="stop" scoped="" ref="0x405aaa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405a08d8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405a08d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405ac350"/>
        <function-ref name="test" scoped="" ref="0x405aee30"/>
        <function-ref name="get" scoped="" ref="0x405a0f20"/>
        <function-ref name="setScale" scoped="" ref="0x405ac5c8"/>
        <function-ref name="getScale" scoped="" ref="0x405ac868"/>
        <function-ref name="reset" scoped="" ref="0x405ae6c8"/>
        <function-ref name="overflow" scoped="" ref="0x405ae450"/>
        <function-ref name="isOn" scoped="" ref="0x405ac0d8"/>
        <function-ref name="set" scoped="" ref="0x405ae1b0"/>
        <function-ref name="start" scoped="" ref="0x405ae940"/>
        <function-ref name="stop" scoped="" ref="0x405aebb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x405fc9a8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x405fc9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405fcb80"/>
        <function-ref name="runTask" scoped="" ref="0x405fcc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x405fd010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405fd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405fc4e0"/>
        <function-ref name="fired" scoped="" ref="0x405fdc78"/>
        <function-ref name="startAt" scoped="" ref="0x405fc1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x405fdef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x405fc758"/>
        <function-ref name="start" scoped="" ref="0x405fd760"/>
        <function-ref name="stop" scoped="" ref="0x405fda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4053ec60" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4053ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405fe790"/>
        <function-ref name="fired" scoped="" ref="0x405dea20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405fe150"/>
        <function-ref name="isOneShot" scoped="" ref="0x405deed0"/>
        <function-ref name="getdt" scoped="" ref="0x405fec40"/>
        <function-ref name="gett0" scoped="" ref="0x405fe9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x405dec78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405de2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405fe470"/>
        <function-ref name="startOneShot" scoped="" ref="0x405de548"/>
        <function-ref name="stop" scoped="" ref="0x405de7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40629050" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40629050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40629228"/>
        <function-ref name="runTask" scoped="" ref="0x40629308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x4062de30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x4062de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4062b920"/>
        <function-ref name="fired" scoped="" ref="0x4062cbc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4062b2e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4062b088"/>
        <function-ref name="getdt" scoped="" ref="0x4062bdd0"/>
        <function-ref name="gett0" scoped="" ref="0x4062bb78"/>
        <function-ref name="isRunning" scoped="" ref="0x4062ce18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4062c468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4062b600"/>
        <function-ref name="startOneShot" scoped="" ref="0x4062c6e8"/>
        <function-ref name="stop" scoped="" ref="0x4062c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405f8a60" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405f8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4062d670"/>
        <function-ref name="fired" scoped="" ref="0x4061c840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4062d010"/>
        <function-ref name="isOneShot" scoped="" ref="0x4061cd10"/>
        <function-ref name="getdt" scoped="" ref="0x4062db40"/>
        <function-ref name="gett0" scoped="" ref="0x4062d8d8"/>
        <function-ref name="isRunning" scoped="" ref="0x4061caa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4061c0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4062d340"/>
        <function-ref name="startOneShot" scoped="" ref="0x4061c348"/>
        <function-ref name="stop" scoped="" ref="0x4061c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40628460" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40628460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40628aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40628df8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40628df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40627570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40627a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406277e8"/>
        <function-ref name="overflow" scoped="" ref="0x40627cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40632988" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40632988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40631010"/>
        <function-ref name="readDone" scoped="" ref="0x40631268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x411fd9b0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x411fd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4123e010"/>
        <function-ref name="readDone" scoped="" ref="0x4123e268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4123b310" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4123b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4123b4e8"/>
        <function-ref name="configure" scoped="" ref="0x4123b5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4123d1f0" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4123d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4123d818"/>
        <function-ref name="readDone" scoped="" ref="0x4123da70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4123dd78" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4123dd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4123b010"/>
        <function-ref name="getChannel" scoped="" ref="0x4123b0f0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4123b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4064be90" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4064be90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406494d8"/>
        <function-ref name="readDone" scoped="" ref="0x40649730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x406482f0" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x406482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40648938"/>
        <function-ref name="readDone" scoped="" ref="0x40648bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40647280" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40647280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40647458"/>
        <function-ref name="getChannel" scoped="" ref="0x40647538"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40647618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40655c80" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40655c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40655e58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40645010"/>
        <function-ref name="request" scoped="" ref="0x406450f0"/>
        <function-ref name="granted" scoped="" ref="0x406451d0"/>
        <function-ref name="isOwner" scoped="" ref="0x406452b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40652178" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40652178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40652350"/>
        <function-ref name="configure" scoped="" ref="0x40652430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x4065f970" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4065f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4065fb48"/>
        <function-ref name="dataReady" scoped="" ref="0x4065fc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x4064f740" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4064f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4064f918"/>
        <function-ref name="cancel" scoped="" ref="0x4064f9f8"/>
        <function-ref name="dataReady" scoped="" ref="0x4064fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40645d00" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40645d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40645ed8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40653010"/>
        <function-ref name="request" scoped="" ref="0x406530f0"/>
        <function-ref name="granted" scoped="" ref="0x406531d0"/>
        <function-ref name="isOwner" scoped="" ref="0x406532b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40652df0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40652df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4065c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40659c30" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40659c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40659e08"/>
        <function-ref name="dataReady" scoped="" ref="0x40659ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x406596a8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406596a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40659880"/>
        <function-ref name="cancel" scoped="" ref="0x40659960"/>
        <function-ref name="dataReady" scoped="" ref="0x40659a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40664498" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40664498"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40664670"/>
        <function-ref name="getAdmux" scoped="" ref="0x40664750"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40664830"/>
        <function-ref name="isEnabled" scoped="" ref="0x40664910"/>
        <function-ref name="enableAdc" scoped="" ref="0x406649f0"/>
        <function-ref name="setAdmux" scoped="" ref="0x40664ad0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40664bb0"/>
        <function-ref name="isComplete" scoped="" ref="0x40664c90"/>
        <function-ref name="cancel" scoped="" ref="0x40664d70"/>
        <function-ref name="disableAdc" scoped="" ref="0x40664e50"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x4065a010"/>
        <function-ref name="disableInterruption" scoped="" ref="0x4065a0f0"/>
        <function-ref name="startConversion" scoped="" ref="0x4065a1d0"/>
        <function-ref name="isStarted" scoped="" ref="0x4065a330"/>
        <function-ref name="setAdcsra" scoped="" ref="0x4065a410"/>
        <function-ref name="setContinuous" scoped="" ref="0x4065a4f0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x4065a5d0"/>
        <function-ref name="getValue" scoped="" ref="0x4065a6b0"/>
        <function-ref name="dataReady" scoped="" ref="0x4065a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40659218" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40659218"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406593f0"/>
        <function-ref name="stop" scoped="" ref="0x406594d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x4065a968" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4065a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4065ab40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4065ac20"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4065ad00"/>
        <function-ref name="actualMicro" scoped="" ref="0x4065ade0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4065aec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40651a00" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40651a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40651bd8"/>
        <function-ref name="getAdmux" scoped="" ref="0x40651cb8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40651d98"/>
        <function-ref name="isEnabled" scoped="" ref="0x40651e78"/>
        <function-ref name="enableAdc" scoped="" ref="0x40683010"/>
        <function-ref name="setAdmux" scoped="" ref="0x406830f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x406831d0"/>
        <function-ref name="isComplete" scoped="" ref="0x406832b0"/>
        <function-ref name="cancel" scoped="" ref="0x40683390"/>
        <function-ref name="disableAdc" scoped="" ref="0x40683470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40683550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40683630"/>
        <function-ref name="startConversion" scoped="" ref="0x40683710"/>
        <function-ref name="isStarted" scoped="" ref="0x40683870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40683950"/>
        <function-ref name="setContinuous" scoped="" ref="0x40683a30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40683b10"/>
        <function-ref name="getValue" scoped="" ref="0x40683bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x40683cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40682740" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40682740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40682918"/>
        <function-ref name="getAdmux" scoped="" ref="0x406829f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40682ad8"/>
        <function-ref name="isEnabled" scoped="" ref="0x40682bb8"/>
        <function-ref name="enableAdc" scoped="" ref="0x40682c98"/>
        <function-ref name="setAdmux" scoped="" ref="0x40682d78"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40682e58"/>
        <function-ref name="isComplete" scoped="" ref="0x4067f010"/>
        <function-ref name="cancel" scoped="" ref="0x4067f0f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x4067f1d0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x4067f2b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x4067f390"/>
        <function-ref name="startConversion" scoped="" ref="0x4067f470"/>
        <function-ref name="isStarted" scoped="" ref="0x4067f5d0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x4067f6b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x4067f790"/>
        <function-ref name="getAdcsra" scoped="" ref="0x4067f870"/>
        <function-ref name="getValue" scoped="" ref="0x4067f950"/>
        <function-ref name="dataReady" scoped="" ref="0x4067fa30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4067fc18" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4067fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4067fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x406f1068" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x406f1068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x406f1250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406f1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406f0010" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406f0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406f01f8"/>
        <function-ref name="configure" scoped="" ref="0x406f02d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x406f1470" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406f1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406f1648"/>
        <function-ref name="requested" scoped="" ref="0x406f1728"/>
        <function-ref name="granted" scoped="" ref="0x406f1808"/>
        <function-ref name="isOwner" scoped="" ref="0x406f18e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406f19c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4069d910" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4069d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4069daf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4069dbd8"/>
        <function-ref name="request" scoped="" ref="0x4069dcb8"/>
        <function-ref name="granted" scoped="" ref="0x4069dd98"/>
        <function-ref name="isOwner" scoped="" ref="0x4069de78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x406f1b08" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406f1b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406f1ce0"/>
        <function-ref name="userId" scoped="" ref="0x406f1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41235e80" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41235e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41232070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x412321d0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x412321d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x412323a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41232488"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41232568"/>
        <function-ref name="dequeue" scoped="" ref="0x41232648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41231a98" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41231a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41231c80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41231d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41230a40" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41230a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41230c28"/>
        <function-ref name="configure" scoped="" ref="0x41230d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41230e68" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41230e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4122f050"/>
        <function-ref name="isEmpty" scoped="" ref="0x4122f130"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4122f210"/>
        <function-ref name="dequeue" scoped="" ref="0x4122f2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41231ea0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41231ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412300c0"/>
        <function-ref name="requested" scoped="" ref="0x412301a0"/>
        <function-ref name="granted" scoped="" ref="0x41230280"/>
        <function-ref name="isOwner" scoped="" ref="0x41230360"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41230440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4122f430" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4122f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4122f608"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4122f6e8"/>
        <function-ref name="led1On" scoped="" ref="0x4122f7c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4122f8a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4122f988"/>
        <function-ref name="get" scoped="" ref="0x4122fa68"/>
        <function-ref name="led1Off" scoped="" ref="0x4122fb48"/>
        <function-ref name="led0On" scoped="" ref="0x4122fec8"/>
        <function-ref name="set" scoped="" ref="0x4122fd08"/>
        <function-ref name="led2On" scoped="" ref="0x4122fc28"/>
        <function-ref name="led2Off" scoped="" ref="0x4122fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41231358" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41231358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41231540"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41231620"/>
        <function-ref name="request" scoped="" ref="0x41231700"/>
        <function-ref name="granted" scoped="" ref="0x412317e0"/>
        <function-ref name="isOwner" scoped="" ref="0x412318c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41230580" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41230580"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41230758"/>
        <function-ref name="userId" scoped="" ref="0x41230838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4122e080" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4122e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4122e258"/>
        <function-ref name="runTask" scoped="" ref="0x4122e338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x406efde8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x406efde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x406ee010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x406ee150" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406ee150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406ee328"/>
        <function-ref name="requested" scoped="" ref="0x406ee408"/>
        <function-ref name="granted" scoped="" ref="0x406ee4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x406ee5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406ee6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x406ef9f0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x406ef9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406efbc8"/>
        <function-ref name="stop" scoped="" ref="0x406efca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x406ee7e8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406ee7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406ee9c0"/>
        <function-ref name="userId" scoped="" ref="0x406eeaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x412578c0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x412578c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41257a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41257bd8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41257bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41257db0"/>
        <function-ref name="requested" scoped="" ref="0x41257e90"/>
        <function-ref name="granted" scoped="" ref="0x41256010"/>
        <function-ref name="isOwner" scoped="" ref="0x412560f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412561d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x412574c8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x412574c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412576a0"/>
        <function-ref name="stop" scoped="" ref="0x41257780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41256310" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41256310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412564e8"/>
        <function-ref name="userId" scoped="" ref="0x412565c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x407081d8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x407081d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40708800"/>
        <function-ref name="readDone" scoped="" ref="0x40708a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40706178" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40706178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407067c0"/>
        <function-ref name="readDone" scoped="" ref="0x40706a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x407056b0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x407056b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40705888"/>
        <function-ref name="getChannel" scoped="" ref="0x40705968"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40705a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40706de8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40706de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40705010"/>
        <function-ref name="cancel" scoped="" ref="0x407050f0"/>
        <function-ref name="dataReady" scoped="" ref="0x407051d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x40712e90" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x40712e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40711080"/>
        <function-ref name="runTask" scoped="" ref="0x40711160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x406f3560" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x406f3560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406f3b98"/>
        <function-ref name="readDone" scoped="" ref="0x406f3e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40725280" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40725280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407258b8"/>
        <function-ref name="readDone" scoped="" ref="0x40725b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40725ea0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40725ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407240c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407241a0"/>
        <function-ref name="request" scoped="" ref="0x40724280"/>
        <function-ref name="granted" scoped="" ref="0x40724360"/>
        <function-ref name="isOwner" scoped="" ref="0x40724440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40720468" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40720468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40720640"/>
        <function-ref name="getChannel" scoped="" ref="0x40720720"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40720800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x4073f908" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x4073f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x4073fae0"/>
        <function-ref name="setRoot" scoped="" ref="0x4073fbc0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x4073fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x4073f120" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x4073f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4073f2f8"/>
        <function-ref name="setOrigin" scoped="" ref="0x4073f3d8"/>
        <function-ref name="setType" scoped="" ref="0x4073f4b8"/>
        <function-ref name="getOrigin" scoped="" ref="0x4073f598"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4073f678"/>
        <function-ref name="getType" scoped="" ref="0x4073f758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40746178" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40746178"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40746350"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40746430"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40746510"/>
        <function-ref name="logEventRoute" scoped="" ref="0x407465f0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x407466d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x4073b7c0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x4073b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x4073b998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4072ba78" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4072ba78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4072bc50"/>
        <function-ref name="getPayload" scoped="" ref="0x4072bd30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4072be10"/>
        <function-ref name="cancel" scoped="" ref="0x4072bef0"/>
        <function-ref name="sendDone" scoped="" ref="0x40741010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40741b78" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40741b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40741d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x407379d0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407379d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40737ba8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40737c88"/>
        <function-ref name="getPayload" scoped="" ref="0x40737d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40737e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40737f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407414c8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407414c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407416a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4072b348" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4072b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4072b520"/>
        <function-ref name="stop" scoped="" ref="0x4072b600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteControl" ref="0x4074a138" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteControl" scoped="" ref="0x4074a138"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getOccupancy" scoped="" ref="0x4074a310"/>
        <function-ref name="getDepth" scoped="" ref="0x4074a3f0"/>
        <function-ref name="getQuality" scoped="" ref="0x4074a4d0"/>
        <function-ref name="getParent" scoped="" ref="0x4074a5b0"/>
        <function-ref name="manualUpdate" scoped="" ref="0x4074a690"/>
        <function-ref name="setUpdateInterval" scoped="" ref="0x4074a770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40759898" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <component-ref qname="MultiHopLqiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40759898"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40759a70"/>
        <function-ref name="setRoot" scoped="" ref="0x40759b50"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40759c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LqiRouteStats" ref="0x40742e00" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <component-ref qname="MultiHopLqiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LqiRouteStats" scoped="" ref="0x40742e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LqiRouteStats"/>
      </instance>
      <interface-functions>
        <function-ref name="getSendFailures" scoped="" ref="0x40759010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40759e18" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <component-ref qname="MultiHopLqiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40759e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40758010"/>
        <function-ref name="setOrigin" scoped="" ref="0x407580f0"/>
        <function-ref name="setType" scoped="" ref="0x407581d0"/>
        <function-ref name="getOrigin" scoped="" ref="0x407582b0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40758390"/>
        <function-ref name="getType" scoped="" ref="0x40758470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40743a38" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <component-ref qname="MultiHopLqiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40743a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40743c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407442a0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <component-ref qname="MultiHopLqiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407442a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40744478"/>
        <function-ref name="getPayload" scoped="" ref="0x40744558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40744638"/>
        <function-ref name="cancel" scoped="" ref="0x40744718"/>
        <function-ref name="sendDone" scoped="" ref="0x407447f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40743390" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <component-ref qname="MultiHopLqiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40743390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40743568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40759190" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <component-ref qname="MultiHopLqiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40759190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40759368"/>
        <function-ref name="payloadLength" scoped="" ref="0x40759448"/>
        <function-ref name="getPayload" scoped="" ref="0x40759528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40759608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407596e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40758678" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <component-ref qname="MultiHopLqiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40758678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40758850"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40758930"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40758a10"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40758af0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40758bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40744cb0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <component-ref qname="MultiHopLqiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40744cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40744e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40746e58" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <component-ref qname="MultiHopLqiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40746e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40744050"/>
        <function-ref name="stop" scoped="" ref="0x40744130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteControl" ref="0x40743dd0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/MultiHopLqiP.nc">
      <component-ref qname="MultiHopLqiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteControl" scoped="" ref="0x40743dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getOccupancy" scoped="" ref="0x40742010"/>
        <function-ref name="getDepth" scoped="" ref="0x407420f0"/>
        <function-ref name="getQuality" scoped="" ref="0x407421d0"/>
        <function-ref name="getParent" scoped="" ref="0x407422b0"/>
        <function-ref name="manualUpdate" scoped="" ref="0x40742390"/>
        <function-ref name="setUpdateInterval" scoped="" ref="0x40742470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40761d68" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40761d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40760010"/>
        <function-ref name="stopDone" scoped="" ref="0x407600f0"/>
        <function-ref name="start" scoped="" ref="0x407601d0"/>
        <function-ref name="stop" scoped="" ref="0x407602b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407604c0" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407604c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40760698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x407621f8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x407621f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x407623d0"/>
        <function-ref name="setOrigin" scoped="" ref="0x407624b0"/>
        <function-ref name="setType" scoped="" ref="0x40762590"/>
        <function-ref name="getOrigin" scoped="" ref="0x40762670"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40762750"/>
        <function-ref name="getType" scoped="" ref="0x40762830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LqiRouteStats" ref="0x407612b8" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LqiRouteStats" scoped="" ref="0x407612b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LqiRouteStats"/>
      </instance>
      <interface-functions>
        <function-ref name="getSendFailures" scoped="" ref="0x40761490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40760880" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40760880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40760a58"/>
        <function-ref name="getPayload" scoped="" ref="0x40760b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40760c18"/>
        <function-ref name="cancel" scoped="" ref="0x40760cf8"/>
        <function-ref name="sendDone" scoped="" ref="0x40760dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteSelect" ref="0x40771538" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteSelect" scoped="" ref="0x40771538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteSelect"/>
      </instance>
      <interface-functions>
        <function-ref name="getBuffer" scoped="" ref="0x40771710"/>
        <function-ref name="selectRoute" scoped="" ref="0x407717f0"/>
        <function-ref name="isActive" scoped="" ref="0x407718d0"/>
        <function-ref name="initializeFields" scoped="" ref="0x407719b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40763d68" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40763d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40762010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40761610" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40761610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407617e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x407618c8"/>
        <function-ref name="getPayload" scoped="" ref="0x407619a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40761a88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40761b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x407636c0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x407636c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40763898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40764578" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40764578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40764750"/>
        <function-ref name="getPayload" scoped="" ref="0x40764830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40764910"/>
        <function-ref name="cancel" scoped="" ref="0x407649f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40764ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteSelectCntl" ref="0x4075f860" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteSelectCntl" scoped="" ref="0x4075f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getOccupancy" scoped="" ref="0x4075fa38"/>
        <function-ref name="getDepth" scoped="" ref="0x4075fb18"/>
        <function-ref name="getQuality" scoped="" ref="0x4075fbf8"/>
        <function-ref name="getParent" scoped="" ref="0x4075fcd8"/>
        <function-ref name="manualUpdate" scoped="" ref="0x4075fdb8"/>
        <function-ref name="setUpdateInterval" scoped="" ref="0x4075fe98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x40770620" loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40770620"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x407707f8"/>
        <function-ref name="setRoot" scoped="" ref="0x407708d8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x407709b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4077c7e0" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4077c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4077c9b8"/>
        <function-ref name="rand32" scoped="" ref="0x4077ca98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4075d830" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4075d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4075da08"/>
        <function-ref name="payloadLength" scoped="" ref="0x4075dae8"/>
        <function-ref name="getPayload" scoped="" ref="0x4075dbc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4075dca8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4075dd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40764230" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40764230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40764408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x407777b8" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x407777b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40777990"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40777a70"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40777b50"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40777c30"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40777d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40763010" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40763010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407631e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40771b20" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40771b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40771cf8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40771dd8"/>
        <function-ref name="led1On" scoped="" ref="0x40771eb8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4075d010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4075d0f0"/>
        <function-ref name="get" scoped="" ref="0x4075d1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x4075d2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x4075d630"/>
        <function-ref name="set" scoped="" ref="0x4075d390"/>
        <function-ref name="led0On" scoped="" ref="0x4075d470"/>
        <function-ref name="led2On" scoped="" ref="0x4075d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40777248" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40777248"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40777420"/>
        <function-ref name="noAck" scoped="" ref="0x40777500"/>
        <function-ref name="wasAcked" scoped="" ref="0x407775e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSendMine" ref="0x4075f010" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSendMine" scoped="" ref="0x4075f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4075f268"/>
        <function-ref name="getPayload" scoped="" ref="0x4075f348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4075f428"/>
        <function-ref name="cancel" scoped="" ref="0x4075f508"/>
        <function-ref name="sendDone" scoped="" ref="0x4075f5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40766990" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40766990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40766b68"/>
        <function-ref name="source" scoped="" ref="0x40766c48"/>
        <function-ref name="address" scoped="" ref="0x40766d28"/>
        <function-ref name="destination" scoped="" ref="0x40766e08"/>
        <function-ref name="setSource" scoped="" ref="0x40766ee8"/>
        <function-ref name="setDestination" scoped="" ref="0x40770010"/>
        <function-ref name="type" scoped="" ref="0x407700f0"/>
        <function-ref name="setType" scoped="" ref="0x407701d0"/>
        <function-ref name="isForMe" scoped="" ref="0x407702b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40770390"/>
        <function-ref name="localGroup" scoped="" ref="0x40770470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteControl" ref="0x407629f0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiForwardingEngineP.nc">
      <component-ref qname="LqiForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteControl" scoped="" ref="0x407629f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getOccupancy" scoped="" ref="0x40762bc8"/>
        <function-ref name="getDepth" scoped="" ref="0x40762ca8"/>
        <function-ref name="getQuality" scoped="" ref="0x40762d88"/>
        <function-ref name="getParent" scoped="" ref="0x40762e68"/>
        <function-ref name="manualUpdate" scoped="" ref="0x40761010"/>
        <function-ref name="setUpdateInterval" scoped="" ref="0x407610f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x407c9460" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x407c9460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x407c9638"/>
        <function-ref name="setRoot" scoped="" ref="0x407c9718"/>
        <function-ref name="unsetRoot" scoped="" ref="0x407c97f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteSelect" ref="0x407cb620" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteSelect" scoped="" ref="0x407cb620"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteSelect"/>
      </instance>
      <interface-functions>
        <function-ref name="getBuffer" scoped="" ref="0x407cb7f8"/>
        <function-ref name="selectRoute" scoped="" ref="0x407cb8d8"/>
        <function-ref name="isActive" scoped="" ref="0x407cb9b8"/>
        <function-ref name="initializeFields" scoped="" ref="0x407cba98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LqiRouteStats" ref="0x407de010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LqiRouteStats" scoped="" ref="0x407de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LqiRouteStats"/>
      </instance>
      <interface-functions>
        <function-ref name="getSendFailures" scoped="" ref="0x407de1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x407d8488" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x407d8488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x407d8660"/>
        <function-ref name="logEventMsg" scoped="" ref="0x407d8740"/>
        <function-ref name="logEventSimple" scoped="" ref="0x407d8820"/>
        <function-ref name="logEventRoute" scoped="" ref="0x407d8900"/>
        <function-ref name="logEventDbg" scoped="" ref="0x407d89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendRouteTask" ref="0x407e92a0" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendRouteTask" scoped="" ref="0x407e92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407e9478"/>
        <function-ref name="runTask" scoped="" ref="0x407e9558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerTask" ref="0x407e31e0" loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerTask" scoped="" ref="0x407e31e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407e33b8"/>
        <function-ref name="runTask" scoped="" ref="0x407e3498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x407e0bd0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407e0bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e0da8"/>
        <function-ref name="payloadLength" scoped="" ref="0x407e0e88"/>
        <function-ref name="getPayload" scoped="" ref="0x407df010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407df0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407df1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x407e1d50" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x407e1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e1f28"/>
        <function-ref name="getPayload" scoped="" ref="0x407e0018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e00f8"/>
        <function-ref name="cancel" scoped="" ref="0x407e01d8"/>
        <function-ref name="sendDone" scoped="" ref="0x407e02b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x407e0798" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x407e0798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x407e0970"/>
        <function-ref name="rand32" scoped="" ref="0x407e0a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40755db0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40755db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407cb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x407e0440" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407e0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e0618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407dd7a8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407dd7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407dd980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407dda60"/>
        <function-ref name="led1On" scoped="" ref="0x407ddb40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407ddc20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407ddd00"/>
        <function-ref name="get" scoped="" ref="0x407ddde0"/>
        <function-ref name="led1Off" scoped="" ref="0x407ddec0"/>
        <function-ref name="led2Off" scoped="" ref="0x407d82b0"/>
        <function-ref name="set" scoped="" ref="0x407d8010"/>
        <function-ref name="led0On" scoped="" ref="0x407d80f0"/>
        <function-ref name="led2On" scoped="" ref="0x407d81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLinkQuality" ref="0x407d9540" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x407d9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407dd1b0"/>
        <function-ref name="get" scoped="" ref="0x407d9ec8"/>
        <function-ref name="isSet" scoped="" ref="0x407d9c08"/>
        <function-ref name="set" scoped="" ref="0x407dd470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x407df368" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407df368"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407df540"/>
        <function-ref name="source" scoped="" ref="0x407df620"/>
        <function-ref name="address" scoped="" ref="0x407df700"/>
        <function-ref name="destination" scoped="" ref="0x407df7e0"/>
        <function-ref name="setSource" scoped="" ref="0x407df8c0"/>
        <function-ref name="setDestination" scoped="" ref="0x407df9a0"/>
        <function-ref name="type" scoped="" ref="0x407dfa80"/>
        <function-ref name="setType" scoped="" ref="0x407dfb60"/>
        <function-ref name="isForMe" scoped="" ref="0x407dfc40"/>
        <function-ref name="setGroup" scoped="" ref="0x407dfd20"/>
        <function-ref name="localGroup" scoped="" ref="0x407dfe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x407cb1b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x407cb1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407cb390"/>
        <function-ref name="stop" scoped="" ref="0x407cb470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407c9a80" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407c9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407e1650"/>
        <function-ref name="fired" scoped="" ref="0x407e2830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407e1010"/>
        <function-ref name="isOneShot" scoped="" ref="0x407e2ce0"/>
        <function-ref name="getdt" scoped="" ref="0x407e1b00"/>
        <function-ref name="gett0" scoped="" ref="0x407e18a8"/>
        <function-ref name="isRunning" scoped="" ref="0x407e2a88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407e20d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407e1330"/>
        <function-ref name="startOneShot" scoped="" ref="0x407e2358"/>
        <function-ref name="stop" scoped="" ref="0x407e25d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouteControl" ref="0x407cbc58" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRoutingEngineP.nc">
      <component-ref qname="LqiRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteControl" scoped="" ref="0x407cbc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RouteControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getOccupancy" scoped="" ref="0x407cbe30"/>
        <function-ref name="getDepth" scoped="" ref="0x407cbf10"/>
        <function-ref name="getQuality" scoped="" ref="0x407c9010"/>
        <function-ref name="getParent" scoped="" ref="0x407c90f0"/>
        <function-ref name="manualUpdate" scoped="" ref="0x407c91d0"/>
        <function-ref name="setUpdateInterval" scoped="" ref="0x407c92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d262c0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="MultiHopLqiP.BeaconSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d262c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d26498"/>
        <function-ref name="getPayload" scoped="" ref="0x40d26578"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d26658"/>
        <function-ref name="cancel" scoped="" ref="0x40d26738"/>
        <function-ref name="sendDone" scoped="" ref="0x40d26818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d26958" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="MultiHopLqiP.BeaconSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d26958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d26b30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d26c10"/>
        <function-ref name="getPayload" scoped="" ref="0x40d26cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d26dd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d26eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d25010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="MultiHopLqiP.BeaconSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d25010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d251e8"/>
        <function-ref name="source" scoped="" ref="0x40d252c8"/>
        <function-ref name="address" scoped="" ref="0x40d253a8"/>
        <function-ref name="destination" scoped="" ref="0x40d25488"/>
        <function-ref name="setSource" scoped="" ref="0x40d25568"/>
        <function-ref name="setDestination" scoped="" ref="0x40d25648"/>
        <function-ref name="type" scoped="" ref="0x40d25728"/>
        <function-ref name="setType" scoped="" ref="0x40d25808"/>
        <function-ref name="isForMe" scoped="" ref="0x40d258e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40d259c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40d25aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d25c08" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="MultiHopLqiP.BeaconSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d25c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d25de0"/>
        <function-ref name="noAck" scoped="" ref="0x40d25ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d24010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x412445b8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultiHopLqiP.BeaconSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x412445b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41244790"/>
        <function-ref name="getPayload" scoped="" ref="0x41244870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41244950"/>
        <function-ref name="cancel" scoped="" ref="0x41244a30"/>
        <function-ref name="sendDone" scoped="" ref="0x41244b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41244c80" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultiHopLqiP.BeaconSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41244c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41244e58"/>
        <function-ref name="getPayload" scoped="" ref="0x41243010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412430f0"/>
        <function-ref name="cancel" scoped="" ref="0x412431d0"/>
        <function-ref name="sendDone" scoped="" ref="0x412432b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x412433f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultiHopLqiP.BeaconSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412433f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x412435c8"/>
        <function-ref name="source" scoped="" ref="0x412436a8"/>
        <function-ref name="address" scoped="" ref="0x41243788"/>
        <function-ref name="destination" scoped="" ref="0x41243868"/>
        <function-ref name="setSource" scoped="" ref="0x41243948"/>
        <function-ref name="setDestination" scoped="" ref="0x41243a28"/>
        <function-ref name="type" scoped="" ref="0x41243b08"/>
        <function-ref name="setType" scoped="" ref="0x41243be8"/>
        <function-ref name="isForMe" scoped="" ref="0x41243cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41243da8"/>
        <function-ref name="localGroup" scoped="" ref="0x41243e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408384c0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408384c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40838698"/>
        <function-ref name="getPayload" scoped="" ref="0x40838778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40838858"/>
        <function-ref name="cancel" scoped="" ref="0x40838938"/>
        <function-ref name="sendDone" scoped="" ref="0x40838a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40863b48" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40863b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40863d30"/>
        <function-ref name="getPayload" scoped="" ref="0x40863e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40863ef0"/>
        <function-ref name="cancel" scoped="" ref="0x40862010"/>
        <function-ref name="sendDone" scoped="" ref="0x408620f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408633d8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408633d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408635c0"/>
        <function-ref name="getPayload" scoped="" ref="0x408636a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40863780"/>
        <function-ref name="cancel" scoped="" ref="0x40863860"/>
        <function-ref name="sendDone" scoped="" ref="0x40863940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40862e08" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40862e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40861010"/>
        <function-ref name="payloadLength" scoped="" ref="0x408610f0"/>
        <function-ref name="getPayload" scoped="" ref="0x408611d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408612b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40861390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40861510" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40861510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408616e8"/>
        <function-ref name="runTask" scoped="" ref="0x408617c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40861948" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40861948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40861b20"/>
        <function-ref name="runTask" scoped="" ref="0x40861c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40862230" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40862230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40862408"/>
        <function-ref name="source" scoped="" ref="0x408624e8"/>
        <function-ref name="address" scoped="" ref="0x408625c8"/>
        <function-ref name="destination" scoped="" ref="0x408626a8"/>
        <function-ref name="setSource" scoped="" ref="0x40862788"/>
        <function-ref name="setDestination" scoped="" ref="0x40862868"/>
        <function-ref name="type" scoped="" ref="0x40862948"/>
        <function-ref name="setType" scoped="" ref="0x40862a28"/>
        <function-ref name="isForMe" scoped="" ref="0x40862b08"/>
        <function-ref name="setGroup" scoped="" ref="0x40862be8"/>
        <function-ref name="localGroup" scoped="" ref="0x40862cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4085fbd0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4085fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4085fda8"/>
        <function-ref name="stopDone" scoped="" ref="0x4085fe88"/>
        <function-ref name="start" scoped="" ref="0x4085c010"/>
        <function-ref name="stop" scoped="" ref="0x4085c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4086b650" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4086b650"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40883170"/>
        <function-ref name="clear" scoped="" ref="0x40883520"/>
        <function-ref name="isValid" scoped="" ref="0x4086bda0"/>
        <function-ref name="set" scoped="" ref="0x408838d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4085c550" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4085c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4085c728"/>
        <function-ref name="getPayload" scoped="" ref="0x4085c808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4085c8e8"/>
        <function-ref name="cancel" scoped="" ref="0x4085c9c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4085caa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408775c8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408775c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408777a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40877920" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40877920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40877af8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40877bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40877cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40877d98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40877e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4086ec68" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4086ec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x4086ee40"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x4086ef20"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40874018"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x408740f8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x408741d8"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x408742b8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40874398"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40874478"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40874558"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40874638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4085cf10" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4085cf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40877108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40876cf8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40876cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40876ed0"/>
        <function-ref name="noAck" scoped="" ref="0x40875010"/>
        <function-ref name="wasAcked" scoped="" ref="0x408750f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40876040" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40876040"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40876218"/>
        <function-ref name="source" scoped="" ref="0x408762f8"/>
        <function-ref name="address" scoped="" ref="0x408763d8"/>
        <function-ref name="destination" scoped="" ref="0x408764b8"/>
        <function-ref name="setSource" scoped="" ref="0x40876598"/>
        <function-ref name="setDestination" scoped="" ref="0x40876678"/>
        <function-ref name="type" scoped="" ref="0x40876758"/>
        <function-ref name="setType" scoped="" ref="0x40876838"/>
        <function-ref name="isForMe" scoped="" ref="0x40876918"/>
        <function-ref name="setGroup" scoped="" ref="0x408769f8"/>
        <function-ref name="localGroup" scoped="" ref="0x40876ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x40884c68" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40884c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408737a0"/>
        <function-ref name="clear" scoped="" ref="0x40873b50"/>
        <function-ref name="isValid" scoped="" ref="0x408733f0"/>
        <function-ref name="set" scoped="" ref="0x40873f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40889e98" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40889e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408880c0"/>
        <function-ref name="stopDone" scoped="" ref="0x408881a0"/>
        <function-ref name="start" scoped="" ref="0x40888280"/>
        <function-ref name="stop" scoped="" ref="0x40888360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4089db60" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4089db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4089c780"/>
        <function-ref name="get" scoped="" ref="0x4089c4c0"/>
        <function-ref name="isSet" scoped="" ref="0x4089c200"/>
        <function-ref name="set" scoped="" ref="0x4089ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40887b80" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40887b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40887d58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40887e38"/>
        <function-ref name="getPayload" scoped="" ref="0x40887f18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40886010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408860f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408887c0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408887c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40888998"/>
        <function-ref name="getPayload" scoped="" ref="0x40888a78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40888b58"/>
        <function-ref name="cancel" scoped="" ref="0x40888c38"/>
        <function-ref name="sendDone" scoped="" ref="0x40888d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40887828" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40887828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40887a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4089e7f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4089e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4089d3d8"/>
        <function-ref name="get" scoped="" ref="0x4089d118"/>
        <function-ref name="isSet" scoped="" ref="0x4089ee38"/>
        <function-ref name="set" scoped="" ref="0x4089d698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408a1598" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408a1598"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x408a1770"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x408a1850"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x408a1930"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x408a1a10"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x408a1af0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x408a1bd0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x408a1cb0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x408a1d90"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x408a1e70"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x408a0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40887190" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40887190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40887368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4089a100" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4089a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x40889ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4089ac00"/>
        <function-ref name="clear" scoped="" ref="0x40899010"/>
        <function-ref name="isValid" scoped="" ref="0x4089a850"/>
        <function-ref name="set" scoped="" ref="0x408993c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x408a0368" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x408a0368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4089e010"/>
        <function-ref name="get" scoped="" ref="0x408a0c70"/>
        <function-ref name="isSet" scoped="" ref="0x408a09b0"/>
        <function-ref name="set" scoped="" ref="0x4089e2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408a1010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408a11e8"/>
        <function-ref name="noAck" scoped="" ref="0x408a12c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408a13a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40886288" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40886288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40886460"/>
        <function-ref name="source" scoped="" ref="0x40886540"/>
        <function-ref name="address" scoped="" ref="0x40886620"/>
        <function-ref name="destination" scoped="" ref="0x40886700"/>
        <function-ref name="setSource" scoped="" ref="0x408867e0"/>
        <function-ref name="setDestination" scoped="" ref="0x408868c0"/>
        <function-ref name="type" scoped="" ref="0x408869a0"/>
        <function-ref name="setType" scoped="" ref="0x40886a80"/>
        <function-ref name="isForMe" scoped="" ref="0x40886b60"/>
        <function-ref name="setGroup" scoped="" ref="0x40886c40"/>
        <function-ref name="localGroup" scoped="" ref="0x40886d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40899af8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40899af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408976b8"/>
        <function-ref name="clear" scoped="" ref="0x40897a68"/>
        <function-ref name="isValid" scoped="" ref="0x40897308"/>
        <function-ref name="set" scoped="" ref="0x40897e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x408aa040" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x408aa040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x408aa918"/>
        <function-ref name="channelError" scoped="" ref="0x408aa2f8"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x408aa3d8"/>
        <function-ref name="getChannelTime" scoped="" ref="0x408aa4b8"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x408aa598"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x408aa678"/>
        <function-ref name="timerTick" scoped="" ref="0x408aa758"/>
        <function-ref name="getSender" scoped="" ref="0x408aa838"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x408aa218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x408b4808" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x408b4808"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x408b49e0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x408b4ac0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x408b4ba0"/>
        <function-ref name="timerTick" scoped="" ref="0x408b4c80"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x408b4d60"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x408b4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x408bba30" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x408bba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0x408bbc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x408b1478" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x408b1478"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408b1650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x408a26d0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x408a26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x408a28a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x408af010" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x408af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x408af1e8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x408af2c8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408af3a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x408af488"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x408af568"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x408af648"/>
        <function-ref name="setAckReceived" scoped="" ref="0x408af728"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408af808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x408dcea8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x408dcea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x408b60c0"/>
        <function-ref name="getDSN" scoped="" ref="0x408b61a0"/>
        <function-ref name="setFCF" scoped="" ref="0x408b6280"/>
        <function-ref name="isAckFrame" scoped="" ref="0x408b6360"/>
        <function-ref name="set6LowPan" scoped="" ref="0x408b6440"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x408b6520"/>
        <function-ref name="createDataFrame" scoped="" ref="0x408b6600"/>
        <function-ref name="setDSN" scoped="" ref="0x408b66e0"/>
        <function-ref name="createAckReply" scoped="" ref="0x408b67c0"/>
        <function-ref name="getHeader" scoped="" ref="0x408b68a0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x408b6980"/>
        <function-ref name="isDataFrame" scoped="" ref="0x408b6a60"/>
        <function-ref name="setType" scoped="" ref="0x408b6b40"/>
        <function-ref name="getAckRequired" scoped="" ref="0x408b6ca0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x408b6d80"/>
        <function-ref name="setLength" scoped="" ref="0x408b6e60"/>
        <function-ref name="get6LowPan" scoped="" ref="0x408b2010"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408b20f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x408b21d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x408b22b0"/>
        <function-ref name="setFramePending" scoped="" ref="0x408b2390"/>
        <function-ref name="getLength" scoped="" ref="0x408b2470"/>
        <function-ref name="setDestPan" scoped="" ref="0x408b2550"/>
        <function-ref name="setAckRequired" scoped="" ref="0x408b2630"/>
        <function-ref name="getFCF" scoped="" ref="0x408b2710"/>
        <function-ref name="getType" scoped="" ref="0x408b28f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408b29d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x408b2ab0"/>
        <function-ref name="getFramePending" scoped="" ref="0x408b2b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x408b2d10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408b2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408b2ee8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408db010"/>
        <function-ref name="getPayload" scoped="" ref="0x408db0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408db1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408db2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x408d8f00" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x408d8f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408da0f0"/>
        <function-ref name="wait" scoped="" ref="0x408da1d0"/>
        <function-ref name="cancel" scoped="" ref="0x408da2b0"/>
        <function-ref name="isFree" scoped="" ref="0x408da390"/>
        <function-ref name="getNow" scoped="" ref="0x408da470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x408a3710" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x408a3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x408a38e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x408a39c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x408a3aa8"/>
        <function-ref name="getSender" scoped="" ref="0x408a3b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x408b8850" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x408b8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x408b8a28"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x408b8b08"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x408b8be8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x408b8cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230Config" ref="0x408ab920" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x408ab920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x408abaf8"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x408b00f0"/>
        <function-ref name="getPayload" scoped="" ref="0x408abcb8"/>
        <function-ref name="setLength" scoped="" ref="0x408abd98"/>
        <function-ref name="getLength" scoped="" ref="0x408abe78"/>
        <function-ref name="getMaxLength" scoped="" ref="0x408b0010"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x408abbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40917798" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40917798"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40916378"/>
        <function-ref name="get" scoped="" ref="0x409160b8"/>
        <function-ref name="isSet" scoped="" ref="0x40917de0"/>
        <function-ref name="set" scoped="" ref="0x40916638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40894508" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40894508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408946e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x408947c0"/>
        <function-ref name="getPayload" scoped="" ref="0x408948a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40894980"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40894a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40918408" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40918408"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40917010"/>
        <function-ref name="get" scoped="" ref="0x40918d10"/>
        <function-ref name="isSet" scoped="" ref="0x40918a50"/>
        <function-ref name="set" scoped="" ref="0x409172d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0x40916b68" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0x40916b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40914780"/>
        <function-ref name="get" scoped="" ref="0x409144c0"/>
        <function-ref name="isSet" scoped="" ref="0x40914200"/>
        <function-ref name="set" scoped="" ref="0x40914a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40913010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40913010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40913bd8"/>
        <function-ref name="get" scoped="" ref="0x40913918"/>
        <function-ref name="isSet" scoped="" ref="0x40913658"/>
        <function-ref name="set" scoped="" ref="0x40913e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40911500" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40911500"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x40889ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40910010"/>
        <function-ref name="clear" scoped="" ref="0x409103c0"/>
        <function-ref name="isValid" scoped="" ref="0x40911c50"/>
        <function-ref name="set" scoped="" ref="0x40910770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408fd930" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408fd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408fdb08"/>
        <function-ref name="noAck" scoped="" ref="0x408fdbe8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408fdcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x408fc030" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x408fc030"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408fcbf8"/>
        <function-ref name="get" scoped="" ref="0x408fc938"/>
        <function-ref name="isSet" scoped="" ref="0x408fc678"/>
        <function-ref name="set" scoped="" ref="0x408fceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40894bf8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40894bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40894dd0"/>
        <function-ref name="source" scoped="" ref="0x40894eb0"/>
        <function-ref name="address" scoped="" ref="0x408fd010"/>
        <function-ref name="destination" scoped="" ref="0x408fd0f0"/>
        <function-ref name="setSource" scoped="" ref="0x408fd1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x408fd2b0"/>
        <function-ref name="type" scoped="" ref="0x408fd390"/>
        <function-ref name="setType" scoped="" ref="0x408fd470"/>
        <function-ref name="isForMe" scoped="" ref="0x408fd550"/>
        <function-ref name="setGroup" scoped="" ref="0x408fd630"/>
        <function-ref name="localGroup" scoped="" ref="0x408fd710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40910ea8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40910ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4090f9c0"/>
        <function-ref name="clear" scoped="" ref="0x4090fd70"/>
        <function-ref name="isValid" scoped="" ref="0x4090f610"/>
        <function-ref name="set" scoped="" ref="0x4090d150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40924658" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40924658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409232d0"/>
        <function-ref name="get" scoped="" ref="0x40923010"/>
        <function-ref name="isSet" scoped="" ref="0x40924ca0"/>
        <function-ref name="set" scoped="" ref="0x40923590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40928658" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40928658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40928830"/>
        <function-ref name="payloadLength" scoped="" ref="0x40928910"/>
        <function-ref name="getPayload" scoped="" ref="0x409289f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40928ad0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40928bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409252f0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40925eb8"/>
        <function-ref name="get" scoped="" ref="0x40925bf8"/>
        <function-ref name="isSet" scoped="" ref="0x40925938"/>
        <function-ref name="set" scoped="" ref="0x40924190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0x40923ac0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0x40923ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409216a0"/>
        <function-ref name="get" scoped="" ref="0x409213e0"/>
        <function-ref name="isSet" scoped="" ref="0x40921120"/>
        <function-ref name="set" scoped="" ref="0x40921960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x4091a4e0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x4091a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4091a6b8"/>
        <function-ref name="getDSN" scoped="" ref="0x4091a798"/>
        <function-ref name="setFCF" scoped="" ref="0x4091a878"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4091a958"/>
        <function-ref name="set6LowPan" scoped="" ref="0x4091aa38"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4091ab18"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4091abf8"/>
        <function-ref name="setDSN" scoped="" ref="0x4091acd8"/>
        <function-ref name="createAckReply" scoped="" ref="0x4091adb8"/>
        <function-ref name="getHeader" scoped="" ref="0x4091ae98"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40938010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x409380f0"/>
        <function-ref name="setType" scoped="" ref="0x409381d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40938330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40938410"/>
        <function-ref name="setLength" scoped="" ref="0x409384f0"/>
        <function-ref name="get6LowPan" scoped="" ref="0x409385d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409386b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40938790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40938870"/>
        <function-ref name="setFramePending" scoped="" ref="0x40938950"/>
        <function-ref name="getLength" scoped="" ref="0x40938a30"/>
        <function-ref name="setDestPan" scoped="" ref="0x40938b10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40938bf0"/>
        <function-ref name="getFCF" scoped="" ref="0x40938cd0"/>
        <function-ref name="getType" scoped="" ref="0x40938eb0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40937010"/>
        <function-ref name="getDestAddr" scoped="" ref="0x409370f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x409371d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40921e90" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40921e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40920a78"/>
        <function-ref name="get" scoped="" ref="0x409207b8"/>
        <function-ref name="isSet" scoped="" ref="0x409204f8"/>
        <function-ref name="set" scoped="" ref="0x40920d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4091e3a0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4091e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x40889ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4091eea0"/>
        <function-ref name="clear" scoped="" ref="0x4091d280"/>
        <function-ref name="isValid" scoped="" ref="0x4091eaf0"/>
        <function-ref name="set" scoped="" ref="0x4091d630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x409374f0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409374f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x40889ae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40937b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40928140" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40928140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40928318"/>
        <function-ref name="noAck" scoped="" ref="0x409283f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x409284d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40928f08" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40928f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40927af8"/>
        <function-ref name="get" scoped="" ref="0x40927838"/>
        <function-ref name="isSet" scoped="" ref="0x40927578"/>
        <function-ref name="set" scoped="" ref="0x40927db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40937f28" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40937f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40936580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4091dd68" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4091dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4091c898"/>
        <function-ref name="clear" scoped="" ref="0x4091cc48"/>
        <function-ref name="isValid" scoped="" ref="0x4091c4e8"/>
        <function-ref name="set" scoped="" ref="0x4091a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0x4090b858" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x4090b858"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4090ba30"/>
        <function-ref name="getDSN" scoped="" ref="0x4090bb10"/>
        <function-ref name="setFCF" scoped="" ref="0x4090bbf0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4090bcd0"/>
        <function-ref name="set6LowPan" scoped="" ref="0x4090bdb0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4090be90"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4095f010"/>
        <function-ref name="setDSN" scoped="" ref="0x4095f0f0"/>
        <function-ref name="createAckReply" scoped="" ref="0x4095f1d0"/>
        <function-ref name="getHeader" scoped="" ref="0x4095f2b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4095f390"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4095f470"/>
        <function-ref name="setType" scoped="" ref="0x4095f550"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4095f6b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4095f790"/>
        <function-ref name="setLength" scoped="" ref="0x4095f870"/>
        <function-ref name="get6LowPan" scoped="" ref="0x4095f950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4095fa30"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4095fb10"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4095fbf0"/>
        <function-ref name="setFramePending" scoped="" ref="0x4095fcd0"/>
        <function-ref name="getLength" scoped="" ref="0x4095fdb0"/>
        <function-ref name="setDestPan" scoped="" ref="0x4095fe90"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4095e010"/>
        <function-ref name="getFCF" scoped="" ref="0x4095e0f0"/>
        <function-ref name="getType" scoped="" ref="0x4095e2d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4095e3b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4095e490"/>
        <function-ref name="getFramePending" scoped="" ref="0x4095e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4095e708" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4095e708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4095e8e0"/>
        <function-ref name="source" scoped="" ref="0x4095e9c0"/>
        <function-ref name="address" scoped="" ref="0x4095eaa0"/>
        <function-ref name="destination" scoped="" ref="0x4095eb80"/>
        <function-ref name="setSource" scoped="" ref="0x4095ec60"/>
        <function-ref name="setDestination" scoped="" ref="0x4095ed40"/>
        <function-ref name="type" scoped="" ref="0x4095ee20"/>
        <function-ref name="setType" scoped="" ref="0x4095ef00"/>
        <function-ref name="isForMe" scoped="" ref="0x4095d010"/>
        <function-ref name="setGroup" scoped="" ref="0x4095d0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4095d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0x4095d8c0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x4095d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4095da98"/>
        <function-ref name="getDSN" scoped="" ref="0x4095db78"/>
        <function-ref name="setFCF" scoped="" ref="0x4095dc58"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4095dd38"/>
        <function-ref name="set6LowPan" scoped="" ref="0x4095de18"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4095def8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4095a010"/>
        <function-ref name="setDSN" scoped="" ref="0x4095a0f0"/>
        <function-ref name="createAckReply" scoped="" ref="0x4095a1d0"/>
        <function-ref name="getHeader" scoped="" ref="0x4095a2b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4095a390"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4095a470"/>
        <function-ref name="setType" scoped="" ref="0x4095a550"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4095a6b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4095a790"/>
        <function-ref name="setLength" scoped="" ref="0x4095a870"/>
        <function-ref name="get6LowPan" scoped="" ref="0x4095a950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4095aa30"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4095ab10"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4095abf0"/>
        <function-ref name="setFramePending" scoped="" ref="0x4095acd0"/>
        <function-ref name="getLength" scoped="" ref="0x4095adb0"/>
        <function-ref name="setDestPan" scoped="" ref="0x4095ae90"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40959010"/>
        <function-ref name="getFCF" scoped="" ref="0x409590f0"/>
        <function-ref name="getType" scoped="" ref="0x409592d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409593b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40959490"/>
        <function-ref name="getFramePending" scoped="" ref="0x40959570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40975ce8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40975ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40975ec0"/>
        <function-ref name="changed" scoped="" ref="0x40977010"/>
        <function-ref name="amGroup" scoped="" ref="0x409770f0"/>
        <function-ref name="setAddress" scoped="" ref="0x409771d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40959708" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40959708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x409598e0"/>
        <function-ref name="source" scoped="" ref="0x409599c0"/>
        <function-ref name="address" scoped="" ref="0x40959aa0"/>
        <function-ref name="destination" scoped="" ref="0x40959b80"/>
        <function-ref name="setSource" scoped="" ref="0x40959c60"/>
        <function-ref name="setDestination" scoped="" ref="0x40959d40"/>
        <function-ref name="type" scoped="" ref="0x40959e20"/>
        <function-ref name="setType" scoped="" ref="0x40959f00"/>
        <function-ref name="isForMe" scoped="" ref="0x40978010"/>
        <function-ref name="setGroup" scoped="" ref="0x409780f0"/>
        <function-ref name="localGroup" scoped="" ref="0x409781d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x4095c748" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4095c748"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4095c920"/>
        <function-ref name="changed" scoped="" ref="0x4095ca00"/>
        <function-ref name="amGroup" scoped="" ref="0x4095cae0"/>
        <function-ref name="setAddress" scoped="" ref="0x4095cbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40960548" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40960548"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40960b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x409ab690" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409ab690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409abde0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409ca2e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409ca068"/>
        <function-ref name="overflow" scoped="" ref="0x409ca558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x409be9d0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x409be9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x409beba8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x409bec88"/>
        <function-ref name="getControlA" scoped="" ref="0x409bed68"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x409bee48"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x409bef28"/>
        <function-ref name="setControlB" scoped="" ref="0x409c3018"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409c30f8"/>
        <function-ref name="getControlB" scoped="" ref="0x409c31d8"/>
        <function-ref name="setControlC" scoped="" ref="0x409c32b8"/>
        <function-ref name="setControlA" scoped="" ref="0x409c3398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x409db770" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x409db770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x409bd288"/>
        <function-ref name="test" scoped="" ref="0x409c2cf0"/>
        <function-ref name="get" scoped="" ref="0x409dbdb8"/>
        <function-ref name="captured" scoped="" ref="0x409c22e8"/>
        <function-ref name="reset" scoped="" ref="0x409c2588"/>
        <function-ref name="isOn" scoped="" ref="0x409bd010"/>
        <function-ref name="set" scoped="" ref="0x409c2048"/>
        <function-ref name="start" scoped="" ref="0x409c2800"/>
        <function-ref name="stop" scoped="" ref="0x409c2a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x409bd998" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x409bd998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x409d9f08"/>
        <function-ref name="fired" scoped="" ref="0x409d9528"/>
        <function-ref name="get" scoped="" ref="0x409d9010"/>
        <function-ref name="reset" scoped="" ref="0x409d97a0"/>
        <function-ref name="isOn" scoped="" ref="0x409d81a0"/>
        <function-ref name="set" scoped="" ref="0x409d9288"/>
        <function-ref name="start" scoped="" ref="0x409d9a18"/>
        <function-ref name="stop" scoped="" ref="0x409d9c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409c7010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409c7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x409c5a68"/>
        <function-ref name="test" scoped="" ref="0x409c5578"/>
        <function-ref name="get" scoped="" ref="0x409c7658"/>
        <function-ref name="setScale" scoped="" ref="0x409c5ce0"/>
        <function-ref name="getScale" scoped="" ref="0x409c4010"/>
        <function-ref name="reset" scoped="" ref="0x409c7de8"/>
        <function-ref name="overflow" scoped="" ref="0x409c7b70"/>
        <function-ref name="isOn" scoped="" ref="0x409c57f0"/>
        <function-ref name="set" scoped="" ref="0x409c78d0"/>
        <function-ref name="start" scoped="" ref="0x409c5088"/>
        <function-ref name="stop" scoped="" ref="0x409c5300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x409d21b0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x409d21b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x409d2388"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x409d2468"/>
        <function-ref name="getControlA" scoped="" ref="0x409d2548"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x409d2628"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x409d2708"/>
        <function-ref name="setControlB" scoped="" ref="0x409d27e8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x409d28c8"/>
        <function-ref name="getControlB" scoped="" ref="0x409d29a8"/>
        <function-ref name="setControlC" scoped="" ref="0x409d2a88"/>
        <function-ref name="setControlA" scoped="" ref="0x409d2b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x409d0d58" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x409d0d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x409cd300"/>
        <function-ref name="fired" scoped="" ref="0x409ce8f8"/>
        <function-ref name="get" scoped="" ref="0x409ce3e0"/>
        <function-ref name="reset" scoped="" ref="0x409ceb70"/>
        <function-ref name="isOn" scoped="" ref="0x409cd578"/>
        <function-ref name="set" scoped="" ref="0x409ce658"/>
        <function-ref name="start" scoped="" ref="0x409cede8"/>
        <function-ref name="stop" scoped="" ref="0x409cd088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x409d2ea0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x409d2ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x409d0918"/>
        <function-ref name="test" scoped="" ref="0x409d0428"/>
        <function-ref name="get" scoped="" ref="0x409d14f8"/>
        <function-ref name="captured" scoped="" ref="0x409d1a10"/>
        <function-ref name="reset" scoped="" ref="0x409d1cb0"/>
        <function-ref name="isOn" scoped="" ref="0x409d06a0"/>
        <function-ref name="set" scoped="" ref="0x409d1770"/>
        <function-ref name="start" scoped="" ref="0x409d1f28"/>
        <function-ref name="stop" scoped="" ref="0x409d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x409cd990" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x409cd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x409ccf08"/>
        <function-ref name="fired" scoped="" ref="0x409cc528"/>
        <function-ref name="get" scoped="" ref="0x409cc010"/>
        <function-ref name="reset" scoped="" ref="0x409cc7a0"/>
        <function-ref name="isOn" scoped="" ref="0x409ec1a0"/>
        <function-ref name="set" scoped="" ref="0x409cc288"/>
        <function-ref name="start" scoped="" ref="0x409cca18"/>
        <function-ref name="stop" scoped="" ref="0x409ccc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x409ec5b8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x409ec5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x409ebb10"/>
        <function-ref name="fired" scoped="" ref="0x409eb130"/>
        <function-ref name="get" scoped="" ref="0x409ecc00"/>
        <function-ref name="reset" scoped="" ref="0x409eb3a8"/>
        <function-ref name="isOn" scoped="" ref="0x409ebd88"/>
        <function-ref name="set" scoped="" ref="0x409ece78"/>
        <function-ref name="start" scoped="" ref="0x409eb620"/>
        <function-ref name="stop" scoped="" ref="0x409eb898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409d8e40" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409d8e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x409d38d8"/>
        <function-ref name="test" scoped="" ref="0x409d33e8"/>
        <function-ref name="get" scoped="" ref="0x409d54d8"/>
        <function-ref name="setScale" scoped="" ref="0x409d3b50"/>
        <function-ref name="getScale" scoped="" ref="0x409d3df0"/>
        <function-ref name="reset" scoped="" ref="0x409d5c68"/>
        <function-ref name="overflow" scoped="" ref="0x409d59f0"/>
        <function-ref name="isOn" scoped="" ref="0x409d3660"/>
        <function-ref name="set" scoped="" ref="0x409d5750"/>
        <function-ref name="start" scoped="" ref="0x409d5ee0"/>
        <function-ref name="stop" scoped="" ref="0x409d3170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a2e860" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a2e860"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a2ea38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40a2ec48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a2ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40a266a0"/>
        <function-ref name="test" scoped="" ref="0x40a261b0"/>
        <function-ref name="get" scoped="" ref="0x40a2d2a8"/>
        <function-ref name="setScale" scoped="" ref="0x40a26918"/>
        <function-ref name="getScale" scoped="" ref="0x40a26bb8"/>
        <function-ref name="reset" scoped="" ref="0x40a2da38"/>
        <function-ref name="overflow" scoped="" ref="0x40a2d7c0"/>
        <function-ref name="isOn" scoped="" ref="0x40a26428"/>
        <function-ref name="set" scoped="" ref="0x40a2d520"/>
        <function-ref name="start" scoped="" ref="0x40a2dcb0"/>
        <function-ref name="stop" scoped="" ref="0x40a2df28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a0f470" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a0f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a0fbc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a230d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a0fe38"/>
        <function-ref name="overflow" scoped="" ref="0x40a23350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40a23630" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a23630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40a3a0a8"/>
        <function-ref name="test" scoped="" ref="0x40a3bba0"/>
        <function-ref name="get" scoped="" ref="0x40a23c78"/>
        <function-ref name="setScale" scoped="" ref="0x40a3a320"/>
        <function-ref name="getScale" scoped="" ref="0x40a3a5c0"/>
        <function-ref name="reset" scoped="" ref="0x40a3b438"/>
        <function-ref name="overflow" scoped="" ref="0x40a3b1c0"/>
        <function-ref name="isOn" scoped="" ref="0x40a3be18"/>
        <function-ref name="set" scoped="" ref="0x40a23ef0"/>
        <function-ref name="start" scoped="" ref="0x40a3b6b0"/>
        <function-ref name="stop" scoped="" ref="0x40a3b928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40a4c6f8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40a4c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a4ce48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a4b350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a4b0d8"/>
        <function-ref name="overflow" scoped="" ref="0x40a4b5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x409a9490" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409a9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409a9be0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a4c110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409a9e58"/>
        <function-ref name="overflow" scoped="" ref="0x40a4c388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40a4a4e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a4a4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a4ab30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40a4ae80" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a4ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a495e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a49ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a49858"/>
        <function-ref name="overflow" scoped="" ref="0x40a49d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409b6ba8" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409b6ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a45210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40a64478" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a64478"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a64650"/>
        <function-ref name="wait" scoped="" ref="0x40a64730"/>
        <function-ref name="cancel" scoped="" ref="0x40a64810"/>
        <function-ref name="isFree" scoped="" ref="0x40a648f0"/>
        <function-ref name="getNow" scoped="" ref="0x40a649d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40a63010" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a63010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x40889ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a614e0"/>
        <function-ref name="fired" scoped="" ref="0x40a63c78"/>
        <function-ref name="startAt" scoped="" ref="0x40a611a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40a63ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a61758"/>
        <function-ref name="start" scoped="" ref="0x40a63760"/>
        <function-ref name="stop" scoped="" ref="0x40a63a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40a5e1f8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a5e1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a5e3d0"/>
        <function-ref name="wait" scoped="" ref="0x40a5e4b0"/>
        <function-ref name="cancel" scoped="" ref="0x40a5e590"/>
        <function-ref name="isFree" scoped="" ref="0x40a5e670"/>
        <function-ref name="getNow" scoped="" ref="0x40a5e750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40a5ead0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a5ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x40889ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a5c010"/>
        <function-ref name="fired" scoped="" ref="0x40a5d748"/>
        <function-ref name="startAt" scoped="" ref="0x40a5dc38"/>
        <function-ref name="isRunning" scoped="" ref="0x40a5d9c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a5c288"/>
        <function-ref name="start" scoped="" ref="0x40a5d230"/>
        <function-ref name="stop" scoped="" ref="0x40a5d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40a58e68" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40a58e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40a5a050"/>
        <function-ref name="suspend" scoped="" ref="0x40a5a130"/>
        <function-ref name="resume" scoped="" ref="0x40a5a210"/>
        <function-ref name="run" scoped="" ref="0x40a5a2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40a60200" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40a60200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40a603d8"/>
        <function-ref name="suspend" scoped="" ref="0x40a604b8"/>
        <function-ref name="resume" scoped="" ref="0x40a60598"/>
        <function-ref name="run" scoped="" ref="0x40a60678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a69238" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a69238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a69410"/>
        <function-ref name="getPayload" scoped="" ref="0x40a694f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a695d0"/>
        <function-ref name="cancel" scoped="" ref="0x40a696b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a69790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a699a0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a699a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a69b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40a73c88" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a73c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a73e60"/>
        <function-ref name="getPayload" scoped="" ref="0x40a6a010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a6a0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40a6a1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a6a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40a6adb0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40a6adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a69010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a68a50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a68a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0x40a68c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a6a718" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a6a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a6a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40a69d10" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40a69d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40a69ee8"/>
        <function-ref name="source" scoped="" ref="0x40a68010"/>
        <function-ref name="address" scoped="" ref="0x40a680f0"/>
        <function-ref name="destination" scoped="" ref="0x40a681d0"/>
        <function-ref name="setSource" scoped="" ref="0x40a682b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40a68390"/>
        <function-ref name="type" scoped="" ref="0x40a68470"/>
        <function-ref name="setType" scoped="" ref="0x40a68550"/>
        <function-ref name="isForMe" scoped="" ref="0x40a68630"/>
        <function-ref name="setGroup" scoped="" ref="0x40a68710"/>
        <function-ref name="localGroup" scoped="" ref="0x40a687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a6b4f0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a6b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a6b6c8"/>
        <function-ref name="stopDone" scoped="" ref="0x40a6b7a8"/>
        <function-ref name="start" scoped="" ref="0x40a6b888"/>
        <function-ref name="stop" scoped="" ref="0x40a6b968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a9cd38" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a9cd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a9cf10"/>
        <function-ref name="getPayload" scoped="" ref="0x40a9b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a9b0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40a9b1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a9b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a9b4c0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a9b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a9b698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a6bad8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a6bad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a6bcb0"/>
        <function-ref name="getPayload" scoped="" ref="0x40a6bd90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a6be70"/>
        <function-ref name="cancel" scoped="" ref="0x40a9c010"/>
        <function-ref name="sendDone" scoped="" ref="0x40a9c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40a9c6e8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40a9c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a9c8c0"/>
        <function-ref name="stopDone" scoped="" ref="0x40a9c9a0"/>
        <function-ref name="start" scoped="" ref="0x40a9ca80"/>
        <function-ref name="stop" scoped="" ref="0x40a9cb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a9c278" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a9c278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a9c450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a97078" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a97078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a97250"/>
        <function-ref name="getPayload" scoped="" ref="0x40a97330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a97410"/>
        <function-ref name="cancel" scoped="" ref="0x40a974f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a975d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a977e0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a977e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a979b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a9bda8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a9bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a98010"/>
        <function-ref name="getPayload" scoped="" ref="0x40a980f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a981d0"/>
        <function-ref name="cancel" scoped="" ref="0x40a982b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a98390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x40a98c50" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x40a98c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a98e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x40a97b80" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x40a97b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40a97d58"/>
        <function-ref name="getDSN" scoped="" ref="0x40a97e38"/>
        <function-ref name="setFCF" scoped="" ref="0x40a97f18"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40a96010"/>
        <function-ref name="set6LowPan" scoped="" ref="0x40a960f0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40a961d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40a962b0"/>
        <function-ref name="setDSN" scoped="" ref="0x40a96390"/>
        <function-ref name="createAckReply" scoped="" ref="0x40a96470"/>
        <function-ref name="getHeader" scoped="" ref="0x40a96550"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40a96630"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40a96710"/>
        <function-ref name="setType" scoped="" ref="0x40a967f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40a96950"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40a96a30"/>
        <function-ref name="setLength" scoped="" ref="0x40a96b10"/>
        <function-ref name="get6LowPan" scoped="" ref="0x40a96bf0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40a96cd0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40a96db0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40a96e90"/>
        <function-ref name="setFramePending" scoped="" ref="0x40a95010"/>
        <function-ref name="getLength" scoped="" ref="0x40a950f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40a951d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40a952b0"/>
        <function-ref name="getFCF" scoped="" ref="0x40a95390"/>
        <function-ref name="getType" scoped="" ref="0x40a95570"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40a95650"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40a95730"/>
        <function-ref name="getFramePending" scoped="" ref="0x40a95810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a98518" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a98518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a986f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40aac8f8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40aac8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40aacad0"/>
        <function-ref name="stopDone" scoped="" ref="0x40aacbb0"/>
        <function-ref name="start" scoped="" ref="0x40aacc90"/>
        <function-ref name="stop" scoped="" ref="0x40aacd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40ab4408" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40ab4408"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40ab45e0"/>
        <function-ref name="request" scoped="" ref="0x40ab46c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x40ab3258" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x40ab3258"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab3430"/>
        <function-ref name="ready" scoped="" ref="0x40ab3510"/>
        <function-ref name="sendDone" scoped="" ref="0x40ab35f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ab2608" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ab2608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab27e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ab28c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ab29a0"/>
        <function-ref name="cancel" scoped="" ref="0x40ab2a80"/>
        <function-ref name="sendDone" scoped="" ref="0x40ab2b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ab2cc0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ab2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ab2e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40ab53f0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40ab53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40ab55c8"/>
        <function-ref name="turnOn" scoped="" ref="0x40ab56a8"/>
        <function-ref name="setChannel" scoped="" ref="0x40ab5788"/>
        <function-ref name="done" scoped="" ref="0x40ab5868"/>
        <function-ref name="standby" scoped="" ref="0x40ab5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40aaceb0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40aaceb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ac10c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ac11a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ac1280"/>
        <function-ref name="cancel" scoped="" ref="0x40ac1360"/>
        <function-ref name="sendDone" scoped="" ref="0x40ac1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40ac1898" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40ac1898"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40ac1a70"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40ac1b50"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40ac1c30"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40ac1d10"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40ac1df0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40ac1ed0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40ab5010"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40ab50f0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40ab51d0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40ab52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40ab4820" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40ab4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40ab49f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40ab4010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ab4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ab41e8"/>
        <function-ref name="header" scoped="" ref="0x40ab42c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40ab4b88" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40ab4b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40ab4d60"/>
        <function-ref name="turnOn" scoped="" ref="0x40ab4e40"/>
        <function-ref name="setChannel" scoped="" ref="0x40ab4f20"/>
        <function-ref name="done" scoped="" ref="0x40ab3018"/>
        <function-ref name="standby" scoped="" ref="0x40ab30f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40ab2030" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40ab2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ab2208"/>
        <function-ref name="stopDone" scoped="" ref="0x40ab22e8"/>
        <function-ref name="start" scoped="" ref="0x40ab23c8"/>
        <function-ref name="stop" scoped="" ref="0x40ab24a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40ab0010" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40ab0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40ab01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ac1580" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ac1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ac1758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x40ab3750" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x40ab3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ab3928"/>
        <function-ref name="header" scoped="" ref="0x40ab3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40ab5a88" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ab5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab5c60"/>
        <function-ref name="ready" scoped="" ref="0x40ab5d40"/>
        <function-ref name="sendDone" scoped="" ref="0x40ab5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40ab3b68" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40ab3b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40ab3dc0"/>
        <function-ref name="request" scoped="" ref="0x40ab3ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40ac0040" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <component-ref qname="DummyLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40ac0040"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40ac0218"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40ac02f8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40ac03d8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40ac04b8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40ac0598"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40ac0678"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40ac0758"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40ac0838"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40ac0918"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40ac09f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40aafc50" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40aafc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40aafe28"/>
        <function-ref name="stopDone" scoped="" ref="0x40aaff08"/>
        <function-ref name="start" scoped="" ref="0x40ad1010"/>
        <function-ref name="stop" scoped="" ref="0x40ad10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40ad1d10" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40ad1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40ad1ee8"/>
        <function-ref name="turnOn" scoped="" ref="0x40ad0010"/>
        <function-ref name="setChannel" scoped="" ref="0x40ad00f0"/>
        <function-ref name="done" scoped="" ref="0x40ad01d0"/>
        <function-ref name="standby" scoped="" ref="0x40ad02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ad1260" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ad1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ad1438"/>
        <function-ref name="getPayload" scoped="" ref="0x40ad1518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ad15f8"/>
        <function-ref name="cancel" scoped="" ref="0x40ad16d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ad17b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40ad0de0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ad0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40acf010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40acf0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40acf1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40acf2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40acf390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40ad09a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ad09a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ad0b80"/>
        <function-ref name="header" scoped="" ref="0x40ad0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ad1940" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ad1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ad1b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40ad0450" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ad0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ad0628"/>
        <function-ref name="ready" scoped="" ref="0x40ad0708"/>
        <function-ref name="sendDone" scoped="" ref="0x40ad07e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40acfaf0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40acfaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40acfcc8"/>
        <function-ref name="stopDone" scoped="" ref="0x40acfda8"/>
        <function-ref name="start" scoped="" ref="0x40acfe88"/>
        <function-ref name="stop" scoped="" ref="0x40acc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40acc220" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40acc220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40acc3f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40acb040" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40acb040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40acb218"/>
        <function-ref name="turnOn" scoped="" ref="0x40acb2f8"/>
        <function-ref name="setChannel" scoped="" ref="0x40acb3d8"/>
        <function-ref name="done" scoped="" ref="0x40acb4b8"/>
        <function-ref name="standby" scoped="" ref="0x40acb598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40acc568" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40acc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40acc740"/>
        <function-ref name="getPayload" scoped="" ref="0x40acc820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40acc900"/>
        <function-ref name="cancel" scoped="" ref="0x40acc9e0"/>
        <function-ref name="sendDone" scoped="" ref="0x40accac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40aca6e8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40aca6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40aca8c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40aca9a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40acaa80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40acab60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40acac40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40aca2b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40aca2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40aca488"/>
        <function-ref name="header" scoped="" ref="0x40aca568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x40ac4680" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x40ac4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ac4858"/>
        <function-ref name="runTask" scoped="" ref="0x40ac4938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40accc48" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40accc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40acce20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40ae5c58" loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40ae5c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ae5e30"/>
        <function-ref name="runTask" scoped="" ref="0x40ae5f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x40af8ef8" loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x40af8ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40af70e0"/>
        <function-ref name="runTask" scoped="" ref="0x40af71c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40acbd38" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40acbd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40acbf10"/>
        <function-ref name="ready" scoped="" ref="0x40aca010"/>
        <function-ref name="sendDone" scoped="" ref="0x40aca0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40acb720" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40acb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40acb8f8"/>
        <function-ref name="suspend" scoped="" ref="0x40acb9d8"/>
        <function-ref name="resume" scoped="" ref="0x40acbab8"/>
        <function-ref name="run" scoped="" ref="0x40acbb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40aeba30" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40aeba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aebc08"/>
        <function-ref name="getPayload" scoped="" ref="0x40aebce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40aebdc8"/>
        <function-ref name="cancel" scoped="" ref="0x40aebea8"/>
        <function-ref name="sendDone" scoped="" ref="0x40aea010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40aea258" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40aea258"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40aea430"/>
        <function-ref name="header" scoped="" ref="0x40aea510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ad2e18" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ad2e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aeb010"/>
        <function-ref name="getPayload" scoped="" ref="0x40aeb0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40aeb1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40aeb2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40aeb390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40aea730" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40aea730"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40aea908"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40aea9e8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40aeaac8"/>
        <function-ref name="getSender" scoped="" ref="0x40aeaba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40aeb550" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40aeb550"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40aeb728"/>
        <function-ref name="header" scoped="" ref="0x40aeb808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b0c238" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b0c238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b0c410"/>
        <function-ref name="getPayload" scoped="" ref="0x40b0c4f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b0c5d0"/>
        <function-ref name="cancel" scoped="" ref="0x40b0c6b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b0c790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b0c9d8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b0c9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b0cbb0"/>
        <function-ref name="header" scoped="" ref="0x40b0cc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x40b04b88" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b04b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b04d60"/>
        <function-ref name="clearAll" scoped="" ref="0x40b04e40"/>
        <function-ref name="get" scoped="" ref="0x40b04f20"/>
        <function-ref name="set" scoped="" ref="0x40b09018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ae9258" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ae9258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ae9430"/>
        <function-ref name="getPayload" scoped="" ref="0x40ae9510"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ae95f0"/>
        <function-ref name="cancel" scoped="" ref="0x40ae96d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ae97b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x40b06a40" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40b06a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40b06c18"/>
        <function-ref name="insertNode" scoped="" ref="0x40b06cf8"/>
        <function-ref name="getNode" scoped="" ref="0x40b06dd8"/>
        <function-ref name="evicted" scoped="" ref="0x40b06eb8"/>
        <function-ref name="getIndex" scoped="" ref="0x40b0a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40ae9970" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ae9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ae9b48"/>
        <function-ref name="header" scoped="" ref="0x40ae9c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ae9d98" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ae9d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b0c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x40b0ce50" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40b0ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40b0b050"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40b0b130"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40b0b210"/>
        <function-ref name="getSender" scoped="" ref="0x40b0b2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40b1c010" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40b1c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40b1c1e8"/>
        <function-ref name="insertNode" scoped="" ref="0x40b1c2c8"/>
        <function-ref name="getNode" scoped="" ref="0x40b1c3a8"/>
        <function-ref name="evicted" scoped="" ref="0x40b1c488"/>
        <function-ref name="getIndex" scoped="" ref="0x40b1c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40b19a38" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b19a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b19c10"/>
        <function-ref name="clearAll" scoped="" ref="0x40b19cf0"/>
        <function-ref name="get" scoped="" ref="0x40b19dd0"/>
        <function-ref name="set" scoped="" ref="0x40b19eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40b19010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40b19010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40b191e8"/>
        <function-ref name="insertNode" scoped="" ref="0x40b192c8"/>
        <function-ref name="getNode" scoped="" ref="0x40b193a8"/>
        <function-ref name="evicted" scoped="" ref="0x40b19488"/>
        <function-ref name="getIndex" scoped="" ref="0x40b19568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b1cbe0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b1cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b1cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40b0db50" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b0db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b0dd28"/>
        <function-ref name="clearAll" scoped="" ref="0x40b0de08"/>
        <function-ref name="get" scoped="" ref="0x40b0dee8"/>
        <function-ref name="set" scoped="" ref="0x40b28010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b245e8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b245e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b247c0"/>
        <function-ref name="ready" scoped="" ref="0x40b248a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b24980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b24bc8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b24bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b24da0"/>
        <function-ref name="header" scoped="" ref="0x40b24e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40aecd68" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40aecd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b24010"/>
        <function-ref name="turnOn" scoped="" ref="0x40b240f0"/>
        <function-ref name="setChannel" scoped="" ref="0x40b241d0"/>
        <function-ref name="done" scoped="" ref="0x40b242b0"/>
        <function-ref name="standby" scoped="" ref="0x40b24390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40b230b8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40b230b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b23290"/>
        <function-ref name="turnOn" scoped="" ref="0x40b23370"/>
        <function-ref name="setChannel" scoped="" ref="0x40b23450"/>
        <function-ref name="done" scoped="" ref="0x40b23530"/>
        <function-ref name="standby" scoped="" ref="0x40b23610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b23880" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b23880"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x40b221d0"/>
        <function-ref name="channelError" scoped="" ref="0x40b23b38"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x40b23c18"/>
        <function-ref name="getChannelTime" scoped="" ref="0x40b23cf8"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x40b23dd8"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x40b23eb8"/>
        <function-ref name="timerTick" scoped="" ref="0x40b22010"/>
        <function-ref name="getSender" scoped="" ref="0x40b220f0"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x40b23a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40aec908" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40aec908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40aecae0"/>
        <function-ref name="header" scoped="" ref="0x40aecbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40aec3b0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40aec3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aec588"/>
        <function-ref name="ready" scoped="" ref="0x40aec668"/>
        <function-ref name="sendDone" scoped="" ref="0x40aec748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b455a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b455a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b45778"/>
        <function-ref name="ready" scoped="" ref="0x40b45858"/>
        <function-ref name="sendDone" scoped="" ref="0x40b45938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficMonitorConfig" ref="0x40b46ab0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40b46ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x40b45398"/>
        <function-ref name="channelError" scoped="" ref="0x40b46d68"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x40b46e48"/>
        <function-ref name="getChannelTime" scoped="" ref="0x40b46f28"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x40b45018"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x40b450f8"/>
        <function-ref name="timerTick" scoped="" ref="0x40b451d8"/>
        <function-ref name="getSender" scoped="" ref="0x40b452b8"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x40b46c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b45b80" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b45b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b45d58"/>
        <function-ref name="header" scoped="" ref="0x40b45e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40b462f8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40b462f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b464d0"/>
        <function-ref name="turnOn" scoped="" ref="0x40b465b0"/>
        <function-ref name="setChannel" scoped="" ref="0x40b46690"/>
        <function-ref name="done" scoped="" ref="0x40b46770"/>
        <function-ref name="standby" scoped="" ref="0x40b46850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40b44088" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40b44088"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b44260"/>
        <function-ref name="turnOn" scoped="" ref="0x40b44340"/>
        <function-ref name="setChannel" scoped="" ref="0x40b44420"/>
        <function-ref name="done" scoped="" ref="0x40b44500"/>
        <function-ref name="standby" scoped="" ref="0x40b445e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x40b42ac8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40b42ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40b42ca0"/>
        <function-ref name="insertNode" scoped="" ref="0x40b42d80"/>
        <function-ref name="getNode" scoped="" ref="0x40b42e60"/>
        <function-ref name="evicted" scoped="" ref="0x40b40010"/>
        <function-ref name="getIndex" scoped="" ref="0x40b400f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b22e88" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b22e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b46070"/>
        <function-ref name="header" scoped="" ref="0x40b46150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x40b402d8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b402d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b404b0"/>
        <function-ref name="clearAll" scoped="" ref="0x40b40590"/>
        <function-ref name="get" scoped="" ref="0x40b40670"/>
        <function-ref name="set" scoped="" ref="0x40b40750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40b408d8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40b408d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40b40ab0"/>
        <function-ref name="suspend" scoped="" ref="0x40b40b90"/>
        <function-ref name="resume" scoped="" ref="0x40b40c70"/>
        <function-ref name="run" scoped="" ref="0x40b40d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b22930" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b22930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b22b08"/>
        <function-ref name="ready" scoped="" ref="0x40b22be8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b22cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopTimer" ref="0x40b4ebc8" loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopTimer" scoped="" ref="0x40b4ebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b4eda0"/>
        <function-ref name="runTask" scoped="" ref="0x40b4ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b44880" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b44880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b42388"/>
        <function-ref name="fired" scoped="" ref="0x40b43628"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b43d30"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b43ad8"/>
        <function-ref name="getdt" scoped="" ref="0x40b42838"/>
        <function-ref name="gett0" scoped="" ref="0x40b425e0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b43880"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b44ea8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b42068"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b43150"/>
        <function-ref name="stop" scoped="" ref="0x40b433d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b4b010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TrafficMonitorLayerC.UpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b4b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b4ab00"/>
        <function-ref name="fired" scoped="" ref="0x40b4bd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b4a4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b4a268"/>
        <function-ref name="getdt" scoped="" ref="0x40b48010"/>
        <function-ref name="gett0" scoped="" ref="0x40b4ad58"/>
        <function-ref name="isRunning" scoped="" ref="0x40b4a010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b4b638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b4a7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b4b8b8"/>
        <function-ref name="stop" scoped="" ref="0x40b4bb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40b48ed8" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="TrafficMonitorLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b48ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b6f0c0"/>
        <function-ref name="clearAll" scoped="" ref="0x40b6f1a0"/>
        <function-ref name="get" scoped="" ref="0x40b6f280"/>
        <function-ref name="set" scoped="" ref="0x40b6f360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b69178" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b69178"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b69350"/>
        <function-ref name="ready" scoped="" ref="0x40b69430"/>
        <function-ref name="sendDone" scoped="" ref="0x40b69510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b69758" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b69758"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b69930"/>
        <function-ref name="header" scoped="" ref="0x40b69a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b69c88" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b69c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40b69e60"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40b68010"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40b680f0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40b681d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b6cc40" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b6cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b6ce18"/>
        <function-ref name="header" scoped="" ref="0x40b6cef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b6c6e8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b6c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b6c8c0"/>
        <function-ref name="ready" scoped="" ref="0x40b6c9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b6ca80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b653f8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b653f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b655d0"/>
        <function-ref name="ready" scoped="" ref="0x40b656b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b65790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b659d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b659d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b65bb0"/>
        <function-ref name="header" scoped="" ref="0x40b65c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40b65e38" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40b65e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b64050"/>
        <function-ref name="wait" scoped="" ref="0x40b64130"/>
        <function-ref name="cancel" scoped="" ref="0x40b64210"/>
        <function-ref name="isFree" scoped="" ref="0x40b642f0"/>
        <function-ref name="getNow" scoped="" ref="0x40b643d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40b64550" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40b64550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40b64728"/>
        <function-ref name="rand32" scoped="" ref="0x40b64808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b64a80" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b64a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40b64c58"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40b64d38"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40b64e18"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40b64ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b68e98" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b68e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b650c0"/>
        <function-ref name="header" scoped="" ref="0x40b651a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b68940" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b68940"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b68b18"/>
        <function-ref name="ready" scoped="" ref="0x40b68bf8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b68cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x40b60a38" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x40b60a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b60c10"/>
        <function-ref name="runTask" scoped="" ref="0x40b60cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40b762a8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40b762a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40b76480"/>
        <function-ref name="rand32" scoped="" ref="0x40b76560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40b74958" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40b74958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b76010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b66738" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b66738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b66910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40b71cf8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40b71cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40b71ed0"/>
        <function-ref name="rand32" scoped="" ref="0x40b70010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40b71438" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40b71438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b71a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b76f08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b76f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b710f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b6af10" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b6af10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b90108"/>
        <function-ref name="ready" scoped="" ref="0x40b901e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b902c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b90510" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b90510"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b906e8"/>
        <function-ref name="header" scoped="" ref="0x40b907c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b90a18" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b90a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40b90bf0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40b90cd0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40b90db0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40b90e90"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40b8f010"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40b8f0f0"/>
        <function-ref name="setAckReceived" scoped="" ref="0x40b8f1d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40b8f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b6aa00" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b6aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b6abd8"/>
        <function-ref name="header" scoped="" ref="0x40b6acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b6a4a8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b6a4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b6a680"/>
        <function-ref name="ready" scoped="" ref="0x40b6a760"/>
        <function-ref name="sendDone" scoped="" ref="0x40b6a840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b8b448" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b8b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b8b620"/>
        <function-ref name="ready" scoped="" ref="0x40b8b700"/>
        <function-ref name="sendDone" scoped="" ref="0x40b8b7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b8ba28" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b8ba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b8bc00"/>
        <function-ref name="header" scoped="" ref="0x40b8bce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40b8be88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40b8be88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b8a070"/>
        <function-ref name="wait" scoped="" ref="0x40b8a150"/>
        <function-ref name="cancel" scoped="" ref="0x40b8a230"/>
        <function-ref name="isFree" scoped="" ref="0x40b8a310"/>
        <function-ref name="getNow" scoped="" ref="0x40b8a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b8ff20" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b8ff20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b8b110"/>
        <function-ref name="header" scoped="" ref="0x40b8b1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0x40b8a5e0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40b8a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40b8a7b8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40b8a898"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40b8a978"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40b8aa58"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40b8ab38"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40b8ac18"/>
        <function-ref name="setAckReceived" scoped="" ref="0x40b8acf8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40b8add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b8f9c8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b8f9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b8fba0"/>
        <function-ref name="ready" scoped="" ref="0x40b8fc80"/>
        <function-ref name="sendDone" scoped="" ref="0x40b8fd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b735b0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b735b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b73788"/>
        <function-ref name="stopDone" scoped="" ref="0x40b73868"/>
        <function-ref name="start" scoped="" ref="0x40b73948"/>
        <function-ref name="stop" scoped="" ref="0x40b73a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40ba0010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40ba0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40ba01e8"/>
        <function-ref name="request" scoped="" ref="0x40ba02c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x40ba0e48" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x40ba0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b9f050"/>
        <function-ref name="ready" scoped="" ref="0x40b9f130"/>
        <function-ref name="sendDone" scoped="" ref="0x40b9f210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b9d250" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b9d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b9d428"/>
        <function-ref name="getPayload" scoped="" ref="0x40b9d508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b9d5e8"/>
        <function-ref name="cancel" scoped="" ref="0x40b9d6c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b9d7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b9d908" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b9d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b9dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40ba1070" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40ba1070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40ba1248"/>
        <function-ref name="turnOn" scoped="" ref="0x40ba1328"/>
        <function-ref name="setChannel" scoped="" ref="0x40ba1408"/>
        <function-ref name="done" scoped="" ref="0x40ba14e8"/>
        <function-ref name="standby" scoped="" ref="0x40ba15c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b73b68" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b73b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b73d40"/>
        <function-ref name="getPayload" scoped="" ref="0x40b73e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b73f00"/>
        <function-ref name="cancel" scoped="" ref="0x40ba2010"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40ba2548" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40ba2548"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40ba2720"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40ba2800"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40ba28e0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40ba29c0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40ba2aa0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40ba2b80"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40ba2c60"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40ba2d40"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40ba2e20"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40ba2f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40ba0428" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40ba0428"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40ba0600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40ba1be0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ba1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ba1db8"/>
        <function-ref name="header" scoped="" ref="0x40ba1e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40ba0790" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40ba0790"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40ba0968"/>
        <function-ref name="turnOn" scoped="" ref="0x40ba0a48"/>
        <function-ref name="setChannel" scoped="" ref="0x40ba0b28"/>
        <function-ref name="done" scoped="" ref="0x40ba0c08"/>
        <function-ref name="standby" scoped="" ref="0x40ba0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40b9fc20" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40b9fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b9fdf8"/>
        <function-ref name="stopDone" scoped="" ref="0x40b9fed8"/>
        <function-ref name="start" scoped="" ref="0x40b9d010"/>
        <function-ref name="stop" scoped="" ref="0x40b9d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b9dc40" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b9dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40b9de18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ba2230" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ba2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ba2408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x40b9f370" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x40b9f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b9f548"/>
        <function-ref name="header" scoped="" ref="0x40b9f628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40ba1708" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ba1708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ba18e0"/>
        <function-ref name="ready" scoped="" ref="0x40ba19c0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba1aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40b9f788" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40b9f788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40b9f9e0"/>
        <function-ref name="request" scoped="" ref="0x40b9fac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40b989b8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40b989b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40b98b90"/>
        <function-ref name="request" scoped="" ref="0x40b98c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40b9b890" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40b9b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b9ba68"/>
        <function-ref name="turnOn" scoped="" ref="0x40b9bb48"/>
        <function-ref name="setChannel" scoped="" ref="0x40b9bc28"/>
        <function-ref name="done" scoped="" ref="0x40b9bd08"/>
        <function-ref name="standby" scoped="" ref="0x40b9bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b98568" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b98568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b98740"/>
        <function-ref name="header" scoped="" ref="0x40b98820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b98010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b98010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b981e8"/>
        <function-ref name="ready" scoped="" ref="0x40b982c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b983a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0x40b98e50" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x40b98e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x40bc0050"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x40bc0590"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc0210"/>
        <function-ref name="setLength" scoped="" ref="0x40bc02f0"/>
        <function-ref name="getLength" scoped="" ref="0x40bc03d0"/>
        <function-ref name="getMaxLength" scoped="" ref="0x40bc04b0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40bc0130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40bbcb58" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40bbcb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40bbcd30"/>
        <function-ref name="request" scoped="" ref="0x40bbce10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40bb8010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40bb8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40bb8760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x40bac390" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40bac390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd5010"/>
        <function-ref name="get" scoped="" ref="0x40bacc98"/>
        <function-ref name="isSet" scoped="" ref="0x40bac9d8"/>
        <function-ref name="set" scoped="" ref="0x40bd52d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40bbd670" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40bbd670"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bbd848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40bd4be0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40bd4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x40889ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40bd2730"/>
        <function-ref name="clear" scoped="" ref="0x40bd2ae0"/>
        <function-ref name="isValid" scoped="" ref="0x40bd2380"/>
        <function-ref name="set" scoped="" ref="0x40bd2e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplRF230" ref="0x40bb4278" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x40bb4278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x40bb4450"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x40bb4530"/>
        <function-ref name="spiWrite" scoped="" ref="0x40bb4610"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x40bb46f0"/>
        <function-ref name="crcByte" scoped="" ref="0x40bb47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40bbd9f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40bbd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40bbdbc8"/>
        <function-ref name="turnOn" scoped="" ref="0x40bbdca8"/>
        <function-ref name="setChannel" scoped="" ref="0x40bbdd88"/>
        <function-ref name="done" scoped="" ref="0x40bbde68"/>
        <function-ref name="standby" scoped="" ref="0x40bbc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40bb93c8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40bb93c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bb95a0"/>
        <function-ref name="isInput" scoped="" ref="0x40bb9680"/>
        <function-ref name="toggle" scoped="" ref="0x40bb9760"/>
        <function-ref name="isOutput" scoped="" ref="0x40bb9840"/>
        <function-ref name="get" scoped="" ref="0x40bb9920"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bb9a00"/>
        <function-ref name="set" scoped="" ref="0x40bb9ae0"/>
        <function-ref name="clr" scoped="" ref="0x40bb9bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTransmitPower" ref="0x40bae010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40bae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40baebd8"/>
        <function-ref name="get" scoped="" ref="0x40bae918"/>
        <function-ref name="isSet" scoped="" ref="0x40bae658"/>
        <function-ref name="set" scoped="" ref="0x40baee98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40bd13d0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bd13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x40889ae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bd1a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x40bbaa90" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40bbaa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40bbac68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40bb49d0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40bb49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bb4ba8"/>
        <function-ref name="isInput" scoped="" ref="0x40bb4c88"/>
        <function-ref name="toggle" scoped="" ref="0x40bb4d68"/>
        <function-ref name="isOutput" scoped="" ref="0x40bb4e48"/>
        <function-ref name="get" scoped="" ref="0x40bb4f28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bb9018"/>
        <function-ref name="set" scoped="" ref="0x40bb90f8"/>
        <function-ref name="clr" scoped="" ref="0x40bb91d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40bbc708" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40bbc708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bbc8e0"/>
        <function-ref name="header" scoped="" ref="0x40bbc9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40bd0c18" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40bd0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40bd0df0"/>
        <function-ref name="wait" scoped="" ref="0x40bd0ed0"/>
        <function-ref name="cancel" scoped="" ref="0x40bcf010"/>
        <function-ref name="isFree" scoped="" ref="0x40bcf0f0"/>
        <function-ref name="getNow" scoped="" ref="0x40bcf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40bd5800" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40bd5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd43d8"/>
        <function-ref name="get" scoped="" ref="0x40bd4118"/>
        <function-ref name="isSet" scoped="" ref="0x40bd5e48"/>
        <function-ref name="set" scoped="" ref="0x40bd4698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40bbd010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40bbd010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bbd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40bbbab0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40bbbab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bbbc88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bbbd68"/>
        <function-ref name="request" scoped="" ref="0x40bbbe48"/>
        <function-ref name="granted" scoped="" ref="0x40bbbf28"/>
        <function-ref name="isOwner" scoped="" ref="0x40bba018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x40bbb090" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40bbb090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bbb268"/>
        <function-ref name="isInput" scoped="" ref="0x40bbb348"/>
        <function-ref name="toggle" scoped="" ref="0x40bbb428"/>
        <function-ref name="isOutput" scoped="" ref="0x40bbb508"/>
        <function-ref name="get" scoped="" ref="0x40bbb5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bbb6c8"/>
        <function-ref name="set" scoped="" ref="0x40bbb7a8"/>
        <function-ref name="clr" scoped="" ref="0x40bbb888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40bbc1b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40bbc1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bbc388"/>
        <function-ref name="ready" scoped="" ref="0x40bbc468"/>
        <function-ref name="sendDone" scoped="" ref="0x40bbc548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40bb14d0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40bb14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40bb1728"/>
        <function-ref name="disable" scoped="" ref="0x40bb1808"/>
        <function-ref name="captured" scoped="" ref="0x40bb18e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40bb19c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLinkQuality" ref="0x40bb8bb0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40bb8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40baf790"/>
        <function-ref name="get" scoped="" ref="0x40baf4d0"/>
        <function-ref name="isSet" scoped="" ref="0x40baf210"/>
        <function-ref name="set" scoped="" ref="0x40bafa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40bd05f8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40bd05f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40bd07d0"/>
        <function-ref name="suspend" scoped="" ref="0x40bd08b0"/>
        <function-ref name="resume" scoped="" ref="0x40bd0990"/>
        <function-ref name="run" scoped="" ref="0x40bd0a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0x40bd1c98" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x40bd1c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x40bd1e70"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x40bd0470"/>
        <function-ref name="getPayload" scoped="" ref="0x40bd00f0"/>
        <function-ref name="setLength" scoped="" ref="0x40bd01d0"/>
        <function-ref name="getLength" scoped="" ref="0x40bd02b0"/>
        <function-ref name="getMaxLength" scoped="" ref="0x40bd0390"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40bd0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40c20dd0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40c20dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1f010"/>
        <function-ref name="isInput" scoped="" ref="0x40c1f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c1f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c1f2b0"/>
        <function-ref name="get" scoped="" ref="0x40c1f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c1f470"/>
        <function-ref name="set" scoped="" ref="0x40c1f550"/>
        <function-ref name="clr" scoped="" ref="0x40c1f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0x40c1c9c0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x40c1c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x40c1cb98"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x40c1cc78"/>
        <function-ref name="spiWrite" scoped="" ref="0x40c1cd58"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x40c1ce38"/>
        <function-ref name="crcByte" scoped="" ref="0x40c1cf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40c20010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40c20010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40c201e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40c203e8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40c203e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c205c0"/>
        <function-ref name="isInput" scoped="" ref="0x40c206a0"/>
        <function-ref name="toggle" scoped="" ref="0x40c20780"/>
        <function-ref name="isOutput" scoped="" ref="0x40c20860"/>
        <function-ref name="get" scoped="" ref="0x40c20940"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c20a20"/>
        <function-ref name="set" scoped="" ref="0x40c20b00"/>
        <function-ref name="clr" scoped="" ref="0x40c20be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40c1e030" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40c1e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x40889ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c1c4e0"/>
        <function-ref name="fired" scoped="" ref="0x40c1ec98"/>
        <function-ref name="startAt" scoped="" ref="0x40c1c1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40c1ef10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40c1c758"/>
        <function-ref name="start" scoped="" ref="0x40c1e780"/>
        <function-ref name="stop" scoped="" ref="0x40c1ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40c218c8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40c218c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c21aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c21b80"/>
        <function-ref name="request" scoped="" ref="0x40c21c60"/>
        <function-ref name="granted" scoped="" ref="0x40c21d40"/>
        <function-ref name="isOwner" scoped="" ref="0x40c21e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40bbee90" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40bbee90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c21080"/>
        <function-ref name="isInput" scoped="" ref="0x40c21160"/>
        <function-ref name="toggle" scoped="" ref="0x40c21240"/>
        <function-ref name="isOutput" scoped="" ref="0x40c21320"/>
        <function-ref name="get" scoped="" ref="0x40c21400"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c214e0"/>
        <function-ref name="set" scoped="" ref="0x40c215c0"/>
        <function-ref name="clr" scoped="" ref="0x40c216a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40c1f820" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40c1f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40c1f9f8"/>
        <function-ref name="disable" scoped="" ref="0x40c1fad8"/>
        <function-ref name="captured" scoped="" ref="0x40c1fbb8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40c1fc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40c2c010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40c2c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c2c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c2c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c2c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c2c488"/>
        <function-ref name="get" scoped="" ref="0x40c2c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c2c648"/>
        <function-ref name="set" scoped="" ref="0x40c2c728"/>
        <function-ref name="clr" scoped="" ref="0x40c2c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0x40c30830" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x40c30830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x40c30a08"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x40c30ae8"/>
        <function-ref name="spiWrite" scoped="" ref="0x40c30bc8"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x40c30ca8"/>
        <function-ref name="crcByte" scoped="" ref="0x40c30d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40c2f138" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40c2f138"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40c2dc68"/>
        <function-ref name="test" scoped="" ref="0x40c2d778"/>
        <function-ref name="get" scoped="" ref="0x40c2f780"/>
        <function-ref name="captured" scoped="" ref="0x40c2fc98"/>
        <function-ref name="reset" scoped="" ref="0x40c2d010"/>
        <function-ref name="isOn" scoped="" ref="0x40c2d9f0"/>
        <function-ref name="set" scoped="" ref="0x40c2f9f8"/>
        <function-ref name="start" scoped="" ref="0x40c2d288"/>
        <function-ref name="stop" scoped="" ref="0x40c2d500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40c2ca10" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40c2ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c2cbe8"/>
        <function-ref name="isInput" scoped="" ref="0x40c2ccc8"/>
        <function-ref name="toggle" scoped="" ref="0x40c2cda8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c2ce88"/>
        <function-ref name="get" scoped="" ref="0x40c2b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c2b0f0"/>
        <function-ref name="set" scoped="" ref="0x40c2b1d0"/>
        <function-ref name="clr" scoped="" ref="0x40c2b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40c304c0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40c304c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c30698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40c31d70" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40c31d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40c30010"/>
        <function-ref name="disable" scoped="" ref="0x40c300f0"/>
        <function-ref name="captured" scoped="" ref="0x40c301d0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40c302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40c431d0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40c431d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c433a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c43488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40c1ad78" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40c1ad78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40c49010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c1a9f8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c1a9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c1abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c43920" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c43920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c43af8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c43bd8"/>
        <function-ref name="request" scoped="" ref="0x40c43cb8"/>
        <function-ref name="granted" scoped="" ref="0x40c43d98"/>
        <function-ref name="isOwner" scoped="" ref="0x40c43e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40c7d1e0" loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40c7d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c7d3b8"/>
        <function-ref name="runTask" scoped="" ref="0x40c7d498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40c6d1b0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40c6d1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c6d388"/>
        <function-ref name="sendDone" scoped="" ref="0x40c6d468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40c6a8c0" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40c6a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c6aa98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c6ab78"/>
        <function-ref name="request" scoped="" ref="0x40c6ac58"/>
        <function-ref name="granted" scoped="" ref="0x40c6ad38"/>
        <function-ref name="isOwner" scoped="" ref="0x40c6ae18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40c47da0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40c47da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40c6d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c47a40" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c47a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c47c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40c61bc8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40c61bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40c61da0"/>
        <function-ref name="sleep" scoped="" ref="0x40c6a2b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40c6b010"/>
        <function-ref name="dataReady" scoped="" ref="0x40c6a390"/>
        <function-ref name="initMaster" scoped="" ref="0x40c6b1d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40c6b2b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40c6b390"/>
        <function-ref name="read" scoped="" ref="0x40c6b470"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40c6b550"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40c6b630"/>
        <function-ref name="setClock" scoped="" ref="0x40c6b710"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40c6b7f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40c6b8d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40c6ba30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40c6bb10"/>
        <function-ref name="write" scoped="" ref="0x40c6bbf0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40c6bcd0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40c6bdb0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40c6be90"/>
        <function-ref name="getClock" scoped="" ref="0x40c6a010"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40c6a0f0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40c61e80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40c6b0f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40c6a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c6d8e0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c6d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c6dab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c6db98"/>
        <function-ref name="request" scoped="" ref="0x40c6dc78"/>
        <function-ref name="granted" scoped="" ref="0x40c6dd58"/>
        <function-ref name="isOwner" scoped="" ref="0x40c6de38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40c60490" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40c60490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40c60668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40c60010" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40c60010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40c601e8"/>
        <function-ref name="userId" scoped="" ref="0x40c602c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40c6eb40" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40c6eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40c6ed18"/>
        <function-ref name="sleep" scoped="" ref="0x40c8f1d0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40c6eed8"/>
        <function-ref name="dataReady" scoped="" ref="0x40c8f2b0"/>
        <function-ref name="initMaster" scoped="" ref="0x40c900f0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40c901d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40c902b0"/>
        <function-ref name="read" scoped="" ref="0x40c90390"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40c90470"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40c90550"/>
        <function-ref name="setClock" scoped="" ref="0x40c90630"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40c90710"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40c907f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40c90950"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40c90a30"/>
        <function-ref name="write" scoped="" ref="0x40c90b10"/>
        <function-ref name="enableSpi" scoped="" ref="0x40c90bf0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40c90cd0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40c90db0"/>
        <function-ref name="getClock" scoped="" ref="0x40c90e90"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40c8f010"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40c6edf8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40c90010"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40c8f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40c88b10" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40c88b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c88ce8"/>
        <function-ref name="isInput" scoped="" ref="0x40c88dc8"/>
        <function-ref name="toggle" scoped="" ref="0x40c88ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c87010"/>
        <function-ref name="get" scoped="" ref="0x40c870f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c871d0"/>
        <function-ref name="set" scoped="" ref="0x40c872b0"/>
        <function-ref name="clr" scoped="" ref="0x40c87390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40c89730" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40c89730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c89908"/>
        <function-ref name="isInput" scoped="" ref="0x40c899e8"/>
        <function-ref name="toggle" scoped="" ref="0x40c89ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c89ba8"/>
        <function-ref name="get" scoped="" ref="0x40c89c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c89d68"/>
        <function-ref name="set" scoped="" ref="0x40c89e48"/>
        <function-ref name="clr" scoped="" ref="0x40c89f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40c8ace8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40c8ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c8aec0"/>
        <function-ref name="isInput" scoped="" ref="0x40c89010"/>
        <function-ref name="toggle" scoped="" ref="0x40c890f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c891d0"/>
        <function-ref name="get" scoped="" ref="0x40c892b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c89390"/>
        <function-ref name="set" scoped="" ref="0x40c89470"/>
        <function-ref name="clr" scoped="" ref="0x40c89550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40c8a828" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40c8a828"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c8aa00"/>
        <function-ref name="stop" scoped="" ref="0x40c8aae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40c87598" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40c87598"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40c87770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40c8ff18" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40c8ff18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40c8b108"/>
        <function-ref name="sleep" scoped="" ref="0x40c8a550"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40c8b2c8"/>
        <function-ref name="dataReady" scoped="" ref="0x40c8a630"/>
        <function-ref name="initMaster" scoped="" ref="0x40c8b488"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40c8b568"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40c8b648"/>
        <function-ref name="read" scoped="" ref="0x40c8b728"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40c8b808"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40c8b8e8"/>
        <function-ref name="setClock" scoped="" ref="0x40c8b9c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40c8baa8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40c8bb88"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40c8bce8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40c8bdc8"/>
        <function-ref name="write" scoped="" ref="0x40c8bea8"/>
        <function-ref name="enableSpi" scoped="" ref="0x40c8a010"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40c8a0f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40c8a1d0"/>
        <function-ref name="getClock" scoped="" ref="0x40c8a2b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40c8a390"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40c8b1e8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40c8b3a8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40c8a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40c88128" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40c88128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c88300"/>
        <function-ref name="isInput" scoped="" ref="0x40c883e0"/>
        <function-ref name="toggle" scoped="" ref="0x40c884c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c885a0"/>
        <function-ref name="get" scoped="" ref="0x40c88680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c88760"/>
        <function-ref name="set" scoped="" ref="0x40c88840"/>
        <function-ref name="clr" scoped="" ref="0x40c88920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ce5750" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ce5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ce5938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ce5a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ce4030" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ce4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ce4218"/>
        <function-ref name="configure" scoped="" ref="0x40ce42f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ce5010" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ce5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ce51f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ce52d8"/>
        <function-ref name="request" scoped="" ref="0x40ce53b8"/>
        <function-ref name="granted" scoped="" ref="0x40ce5498"/>
        <function-ref name="isOwner" scoped="" ref="0x40ce5578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ce5b58" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ce5b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ce5d30"/>
        <function-ref name="userId" scoped="" ref="0x40ce5e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412ba2e8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412ba2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412ba4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x412ba620" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x412ba620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x412ba7f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x412ba8d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x412ba9b8"/>
        <function-ref name="dequeue" scoped="" ref="0x412baa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x412b9d70" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x412b9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x412b7010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412b70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x412b76f0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x412b76f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x412b78d8"/>
        <function-ref name="configure" scoped="" ref="0x412b79b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x412b7b18" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x412b7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x412b7cf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x412b7dd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x412b7eb0"/>
        <function-ref name="dequeue" scoped="" ref="0x412b6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412b9630" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412b9630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412b9818"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412b98f8"/>
        <function-ref name="request" scoped="" ref="0x412b99d8"/>
        <function-ref name="granted" scoped="" ref="0x412b9ab8"/>
        <function-ref name="isOwner" scoped="" ref="0x412b9b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x412b7230" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412b7230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412b7408"/>
        <function-ref name="userId" scoped="" ref="0x412b74e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x412b6190" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x412b6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412b6368"/>
        <function-ref name="runTask" scoped="" ref="0x412b6448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40cdf820" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40cdf820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d19d58"/>
        <function-ref name="fired" scoped="" ref="0x40d19528"/>
        <function-ref name="startAt" scoped="" ref="0x40d19a18"/>
        <function-ref name="isRunning" scoped="" ref="0x40d197a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d18010"/>
        <function-ref name="start" scoped="" ref="0x40d19010"/>
        <function-ref name="stop" scoped="" ref="0x40d192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x412e8138" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x412e8138"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402f53d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402f53d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x412e7600"/>
        <function-ref name="fired" scoped="" ref="0x412e8da0"/>
        <function-ref name="startAt" scoped="" ref="0x412e72c0"/>
        <function-ref name="isRunning" scoped="" ref="0x412e7048"/>
        <function-ref name="getAlarm" scoped="" ref="0x412e7878"/>
        <function-ref name="start" scoped="" ref="0x412e8888"/>
        <function-ref name="stop" scoped="" ref="0x412e8b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x412e5dd8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x412e5dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x412e2388"/>
        <function-ref name="fired" scoped="" ref="0x412e3980"/>
        <function-ref name="get" scoped="" ref="0x412e3468"/>
        <function-ref name="reset" scoped="" ref="0x412e3bf8"/>
        <function-ref name="isOn" scoped="" ref="0x412e2600"/>
        <function-ref name="set" scoped="" ref="0x412e36e0"/>
        <function-ref name="start" scoped="" ref="0x412e3e70"/>
        <function-ref name="stop" scoped="" ref="0x412e2110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x412e7b38" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x412e7b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x412e5600"/>
        <function-ref name="test" scoped="" ref="0x412e5110"/>
        <function-ref name="get" scoped="" ref="0x412e6200"/>
        <function-ref name="setScale" scoped="" ref="0x412e5878"/>
        <function-ref name="getScale" scoped="" ref="0x412e5b18"/>
        <function-ref name="reset" scoped="" ref="0x412e6990"/>
        <function-ref name="overflow" scoped="" ref="0x412e6718"/>
        <function-ref name="isOn" scoped="" ref="0x412e5388"/>
        <function-ref name="set" scoped="" ref="0x412e6478"/>
        <function-ref name="start" scoped="" ref="0x412e6c08"/>
        <function-ref name="stop" scoped="" ref="0x412e6e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40d16cb0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40d16cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40d13410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d54a70" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="MultiHopLqiP.BeaconReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d54a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d54c48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d54d28"/>
        <function-ref name="getPayload" scoped="" ref="0x40d54e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d54ee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d50010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d54758" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="MultiHopLqiP.BeaconReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d54758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d54930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d50150" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="MultiHopLqiP.BeaconReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d50150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d50328"/>
        <function-ref name="source" scoped="" ref="0x40d50408"/>
        <function-ref name="address" scoped="" ref="0x40d504e8"/>
        <function-ref name="destination" scoped="" ref="0x40d505c8"/>
        <function-ref name="setSource" scoped="" ref="0x40d506a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40d50788"/>
        <function-ref name="type" scoped="" ref="0x40d50868"/>
        <function-ref name="setType" scoped="" ref="0x40d50948"/>
        <function-ref name="isForMe" scoped="" ref="0x40d50a28"/>
        <function-ref name="setGroup" scoped="" ref="0x40d50b08"/>
        <function-ref name="localGroup" scoped="" ref="0x40d50be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d4fc98" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="MultiHopLqiP.DataSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d4fc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d4fe70"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4e010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4e0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40d4e1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d4e3f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="MultiHopLqiP.DataSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d4e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4e5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d4e6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4e788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4e868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d4e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d4ea88" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="MultiHopLqiP.DataSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d4ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d4ec60"/>
        <function-ref name="source" scoped="" ref="0x40d4ed40"/>
        <function-ref name="address" scoped="" ref="0x40d4ee20"/>
        <function-ref name="destination" scoped="" ref="0x40d4ef00"/>
        <function-ref name="setSource" scoped="" ref="0x40d4d010"/>
        <function-ref name="setDestination" scoped="" ref="0x40d4d0f0"/>
        <function-ref name="type" scoped="" ref="0x40d4d1d0"/>
        <function-ref name="setType" scoped="" ref="0x40d4d2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40d4d390"/>
        <function-ref name="setGroup" scoped="" ref="0x40d4d470"/>
        <function-ref name="localGroup" scoped="" ref="0x40d4d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d4d6b0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="MultiHopLqiP.DataSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d4d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d4d888"/>
        <function-ref name="noAck" scoped="" ref="0x40d4d968"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d4da48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x412d4908" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultiHopLqiP.DataSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x412d4908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412d4ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x412d4bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412d4ca0"/>
        <function-ref name="cancel" scoped="" ref="0x412d4d80"/>
        <function-ref name="sendDone" scoped="" ref="0x412d4e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41317010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultiHopLqiP.DataSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41317010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413171e8"/>
        <function-ref name="getPayload" scoped="" ref="0x413172c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413173a8"/>
        <function-ref name="cancel" scoped="" ref="0x41317488"/>
        <function-ref name="sendDone" scoped="" ref="0x41317568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x413176a8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultiHopLqiP.DataSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413176a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41317880"/>
        <function-ref name="source" scoped="" ref="0x41317960"/>
        <function-ref name="address" scoped="" ref="0x41317a40"/>
        <function-ref name="destination" scoped="" ref="0x41317b20"/>
        <function-ref name="setSource" scoped="" ref="0x41317c00"/>
        <function-ref name="setDestination" scoped="" ref="0x41317ce0"/>
        <function-ref name="type" scoped="" ref="0x41317dc0"/>
        <function-ref name="setType" scoped="" ref="0x41317ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x41316010"/>
        <function-ref name="setGroup" scoped="" ref="0x413160f0"/>
        <function-ref name="localGroup" scoped="" ref="0x413161d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d4cce0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="MultiHopLqiP.DataSenderMine"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d4cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d4ceb8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4b0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40d4b1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d4b3f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="MultiHopLqiP.DataSenderMine"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d4b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4b5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d4b6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4b788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4b868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d4b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d4ba88" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="MultiHopLqiP.DataSenderMine"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d4ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d4bc60"/>
        <function-ref name="source" scoped="" ref="0x40d4bd40"/>
        <function-ref name="address" scoped="" ref="0x40d4be20"/>
        <function-ref name="destination" scoped="" ref="0x40d4bf00"/>
        <function-ref name="setSource" scoped="" ref="0x40d4a010"/>
        <function-ref name="setDestination" scoped="" ref="0x40d4a0f0"/>
        <function-ref name="type" scoped="" ref="0x40d4a1d0"/>
        <function-ref name="setType" scoped="" ref="0x40d4a2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40d4a390"/>
        <function-ref name="setGroup" scoped="" ref="0x40d4a470"/>
        <function-ref name="localGroup" scoped="" ref="0x40d4a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d4a6b0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="MultiHopLqiP.DataSenderMine"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d4a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d4a888"/>
        <function-ref name="noAck" scoped="" ref="0x40d4a968"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d4aa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4130dd30" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultiHopLqiP.DataSenderMine.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4130dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4130df08"/>
        <function-ref name="getPayload" scoped="" ref="0x4130a010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4130a0f0"/>
        <function-ref name="cancel" scoped="" ref="0x4130a1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4130a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4130a420" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultiHopLqiP.DataSenderMine.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4130a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4130a5f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4130a6d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4130a7b8"/>
        <function-ref name="cancel" scoped="" ref="0x4130a898"/>
        <function-ref name="sendDone" scoped="" ref="0x4130a978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4130aab8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultiHopLqiP.DataSenderMine.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4130aab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4130ac90"/>
        <function-ref name="source" scoped="" ref="0x4130ad70"/>
        <function-ref name="address" scoped="" ref="0x4130ae50"/>
        <function-ref name="destination" scoped="" ref="0x41308010"/>
        <function-ref name="setSource" scoped="" ref="0x413080f0"/>
        <function-ref name="setDestination" scoped="" ref="0x413081d0"/>
        <function-ref name="type" scoped="" ref="0x413082b0"/>
        <function-ref name="setType" scoped="" ref="0x41308390"/>
        <function-ref name="isForMe" scoped="" ref="0x41308470"/>
        <function-ref name="setGroup" scoped="" ref="0x41308550"/>
        <function-ref name="localGroup" scoped="" ref="0x41308630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d48010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="MultiHopLqiP.DataReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d48010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d481e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d482c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d483a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d48488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d48568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d49ce0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="MultiHopLqiP.DataReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d49ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d49eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d486a8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="MultiHopLqiP.DataReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d486a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d48880"/>
        <function-ref name="source" scoped="" ref="0x40d48960"/>
        <function-ref name="address" scoped="" ref="0x40d48a40"/>
        <function-ref name="destination" scoped="" ref="0x40d48b20"/>
        <function-ref name="setSource" scoped="" ref="0x40d48c00"/>
        <function-ref name="setDestination" scoped="" ref="0x40d48ce0"/>
        <function-ref name="type" scoped="" ref="0x40d48dc0"/>
        <function-ref name="setType" scoped="" ref="0x40d48ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x40d47010"/>
        <function-ref name="setGroup" scoped="" ref="0x40d470f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40d471d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d46030" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="MultiHopLqiP.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d46030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d44b38"/>
        <function-ref name="fired" scoped="" ref="0x40d46db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d444f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d442a0"/>
        <function-ref name="getdt" scoped="" ref="0x40d43010"/>
        <function-ref name="gett0" scoped="" ref="0x40d44d90"/>
        <function-ref name="isRunning" scoped="" ref="0x40d44048"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d46658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d44818"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d468d8"/>
        <function-ref name="stop" scoped="" ref="0x40d46b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d43ba8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d43ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d43d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40d43f10" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d43f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d40108"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d401e8"/>
        <function-ref name="led1On" scoped="" ref="0x40d402c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d403a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d40488"/>
        <function-ref name="get" scoped="" ref="0x40d40568"/>
        <function-ref name="led1Off" scoped="" ref="0x40d40648"/>
        <function-ref name="led2Off" scoped="" ref="0x40d409c8"/>
        <function-ref name="set" scoped="" ref="0x40d40728"/>
        <function-ref name="led0On" scoped="" ref="0x40d40808"/>
        <function-ref name="led2On" scoped="" ref="0x40d408e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d99280" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/SendVirtualizerP.nc">
      <component-ref qname="CollectionC.SendVirtualizerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d99280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d99458"/>
        <function-ref name="getPayload" scoped="" ref="0x40d99538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d99618"/>
        <function-ref name="cancel" scoped="" ref="0x40d996f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d997d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40d99918" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/SendVirtualizerP.nc">
      <component-ref qname="CollectionC.SendVirtualizerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d99918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d99af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d99bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d99cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d99d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d99e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d5aac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/SendVirtualizerP.nc">
      <component-ref qname="CollectionC.SendVirtualizerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d5aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d5acb0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d5ad90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d5ae70"/>
        <function-ref name="cancel" scoped="" ref="0x40d99010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d990f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40d98010" loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/SendVirtualizerP.nc">
      <component-ref qname="CollectionC.SendVirtualizerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40d98010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d981e8"/>
        <function-ref name="runTask" scoped="" ref="0x40d982c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40d98448" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/SendVirtualizerP.nc">
      <component-ref qname="CollectionC.SendVirtualizerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40d98448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d98620"/>
        <function-ref name="runTask" scoped="" ref="0x40d98700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d929f0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d929f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d92bc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d92ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d92d88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d92e68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40db3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d92358" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d92358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d92530"/>
        <function-ref name="getPayload" scoped="" ref="0x40d92610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d926f0"/>
        <function-ref name="cancel" scoped="" ref="0x40d927d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d928b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4132ce30" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionSenderP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4132ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4132b050"/>
        <function-ref name="getPayload" scoped="" ref="0x4132b130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4132b210"/>
        <function-ref name="cancel" scoped="" ref="0x4132b2f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4132b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x4132b530" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionSenderP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x4132b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4132b708"/>
        <function-ref name="setOrigin" scoped="" ref="0x4132b7e8"/>
        <function-ref name="setType" scoped="" ref="0x4132b8c8"/>
        <function-ref name="getOrigin" scoped="" ref="0x4132b9a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4132ba88"/>
        <function-ref name="getType" scoped="" ref="0x4132bb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4132c758" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/CollectionSenderP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4132c758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4132c930"/>
        <function-ref name="getPayload" scoped="" ref="0x4132ca10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4132caf0"/>
        <function-ref name="cancel" scoped="" ref="0x4132cbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x4132ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40db3be0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40db3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40db3db8"/>
        <function-ref name="stopDone" scoped="" ref="0x40db3e98"/>
        <function-ref name="start" scoped="" ref="0x40db0010"/>
        <function-ref name="stop" scoped="" ref="0x40db00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40db0550" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40db0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db0728"/>
        <function-ref name="getPayload" scoped="" ref="0x40db0808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db08e8"/>
        <function-ref name="cancel" scoped="" ref="0x40db09c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40db0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40daf288" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40daf288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40daf460"/>
        <function-ref name="payloadLength" scoped="" ref="0x40daf540"/>
        <function-ref name="getPayload" scoped="" ref="0x40daf620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40daf700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40daf7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40db0f10" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40db0f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40daf108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40daebc8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40daebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40daeda0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40daee80"/>
        <function-ref name="led1On" scoped="" ref="0x40dad010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40dad0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40dad1d0"/>
        <function-ref name="get" scoped="" ref="0x40dad2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40dad390"/>
        <function-ref name="led2Off" scoped="" ref="0x40dad710"/>
        <function-ref name="set" scoped="" ref="0x40dad470"/>
        <function-ref name="led0On" scoped="" ref="0x40dad550"/>
        <function-ref name="led2On" scoped="" ref="0x40dad630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40dae690" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40dae690"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40dae868"/>
        <function-ref name="noAck" scoped="" ref="0x40dae948"/>
        <function-ref name="wasAcked" scoped="" ref="0x40daea28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40daf978" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40daf978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40dafb50"/>
        <function-ref name="source" scoped="" ref="0x40dafc30"/>
        <function-ref name="address" scoped="" ref="0x40dafd10"/>
        <function-ref name="destination" scoped="" ref="0x40dafdf0"/>
        <function-ref name="setSource" scoped="" ref="0x40dafed0"/>
        <function-ref name="setDestination" scoped="" ref="0x40dae010"/>
        <function-ref name="type" scoped="" ref="0x40dae0f0"/>
        <function-ref name="setType" scoped="" ref="0x40dae1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40dae2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40dae390"/>
        <function-ref name="localGroup" scoped="" ref="0x40dae470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ddded0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ddded0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ddc0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ddc1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ddc280"/>
        <function-ref name="cancel" scoped="" ref="0x40ddc360"/>
        <function-ref name="sendDone" scoped="" ref="0x40ddc440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ddc5a0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ddc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ddc778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40dacc58" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40dacc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dace40"/>
        <function-ref name="getPayload" scoped="" ref="0x40dacf20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dab018"/>
        <function-ref name="cancel" scoped="" ref="0x40dab0f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40dab1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ddd310" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ddd310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ddd4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ddd5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ddd6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ddd788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ddd868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40dab3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40dab3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dab598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40ddd9a8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ddd9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40dddb80"/>
        <function-ref name="noAck" scoped="" ref="0x40dddc60"/>
        <function-ref name="wasAcked" scoped="" ref="0x40dddd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40dab6d8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40dab6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40dab8b0"/>
        <function-ref name="source" scoped="" ref="0x40dab990"/>
        <function-ref name="address" scoped="" ref="0x40daba70"/>
        <function-ref name="destination" scoped="" ref="0x40dabb50"/>
        <function-ref name="setSource" scoped="" ref="0x40dabc30"/>
        <function-ref name="setDestination" scoped="" ref="0x40dabd10"/>
        <function-ref name="type" scoped="" ref="0x40dabdf0"/>
        <function-ref name="setType" scoped="" ref="0x40dabed0"/>
        <function-ref name="isForMe" scoped="" ref="0x40ddd010"/>
        <function-ref name="setGroup" scoped="" ref="0x40ddd0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40ddd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ddbd18" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ddbd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ddbef0"/>
        <function-ref name="stopDone" scoped="" ref="0x40dd8010"/>
        <function-ref name="start" scoped="" ref="0x40dd80f0"/>
        <function-ref name="stop" scoped="" ref="0x40dd81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40dd8c20" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40dd8c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404adb30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dd8df8"/>
        <function-ref name="getPayload" scoped="" ref="0x40dd8ed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dd7010"/>
        <function-ref name="cancel" scoped="" ref="0x40dd70f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40dd71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ddb980" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ddb980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ddbb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40dd8618" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40dd8618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404adb30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dd87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40dd3840" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40dd3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40dd3a18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40dd3af8"/>
        <function-ref name="led1On" scoped="" ref="0x40dd3bd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40dd3cb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40dd3d98"/>
        <function-ref name="get" scoped="" ref="0x40dd3e78"/>
        <function-ref name="led1Off" scoped="" ref="0x40dd5010"/>
        <function-ref name="led2Off" scoped="" ref="0x40dd5390"/>
        <function-ref name="set" scoped="" ref="0x40dd50f0"/>
        <function-ref name="led0On" scoped="" ref="0x40dd51d0"/>
        <function-ref name="led2On" scoped="" ref="0x40dd52b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40dd3338" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40dd3338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404adb30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40dd3510"/>
        <function-ref name="offset" scoped="" ref="0x40dd35f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40dd36d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40df4de8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40df4de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40df3010"/>
        <function-ref name="stopDone" scoped="" ref="0x40df30f0"/>
        <function-ref name="start" scoped="" ref="0x40df31d0"/>
        <function-ref name="stop" scoped="" ref="0x40df32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40e1cb90" loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40e1cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e1cd68"/>
        <function-ref name="runTask" scoped="" ref="0x40e1ce48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40e190b8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40e190b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e19290"/>
        <function-ref name="stop" scoped="" ref="0x40e19370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40e09570" loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40e09570"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e09748"/>
        <function-ref name="runTask" scoped="" ref="0x40e09828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40df4a50" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40df4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40df4c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40e160e0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40e160e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40e162b8"/>
        <function-ref name="flush" scoped="" ref="0x40e16398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40e1e970" loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40e1e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e1eb48"/>
        <function-ref name="runTask" scoped="" ref="0x40e1ec28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40de89f8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40de89f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40de8bd0"/>
        <function-ref name="resetSend" scoped="" ref="0x40de8cb0"/>
        <function-ref name="dataReceived" scoped="" ref="0x40de8d90"/>
        <function-ref name="resetReceive" scoped="" ref="0x40de8e70"/>
        <function-ref name="putData" scoped="" ref="0x40df2010"/>
        <function-ref name="putDone" scoped="" ref="0x40df20f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40df21d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40df2340" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40df2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40df2518"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40df25f8"/>
        <function-ref name="led1On" scoped="" ref="0x40df26d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40df27b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40df2898"/>
        <function-ref name="get" scoped="" ref="0x40df2978"/>
        <function-ref name="led1Off" scoped="" ref="0x40df2a58"/>
        <function-ref name="led2Off" scoped="" ref="0x40df2dd8"/>
        <function-ref name="set" scoped="" ref="0x40df2b38"/>
        <function-ref name="led0On" scoped="" ref="0x40df2c18"/>
        <function-ref name="led2On" scoped="" ref="0x40df2cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40e1a880" loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40e1a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e1aa58"/>
        <function-ref name="runTask" scoped="" ref="0x40e1ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40def5b8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40def5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40def790"/>
        <function-ref name="nextByte" scoped="" ref="0x40def870"/>
        <function-ref name="startSend" scoped="" ref="0x40def950"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40defa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40dec778" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40dec778"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40dec950"/>
        <function-ref name="byteReceived" scoped="" ref="0x40deca30"/>
        <function-ref name="endPacket" scoped="" ref="0x40decb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40ead510" loc="264:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40ead510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ead6e8"/>
        <function-ref name="runTask" scoped="" ref="0x40ead7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40eaf108" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40eaf108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404adb30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eaf2f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40eaf3d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eaf4b0"/>
        <function-ref name="cancel" scoped="" ref="0x40eaf590"/>
        <function-ref name="sendDone" scoped="" ref="0x40eaf670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40ead948" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40ead948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40eadb20"/>
        <function-ref name="runTask" scoped="" ref="0x40eadc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40eb0d10" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40eb0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404adb30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40eb0ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40eaf898" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40eaf898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404adb30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40eafa80"/>
        <function-ref name="offset" scoped="" ref="0x40eafb60"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40eafc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40eae8c8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40eae8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40eaeaa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40eaeb80"/>
        <function-ref name="led1On" scoped="" ref="0x40eaec60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40eaed40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40eaee20"/>
        <function-ref name="get" scoped="" ref="0x40eaef00"/>
        <function-ref name="led1Off" scoped="" ref="0x40ead010"/>
        <function-ref name="led2On" scoped="" ref="0x40ead390"/>
        <function-ref name="set" scoped="" ref="0x40ead1d0"/>
        <function-ref name="led2Off" scoped="" ref="0x40ead0f0"/>
        <function-ref name="led0On" scoped="" ref="0x40ead2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40eae310" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40eae310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40eae4e8"/>
        <function-ref name="nextByte" scoped="" ref="0x40eae5c8"/>
        <function-ref name="startSend" scoped="" ref="0x40eae6a8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40eae788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40eafd80" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40eafd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40eae010"/>
        <function-ref name="byteReceived" scoped="" ref="0x40eae0f0"/>
        <function-ref name="endPacket" scoped="" ref="0x40eae1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40ea00f0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40ea00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ea02c8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40ea03a8"/>
        <function-ref name="receive" scoped="" ref="0x40ea0488"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40ea0568"/>
        <function-ref name="receiveDone" scoped="" ref="0x40ea0648"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40ea0728"/>
        <function-ref name="sendDone" scoped="" ref="0x40ea0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40eacd40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40eacd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40eacf18"/>
        <function-ref name="resetSend" scoped="" ref="0x40ea9010"/>
        <function-ref name="dataReceived" scoped="" ref="0x40ea90f0"/>
        <function-ref name="resetReceive" scoped="" ref="0x40ea91d0"/>
        <function-ref name="putData" scoped="" ref="0x40ea92b0"/>
        <function-ref name="putDone" scoped="" ref="0x40ea9390"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40ea9470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ea0978" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ea0978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ea0b50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ea0c30"/>
        <function-ref name="led1On" scoped="" ref="0x40ea0d10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ea0df0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ea0ed0"/>
        <function-ref name="get" scoped="" ref="0x40ea8010"/>
        <function-ref name="led1Off" scoped="" ref="0x40ea80f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40ea8470"/>
        <function-ref name="set" scoped="" ref="0x40ea81d0"/>
        <function-ref name="led0On" scoped="" ref="0x40ea82b0"/>
        <function-ref name="led2On" scoped="" ref="0x40ea8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40ec48f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40ec48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ec4ac8"/>
        <function-ref name="receive" scoped="" ref="0x40ec4ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40eabaa0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40eabaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eabc78"/>
        <function-ref name="receivedByte" scoped="" ref="0x40eabd58"/>
        <function-ref name="receive" scoped="" ref="0x40eabe38"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40eabf18"/>
        <function-ref name="receiveDone" scoped="" ref="0x40ec7010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40ec70f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ec71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40eab620" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40eab620"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40eab7f8"/>
        <function-ref name="stop" scoped="" ref="0x40eab8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40ec67a8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40ec67a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ec6980"/>
        <function-ref name="receive" scoped="" ref="0x40ec6a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40ec6c28" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40ec6c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ec6e00"/>
        <function-ref name="receivedByte" scoped="" ref="0x40ec6ee0"/>
        <function-ref name="receive" scoped="" ref="0x40ec2010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40ec20f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40ec21d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40ec22b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ec2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40ec26f0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ec26f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ec2e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ec0350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ec00d8"/>
        <function-ref name="overflow" scoped="" ref="0x40ec05c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ec6338" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ec6338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ec6510"/>
        <function-ref name="stop" scoped="" ref="0x40ec65f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40ebfe80" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40ebfe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ebe070"/>
        <function-ref name="receive" scoped="" ref="0x40ebe150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40ebeb48" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40ebeb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ebed20"/>
        <function-ref name="stop" scoped="" ref="0x40ebee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ebf730" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ebf730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ebf908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40ebe2b0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40ebe2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ebe488"/>
        <function-ref name="receivedByte" scoped="" ref="0x40ebe568"/>
        <function-ref name="receive" scoped="" ref="0x40ebe648"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40ebe728"/>
        <function-ref name="receiveDone" scoped="" ref="0x40ebe808"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40ebe8e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ebe9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40f030a0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f030a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f037f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f03ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f03a68"/>
        <function-ref name="overflow" scoped="" ref="0x40f01010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40f04448" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40f04448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40f04620"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40f04700"/>
        <function-ref name="rxDone" scoped="" ref="0x40f047e0"/>
        <function-ref name="txDone" scoped="" ref="0x40f048c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40f049a0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40f04a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40f04b60"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40f04c40"/>
        <function-ref name="tx" scoped="" ref="0x40f04d20"/>
        <function-ref name="rx" scoped="" ref="0x40f04e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ebfa68" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ebfa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ebfc40"/>
        <function-ref name="stop" scoped="" ref="0x40ebfd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40f04010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40f04010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f041e8"/>
        <function-ref name="stop" scoped="" ref="0x40f042c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40ef2370" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40ef2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40ef2548"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40ef2628"/>
        <function-ref name="rxDone" scoped="" ref="0x40ef2708"/>
        <function-ref name="txDone" scoped="" ref="0x40ef27e8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40ef28c8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40ef29a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40ef2a88"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40ef2b68"/>
        <function-ref name="tx" scoped="" ref="0x40ef2c48"/>
        <function-ref name="rx" scoped="" ref="0x40ef2d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40ef1a18" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40ef1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40ef1bf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40ef1cd0"/>
        <function-ref name="rxDone" scoped="" ref="0x40ef1db0"/>
        <function-ref name="txDone" scoped="" ref="0x40ef1e90"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40eef010"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40eef0f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40eef1d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40eef2b0"/>
        <function-ref name="tx" scoped="" ref="0x40eef390"/>
        <function-ref name="rx" scoped="" ref="0x40eef470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40ef3e28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40ef3e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ef2050"/>
        <function-ref name="stop" scoped="" ref="0x40ef2130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40ef1010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40ef1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ef11e8"/>
        <function-ref name="stop" scoped="" ref="0x40ef12c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40ef1520" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40ef1520"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ef16f8"/>
        <function-ref name="stop" scoped="" ref="0x40ef17d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40ef3918" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40ef3918"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ef3af0"/>
        <function-ref name="stop" scoped="" ref="0x40ef3bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40eefca0" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40eefca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eefe78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40eecb58" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40eecb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40eecd30"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40eece10"/>
        <function-ref name="rxDone" scoped="" ref="0x40eecef0"/>
        <function-ref name="txDone" scoped="" ref="0x40eeb010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40eeb0f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40eeb1d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40eeb2b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40eeb390"/>
        <function-ref name="tx" scoped="" ref="0x40eeb470"/>
        <function-ref name="rx" scoped="" ref="0x40eeb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40eeb760" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40eeb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eeb938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40f20628" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40f20628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40f20800"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40f208e0"/>
        <function-ref name="rxDone" scoped="" ref="0x40f209c0"/>
        <function-ref name="txDone" scoped="" ref="0x40f20aa0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40f20b80"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40f20c60"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40f20d40"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40f20e20"/>
        <function-ref name="tx" scoped="" ref="0x40f20f00"/>
        <function-ref name="rx" scoped="" ref="0x40f1f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40eec640" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40eec640"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40eec818"/>
        <function-ref name="stop" scoped="" ref="0x40eec8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40eebbb0" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40eebbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40eebd88"/>
        <function-ref name="stop" scoped="" ref="0x40eebe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40f20110" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40f20110"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f202e8"/>
        <function-ref name="stop" scoped="" ref="0x40f203c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40f1f208" loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40f1f208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40f1f3e0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40f1f4c0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40f1f5a0"/>
        <function-ref name="actualMicro" scoped="" ref="0x40f1f680"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40f1f760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40f1f948" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40f1f948"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40f1fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40eec110" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40eec110"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40eec2e8"/>
        <function-ref name="stop" scoped="" ref="0x40eec3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ec3878" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ec3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f56010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f56500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f56288"/>
        <function-ref name="overflow" scoped="" ref="0x40f56778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40f533c0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f533c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f53b10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f52010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f53d88"/>
        <function-ref name="overflow" scoped="" ref="0x40f52288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40f4c090" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40f4c090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40f4c268"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40f4c348"/>
        <function-ref name="getControlA" scoped="" ref="0x40f4c428"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40f4c508"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40f4c5e8"/>
        <function-ref name="setControlB" scoped="" ref="0x40f4c6c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40f4c7a8"/>
        <function-ref name="getControlB" scoped="" ref="0x40f4c888"/>
        <function-ref name="setControlC" scoped="" ref="0x40f4c968"/>
        <function-ref name="setControlA" scoped="" ref="0x40f4ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40f4cd80" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40f4cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40f4a810"/>
        <function-ref name="test" scoped="" ref="0x40f4a320"/>
        <function-ref name="get" scoped="" ref="0x40f4b3e0"/>
        <function-ref name="captured" scoped="" ref="0x40f4b8f8"/>
        <function-ref name="reset" scoped="" ref="0x40f4bb98"/>
        <function-ref name="isOn" scoped="" ref="0x40f4a598"/>
        <function-ref name="set" scoped="" ref="0x40f4b658"/>
        <function-ref name="start" scoped="" ref="0x40f4be10"/>
        <function-ref name="stop" scoped="" ref="0x40f4a0a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40f4af20" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40f4af20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40f47500"/>
        <function-ref name="fired" scoped="" ref="0x40f48a98"/>
        <function-ref name="get" scoped="" ref="0x40f48580"/>
        <function-ref name="reset" scoped="" ref="0x40f48d10"/>
        <function-ref name="isOn" scoped="" ref="0x40f47778"/>
        <function-ref name="set" scoped="" ref="0x40f487f8"/>
        <function-ref name="start" scoped="" ref="0x40f47010"/>
        <function-ref name="stop" scoped="" ref="0x40f47288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f52d20" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f52d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40f4d7b0"/>
        <function-ref name="test" scoped="" ref="0x40f4d2c0"/>
        <function-ref name="get" scoped="" ref="0x40f4f390"/>
        <function-ref name="setScale" scoped="" ref="0x40f4da28"/>
        <function-ref name="getScale" scoped="" ref="0x40f4dcc8"/>
        <function-ref name="reset" scoped="" ref="0x40f4fb20"/>
        <function-ref name="overflow" scoped="" ref="0x40f4f8a8"/>
        <function-ref name="isOn" scoped="" ref="0x40f4d538"/>
        <function-ref name="set" scoped="" ref="0x40f4f608"/>
        <function-ref name="start" scoped="" ref="0x40f4fd98"/>
        <function-ref name="stop" scoped="" ref="0x40f4d048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40f41770" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40f41770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40f41948"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40f41a28"/>
        <function-ref name="getControlA" scoped="" ref="0x40f41b08"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40f41be8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40f41cc8"/>
        <function-ref name="setControlB" scoped="" ref="0x40f41da8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40f41e88"/>
        <function-ref name="getControlB" scoped="" ref="0x40f40010"/>
        <function-ref name="setControlC" scoped="" ref="0x40f400f0"/>
        <function-ref name="setControlA" scoped="" ref="0x40f401d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40f3d450" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40f3d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40f3c9f0"/>
        <function-ref name="fired" scoped="" ref="0x40f3c010"/>
        <function-ref name="get" scoped="" ref="0x40f3da98"/>
        <function-ref name="reset" scoped="" ref="0x40f3c288"/>
        <function-ref name="isOn" scoped="" ref="0x40f3cc68"/>
        <function-ref name="set" scoped="" ref="0x40f3dd10"/>
        <function-ref name="start" scoped="" ref="0x40f3c500"/>
        <function-ref name="stop" scoped="" ref="0x40f3c778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40f40508" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40f40508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40f3d010"/>
        <function-ref name="test" scoped="" ref="0x40f3fa90"/>
        <function-ref name="get" scoped="" ref="0x40f40b50"/>
        <function-ref name="captured" scoped="" ref="0x40f3f088"/>
        <function-ref name="reset" scoped="" ref="0x40f3f328"/>
        <function-ref name="isOn" scoped="" ref="0x40f3fd08"/>
        <function-ref name="set" scoped="" ref="0x40f40dc8"/>
        <function-ref name="start" scoped="" ref="0x40f3f5a0"/>
        <function-ref name="stop" scoped="" ref="0x40f3f818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40f730b8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40f730b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40f71620"/>
        <function-ref name="fired" scoped="" ref="0x40f73c18"/>
        <function-ref name="get" scoped="" ref="0x40f73700"/>
        <function-ref name="reset" scoped="" ref="0x40f73e90"/>
        <function-ref name="isOn" scoped="" ref="0x40f71898"/>
        <function-ref name="set" scoped="" ref="0x40f73978"/>
        <function-ref name="start" scoped="" ref="0x40f71130"/>
        <function-ref name="stop" scoped="" ref="0x40f713a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40f71cb0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40f71cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40f6f288"/>
        <function-ref name="fired" scoped="" ref="0x40f70820"/>
        <function-ref name="get" scoped="" ref="0x40f70308"/>
        <function-ref name="reset" scoped="" ref="0x40f70a98"/>
        <function-ref name="isOn" scoped="" ref="0x40f6f500"/>
        <function-ref name="set" scoped="" ref="0x40f70580"/>
        <function-ref name="start" scoped="" ref="0x40f70d10"/>
        <function-ref name="stop" scoped="" ref="0x40f6f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f44438" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f44438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40f42ee0"/>
        <function-ref name="test" scoped="" ref="0x40f429f0"/>
        <function-ref name="get" scoped="" ref="0x40f44a80"/>
        <function-ref name="setScale" scoped="" ref="0x40f41170"/>
        <function-ref name="getScale" scoped="" ref="0x40f41410"/>
        <function-ref name="reset" scoped="" ref="0x40f42288"/>
        <function-ref name="overflow" scoped="" ref="0x40f42010"/>
        <function-ref name="isOn" scoped="" ref="0x40f42c68"/>
        <function-ref name="set" scoped="" ref="0x40f44cf8"/>
        <function-ref name="start" scoped="" ref="0x40f42500"/>
        <function-ref name="stop" scoped="" ref="0x40f42778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f9c860" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f9c860"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f9ca38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40f9cc48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f9cc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40f9a6a0"/>
        <function-ref name="test" scoped="" ref="0x40f9a1b0"/>
        <function-ref name="get" scoped="" ref="0x40f9b2a8"/>
        <function-ref name="setScale" scoped="" ref="0x40f9a918"/>
        <function-ref name="getScale" scoped="" ref="0x40f9abb8"/>
        <function-ref name="reset" scoped="" ref="0x40f9ba38"/>
        <function-ref name="overflow" scoped="" ref="0x40f9b7c0"/>
        <function-ref name="isOn" scoped="" ref="0x40f9a428"/>
        <function-ref name="set" scoped="" ref="0x40f9b520"/>
        <function-ref name="start" scoped="" ref="0x40f9bcb0"/>
        <function-ref name="stop" scoped="" ref="0x40f9bf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40f9ee40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f9ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f9d5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f9dad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f9d858"/>
        <function-ref name="overflow" scoped="" ref="0x40f9dd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40f97050" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f97050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40f95a98"/>
        <function-ref name="test" scoped="" ref="0x40f955a8"/>
        <function-ref name="get" scoped="" ref="0x40f97698"/>
        <function-ref name="setScale" scoped="" ref="0x40f95d10"/>
        <function-ref name="getScale" scoped="" ref="0x40f94010"/>
        <function-ref name="reset" scoped="" ref="0x40f97e28"/>
        <function-ref name="overflow" scoped="" ref="0x40f97bb0"/>
        <function-ref name="isOn" scoped="" ref="0x40f95820"/>
        <function-ref name="set" scoped="" ref="0x40f97910"/>
        <function-ref name="start" scoped="" ref="0x40f950b8"/>
        <function-ref name="stop" scoped="" ref="0x40f95330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40f910e0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40f910e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f91830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f91d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f91aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40f90010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40f54e68" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f54e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f935e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f93ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f93858"/>
        <function-ref name="overflow" scoped="" ref="0x40f93d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40fc7930" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40fc7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40fc7b08"/>
        <function-ref name="offset" scoped="" ref="0x40fc7be8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40fc7cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40fbd760" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fbd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fbd938"/>
        <function-ref name="getPayload" scoped="" ref="0x40fbda18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fbdaf8"/>
        <function-ref name="cancel" scoped="" ref="0x40fbdbd8"/>
        <function-ref name="sendDone" scoped="" ref="0x40fbdcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fbddf8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fbddf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fac010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fac0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40fac1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fac2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fac390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fac4d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fac4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fac6a8"/>
        <function-ref name="source" scoped="" ref="0x40fac788"/>
        <function-ref name="address" scoped="" ref="0x40fac868"/>
        <function-ref name="destination" scoped="" ref="0x40fac948"/>
        <function-ref name="setSource" scoped="" ref="0x40faca28"/>
        <function-ref name="setDestination" scoped="" ref="0x40facb08"/>
        <function-ref name="type" scoped="" ref="0x40facbe8"/>
        <function-ref name="setType" scoped="" ref="0x40faccc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40facda8"/>
        <function-ref name="setGroup" scoped="" ref="0x40face88"/>
        <function-ref name="localGroup" scoped="" ref="0x40fe5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40fe5170" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40fe5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40fe5348"/>
        <function-ref name="noAck" scoped="" ref="0x40fe5428"/>
        <function-ref name="wasAcked" scoped="" ref="0x40fe5508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4139d518" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4139d518"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4139d6f0"/>
        <function-ref name="getPayload" scoped="" ref="0x4139d7d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4139d8b0"/>
        <function-ref name="cancel" scoped="" ref="0x4139d990"/>
        <function-ref name="sendDone" scoped="" ref="0x4139da70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4139dbe0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4139dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4139ddb8"/>
        <function-ref name="getPayload" scoped="" ref="0x4139de98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4139c010"/>
        <function-ref name="cancel" scoped="" ref="0x4139c0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4139c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4139c310" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4139c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4139c4e8"/>
        <function-ref name="source" scoped="" ref="0x4139c5c8"/>
        <function-ref name="address" scoped="" ref="0x4139c6a8"/>
        <function-ref name="destination" scoped="" ref="0x4139c788"/>
        <function-ref name="setSource" scoped="" ref="0x4139c868"/>
        <function-ref name="setDestination" scoped="" ref="0x4139c948"/>
        <function-ref name="type" scoped="" ref="0x4139ca28"/>
        <function-ref name="setType" scoped="" ref="0x4139cb08"/>
        <function-ref name="isForMe" scoped="" ref="0x4139cbe8"/>
        <function-ref name="setGroup" scoped="" ref="0x4139ccc8"/>
        <function-ref name="localGroup" scoped="" ref="0x4139cda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fb66f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fb66f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fb68c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fb69a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fb6a88"/>
        <function-ref name="cancel" scoped="" ref="0x40fb6b68"/>
        <function-ref name="sendDone" scoped="" ref="0x40fb6c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40fb2598" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fb2598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fb2780"/>
        <function-ref name="getPayload" scoped="" ref="0x40fb2860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fb2940"/>
        <function-ref name="cancel" scoped="" ref="0x40fb2a20"/>
        <function-ref name="sendDone" scoped="" ref="0x40fb2b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fb3db8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fb3db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fb2010"/>
        <function-ref name="getPayload" scoped="" ref="0x40fb20f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fb21d0"/>
        <function-ref name="cancel" scoped="" ref="0x40fb22b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40fb2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40fb1850" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fb1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fb1a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fb1b08"/>
        <function-ref name="getPayload" scoped="" ref="0x40fb1be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fb1cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fb1da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40fb1f28" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40fb1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fb0110"/>
        <function-ref name="runTask" scoped="" ref="0x40fb01f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40fb0370" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40fb0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fb0548"/>
        <function-ref name="runTask" scoped="" ref="0x40fb0628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40fb2c40" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fb2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fb2e18"/>
        <function-ref name="source" scoped="" ref="0x40fb2ef8"/>
        <function-ref name="address" scoped="" ref="0x40fb1010"/>
        <function-ref name="destination" scoped="" ref="0x40fb10f0"/>
        <function-ref name="setSource" scoped="" ref="0x40fb11d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40fb12b0"/>
        <function-ref name="type" scoped="" ref="0x40fb1390"/>
        <function-ref name="setType" scoped="" ref="0x40fb1470"/>
        <function-ref name="isForMe" scoped="" ref="0x40fb1550"/>
        <function-ref name="setGroup" scoped="" ref="0x40fb1630"/>
        <function-ref name="localGroup" scoped="" ref="0x40fb1710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40fe2828" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40fe2828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
            <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40fcc8f8"/>
        <function-ref name="maxSize" scoped="" ref="0x40fcc310"/>
        <function-ref name="empty" scoped="" ref="0x40fe2e50"/>
        <function-ref name="put" scoped="" ref="0x40fcc568"/>
        <function-ref name="size" scoped="" ref="0x40fcc0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x413bf920" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x413bf920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
            <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413beaa8"/>
        <function-ref name="maxSize" scoped="" ref="0x413be4c0"/>
        <function-ref name="empty" scoped="" ref="0x413be010"/>
        <function-ref name="put" scoped="" ref="0x413be718"/>
        <function-ref name="size" scoped="" ref="0x413be268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413bf578" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413bf578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413bf750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40fca3d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40fca3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
              <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40ff5130"/>
        <function-ref name="enqueue" scoped="" ref="0x40ff5810"/>
        <function-ref name="element" scoped="" ref="0x40ff5b60"/>
        <function-ref name="maxSize" scoped="" ref="0x40fcaea8"/>
        <function-ref name="dequeue" scoped="" ref="0x40ff54a0"/>
        <function-ref name="empty" scoped="" ref="0x40fca9f8"/>
        <function-ref name="size" scoped="" ref="0x40fcac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40ff3408" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugMessagePool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40ff3408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
            <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ff14e0"/>
        <function-ref name="maxSize" scoped="" ref="0x40ff3ee0"/>
        <function-ref name="empty" scoped="" ref="0x40ff3a30"/>
        <function-ref name="put" scoped="" ref="0x40ff1150"/>
        <function-ref name="size" scoped="" ref="0x40ff3c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x413af920" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x413af920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
            <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413aeaa8"/>
        <function-ref name="maxSize" scoped="" ref="0x413ae4c0"/>
        <function-ref name="empty" scoped="" ref="0x413ae010"/>
        <function-ref name="put" scoped="" ref="0x413ae718"/>
        <function-ref name="size" scoped="" ref="0x413ae268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413af578" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413af578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413af750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40ff0748" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSendQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40ff0748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
              <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40fef4c0"/>
        <function-ref name="enqueue" scoped="" ref="0x40fefba0"/>
        <function-ref name="element" scoped="" ref="0x40fefef0"/>
        <function-ref name="maxSize" scoped="" ref="0x40fef268"/>
        <function-ref name="dequeue" scoped="" ref="0x40fef830"/>
        <function-ref name="empty" scoped="" ref="0x40ff0d70"/>
        <function-ref name="size" scoped="" ref="0x40fef010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40fec010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fec1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fec2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fec3a8"/>
        <function-ref name="cancel" scoped="" ref="0x40fec488"/>
        <function-ref name="sendDone" scoped="" ref="0x40fec568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fec6a8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fec6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fec880"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fec960"/>
        <function-ref name="getPayload" scoped="" ref="0x40feca40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fecb20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fecc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fecd40" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fecd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fecf18"/>
        <function-ref name="source" scoped="" ref="0x40feb010"/>
        <function-ref name="address" scoped="" ref="0x40feb0f0"/>
        <function-ref name="destination" scoped="" ref="0x40feb1d0"/>
        <function-ref name="setSource" scoped="" ref="0x40feb2b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40feb390"/>
        <function-ref name="type" scoped="" ref="0x40feb470"/>
        <function-ref name="setType" scoped="" ref="0x40feb550"/>
        <function-ref name="isForMe" scoped="" ref="0x40feb630"/>
        <function-ref name="setGroup" scoped="" ref="0x40feb710"/>
        <function-ref name="localGroup" scoped="" ref="0x40feb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40feb950" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40feb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40febb28"/>
        <function-ref name="noAck" scoped="" ref="0x40febc08"/>
        <function-ref name="wasAcked" scoped="" ref="0x40febce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413e85b8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413e85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413e8790"/>
        <function-ref name="getPayload" scoped="" ref="0x413e8870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413e8950"/>
        <function-ref name="cancel" scoped="" ref="0x413e8a30"/>
        <function-ref name="sendDone" scoped="" ref="0x413e8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x413e8c80" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x413e8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413e8e58"/>
        <function-ref name="getPayload" scoped="" ref="0x413e7010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413e70f0"/>
        <function-ref name="cancel" scoped="" ref="0x413e71d0"/>
        <function-ref name="sendDone" scoped="" ref="0x413e72b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x413e73f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413e73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413e75c8"/>
        <function-ref name="source" scoped="" ref="0x413e76a8"/>
        <function-ref name="address" scoped="" ref="0x413e7788"/>
        <function-ref name="destination" scoped="" ref="0x413e7868"/>
        <function-ref name="setSource" scoped="" ref="0x413e7948"/>
        <function-ref name="setDestination" scoped="" ref="0x413e7a28"/>
        <function-ref name="type" scoped="" ref="0x413e7b08"/>
        <function-ref name="setType" scoped="" ref="0x413e7be8"/>
        <function-ref name="isForMe" scoped="" ref="0x413e7cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x413e7da8"/>
        <function-ref name="localGroup" scoped="" ref="0x413e7e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionDebug" ref="0x40feac50" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40feac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40feae28"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40feaf08"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40fe7010"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40fe70f0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40fe71d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40fe7380" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40fe7380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40fe7558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTSend" ref="0x4101dad8" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTSend" scoped="" ref="0x4101dad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4101dcb0"/>
        <function-ref name="getPayload" scoped="" ref="0x4101dd90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4101de70"/>
        <function-ref name="cancel" scoped="" ref="0x4101c010"/>
        <function-ref name="sendDone" scoped="" ref="0x4101c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x40fe6e80" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x40fe6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
              <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4101ebc0"/>
        <function-ref name="enqueue" scoped="" ref="0x4101d380"/>
        <function-ref name="element" scoped="" ref="0x4101d6d0"/>
        <function-ref name="maxSize" scoped="" ref="0x4101e968"/>
        <function-ref name="dequeue" scoped="" ref="0x4101d010"/>
        <function-ref name="empty" scoped="" ref="0x4101e4b8"/>
        <function-ref name="size" scoped="" ref="0x4101e710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x410189a0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x410189a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41018b78"/>
        <function-ref name="runTask" scoped="" ref="0x41018c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x40fe7848" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x40fe7848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
            <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40fe6930"/>
        <function-ref name="maxSize" scoped="" ref="0x40fe6348"/>
        <function-ref name="empty" scoped="" ref="0x40fe7e70"/>
        <function-ref name="put" scoped="" ref="0x40fe65a0"/>
        <function-ref name="size" scoped="" ref="0x40fe60f0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403a2a70" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4039de18" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403a5508" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403a53b0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403a0b50" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403a61c0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403a6068" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403a6888" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403a6730" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403a6de0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403b53e0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403b57c8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403afb70" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403b4010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403b5010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403b5ba0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403af430" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403af7c0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402f8390" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402f8c98" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402f87d0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402f9b68" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402fe090" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40379d38" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4038db28" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40337d78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x4038e408" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006/12/12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x404cc010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x404b8790" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x404b8b88" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x404ce7b8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ce460" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x404ce658" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x404d1c00" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d1898" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404d1aa0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x404d0970" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d05e8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x404d0810" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x404d1498" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d1340" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x404ce010" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d0e08" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x404d0200" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404bab20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d00a8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x4049fb10" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4049f9b8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x4049e870" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4049e718" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4049f2d0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4049e038" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x404b9010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
              <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a0a50" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404a0c30" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404a0e10" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x404b17d8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b1498" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404b1678" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404bc370" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404bc010" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404bc1f0" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404bda90" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404be460" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404be308" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404bd170" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404beda0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404bd010" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x404cda90" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404cda90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x404df7e8" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404cda90"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x404d2a58" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x404d2010" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x404df088" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404cda90"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x404d2f08" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404cda90"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x404d2520" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x404e2468" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x404e2468"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x404e2918" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x404ed170" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x404e2468"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x404e2d98" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x404ed010" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x404e2468"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404c4178" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4049dba0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4049ddb8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404c4010" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404c1dd0" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c1a70" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404c1c50" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404c1510" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404c4e18" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c4cc0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404c3bf8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c38a0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404c3a98" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x404a9070" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404a9538" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x404ea1c8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x404ea610" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x404eaa90" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x404e9318" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x404e7038" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404e74e0" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x404eaeb8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404e7c20" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x404e7ac8" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x404ebd90" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x404e9798" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x404e9bc0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x404cc9d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404cc9d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x404cbbc0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404cc9d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x404d8a88" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404cc9d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x404d8930" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404cc9d0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40032840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x40032840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x404d63c8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404cc9d0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x404d6270" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x404cb790" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x404d8278" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404cc9d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x404cce70" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x404cb2d8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404de860" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404de860"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x404e4038" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404dae28" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x404e5010" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404d9c48" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404d9e30" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404d97a0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x404e49b0" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x404e4480" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404d92e0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x404deeb8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404ded60" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x404e59f8" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404e56b0" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404e5898" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404da590" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404da438" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404daa60" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40543f20" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40543f20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40540418" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40547610" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40547610"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40547778" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40547778"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40547c60" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40547778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x405546a8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x405541a8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40554ad0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4054d7d0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4054d7d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4054d938" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d938"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40549c78" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d938"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4054a950" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40549630" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d938"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d938"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405492e0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d938"/></type-var>
          </variable>
          <variable name="dt" ref="0x405494d0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d938"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4054adc0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40548138" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d938"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4054a010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d938"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4054de10" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d938"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4054a4f0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40568158" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40569700" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x4056b328" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40569cc0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40569b68" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40569290" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40569138" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40568720" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x405685c8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x4056b778" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x4056bcf0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4056bb98" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x4056edd0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x40570ae8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x40570f10" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x4056e410" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x4057d2b0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x4056e8f0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40570010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035dd68"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x4035c010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40570608" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035dd68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x4035c010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x405704b0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035dd68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x4035c010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x4056d778" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056d778"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x405746a8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40566650" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4056dc70" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056d778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40566a58" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40574b08" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40566210" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056d778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405660b8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056d778"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40566e60" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40574280" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x405623e8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405623e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40560ba0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40560310" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405628d8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405623e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x4055e168" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4055e010" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x4055e5f8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405616c8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405612a8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40560778" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40562e50" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405623e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40562cf8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405623e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40561ad0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40561ec8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x4063bef8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x4063ba38" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40639508" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40639010" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x406399f8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40646010" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40646010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x406464e0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40646cb0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40646010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40646980" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40646b50" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40646010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40655010" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40643610" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40643010" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40643ac0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40655708" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x4064c180" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4064d8e8" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x4064db10" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x4064dd38" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x4064c010" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x4065f4f0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4064caa0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x4064cc90" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x4064ce98" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x4065f110" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x4065f378" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x406503a0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40653b80" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40653da8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40650010" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40650230" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4064f450" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40650e50" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40650b00" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40650cf0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x406671a8" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x4065b8a0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403438f0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x40343b78"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x406656b8" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40665560" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40667668" loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40669360" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x4065beb8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403438f0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40343b78"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x4065bd60" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403438f0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40343b78"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x40669bb0" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x40665010" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40665b60" loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40669760" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x40668468" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x40668038" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x406688a0" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x40667ad8" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40656a18" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40348bc8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4034f010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x406568c0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40348bc8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4034f010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x40668d68" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x406563e8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40348bc8"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4034f010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40656ec8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x406642c8" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40664170" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4065c9f0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4065ced8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x406b0d30" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x406ad328" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x406aca28" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x406ab4e8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x406ac4f8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x406ab010" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x406abac0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x406afd18" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x406a8250" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x406b8168" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406aea60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406b8010" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406aea60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x406a6d50" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x406b9468" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406aea60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406b9310" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x406aea60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x406b9a18" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x406aea60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x406ea4d8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x40749450" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x407492f8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x407473a8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40748c18" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40748e08" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x40747030" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x40747238" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x40749c00" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x407498b0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x40749aa0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x40746010" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40747800" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x40747a18" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x40747c30" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x40747e40" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x407487d8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40748068" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x40748268" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x40748468" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x40748668" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x40740a38" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40740510" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x407406f0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407408d0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4073c2a0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073c148" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4073cc70" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073cb18" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40738c00" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407388a0" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40738a80" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x407382b8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x407398f8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407395b8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40739798" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RouteControl" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
      <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
        <short> &#10; Control/Monitor interface to a routing component &#10; </short>
        <long> &#10; Control/Monitor interface to a routing component &#10; @author Phil Buonadonna&#10; @author Philip Levis (port from TinyOS 1.x)&#10;</long>
      </documentation>
      <function command="" provided="0" name="getOccupancy" ref="0x4074ddd0" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
        <documentation loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
          <short>&#10; Return length of the routing forwarding queue &#10;&#10; </short>
          <long>&#10; Return length of the routing forwarding queue &#10;&#10; @return The number of outstanding entries in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDepth" ref="0x4074d930" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
          <short> &#10; Get this node's depth in the network&#10; &#10; </short>
          <long> &#10; Get this node's depth in the network&#10; &#10; @return The network depth.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getQuality" ref="0x4074c2e0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
        <documentation loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
          <short>&#10; Get a measure of goodness for the current parent &#10; &#10; </short>
          <long>&#10; Get a measure of goodness for the current parent &#10; &#10; @return A value between 0-256 where 256 represent the best&#10; goodness&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x4074d4b0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
          <short>&#10; Get this node's present parent address.</short>
          <long>&#10; Get this node's present parent address.&#10; &#10; @return The address of the parent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="manualUpdate" ref="0x4074cec0" loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
        <documentation loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
          <short>&#10; Queue a manual update of the routing state.</short>
          <long>&#10; Queue a manual update of the routing state.  This may or may&#10; not include the transmission of a message.&#10;&#10; @return SUCCESS if a route update was queued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUpdateInterval" ref="0x4074c9a8" loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
          <short> &#10; Set the routing componenets internal update interval.</short>
          <long> &#10; Set the routing componenets internal update interval.&#10;&#10; @param The duration, in seconds, of successive routing&#10; updates.&#10; &#10; @return SUCCESS if the operation succeeded.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Interval" ref="0x4074c850" loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteControl.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LqiRouteStats" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRouteStats.nc">
      <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRouteStats.nc">
        <short>&#10; Provides information on how many send failures there have been.</short>
        <long>&#10; Provides information on how many send failures there have been.&#10; @author Joe Polastre&#10; @author Philip Levis (port from TinyOS 1.x)&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSendFailures" ref="0x40742c98" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/LqiRouteStats.nc">
        <interfacedef-ref qname="LqiRouteStats"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RouteSelect" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
      <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
        <short>&#10; Interface to a route selection component in the TinyOS ad-hoc&#10; system architecture.</short>
        <long>&#10; Interface to a route selection component in the TinyOS ad-hoc&#10; system architecture.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="getBuffer" ref="0x407711b0" loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
        <documentation loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
          <short>&#10; Given a TinyOS message buffer, provide a pointer to the data&#10; buffer within it that an application can use as well as its&#10; length.</short>
          <long>&#10; Given a TinyOS message buffer, provide a pointer to the data&#10; buffer within it that an application can use as well as its&#10; length. Unlike the getBuffer of the Send interface, this can&#10; be called freely and does not modify the buffer.&#10;&#10; @param msg The message to get the data region of.&#10;&#10; @param length Pointer to a field to store the length of the data region.&#10;&#10; @return A pointer to the data region.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteSelect"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4075be00" loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40771030" loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="selectRoute" ref="0x4075b090" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
        <documentation loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
          <short>&#10; Select a route and fill in all of the necessary routing&#10; information to a packet.</short>
          <long>&#10; Select a route and fill in all of the necessary routing&#10; information to a packet.&#10;&#10; @param msg Message to select route for and fill in routing information.&#10;&#10; @return Whether a route was selected succesfully. On FAIL the&#10; packet should not be sent.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteSelect"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4075ed10" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="resend" ref="0x4075ef10" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isActive" ref="0x4075e668" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
          <short>&#10; Whether there is currently a valid route.</short>
          <long>&#10; Whether there is currently a valid route.&#10;&#10; @return Whether there is a valid route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteSelect"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="initializeFields" ref="0x4075b7e0" loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
        <documentation loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
          <short>&#10; Given a TOS_MstPtr, initialize its routing fields to a known&#10; state, specifying that the message is originating from this node.</short>
          <long>&#10; Given a TOS_MstPtr, initialize its routing fields to a known&#10; state, specifying that the message is originating from this node.&#10; This known state can then be used by selectRoute() to fill in&#10; the necessary data.&#10;&#10; @param msg Message to select route for and fill in init data.&#10;&#10; @return Should always return SUCCESS.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RouteSelect"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4075b688" loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/lqi/RouteSelect.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x4077c5e0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x4077c138" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x4077b5a8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4077b450" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40779168" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40779010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40779bf0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40779a98" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x40769230" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404aed38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407690d8" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4076eb88" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4076ea30" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4075cac0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4076e188" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4076e030" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4076b4c0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4076b158" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4076b360" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4076c7a0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4076c438" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4076c640" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4076abc0" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4076aa68" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40768720" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407683f0" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x407685c0" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4076a088" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4076bf08" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40769eb0" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404aed38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40769b50" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40769d50" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404aed38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40766780" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404aed38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x407de640" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x407de640"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x407da920" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407da7c8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407da300" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x407de640"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407da1a8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x407decb8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407deb60" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407d9170" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x407de640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407dad50" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x407d9010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x407de640"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40874b00" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40874b00"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40874c68" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40874c68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x4086ae50" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40874c68"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086acf8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x408859c0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40885868" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x4086a300" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086a1a8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408844b8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40874c68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40884148" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40884358" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40874c68"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x40872138" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x4086d7b0" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086d658" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x4086e9d0" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x4086e878" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x40872da0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x408716e0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40871318" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x40871580" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x40872748" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x408725f0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x4086fcd0" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086f940" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x4086fb70" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x4086e1e0" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x4086e088" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x4086f188" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086f030" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x40875af0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x40875998" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x408bc470" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x408bd3b8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x408be0f8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x408be7c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408be668" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x408bc9e0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x408bd9c8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="timerTick" ref="0x408bce40" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This command is periodically called when the timer is fired and&#10; the averages are updated&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x408bee38" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bece0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x408bdf10" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x408a5540" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x408a5b48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x408b41c0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b4068" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timerTick" ref="0x408b4630" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This event should be called periodically to indicate the passing of&#10; time (maybe we should use a timer)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x408b52e0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b5188" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x408b59d8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b5880" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
      <function command="" provided="0" name="checkPacket" ref="0x408bb7a0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
          <short>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command.</short>
          <long>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command. This should clear the packet if the user&#10; forgot to do so (or return EINVAL to be strict).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bb648" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x408b12c8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x408a2478" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a2320" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x408a6d88" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x408a68d0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408a6558" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408a6770" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x408a9010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b0e38" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x408a9f08" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a9db0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x408a8868" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408a84f0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408a8708" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x408b08b8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckReceived" ref="0x408a98b0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Sets for the transmitted message whether it was acknowledged or not.</short>
          <long>&#10; Sets for the transmitted message whether it was acknowledged or not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a9570" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="acked" ref="0x408a9750" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x408a6010" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a8e28" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IEEE154Packet" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x408c5d98" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c5c40" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x408c5010" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c6e58" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x408cde48" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cdaf8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x408cdce8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x408ca220" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ca0c8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set6LowPan" ref="0x408c0060" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the value of the 6LowPan network field.</short>
          <long>&#10; Sets the value of the 6LowPan network field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c1cd0" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="network" ref="0x408c1ed8" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x408c1218" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c2e88" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408c10b8" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x408cbb68" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cba10" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x408c5788" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c5448" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x408c5628" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x408c91c8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408cae10" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408c9068" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x408ce220" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the IEEE 802.15.4 header including the length field.</short>
          <long>&#10; Returns the IEEE 802.15.4 header including the length field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="ieee154_header_t" ref="0x404a8070"/>
              <typename><typedef-ref name="ieee154_header_t" ref="0x404a7480"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ce0a8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x408c2a10" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c28b8" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x408cb4c8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cb370" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x408c0f18" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="181:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the active message type&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c0bc8" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x408c0db8" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x408c81c0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c8068" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x408c9ad0" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408c9758" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408c9970" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x408cd060" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cece0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x408ceee0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get6LowPan" ref="0x408c1828" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the value of the 6LowPan network field.</short>
          <long>&#10; Returns the value of the 6LowPan network field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c16d0" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x408dc540" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408dc3e8" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x408c23e8" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c2088" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408c2288" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x408ca8d0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ca778" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x408c69a0" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c6650" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x408c6840" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0x408ce870" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the raw value (unadjusted) of the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ce718" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x408c45b0" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c4260" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x408c4450" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x408c89c8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c86a0" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408c8868" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x408cd640" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cd4e8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x408c0778" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the active message type of the message&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404aeae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c0620" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x408dcc50" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="192:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408dcaf8" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x408c4be0" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c4a88" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x408c6168" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c6010" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x408d8870" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x408d8010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x408dbe90" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408d8458" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x408db970" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x408d8d18" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x408a3010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a4c80" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x408a4e80" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x408a34a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x408a4168" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a4010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x408a47b0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a4658" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x408ba9f0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ba898" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x408ba310" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ba1b8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x408baee8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x408b85e8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b8490" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230Config" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <short>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.</short>
        <long>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeaderLength" ref="0x408ac4b0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The last touch event is not signaled &#10; for packets whose length is less than or equal to this header length.&#10; The header length must be at least 1.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x408ab6a8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ab550" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408aeec8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes.</short>
          <long>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes. The FCF field (CRC-16) is not stored,&#10; but automatically appended / verified.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408aed50" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x408ae880" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Sets the length of the PHY payload.</short>
          <long>&#10; Sets the length of the PHY payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ae540" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408ae720" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0x408ae058" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the length of the PHY payload (including the FCF field).</short>
          <long>&#10; Returns the length of the PHY payload (including the FCF field).&#10; This value must be in the range [3, 127].&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40896ee8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxLength" ref="0x408acaa8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the maximum PHY length that can be set via the setLength command&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultChannel" ref="0x408ab010" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; This command is used at power up to set the default channel.</short>
          <long>&#10; This command is used at power up to set the default channel.&#10; The default CC2420 channel is 26.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40975290" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40975b00" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40975700" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404aed38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40978d78" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404aed38"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40978a10" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404aed38"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40978c18" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x409c12a0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x409bf7b0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x409c4a10" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x409be210" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x409bfd70" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x409bfc18" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x409c1d90" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x409c1c38" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x409be7d8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x409be680" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x409c4e60" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x409bf340" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x409bf1e8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x409c1818" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x409c16c0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x409c3948" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c3948"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x409db428" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x409db2d0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x409bba28" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x409c3e40" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c3948"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x409bc9a0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c3948"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x409bc848" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c3948"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x409bcde0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x409bbe88" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409bc3c8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c3948"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x409bc270" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c3948"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x409bb210" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x409bb608" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x40a58010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x40a585e0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40a58c20" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x40a5cb38" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40aa1280" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40aa1128" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40aa2c18" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40aa9bf0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aa9a98" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40aa48b0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40aa4398" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40aa4240" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40aaa610" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40aa7070" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40aa76b8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40aa7560" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40aa7b28" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40aaab50" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40aa2010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
              <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aa8e38" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40aa87c0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aa8668" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40b04578" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40b04420" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40b049f8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b0a9e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40b0a888" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b04010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40b0ade8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40b07350" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40b071f8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40b06088" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b07ef8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40b07a38" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40b078e0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40b06758" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40b06600" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40b0bca8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b0bb50" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ad010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40b66e88" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b66e88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40b744e8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b66e88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40b74390" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b66e88"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40bb03f0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40bb03f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40bb0558" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40bb0558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40bb0b70" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40bb0558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40bb0a18" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40bb0558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplRF230" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <short>&#10; There should be standard interfaces/commands for these&#10;</short>
      </documentation>
      <function command="" provided="0" name="spiSplitRead" ref="0x40bb6290" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitReadWrite" ref="0x40bb6988" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40bb6830" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiWrite" ref="0x40bb4010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40bb6e30" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitWrite" ref="0x40bb7d20" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A spiSplitRead command must follow this command even if the&#10; result is unimportant. The SpiByte interface should be &#10; extended with this protocol.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40bb7bc8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crcByte" ref="0x40bb7718" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Calculates the crc.</short>
          <long>&#10; Calculates the crc. For some unknown reason the standard&#10; tinyos crcByte command swiches endianness.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="crc" ref="0x40bb73c8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40bb75b8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40bba858" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40bba700" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40bb2910" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40bb12d8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40bb2e78" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40bb2d20" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40bb2408" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40c46010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40c49a58" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40c49c70" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c49e60" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40c45668" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40c46ec0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40c45100" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c452f0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40c454f8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <short>&#10; HPL-level access to the Atmega128 SPI bus.</short>
        <long>&#10; HPL-level access to the Atmega128 SPI bus. Refer to pages 162-9&#10; of the Atmega128 datasheet (rev. 2467M-AVR-11/04) for details.&#10;&#10; &#60;pre>&#10;  $Id: Atm128Spi.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   September 8 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="initSlave" ref="0x40c6cb38" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40c642b8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40c66438" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40c648a0" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40c64748" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40c6c6e8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40c653a0" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40c65248" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40c68658" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40c68500" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40c69478" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40c61a10" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40c618b8" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40c68ab0" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40c62280" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40c62128" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40c62b08" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40c65e30" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40c65cd8" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40c61480" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40c669c8" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40c66870" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40c69a10" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c698b8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40c66018" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40c68ea8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40c65850" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40c64cc8" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40c62690" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40c61010" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40c66e00" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40c69010" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40c68010" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c69e80" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40dd4d28" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40dd4998" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40dd4bc8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40dd7a88" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40dd4388" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40dd4010" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404b31f0"/>
                <typename><typedef-ref name="message_t" ref="0x404b1010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40dd4228" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40e19ec8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40e19a90" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40dea4d8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40de9158" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40de8278" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40de8120" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40de9680" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40deac08" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40deaab0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40de8780" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40de9be0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40df0540" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40df0b08" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40df3eb0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40df3d58" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40def280" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40def128" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40ded500" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40dedce8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40dedb90" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40dec3a0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40dec248" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ea6010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40ea9c00" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ea9df0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40ea3410" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40ea32b8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40ea3c18" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40ea38c8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ea3ab8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40ea4850" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40ea1aa8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40ea1558" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ea1748" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40ea1940" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40ea4dd8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ea6e70" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40ea6920" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ea6b10" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40ea6d08" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ec7a78" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40ec7920" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40ec4378" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40ec4010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40ec4218" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40eb89e8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40eb81a8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40eb5010" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40eb7e80" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40eb76d8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40ebb8e8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40ebbd28" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40eb85e8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40eb8de8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40eb7328" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40eb71d0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40eb7aa8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
