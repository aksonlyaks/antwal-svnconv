<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="33:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4047a768"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40381188"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40381188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40457418"/></to>
    </wire>
    <wire loc="34:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x404d3210"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40534010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40534010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4052f670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x404de8e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40636988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40636988"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x414a1448"/></to>
    </wire>
    <wire loc="36:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404e5528"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40376d48"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40376d48"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405113e8"/></to>
    </wire>
    <wire loc="37:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x404ecb10"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4073a928"/></to>
    </wire>
    <wire loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4073a928"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40c976f0"/></to>
    </wire>
    <wire loc="49:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40482de0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d5d290"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d5d290"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4071e010"/></to>
    </wire>
    <wire loc="50:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40479518"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4105c178"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4105c178"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4109b1d0"/></to>
    </wire>
    <wire loc="51:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x40480d40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d728f0"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d728f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d852b0"/></to>
    </wire>
    <wire loc="53:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x404ae548"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4106a8a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4106a8a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4175fb68"/></to>
    </wire>
    <wire loc="54:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x404b5ed0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41280288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41280288"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x417ac778"/></to>
    </wire>
    <wire loc="55:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x404b96b8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40d70210"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x404b9a18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d71b10"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x404c9620"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40d8c8c0"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40d8c8c0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40dae478"/></to>
    </wire>
    <wire loc="62:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="UARTMessagePool" scoped="" ref="0x404cc300"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4127b058"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x4127b058"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x417eea70"/></to>
    </wire>
    <wire loc="63:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="UARTQueue" scoped="" ref="0x404c2010"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x412783d0"/></to>
    </wire>
    <wire loc="70:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x412ad380"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40381188"/></to>
    </wire>
    <wire loc="71:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="UARTSend" scoped="" ref="0x412a9ad8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x412b2010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x412b2010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x417cd5b8"/></to>
    </wire>
    <wire loc="72:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x412ad848"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41275408"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x41275408"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x417df960"/></to>
    </wire>
    <wire loc="73:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x412ace80"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x412b6748"/></to>
    </wire>
    <wire loc="74:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40d86550"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x412b0c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417df5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417ee6c8"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x411be578"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x411ba010"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41178e68"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4109ee00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416a0200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416af3c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41666be0"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41024230"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e48638"/></to>
    </wire>
    <wire loc="208:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40eda500"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cbe510"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c8f658"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c77b88"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c58040"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bce928"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b32758"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408475e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4156cd68"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a12ad0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407e6708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414e48d0"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4053cea8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x404577b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402eb408"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402eb408"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40358118"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40457d78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4037cef0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4037cef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40388168"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40474240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412642b0"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408bedb8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4064e480"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40382760"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40463a88"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40388950"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404636d8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40388548"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405276e0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40388548"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4038cc18"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4038cc18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4038bba0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4038b010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x40394218"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403974b0"/></to>
    </wire>
    <wire loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403974b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403def28"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40394c08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4038b010"/></to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403b1750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40430bd0"/></to>
    </wire>
    <wire loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403a2d08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403f8d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403f8d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413b1de0"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403af2f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40403ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40403ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413bd538"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403b44b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4040e170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4040e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41419228"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403968e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403e5250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403e5250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412e9a88"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403b50a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40406e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40406e70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4141dde0"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403eb228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403eb228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41304938"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4039e4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403f6e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403f6e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413579e8"/></to>
    </wire>
    <wire loc="159:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403aac08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40400988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40400988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413acc08"/></to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403ad210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4040a7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4040a7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413b8538"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40399670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403df250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403df250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412f27f8"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x4039bc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403eae48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403eae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413467f8"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403a42f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403f4ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403f4ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413529e8"/></to>
    </wire>
    <wire loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403a8a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403fe6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403fe6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413a7a88"/></to>
    </wire>
    <wire loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403b22f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4040de48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4040de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414140b0"/></to>
    </wire>
    <wire loc="185:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403b9830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40440d00"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403a7ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40404790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40404790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413c00b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403def28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412ec6c0"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403a1b18"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403e8ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403e8ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413416c0"/></to>
    </wire>
    <wire loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403ba3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40439228"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x4039f010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403edb00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403edb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4135b538"/></to>
    </wire>
    <wire loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403ab750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403f76b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403f76b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413af7f8"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403afce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404014f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404014f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413bb010"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403b4ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4040eac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4040eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41418c08"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4039d2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403e5ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403e5ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412e7538"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x4039c750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403ebb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403ebb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413493b0"/></to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4039eea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403f57d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403f57d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41355538"/></to>
    </wire>
    <wire loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403a9670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403ff330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403ff330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413aa6c0"/></to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403adc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40409170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40409170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41400010"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403980a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403dfba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403dfba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412f0228"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x4039a670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403e97d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403e97d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41344228"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403a4ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403f34f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403f34f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41350538"/></to>
    </wire>
    <wire loc="180:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403b2ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4040c7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4040c7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41413a88"/></to>
    </wire>
    <wire loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403a2210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403f83d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403f83d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413b2418"/></to>
    </wire>
    <wire loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403b08e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40403170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40403170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413bfa88"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403b5a98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4040f7f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4040f7f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4141b7f8"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403b82f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4043d260"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x40397ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403e6890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403e6890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412ea0b0"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403a0590"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403f14f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403f14f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4133f0b0"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403ac670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40406518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40406518"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4141e418"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4039fa08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403f64f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403f64f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41359010"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403aa210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40400030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40400030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413ad228"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403ae750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40401e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40401e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413ba9e8"/></to>
    </wire>
    <wire loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403b38e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4040d4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4040d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414166c0"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x4038ac20"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403e08e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403e08e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412f6d80"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x4039b210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403ea4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403ea4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41348d70"/></to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403a58e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403f4170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403f4170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41353010"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403a80a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403ffc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403ffc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413a80b0"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403badc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40437788"/></to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403a74b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40405dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40405dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413c26c0"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403a3750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403f3e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403f3e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4134e010"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40398a98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403de5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403de5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412eec08"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403a1120"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403e8170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403e8170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41343c08"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40358950"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x4035d5f0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40366010"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4036a370"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4059f458"/></to>
    </wire>
    <wire loc="51:MultihopOscilloscopeC.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x404e4ba8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405276e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405110a0"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40510110"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x405298e8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405298e8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403980a0"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40510af8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40528308"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40528308"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40399670"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4051d580"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40528d10"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40528d10"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x4038ac20"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4052f670"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40539698"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40539698"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40621338"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4053cea8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40535dc0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40543718"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40626d28"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40535dc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405d72f8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x4061e688"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405d25d8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x405f28d8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x4054b610"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x4054b610"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x405d7730"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4062c6e0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40549010"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40549010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405d4190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x405d4190"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x414880c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x405d72f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4148a200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x405d7730"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4148a638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41486300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4058d170"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4058d170"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40597ca0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x414844e0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4059b510"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4059b510"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405a1010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x41484d08"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4059be70"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4059be70"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405a1970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x41481730"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405989b8"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x405989b8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4059f8b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x405ef298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x4061c948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x414a1448"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x414a0cb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x414a0cb0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4063f900"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4149f848"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40724468"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40639ca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4149f848"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x406465e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x406445a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4064f848"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4149fd20"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4063f900"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406f7560"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x4064ad18"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x406f5178"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4070bea0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406465e8"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406f46b0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40639ca0"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x4070b280"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406f61d8"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406f5de8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40654f10"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40654f10"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4064bcd0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4064f068"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4064d2e0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406445a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40686600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40686600"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414e1dc8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x406dfca0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4064f848"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40657bc0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40675278"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40675278"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40674eb0"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4065e0f8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40382760"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x406dd9f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x4064b840"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406dc150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406df158"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406df158"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x414e0970"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x406833b8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40686d40"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x414e0568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x406df7f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x414df030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x414df4f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406dfca0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x414df918"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x414e4c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x414deb00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x414c30b0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x406dd9f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x414c34a8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x406ddde8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x414c37c0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406dc150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x414c3e58"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x406dc7e8"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x40701e90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4071e010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c95cd8"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c95cd8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40cfa950"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x4073a100"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40750a38"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40755898"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x407503c0"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4073bce8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40751970"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4071e8e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x407568e8"/></to>
    </wire>
    <wire loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40734960"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40752960"/></to>
    </wire>
    <wire loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40737430"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c09428"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40c09428"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c01b28"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40c976f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40cbe8d8"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407342c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407522c8"/></to>
    </wire>
    <wire loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4073f010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40c09b10"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40c09b10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40bfe280"/></to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x407578f8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40d38458"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40d38458"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40d37920"/></to>
    </wire>
    <wire loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407293b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40752cd0"/></to>
    </wire>
    <wire loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40749500"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c065b8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c065b8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40bfecb0"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40761010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40adf1a0"/></to>
    </wire>
    <wire loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40cbf800"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407aaee8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x407aaee8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407a5010"/></to>
    </wire>
    <wire loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4074f308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c7be28"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c7be28"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c774c0"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c785e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d3bcf0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d3bcf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d38bc8"/></to>
    </wire>
    <wire loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d38bc8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c95260"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c95260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40cbb420"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cc0c18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c79f10"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c79f10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ca8e38"/></to>
    </wire>
    <wire loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ca9de8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407a9510"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407a9510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407a5618"/></to>
    </wire>
    <wire loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4074fa70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c95940"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c95940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cbbb00"/></to>
    </wire>
    <wire loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cbf3e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c7a960"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c7a960"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c93ec8"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c93260"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ca9610"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40ca9610"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ca5558"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ca9a38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407a9c10"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407a9c10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bcf818"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4076f0d8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40b2d010"/></to>
    </wire>
    <wire loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x4074fe08"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c09428"/></to>
    </wire>
    <wire loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40763df0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c06108"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c06108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bfe800"/></to>
    </wire>
    <wire loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x4075b7e0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x407e9798"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x407e9798"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x407e31f0"/></to>
    </wire>
    <wire loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x4076f818"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x407a8010"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x407a8010"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x407a5d50"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bcf818"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bca738"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407a4550"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407e9060"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407e9060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407e6a98"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x407b77e0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x407e87a0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x407e87a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x407e21e0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x407a3260"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40b227d0"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x407a3260"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40bd2da0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40bd2da0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40bcecc8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40b227d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40b32af8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x407b3858"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x40b22c58"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x40b22c58"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b31010"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x407a2030"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40b1f390"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40b1f390"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40b31748"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x407b6650"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c09428"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x407b6cd0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c06108"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x407b04c8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c5c3a0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40c5c3a0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c58e20"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x407c6578"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40c5d010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40c5d010"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a16a28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407b0910"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40adf1a0"/></to>
    </wire>
    <wire loc="77:CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x407c4a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x407c41f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x407c5680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x407e7300"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x407e2cc8"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x407e1af0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x40847ba8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x40847ba8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4093be78"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x407f85b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40846e98"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40846e98"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x407f7010"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40955cd0"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40955cd0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403968e0"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x407f7a18"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x40953128"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x40953128"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x40397ea8"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x407f3b88"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x4094d198"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x4094d198"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x409b6220"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40804f20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40af1c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40af1c50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409bb9e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40806e88"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x40aee260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40aee260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x408042b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x40aeec68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40aeec68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40804b00"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x40af0ba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40af0ba0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x408046e0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x40aed010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40aed010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x407f4010"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x40ae8010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40ae8010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x407f4598"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x40ae7190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40ae7190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x407f4aa0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x40ae75c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40ae75c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x407f1010"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x40aeb010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40aeb010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x407f1530"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40aeb448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40aeb448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x407ee868"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x40ae5880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40ae5880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x407f1a40"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x40ae9a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40ae9a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40806010"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x40aeb880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40aeb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x40802010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b04c48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40b04c48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409bb9e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x408036e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b1ac90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40b1ac90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409bb9e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407f5248"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40b2d010"/></to>
    </wire>
    <wire loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x407fd308"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x407feae8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408475e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408417f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x408417f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4093cbb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4093be78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x414fb508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x414fb508"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x414f5d10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x414f2a00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x414f72c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x414f72c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x414ec1a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x414f37b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408ef930"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408ef930"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40913e60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x414eab98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40850cd8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40850cd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408712b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x41538dd8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4085fc10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40860bb0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4086e610"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4085ca28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4086d348"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4085fc10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4086b268"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4085fc10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40869e60"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4085fc10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40883a78"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x40880610"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4059b510"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x408bd220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40850cd8"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4091f0e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409073a0"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409073a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40904b30"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40903d50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40850cd8"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x409368d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403a0590"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x409552e8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x403ad210"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x408464c0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403a80a0"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40954730"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403aac08"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x4094ba80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40960f00"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x4094d8a8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x4095c2c8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x4094a5a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4085ca28"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x4095c8c0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x4096c168"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x4096c168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4099e050"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x409b68d8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x408464c0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x4096f4f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4098a6c0"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x4096d010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409a3bd0"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x4096c9e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4099c2b0"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x4096fd78"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409887a8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x4096d890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409a1e68"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40972c20"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40969570"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x4096e6b8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40986920"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40969d28"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x409665e8"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4098ae78"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x40966a60"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40987010"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x40966ed8"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x409a5190"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x40968360"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x409a2430"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x409687d8"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x409a0630"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x40968c50"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4099e808"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x409671a0"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4099ca68"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x40967618"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x409b30f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40b0aca0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x409d5a98"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40af0ef8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40ae8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40ae8cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40aee910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b0a190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40ae9190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40ae66e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40af0330"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x409d5208"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409d5208"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x409cf0f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40aed6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40aeda18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40aeddf0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40aebcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40ae6b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40ae5cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40ae7a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40af0848"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40aecb98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40ae95c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40b0a5c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x409d5a98"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40ae8448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40aec190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40aec840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40ae5448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40aed368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40ae5010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40aee5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40aec4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40ae7e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40ae62b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x409d5a98"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x409ce370"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x409d4500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409ced98"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409cd5e0"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409bb9e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409cf908"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x409d3530"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409cdd98"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x409e6a90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a18770"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40a18770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a16a28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409cc278"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a14ea8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a14ea8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ac67c0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x409c9258"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a105a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a105a0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a23628"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x409e65c0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a108d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a108d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a239c0"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409cb260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40adf1a0"/></to>
    </wire>
    <wire loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x409e4010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40a16a28"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a0f120"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a239c0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a1d928"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a23628"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a1d5b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40a14b70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a232a8"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a232a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a1d250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x40ac3010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a20120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x40ac3740"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a20120"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a3f100"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40a3ee00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40aca570"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40aca570"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41569180"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a3d540"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac9150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac9150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41569cc8"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40a2e1c8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40a720c0"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40a720c0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40a6e4a0"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a3d9c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></to>
    </wire>
    <wire loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40a43798"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40a6ac00"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40a6c2f8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40a6ccd0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x4039c750"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40a6b740"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x4039b210"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40a6a200"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x4039bc08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40acacb0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x415698c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41568218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ac9600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41568640"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4156a170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41568c38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40afda00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40b1dca0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x409d5a98"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40b03ef8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40afe010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40afc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40afccb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b02910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b1d190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40afe880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40afd190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40afb190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40afa6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40b03330"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x409d5208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b016c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40b01a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40b01df0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40b01010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40afecb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40afe448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40b03ba0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40afab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40af9cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40afba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40b03848"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40b00b98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40afd5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40b1d5c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x409d5a98"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40afb5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40afc010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40b02260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40afc448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40b00190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40b00840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40af9880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40af9448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40b01368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40af9010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40b025b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40b02c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40b004e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40afbe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40afa2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40b13bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40b0ddc0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x409d5a98"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40b18010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40b14270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40b12a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40b12e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b18a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b0d2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40b14ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40b13368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40b112b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40b0f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40b19410"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x409d5208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b17840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40b17b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40b15010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40b17190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40b14f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40b146a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40b19c80"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40b0fcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40b0ee38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40b11b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40b19928"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40b15d70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40b137a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40b0d6e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x409d5a98"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40b116e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40b12190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40b18368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40b125c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40b15368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40b15a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40b0ea00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40b0e5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40b174e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40b0e190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40b186c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40b18d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40b156c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40b0f010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40b0f448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x40b43468"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x40b580c8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x40b438d0"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x40b58550"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x40b58b18"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x40847ba8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x40b52010"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x408464c0"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40b52a88"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40846e98"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40b4f4b0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x40954730"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40b47970"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x4094ba80"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40b4fef0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bb9518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40bb9518"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409bb9e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40b48658"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40bb9bd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40bb9bd0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x409d5208"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40b46e08"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40bb8190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40bb8190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40b6c248"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x40bb8ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40bb8ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b6c678"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40bb7260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40bb7260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b6caa8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40bb5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40bb5010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40b46920"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40bb3ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40bb3ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40b48c18"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40bac550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40bac550"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x409d5a98"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b46418"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bada00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bada00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40b6cee8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40bb4d58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40bb4d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40b68d70"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40bcf2d8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40bcf2d8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40bca1f8"/></to>
    </wire>
    <wire loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40b55590"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c09428"/></to>
    </wire>
    <wire loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b55c10"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c06108"/></to>
    </wire>
    <wire loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40b4d3b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40c06c10"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40c06c10"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40bfd3a0"/></to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40b472a0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c02d30"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c02d30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c234d8"/></to>
    </wire>
    <wire loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40b6a360"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40adf1a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40bb2368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40bb8840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40bb4920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40bb0190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40bb05c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40bb3270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40bb0a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40bae010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40bb5368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40bb5740"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40bb7910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40bb36a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40bb84e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40bae448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40bad5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40baf2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40bb44e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40bb3f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40bade38"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x409d5a98"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40bb0e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40bb28a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40bb8b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40bb2cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40bb5a98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40bb4190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40bad190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40baecb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40bb7c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40bae880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40bb75b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40bb5df0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40baf6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40bafb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40bcfcb0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40bcabd0"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40bc2288"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40adf1a0"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40bc9010"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40846e98"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40bc9a18"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x409368d0"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40bc84c8"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x409552e8"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40bc7010"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x4094d8a8"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40bc76d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c4e2d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40c4e2d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409bb9e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40bc7e50"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40c42cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40c42cb8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x409d5a98"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40bc6a30"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40c4ca18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40c4ca18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40bc6600"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40c4b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40c4b190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40bc6e68"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c09428"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bc54f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c06108"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40bc4b40"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40c06c10"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40bc5990"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x407e9798"/></to>
    </wire>
    <wire loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x40be4178"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c045e0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c25d68"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40c23b00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4073bce8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40c290a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408ef930"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40c22430"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c2a6b8"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40c22e88"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40543718"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c524c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4052f670"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40c47190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40c41430"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x409d5a98"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40c4d598"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40c4a7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40c46010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40c46448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40c4c010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c42880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40c48030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40c488a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40c46880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40c45e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40c4e988"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x409d5208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40c4cd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40c4b568"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40c4c6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40c48468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40c4abd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40c4d240"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40c442b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40c42448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40c45190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40c4eea0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40c4a368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40c48cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40c46cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40c476c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40c4d8f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40c47b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40c4b8c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40c4a010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40c42010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40c44b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x409d4500"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40c446e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40c4dc48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40c4c368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40c4bc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x409d3530"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40c455c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40c45a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40c5aad0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40c58560"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40c5f820"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c58040"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c74010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c785e8"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40c746e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40c762d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40c762d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a16a28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40c74e98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c5c3a0"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c73388"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c06108"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40c7ad88"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40c8f310"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c8fa80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c93260"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c8fe40"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c06108"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ca40c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40ca9de8"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ca4830"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40ca9a38"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ca4bf0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c06108"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40cfa950"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40cf6b00"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40cc03c8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40d4b7b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40d4b7b0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a16a28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40cb8798"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40cbf800"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cb9680"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40cbf3e0"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cbbef0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40cc0c18"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x40cb6338"/></from>
      <to><interface-ref name="SplitControlState" scoped="" ref="0x40cf7030"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x40cf7030"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40d28978"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x40cb7a70"/></from>
      <to><interface-ref name="RadioPowerState" scoped="" ref="0x40cf7898"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x40cf7898"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40d29790"/></to>
    </wire>
    <wire loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40cb7208"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40d4b7b0"/></to>
    </wire>
    <wire loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="OffTimer" scoped="" ref="0x40cb6c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d4aad8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40d4aad8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4052f670"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendDoneTimer" scoped="" ref="0x40cb0010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d46988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40d46988"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4052f670"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="PowerCycle" scoped="" ref="0x40cb4130"/></from>
      <to><interface-ref name="PowerCycle" scoped="" ref="0x40cfa3f8"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="PowerCycle" scoped="" ref="0x40cfa3f8"/></from>
      <to><interface-ref name="PowerCycle" scoped="" ref="0x40cf65a8"/></to>
    </wire>
    <wire loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Resend" scoped="" ref="0x40cba690"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x40b22c58"/></to>
    </wire>
    <wire loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cb4b88"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4073f010"/></to>
    </wire>
    <wire loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40cb99f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407293b8"/></to>
    </wire>
    <wire loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40cb46b0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c06108"/></to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40cbada8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x407a8010"/></to>
    </wire>
    <wire loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40cad260"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c5c3a0"/></to>
    </wire>
    <wire loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40cad688"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40adf1a0"/></to>
    </wire>
    <wire loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="send" scoped="" ref="0x40cabef0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="startRadio" scoped="" ref="0x40cd7010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="resend" scoped="" ref="0x40cd86f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="stopRadio" scoped="" ref="0x40cd77f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40d29790"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a16a28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40d28978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a16a28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x40d1b2b0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x40b43468"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x40d1b718"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x40b438d0"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40d1bb90"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40bcfcb0"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40cf05b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407aaee8"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40d1dd28"/></from>
      <to><interface-ref name="SendState" scoped="" ref="0x40cc03c8"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x40cf0c60"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40d29790"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x40d1d4f8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40d28978"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="OnTimer" scoped="" ref="0x40cf3300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d27bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40d27bf8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4052f670"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d1c500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40adf1a0"/></to>
    </wire>
    <wire loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="startRadio" scoped="" ref="0x40d199f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="getCca" scoped="" ref="0x40d18250"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="stopRadio" scoped="" ref="0x40d191d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40d24ab8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4052f670"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d64140"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d5a3f0"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d5a3f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4073f010"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40d5db68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4071e8e8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40d5cbf0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40734960"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d5b010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4073bce8"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d5ac08"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40c06c10"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d5c558"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407342c8"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d5b700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407293b8"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d575e0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c045e0"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40dae478"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x410263f0"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40d6f8d0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40d82ce0"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40d82ce0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40e7a708"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40d6dde8"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40d82248"/></to>
    </wire>
    <wire loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40d82248"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40e47d08"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d6f190"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d825a0"/></to>
    </wire>
    <wire loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d825a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40e7a070"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40d70210"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40d84b78"/></to>
    </wire>
    <wire loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40d84b78"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40e47948"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d71100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d859e0"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d859e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e48de0"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40d8eaf0"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40d80598"/></to>
    </wire>
    <wire loc="154:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40d80598"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x410268c8"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d71b10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d844c8"/></to>
    </wire>
    <wire loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d844c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e47568"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40d8c458"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40dae010"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40dae010"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40e79e70"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x40d94618"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40d81530"/></to>
    </wire>
    <wire loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x40d81530"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40e7ae80"/></to>
    </wire>
    <wire loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d852b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40e48950"/></to>
    </wire>
    <wire loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d852b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x410254d0"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d852b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40edcc50"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40daed18"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x40d8b980"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40dac1e8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40d86550"/></to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40da9580"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40edbb70"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40e661e8"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x40daed18"/></to>
    </wire>
    <wire loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x40e72010"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40eae010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40eae010"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416af770"/></to>
    </wire>
    <wire loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x40e71520"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40e91b70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40e91b70"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41665010"/></to>
    </wire>
    <wire loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x40e753e0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40eab0f0"/></to>
    </wire>
    <wire loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x40e69900"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x40e9ac48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Cache" scoped="" ref="0x40e9ac48"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x416a05c8"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40e6dbe8"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40edbb70"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x41024598"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40edb0f0"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x41024c50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40edb7d0"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x41022010"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40edbb70"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x4101a150"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x40ed54f0"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41022948"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d5b700"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x410215d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d5d290"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x41021c38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40eb3680"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40eb3680"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4052f670"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x4101fea0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40eaf458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40eaf458"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4052f670"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x4101b618"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40dac1e8"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40e64150"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40dac1e8"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40e68648"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x410268c8"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x4101bcb0"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40e79e70"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x40e70a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41050a70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41050a70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4052f670"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CongestionTimer" scoped="" ref="0x40e6c660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4104cad0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4104cad0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4052f670"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4101b220"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c5c3a0"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40e67810"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c5c3a0"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e782e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f426a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f426a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416dd4a8"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e78998"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40fa4a48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40fa4a48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d5c558"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x40e78cd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f9f5c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f9f5c0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40d5cbf0"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40e76098"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f42d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f42d38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d5b010"/></to>
    </wire>
    <wire loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40e67c08"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x410263f0"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40e76730"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x41027d60"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40e76d08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d5d290"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40e67238"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40f6f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f6f010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d5a3f0"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e66510"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f703f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f703f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d5b700"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e647e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40376d48"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40ed6be8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40c5c3a0"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40ed5888"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41046e80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41046e80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x417177c8"/></to>
    </wire>
    <wire loc="187:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ed64c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41043ea8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41043ea8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d5c558"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ed7cc8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41045530"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41045530"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d5b010"/></to>
    </wire>
    <wire loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x40ed7030"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41045bc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41045bc8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d5b700"/></to>
    </wire>
    <wire loc="203:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ed6890"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40749500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendTask" scoped="" ref="0x40e63430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CtpPacket" scoped="" ref="0x4169e350"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40d81530"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x416ddb70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f6bc08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x416db230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d5b700"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40f6bc08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f66be0"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40f763d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d5db68"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f76a80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d5b700"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f75690"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d5b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40f75d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40f74270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fa4d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d5b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fa14d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d5b700"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f9f8d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d5b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f9e010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d5b700"/></to>
    </wire>
    <wire>
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x4101a8e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x4101a4a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41044870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d5a3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41717e90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f6bc08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41715540"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d5b700"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41042200"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d5b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41042898"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d5b700"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41069010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4175d230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4175d230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d6f190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4175fb68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d71100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CollectionId" scoped="" ref="0x40d8b980"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x4175a328"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4109b1d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x410931d0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4105ca50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41056108"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4105b7d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41055770"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4105b478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41056848"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4105aba0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41055e08"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4105bec0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41056b70"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4109ee00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41099de0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41095ca8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x410591b0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4109f360"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4109a100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4109fa18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4109ba90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x410957a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x41256560"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4109a100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x411604f8"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4109ba90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41160138"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x41160c88"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x410957a0"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x410cb5e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x41095ca8"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4115ecc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x41095ca8"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41151eb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x41095ca8"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4115e230"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x410caa80"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x4115e708"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x410cc960"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x410c6d08"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x41159238"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x410c8340"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4115baf0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4115baf0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41181840"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x41151630"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x41182010"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x41182010"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4117c1d8"/></to>
    </wire>
    <wire loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x410d5d90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x410b5788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x410d6bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x410d2a70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x4115d970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x4115dda8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x4117fe20"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x41181cb0"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x41181cb0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x411775c8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x4117c1d8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x411779e0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x41181840"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x411771b0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4117cc50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x412060d0"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x412060d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4125b980"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x411918b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4117cc50"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x41192350"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x411c12e8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x411c12e8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x411be9c8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x41192788"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x411c17f8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x411c17f8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x411beef8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x41192bc0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x411c1cf0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x411c1cf0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x411bb420"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x411bf390"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x411baea8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x411c0968"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x411ba460"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x411c0e78"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x411ba990"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x411b9a98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40382760"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x411b71f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4125abd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41204b60"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41204b60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41267980"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41266b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x412004d0"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x412004d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x411f5950"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x411fb7a8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x411f0c90"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x411fa508"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x411efa48"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x411f8720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4122f940"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x411f8720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4122c5b8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x411f8720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x412291c0"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41264698"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x412004d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41280920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4105b7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4127f010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4105bec0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4127fc08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4105aba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x417ace40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41288100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x417aa510"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4105bec0"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41288100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41286818"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41285010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4105ca50"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x412856b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4105bec0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41284310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4105b7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x412849e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x41284e20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x412b26a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4105b7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x412b2d40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4105bec0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x412b1950"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4105aba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x417cdc80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41288100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x418263f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4105bec0"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x412a49a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.9 2008/06/26 03:38:27 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeC" loc="22:MultihopOscilloscopeC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.TimerMilliC" loc="36(MultihopOscilloscopeAppC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40546d28"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.Sensor" loc="19(MultihopOscilloscopeAppC.Sensor):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.Sensor.DemoChannel" loc="29(MultihopOscilloscopeAppC.Sensor.DemoChannel):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC" loc="21(MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.12 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.18 $ $Date: 2008/06/24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:CC2420CsmaP.nc" safe="">
      <documentation loc="32:CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x40354ea8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.5 2008/06/11 00:46:27 razvanm Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008/06/26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008/06/26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008/06/23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2008/06/24 05:32:32 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.15 $ $Date: 2008/07/10 21:46:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="35(CC2420PacketC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="36(CC2420PacketC.DummyTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DefaultLplC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; The minimum number of samples that must be taken in CC2420DutyCycleP&#10; that show the channel is not clear before a detection event is issued&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="DefaultLplP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Tony O'Donovan&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PowerCycleC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
        <short>&#10; Use this component to duty cycle the radio.</short>
        <long>&#10; Use this component to duty cycle the radio. When a message is heard, &#10; disable DutyCycling.&#10;&#10; @author David Moss dmm@rincon.com&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PowerCycleP" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Tony O'Donovan&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PowerCycleC.RadioPowerStateC" loc="65(PowerCycleC.RadioPowerStateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.SplitControlStateC" loc="65(PowerCycleC.SplitControlStateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.OnTimerC" loc="36(PowerCycleC.OnTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.CheckTimerC" loc="36(PowerCycleC.CheckTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.SendStateC" loc="65(DefaultLplC.SendStateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.OffTimerC" loc="36(DefaultLplC.OffTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.SendDoneTimerC" loc="36(DefaultLplC.SendDoneTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CollectionC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="129(CtpP.Forwarder):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
            <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40e92680"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40da01b0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40da0438"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40e92680"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40da01b0"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40da0438"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="36(CtpP.RoutingBeaconTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="36(CtpP.RouteUpdateTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="39(CtpP.AMSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.AMQueueEntryP" loc="35(CtpP.AMSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="35(CtpP.AMReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="36(CtpP.AMSnooperC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="96(CtpP.Router):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2008/06/04 04:30:41 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="36(CtpP.RetxmitTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.CongestionTimer" loc="36(CtpP.CongestionTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="39(CtpP.SendControl):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.AMQueueEntryP" loc="35(CtpP.SendControl.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="35(CtpP.ReceiveControl):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.CollectionSenderC" loc="43(MultihopOscilloscopeAppC.CollectionSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP" loc="34(MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403521d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.SerialAMSenderC" loc="39(MultihopOscilloscopeAppC.SerialAMSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP" loc="35(MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="37(SerialAMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.UARTMessagePoolP" loc="41(MultihopOscilloscopeAppC.UARTMessagePoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
            <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP" loc="53(MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40e92680"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.UARTQueueP" loc="42(MultihopOscilloscopeAppC.UARTQueueP):/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
              <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugMessagePool" loc="41(MultihopOscilloscopeAppC.DebugMessagePool):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
            <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugMessagePool.PoolP" loc="53(MultihopOscilloscopeAppC.DebugMessagePool.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40e92680"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugSendQueue" loc="42(MultihopOscilloscopeAppC.DebugSendQueue):/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
              <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugSerialSender" loc="39(MultihopOscilloscopeAppC.DebugSerialSender):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:114">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP" loc="35(MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UARTDebugSenderP" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403bd0e8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403bd300" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403bd518" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403c14f0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403c1718" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403c1940" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403c1b30" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40412878" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40412aa0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40412cc8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40412eb8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40546d28" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40546d28"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40546ee8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4055c010" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4055c010"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4055c1d0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405e3138" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405e3138"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405ee600" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405ee600"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x405ee7e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4061ace0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4061ace0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc" abstract="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x406a15f0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x4069cb18" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x406b0130" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x406f8940" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x406f8940"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x408da478" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x408da478"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x408da698" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x408d0428" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x408d0428"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x408d0870" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x408d0870"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x408d0a30" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40902228" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40902228"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40902670" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40902670"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x408ea628" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x408ea628"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x408eaa88" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x408eaa88"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x408eacf0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x408eacf0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40910178" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40910178"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x409103e0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40910868" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40910868"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x4091c158" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x4091c158"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4091c5b8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4091c5b8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4091c820" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4091c820"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4091cc90" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4091cc90"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4091cef8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x4096a4e0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x4096a708" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x4096a930" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4096ab20" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40a8ce50" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2008/06/24 05:32:32 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40aaa8c0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40e92680" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40e92680"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40e928a0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40e8eb58" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40e8eb58"/></type-var>
        </typedef>
        <constant name="size" ref="0x40e8ed48" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40eac448" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40eac448"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40eac670" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x40e9b900" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40e96398" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40ee1e80" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40f3f928" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40f65110" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40f6e320" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40fa0de0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2008/06/04 04:30:41 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x40f92010" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x40f92250" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x40f92490" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x4106bcd0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x41067870" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x41067a88" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x41062548" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x41292a38" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x40381db8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40381188" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40381188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40381360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40382ec0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4037cef0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4037cef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037f0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40382760" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40382760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40382938"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40382a18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40382af8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40382bd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40382cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40388548" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40388548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40388720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40388168" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40388168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40388340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40388950" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40388950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40388b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4038b010" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4038b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4038cc18" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4038cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40394c08" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40394c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40394de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x40394218" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x40394218"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403943f0"/>
        <function-ref name="isInput" scoped="" ref="0x403944d0"/>
        <function-ref name="toggle" scoped="" ref="0x403945b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40394690"/>
        <function-ref name="get" scoped="" ref="0x40394770"/>
        <function-ref name="makeOutput" scoped="" ref="0x40394850"/>
        <function-ref name="set" scoped="" ref="0x40394930"/>
        <function-ref name="clr" scoped="" ref="0x40394a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4038bba0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4038bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038bd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403b1750" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403b1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b1b28"/>
        <function-ref name="isInput" scoped="" ref="0x403b1c08"/>
        <function-ref name="toggle" scoped="" ref="0x403b1ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b1dc8"/>
        <function-ref name="get" scoped="" ref="0x403b1ea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ba010"/>
        <function-ref name="set" scoped="" ref="0x403ba0f0"/>
        <function-ref name="clr" scoped="" ref="0x403ba1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403a2d08" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403a2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a2ee0"/>
        <function-ref name="isInput" scoped="" ref="0x403ab010"/>
        <function-ref name="toggle" scoped="" ref="0x403ab0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ab1d0"/>
        <function-ref name="get" scoped="" ref="0x403ab2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ab390"/>
        <function-ref name="set" scoped="" ref="0x403ab470"/>
        <function-ref name="clr" scoped="" ref="0x403ab550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403af2f0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403af2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403af4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403af5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403af688"/>
        <function-ref name="isOutput" scoped="" ref="0x403af768"/>
        <function-ref name="get" scoped="" ref="0x403af848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403af928"/>
        <function-ref name="set" scoped="" ref="0x403afa08"/>
        <function-ref name="clr" scoped="" ref="0x403afae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403b44b0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403b44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b4688"/>
        <function-ref name="isInput" scoped="" ref="0x403b4768"/>
        <function-ref name="toggle" scoped="" ref="0x403b4848"/>
        <function-ref name="isOutput" scoped="" ref="0x403b4928"/>
        <function-ref name="get" scoped="" ref="0x403b4a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b4ae8"/>
        <function-ref name="set" scoped="" ref="0x403b4bc8"/>
        <function-ref name="clr" scoped="" ref="0x403b4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403968e0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403968e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40396ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40396b98"/>
        <function-ref name="toggle" scoped="" ref="0x40396c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40396d58"/>
        <function-ref name="get" scoped="" ref="0x40396e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40396f18"/>
        <function-ref name="set" scoped="" ref="0x4039d010"/>
        <function-ref name="clr" scoped="" ref="0x4039d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403b50a0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403b50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b5278"/>
        <function-ref name="isInput" scoped="" ref="0x403b5358"/>
        <function-ref name="toggle" scoped="" ref="0x403b5438"/>
        <function-ref name="isOutput" scoped="" ref="0x403b5518"/>
        <function-ref name="get" scoped="" ref="0x403b55f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b56d8"/>
        <function-ref name="set" scoped="" ref="0x403b57b8"/>
        <function-ref name="clr" scoped="" ref="0x403b5898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x4039dce8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039dec0"/>
        <function-ref name="isInput" scoped="" ref="0x4039c010"/>
        <function-ref name="toggle" scoped="" ref="0x4039c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4039c1d0"/>
        <function-ref name="get" scoped="" ref="0x4039c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039c390"/>
        <function-ref name="set" scoped="" ref="0x4039c470"/>
        <function-ref name="clr" scoped="" ref="0x4039c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4039e4b0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4039e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039e688"/>
        <function-ref name="isInput" scoped="" ref="0x4039e768"/>
        <function-ref name="toggle" scoped="" ref="0x4039e848"/>
        <function-ref name="isOutput" scoped="" ref="0x4039e928"/>
        <function-ref name="get" scoped="" ref="0x4039ea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039eae8"/>
        <function-ref name="set" scoped="" ref="0x4039ebc8"/>
        <function-ref name="clr" scoped="" ref="0x4039eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403aac08" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403aac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403aade0"/>
        <function-ref name="isInput" scoped="" ref="0x403aaec0"/>
        <function-ref name="toggle" scoped="" ref="0x403a9010"/>
        <function-ref name="isOutput" scoped="" ref="0x403a90f0"/>
        <function-ref name="get" scoped="" ref="0x403a91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a92b0"/>
        <function-ref name="set" scoped="" ref="0x403a9390"/>
        <function-ref name="clr" scoped="" ref="0x403a9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403ad210" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403ad210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ad3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403ad4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403ad5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ad688"/>
        <function-ref name="get" scoped="" ref="0x403ad768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ad848"/>
        <function-ref name="set" scoped="" ref="0x403ad928"/>
        <function-ref name="clr" scoped="" ref="0x403ada08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40399670" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40399670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40399848"/>
        <function-ref name="isInput" scoped="" ref="0x40399928"/>
        <function-ref name="toggle" scoped="" ref="0x40399a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40399ae8"/>
        <function-ref name="get" scoped="" ref="0x40399bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40399ca8"/>
        <function-ref name="set" scoped="" ref="0x40399d88"/>
        <function-ref name="clr" scoped="" ref="0x40399e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x4039bc08" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x4039bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039bde0"/>
        <function-ref name="isInput" scoped="" ref="0x4039bec0"/>
        <function-ref name="toggle" scoped="" ref="0x4039a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4039a0f0"/>
        <function-ref name="get" scoped="" ref="0x4039a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039a2b0"/>
        <function-ref name="set" scoped="" ref="0x4039a390"/>
        <function-ref name="clr" scoped="" ref="0x4039a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403a42f0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403a42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a44c8"/>
        <function-ref name="isInput" scoped="" ref="0x403a45a8"/>
        <function-ref name="toggle" scoped="" ref="0x403a4688"/>
        <function-ref name="isOutput" scoped="" ref="0x403a4768"/>
        <function-ref name="get" scoped="" ref="0x403a4848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a4928"/>
        <function-ref name="set" scoped="" ref="0x403a4a08"/>
        <function-ref name="clr" scoped="" ref="0x403a4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403a8a98" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403a8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a8c70"/>
        <function-ref name="isInput" scoped="" ref="0x403a8d50"/>
        <function-ref name="toggle" scoped="" ref="0x403a8e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403a8f10"/>
        <function-ref name="get" scoped="" ref="0x403a7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a70f0"/>
        <function-ref name="set" scoped="" ref="0x403a71d0"/>
        <function-ref name="clr" scoped="" ref="0x403a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403b22f0" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b24c8"/>
        <function-ref name="isInput" scoped="" ref="0x403b25a8"/>
        <function-ref name="toggle" scoped="" ref="0x403b2688"/>
        <function-ref name="isOutput" scoped="" ref="0x403b2768"/>
        <function-ref name="get" scoped="" ref="0x403b2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b2928"/>
        <function-ref name="set" scoped="" ref="0x403b2a08"/>
        <function-ref name="clr" scoped="" ref="0x403b2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403b9830" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403b9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9a08"/>
        <function-ref name="isInput" scoped="" ref="0x403b9ae8"/>
        <function-ref name="toggle" scoped="" ref="0x403b9bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9ca8"/>
        <function-ref name="get" scoped="" ref="0x403b9d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b9e68"/>
        <function-ref name="set" scoped="" ref="0x403b8010"/>
        <function-ref name="clr" scoped="" ref="0x403b80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403a7ea8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403a7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b00c0"/>
        <function-ref name="isInput" scoped="" ref="0x403b01a0"/>
        <function-ref name="toggle" scoped="" ref="0x403b0280"/>
        <function-ref name="isOutput" scoped="" ref="0x403b0360"/>
        <function-ref name="get" scoped="" ref="0x403b0440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b0520"/>
        <function-ref name="set" scoped="" ref="0x403b0600"/>
        <function-ref name="clr" scoped="" ref="0x403b06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403974b0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403974b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40397688"/>
        <function-ref name="isInput" scoped="" ref="0x40397768"/>
        <function-ref name="toggle" scoped="" ref="0x40397848"/>
        <function-ref name="isOutput" scoped="" ref="0x40397928"/>
        <function-ref name="get" scoped="" ref="0x40397a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40397ae8"/>
        <function-ref name="set" scoped="" ref="0x40397bc8"/>
        <function-ref name="clr" scoped="" ref="0x40397ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403a1b18" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403a1b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a1cf0"/>
        <function-ref name="isInput" scoped="" ref="0x403a1dd0"/>
        <function-ref name="toggle" scoped="" ref="0x403a1eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a0010"/>
        <function-ref name="get" scoped="" ref="0x403a00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a01d0"/>
        <function-ref name="set" scoped="" ref="0x403a02b0"/>
        <function-ref name="clr" scoped="" ref="0x403a0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403ba3d0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403ba3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ba5a8"/>
        <function-ref name="isInput" scoped="" ref="0x403ba688"/>
        <function-ref name="toggle" scoped="" ref="0x403ba768"/>
        <function-ref name="isOutput" scoped="" ref="0x403ba848"/>
        <function-ref name="get" scoped="" ref="0x403ba928"/>
        <function-ref name="makeOutput" scoped="" ref="0x403baa08"/>
        <function-ref name="set" scoped="" ref="0x403baae8"/>
        <function-ref name="clr" scoped="" ref="0x403babc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x4039f010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x4039f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4039f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4039f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4039f488"/>
        <function-ref name="get" scoped="" ref="0x4039f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039f648"/>
        <function-ref name="set" scoped="" ref="0x4039f728"/>
        <function-ref name="clr" scoped="" ref="0x4039f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403ab750" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403ab750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ab928"/>
        <function-ref name="isInput" scoped="" ref="0x403aba08"/>
        <function-ref name="toggle" scoped="" ref="0x403abae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403abbc8"/>
        <function-ref name="get" scoped="" ref="0x403abca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403abd88"/>
        <function-ref name="set" scoped="" ref="0x403abe68"/>
        <function-ref name="clr" scoped="" ref="0x403aa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403afce8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403afce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403afec0"/>
        <function-ref name="isInput" scoped="" ref="0x403ae010"/>
        <function-ref name="toggle" scoped="" ref="0x403ae0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ae1d0"/>
        <function-ref name="get" scoped="" ref="0x403ae2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ae390"/>
        <function-ref name="set" scoped="" ref="0x403ae470"/>
        <function-ref name="clr" scoped="" ref="0x403ae550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403b4ea8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403b4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b30c0"/>
        <function-ref name="isInput" scoped="" ref="0x403b31a0"/>
        <function-ref name="toggle" scoped="" ref="0x403b3280"/>
        <function-ref name="isOutput" scoped="" ref="0x403b3360"/>
        <function-ref name="get" scoped="" ref="0x403b3440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b3520"/>
        <function-ref name="set" scoped="" ref="0x403b3600"/>
        <function-ref name="clr" scoped="" ref="0x403b36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4039d2f0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4039d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039d4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4039d5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4039d688"/>
        <function-ref name="isOutput" scoped="" ref="0x4039d768"/>
        <function-ref name="get" scoped="" ref="0x4039d848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039d928"/>
        <function-ref name="set" scoped="" ref="0x4039da08"/>
        <function-ref name="clr" scoped="" ref="0x4039dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x4039c750" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x4039c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039c928"/>
        <function-ref name="isInput" scoped="" ref="0x4039ca08"/>
        <function-ref name="toggle" scoped="" ref="0x4039cae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4039cbc8"/>
        <function-ref name="get" scoped="" ref="0x4039cca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039cd88"/>
        <function-ref name="set" scoped="" ref="0x4039ce68"/>
        <function-ref name="clr" scoped="" ref="0x4039b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4039eea8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4039eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a50c0"/>
        <function-ref name="isInput" scoped="" ref="0x403a51a0"/>
        <function-ref name="toggle" scoped="" ref="0x403a5280"/>
        <function-ref name="isOutput" scoped="" ref="0x403a5360"/>
        <function-ref name="get" scoped="" ref="0x403a5440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a5520"/>
        <function-ref name="set" scoped="" ref="0x403a5600"/>
        <function-ref name="clr" scoped="" ref="0x403a56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403a9670" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a9848"/>
        <function-ref name="isInput" scoped="" ref="0x403a9928"/>
        <function-ref name="toggle" scoped="" ref="0x403a9a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403a9ae8"/>
        <function-ref name="get" scoped="" ref="0x403a9bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a9ca8"/>
        <function-ref name="set" scoped="" ref="0x403a9d88"/>
        <function-ref name="clr" scoped="" ref="0x403a9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403adc08" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403adc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403adde0"/>
        <function-ref name="isInput" scoped="" ref="0x403adec0"/>
        <function-ref name="toggle" scoped="" ref="0x403ac010"/>
        <function-ref name="isOutput" scoped="" ref="0x403ac0f0"/>
        <function-ref name="get" scoped="" ref="0x403ac1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ac2b0"/>
        <function-ref name="set" scoped="" ref="0x403ac390"/>
        <function-ref name="clr" scoped="" ref="0x403ac470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403980a0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40398278"/>
        <function-ref name="isInput" scoped="" ref="0x40398358"/>
        <function-ref name="toggle" scoped="" ref="0x40398438"/>
        <function-ref name="isOutput" scoped="" ref="0x40398518"/>
        <function-ref name="get" scoped="" ref="0x403985f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403986d8"/>
        <function-ref name="set" scoped="" ref="0x403987b8"/>
        <function-ref name="clr" scoped="" ref="0x40398898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x4039a670" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x4039a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039a8c8"/>
        <function-ref name="isInput" scoped="" ref="0x4039a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x4039aa88"/>
        <function-ref name="isOutput" scoped="" ref="0x4039ab68"/>
        <function-ref name="get" scoped="" ref="0x4039ac48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039ad28"/>
        <function-ref name="set" scoped="" ref="0x4039ae08"/>
        <function-ref name="clr" scoped="" ref="0x4039aee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403a4ce8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403a4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a4ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403a3010"/>
        <function-ref name="toggle" scoped="" ref="0x403a30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a31d0"/>
        <function-ref name="get" scoped="" ref="0x403a32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a3390"/>
        <function-ref name="set" scoped="" ref="0x403a3470"/>
        <function-ref name="clr" scoped="" ref="0x403a3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403b2ce8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403b2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403b1010"/>
        <function-ref name="toggle" scoped="" ref="0x403b10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b11d0"/>
        <function-ref name="get" scoped="" ref="0x403b12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b1390"/>
        <function-ref name="set" scoped="" ref="0x403b1470"/>
        <function-ref name="clr" scoped="" ref="0x403b1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403a2210" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403a2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a24e8"/>
        <function-ref name="isInput" scoped="" ref="0x403a25c8"/>
        <function-ref name="toggle" scoped="" ref="0x403a26a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a2788"/>
        <function-ref name="get" scoped="" ref="0x403a2868"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a2948"/>
        <function-ref name="set" scoped="" ref="0x403a2a28"/>
        <function-ref name="clr" scoped="" ref="0x403a2b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403b08e0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403b08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403b0b98"/>
        <function-ref name="toggle" scoped="" ref="0x403b0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403b0d58"/>
        <function-ref name="get" scoped="" ref="0x403b0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b0f18"/>
        <function-ref name="set" scoped="" ref="0x403af010"/>
        <function-ref name="clr" scoped="" ref="0x403af0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403b5a98" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403b5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b5c70"/>
        <function-ref name="isInput" scoped="" ref="0x403b5d50"/>
        <function-ref name="toggle" scoped="" ref="0x403b5e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403b5f10"/>
        <function-ref name="get" scoped="" ref="0x403b4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b40f0"/>
        <function-ref name="set" scoped="" ref="0x403b41d0"/>
        <function-ref name="clr" scoped="" ref="0x403b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403b82f0" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403b82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b84c8"/>
        <function-ref name="isInput" scoped="" ref="0x403b85a8"/>
        <function-ref name="toggle" scoped="" ref="0x403b8688"/>
        <function-ref name="isOutput" scoped="" ref="0x403b8768"/>
        <function-ref name="get" scoped="" ref="0x403b8848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b8928"/>
        <function-ref name="set" scoped="" ref="0x403b8a08"/>
        <function-ref name="clr" scoped="" ref="0x403b8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x40397ea8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x40397ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403960c0"/>
        <function-ref name="isInput" scoped="" ref="0x403961a0"/>
        <function-ref name="toggle" scoped="" ref="0x40396280"/>
        <function-ref name="isOutput" scoped="" ref="0x40396360"/>
        <function-ref name="get" scoped="" ref="0x40396440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40396520"/>
        <function-ref name="set" scoped="" ref="0x40396600"/>
        <function-ref name="clr" scoped="" ref="0x403966e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403a0590" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403a0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a0768"/>
        <function-ref name="isInput" scoped="" ref="0x403a0848"/>
        <function-ref name="toggle" scoped="" ref="0x403a0928"/>
        <function-ref name="isOutput" scoped="" ref="0x403a0a08"/>
        <function-ref name="get" scoped="" ref="0x403a0ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a0bc8"/>
        <function-ref name="set" scoped="" ref="0x403a0ca8"/>
        <function-ref name="clr" scoped="" ref="0x403a0d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403ac670" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403ac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ac848"/>
        <function-ref name="isInput" scoped="" ref="0x403ac928"/>
        <function-ref name="toggle" scoped="" ref="0x403aca08"/>
        <function-ref name="isOutput" scoped="" ref="0x403acae8"/>
        <function-ref name="get" scoped="" ref="0x403acbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403acca8"/>
        <function-ref name="set" scoped="" ref="0x403acd88"/>
        <function-ref name="clr" scoped="" ref="0x403ace68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4039fa08" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4039fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x4039fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x4039fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x4039fe80"/>
        <function-ref name="get" scoped="" ref="0x4039e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039e0f0"/>
        <function-ref name="set" scoped="" ref="0x4039e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4039e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403aa210" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403aa210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403aa3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403aa4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403aa5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403aa688"/>
        <function-ref name="get" scoped="" ref="0x403aa768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403aa848"/>
        <function-ref name="set" scoped="" ref="0x403aa928"/>
        <function-ref name="clr" scoped="" ref="0x403aaa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403ae750" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403ae750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ae928"/>
        <function-ref name="isInput" scoped="" ref="0x403aea08"/>
        <function-ref name="toggle" scoped="" ref="0x403aeae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403aebc8"/>
        <function-ref name="get" scoped="" ref="0x403aeca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403aed88"/>
        <function-ref name="set" scoped="" ref="0x403aee68"/>
        <function-ref name="clr" scoped="" ref="0x403ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403b38e0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403b38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b3ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403b3b98"/>
        <function-ref name="toggle" scoped="" ref="0x403b3c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403b3d58"/>
        <function-ref name="get" scoped="" ref="0x403b3e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b3f18"/>
        <function-ref name="set" scoped="" ref="0x403b2010"/>
        <function-ref name="clr" scoped="" ref="0x403b20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x4038ac20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x4038ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4038adf8"/>
        <function-ref name="isInput" scoped="" ref="0x4038aed8"/>
        <function-ref name="toggle" scoped="" ref="0x40399010"/>
        <function-ref name="isOutput" scoped="" ref="0x403990f0"/>
        <function-ref name="get" scoped="" ref="0x403991d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403992b0"/>
        <function-ref name="set" scoped="" ref="0x40399390"/>
        <function-ref name="clr" scoped="" ref="0x40399470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x4039b210" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x4039b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039b3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4039b4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4039b5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4039b688"/>
        <function-ref name="get" scoped="" ref="0x4039b768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039b848"/>
        <function-ref name="set" scoped="" ref="0x4039b928"/>
        <function-ref name="clr" scoped="" ref="0x4039ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403a58e0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403a58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a5ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403a5b98"/>
        <function-ref name="toggle" scoped="" ref="0x403a5c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403a5d58"/>
        <function-ref name="get" scoped="" ref="0x403a5e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a5f18"/>
        <function-ref name="set" scoped="" ref="0x403a4010"/>
        <function-ref name="clr" scoped="" ref="0x403a40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403a80a0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403a80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a8278"/>
        <function-ref name="isInput" scoped="" ref="0x403a8358"/>
        <function-ref name="toggle" scoped="" ref="0x403a8438"/>
        <function-ref name="isOutput" scoped="" ref="0x403a8518"/>
        <function-ref name="get" scoped="" ref="0x403a85f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a86d8"/>
        <function-ref name="set" scoped="" ref="0x403a87b8"/>
        <function-ref name="clr" scoped="" ref="0x403a8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403badc8" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403badc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9010"/>
        <function-ref name="isInput" scoped="" ref="0x403b90f0"/>
        <function-ref name="toggle" scoped="" ref="0x403b91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b92b0"/>
        <function-ref name="get" scoped="" ref="0x403b9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b9470"/>
        <function-ref name="set" scoped="" ref="0x403b9550"/>
        <function-ref name="clr" scoped="" ref="0x403b9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403a74b0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403a74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a7688"/>
        <function-ref name="isInput" scoped="" ref="0x403a7768"/>
        <function-ref name="toggle" scoped="" ref="0x403a7848"/>
        <function-ref name="isOutput" scoped="" ref="0x403a7928"/>
        <function-ref name="get" scoped="" ref="0x403a7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a7ae8"/>
        <function-ref name="set" scoped="" ref="0x403a7bc8"/>
        <function-ref name="clr" scoped="" ref="0x403a7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403a3750" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403a3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a3928"/>
        <function-ref name="isInput" scoped="" ref="0x403a3a08"/>
        <function-ref name="toggle" scoped="" ref="0x403a3ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a3bc8"/>
        <function-ref name="get" scoped="" ref="0x403a3ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a3d88"/>
        <function-ref name="set" scoped="" ref="0x403a3e68"/>
        <function-ref name="clr" scoped="" ref="0x403a2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40398a98" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40398a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40398c70"/>
        <function-ref name="isInput" scoped="" ref="0x40398d50"/>
        <function-ref name="toggle" scoped="" ref="0x40398e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40398f10"/>
        <function-ref name="get" scoped="" ref="0x40397010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403970f0"/>
        <function-ref name="set" scoped="" ref="0x403971d0"/>
        <function-ref name="clr" scoped="" ref="0x403972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403a1120" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403a1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a12f8"/>
        <function-ref name="isInput" scoped="" ref="0x403a13d8"/>
        <function-ref name="toggle" scoped="" ref="0x403a14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a1598"/>
        <function-ref name="get" scoped="" ref="0x403a1678"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a1758"/>
        <function-ref name="set" scoped="" ref="0x403a1838"/>
        <function-ref name="clr" scoped="" ref="0x403a1918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403dfba8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403dfba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dfd80"/>
        <function-ref name="isInput" scoped="" ref="0x403dfe60"/>
        <function-ref name="toggle" scoped="" ref="0x403de010"/>
        <function-ref name="isOutput" scoped="" ref="0x403de0f0"/>
        <function-ref name="get" scoped="" ref="0x403de1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403de2b0"/>
        <function-ref name="set" scoped="" ref="0x403de390"/>
        <function-ref name="clr" scoped="" ref="0x403de470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403e6890" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403e6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6a68"/>
        <function-ref name="isInput" scoped="" ref="0x403e6b48"/>
        <function-ref name="toggle" scoped="" ref="0x403e6c28"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6d08"/>
        <function-ref name="get" scoped="" ref="0x403e6de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6ec8"/>
        <function-ref name="set" scoped="" ref="0x403e5010"/>
        <function-ref name="clr" scoped="" ref="0x403e50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403e08e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403e08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e0b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e0d58"/>
        <function-ref name="get" scoped="" ref="0x403e0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0f18"/>
        <function-ref name="set" scoped="" ref="0x403df010"/>
        <function-ref name="clr" scoped="" ref="0x403df0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403de5d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403de5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403de7a8"/>
        <function-ref name="isInput" scoped="" ref="0x403de888"/>
        <function-ref name="toggle" scoped="" ref="0x403de968"/>
        <function-ref name="isOutput" scoped="" ref="0x403dea48"/>
        <function-ref name="get" scoped="" ref="0x403deb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dec08"/>
        <function-ref name="set" scoped="" ref="0x403dece8"/>
        <function-ref name="clr" scoped="" ref="0x403dedc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403e5250" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403e5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5428"/>
        <function-ref name="isInput" scoped="" ref="0x403e5508"/>
        <function-ref name="toggle" scoped="" ref="0x403e55e8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e56c8"/>
        <function-ref name="get" scoped="" ref="0x403e57a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e5888"/>
        <function-ref name="set" scoped="" ref="0x403e5968"/>
        <function-ref name="clr" scoped="" ref="0x403e5a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403df250" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403df250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df428"/>
        <function-ref name="isInput" scoped="" ref="0x403df508"/>
        <function-ref name="toggle" scoped="" ref="0x403df5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x403df6c8"/>
        <function-ref name="get" scoped="" ref="0x403df7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df888"/>
        <function-ref name="set" scoped="" ref="0x403df968"/>
        <function-ref name="clr" scoped="" ref="0x403dfa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403def28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403def28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6110"/>
        <function-ref name="isInput" scoped="" ref="0x403e61f0"/>
        <function-ref name="toggle" scoped="" ref="0x403e62d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e63b0"/>
        <function-ref name="get" scoped="" ref="0x403e6490"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6570"/>
        <function-ref name="set" scoped="" ref="0x403e6650"/>
        <function-ref name="clr" scoped="" ref="0x403e6730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403e5ba8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403e5ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5d80"/>
        <function-ref name="isInput" scoped="" ref="0x403e5e60"/>
        <function-ref name="toggle" scoped="" ref="0x403e4010"/>
        <function-ref name="isOutput" scoped="" ref="0x403e40f0"/>
        <function-ref name="get" scoped="" ref="0x403e41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e42b0"/>
        <function-ref name="set" scoped="" ref="0x403e4390"/>
        <function-ref name="clr" scoped="" ref="0x403e4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412f6d80" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412f6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412f3010"/>
        <function-ref name="isInput" scoped="" ref="0x412f30f0"/>
        <function-ref name="toggle" scoped="" ref="0x412f31d0"/>
        <function-ref name="isOutput" scoped="" ref="0x412f32b0"/>
        <function-ref name="get" scoped="" ref="0x412f3390"/>
        <function-ref name="makeOutput" scoped="" ref="0x412f3470"/>
        <function-ref name="set" scoped="" ref="0x412f3550"/>
        <function-ref name="clr" scoped="" ref="0x412f3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412f27f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412f27f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412f29d0"/>
        <function-ref name="isInput" scoped="" ref="0x412f2ab0"/>
        <function-ref name="toggle" scoped="" ref="0x412f2b90"/>
        <function-ref name="isOutput" scoped="" ref="0x412f2c70"/>
        <function-ref name="get" scoped="" ref="0x412f2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x412f2e30"/>
        <function-ref name="set" scoped="" ref="0x412f2f10"/>
        <function-ref name="clr" scoped="" ref="0x412f1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412f0228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412f0228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412f0400"/>
        <function-ref name="isInput" scoped="" ref="0x412f04e0"/>
        <function-ref name="toggle" scoped="" ref="0x412f05c0"/>
        <function-ref name="isOutput" scoped="" ref="0x412f06a0"/>
        <function-ref name="get" scoped="" ref="0x412f0780"/>
        <function-ref name="makeOutput" scoped="" ref="0x412f0860"/>
        <function-ref name="set" scoped="" ref="0x412f0940"/>
        <function-ref name="clr" scoped="" ref="0x412f0a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412eec08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412eec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412eede0"/>
        <function-ref name="isInput" scoped="" ref="0x412eeec0"/>
        <function-ref name="toggle" scoped="" ref="0x412ed010"/>
        <function-ref name="isOutput" scoped="" ref="0x412ed0f0"/>
        <function-ref name="get" scoped="" ref="0x412ed1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x412ed2b0"/>
        <function-ref name="set" scoped="" ref="0x412ed390"/>
        <function-ref name="clr" scoped="" ref="0x412ed470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412ec6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412ec6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412ec898"/>
        <function-ref name="isInput" scoped="" ref="0x412ec978"/>
        <function-ref name="toggle" scoped="" ref="0x412eca58"/>
        <function-ref name="isOutput" scoped="" ref="0x412ecb38"/>
        <function-ref name="get" scoped="" ref="0x412ecc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x412eccf8"/>
        <function-ref name="set" scoped="" ref="0x412ecdd8"/>
        <function-ref name="clr" scoped="" ref="0x412eceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412ea0b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412ea0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412ea288"/>
        <function-ref name="isInput" scoped="" ref="0x412ea368"/>
        <function-ref name="toggle" scoped="" ref="0x412ea448"/>
        <function-ref name="isOutput" scoped="" ref="0x412ea528"/>
        <function-ref name="get" scoped="" ref="0x412ea608"/>
        <function-ref name="makeOutput" scoped="" ref="0x412ea6e8"/>
        <function-ref name="set" scoped="" ref="0x412ea7c8"/>
        <function-ref name="clr" scoped="" ref="0x412ea8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412e9a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412e9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412e9c60"/>
        <function-ref name="isInput" scoped="" ref="0x412e9d40"/>
        <function-ref name="toggle" scoped="" ref="0x412e9e20"/>
        <function-ref name="isOutput" scoped="" ref="0x412e9f00"/>
        <function-ref name="get" scoped="" ref="0x412e8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x412e80f0"/>
        <function-ref name="set" scoped="" ref="0x412e81d0"/>
        <function-ref name="clr" scoped="" ref="0x412e82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412e7538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412e7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412e7710"/>
        <function-ref name="isInput" scoped="" ref="0x412e77f0"/>
        <function-ref name="toggle" scoped="" ref="0x412e78d0"/>
        <function-ref name="isOutput" scoped="" ref="0x412e79b0"/>
        <function-ref name="get" scoped="" ref="0x412e7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x412e7b70"/>
        <function-ref name="set" scoped="" ref="0x412e7c50"/>
        <function-ref name="clr" scoped="" ref="0x412e7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403ea4f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403ea4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ea6c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ea7a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ea888"/>
        <function-ref name="isOutput" scoped="" ref="0x403ea968"/>
        <function-ref name="get" scoped="" ref="0x403eaa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eab28"/>
        <function-ref name="set" scoped="" ref="0x403eac08"/>
        <function-ref name="clr" scoped="" ref="0x403eace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403e8170" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403e8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e8348"/>
        <function-ref name="isInput" scoped="" ref="0x403e8428"/>
        <function-ref name="toggle" scoped="" ref="0x403e8508"/>
        <function-ref name="isOutput" scoped="" ref="0x403e85e8"/>
        <function-ref name="get" scoped="" ref="0x403e86c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e87a8"/>
        <function-ref name="set" scoped="" ref="0x403e8888"/>
        <function-ref name="clr" scoped="" ref="0x403e8968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403eb228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403eb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eb400"/>
        <function-ref name="isInput" scoped="" ref="0x403eb4e0"/>
        <function-ref name="toggle" scoped="" ref="0x403eb5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x403eb6a0"/>
        <function-ref name="get" scoped="" ref="0x403eb780"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eb860"/>
        <function-ref name="set" scoped="" ref="0x403eb940"/>
        <function-ref name="clr" scoped="" ref="0x403eba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403eae48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403eae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e9050"/>
        <function-ref name="isInput" scoped="" ref="0x403e9130"/>
        <function-ref name="toggle" scoped="" ref="0x403e9210"/>
        <function-ref name="isOutput" scoped="" ref="0x403e92f0"/>
        <function-ref name="get" scoped="" ref="0x403e93d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e94b0"/>
        <function-ref name="set" scoped="" ref="0x403e9590"/>
        <function-ref name="clr" scoped="" ref="0x403e9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403e8ac8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403e8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e8ca0"/>
        <function-ref name="isInput" scoped="" ref="0x403e8d80"/>
        <function-ref name="toggle" scoped="" ref="0x403e8e60"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1010"/>
        <function-ref name="get" scoped="" ref="0x403f10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f11d0"/>
        <function-ref name="set" scoped="" ref="0x403f12b0"/>
        <function-ref name="clr" scoped="" ref="0x403f1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403ebb80" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403ebb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ebd58"/>
        <function-ref name="isInput" scoped="" ref="0x403ebe38"/>
        <function-ref name="toggle" scoped="" ref="0x403ebf18"/>
        <function-ref name="isOutput" scoped="" ref="0x403ea010"/>
        <function-ref name="get" scoped="" ref="0x403ea0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ea1d0"/>
        <function-ref name="set" scoped="" ref="0x403ea2b0"/>
        <function-ref name="clr" scoped="" ref="0x403ea390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403e97d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403e97d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e99a8"/>
        <function-ref name="isInput" scoped="" ref="0x403e9a88"/>
        <function-ref name="toggle" scoped="" ref="0x403e9b68"/>
        <function-ref name="isOutput" scoped="" ref="0x403e9c48"/>
        <function-ref name="get" scoped="" ref="0x403e9d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e9e08"/>
        <function-ref name="set" scoped="" ref="0x403e9ee8"/>
        <function-ref name="clr" scoped="" ref="0x403e8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403f14f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403f14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f16c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f17a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f1888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1968"/>
        <function-ref name="get" scoped="" ref="0x403f1a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f1b28"/>
        <function-ref name="set" scoped="" ref="0x403f1c08"/>
        <function-ref name="clr" scoped="" ref="0x403f1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41304938" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41304938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41304b10"/>
        <function-ref name="isInput" scoped="" ref="0x41304bf0"/>
        <function-ref name="toggle" scoped="" ref="0x41304cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x41304db0"/>
        <function-ref name="get" scoped="" ref="0x41304e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4134a010"/>
        <function-ref name="set" scoped="" ref="0x4134a0f0"/>
        <function-ref name="clr" scoped="" ref="0x4134a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413493b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413493b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41349588"/>
        <function-ref name="isInput" scoped="" ref="0x41349668"/>
        <function-ref name="toggle" scoped="" ref="0x41349748"/>
        <function-ref name="isOutput" scoped="" ref="0x41349828"/>
        <function-ref name="get" scoped="" ref="0x41349908"/>
        <function-ref name="makeOutput" scoped="" ref="0x413499e8"/>
        <function-ref name="set" scoped="" ref="0x41349ac8"/>
        <function-ref name="clr" scoped="" ref="0x41349ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41348d70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41348d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41347010"/>
        <function-ref name="isInput" scoped="" ref="0x413470f0"/>
        <function-ref name="toggle" scoped="" ref="0x413471d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413472b0"/>
        <function-ref name="get" scoped="" ref="0x41347390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41347470"/>
        <function-ref name="set" scoped="" ref="0x41347550"/>
        <function-ref name="clr" scoped="" ref="0x41347630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413467f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413467f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413469d0"/>
        <function-ref name="isInput" scoped="" ref="0x41346ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41346b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41346c70"/>
        <function-ref name="get" scoped="" ref="0x41346d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41346e30"/>
        <function-ref name="set" scoped="" ref="0x41346f10"/>
        <function-ref name="clr" scoped="" ref="0x41345010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41344228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41344228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41344400"/>
        <function-ref name="isInput" scoped="" ref="0x413444e0"/>
        <function-ref name="toggle" scoped="" ref="0x413445c0"/>
        <function-ref name="isOutput" scoped="" ref="0x413446a0"/>
        <function-ref name="get" scoped="" ref="0x41344780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41344860"/>
        <function-ref name="set" scoped="" ref="0x41344940"/>
        <function-ref name="clr" scoped="" ref="0x41344a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41343c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41343c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41343de0"/>
        <function-ref name="isInput" scoped="" ref="0x41343ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41342010"/>
        <function-ref name="isOutput" scoped="" ref="0x413420f0"/>
        <function-ref name="get" scoped="" ref="0x413421d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413422b0"/>
        <function-ref name="set" scoped="" ref="0x41342390"/>
        <function-ref name="clr" scoped="" ref="0x41342470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413416c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413416c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41341898"/>
        <function-ref name="isInput" scoped="" ref="0x41341978"/>
        <function-ref name="toggle" scoped="" ref="0x41341a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41341b38"/>
        <function-ref name="get" scoped="" ref="0x41341c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41341cf8"/>
        <function-ref name="set" scoped="" ref="0x41341dd8"/>
        <function-ref name="clr" scoped="" ref="0x41341eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4133f0b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4133f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4133f288"/>
        <function-ref name="isInput" scoped="" ref="0x4133f368"/>
        <function-ref name="toggle" scoped="" ref="0x4133f448"/>
        <function-ref name="isOutput" scoped="" ref="0x4133f528"/>
        <function-ref name="get" scoped="" ref="0x4133f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4133f6e8"/>
        <function-ref name="set" scoped="" ref="0x4133f7c8"/>
        <function-ref name="clr" scoped="" ref="0x4133f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403f6e48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403f6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f5050"/>
        <function-ref name="isInput" scoped="" ref="0x403f5130"/>
        <function-ref name="toggle" scoped="" ref="0x403f5210"/>
        <function-ref name="isOutput" scoped="" ref="0x403f52f0"/>
        <function-ref name="get" scoped="" ref="0x403f53d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f54b0"/>
        <function-ref name="set" scoped="" ref="0x403f5590"/>
        <function-ref name="clr" scoped="" ref="0x403f5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403f4ac8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403f4ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f4ca0"/>
        <function-ref name="isInput" scoped="" ref="0x403f4d80"/>
        <function-ref name="toggle" scoped="" ref="0x403f4e60"/>
        <function-ref name="isOutput" scoped="" ref="0x403f3010"/>
        <function-ref name="get" scoped="" ref="0x403f30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f31d0"/>
        <function-ref name="set" scoped="" ref="0x403f32b0"/>
        <function-ref name="clr" scoped="" ref="0x403f3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403edb00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403edb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403edcd8"/>
        <function-ref name="isInput" scoped="" ref="0x403eddb8"/>
        <function-ref name="toggle" scoped="" ref="0x403ede98"/>
        <function-ref name="isOutput" scoped="" ref="0x403f6010"/>
        <function-ref name="get" scoped="" ref="0x403f60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f61d0"/>
        <function-ref name="set" scoped="" ref="0x403f62b0"/>
        <function-ref name="clr" scoped="" ref="0x403f6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403f57d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403f57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f59a8"/>
        <function-ref name="isInput" scoped="" ref="0x403f5a88"/>
        <function-ref name="toggle" scoped="" ref="0x403f5b68"/>
        <function-ref name="isOutput" scoped="" ref="0x403f5c48"/>
        <function-ref name="get" scoped="" ref="0x403f5d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f5e08"/>
        <function-ref name="set" scoped="" ref="0x403f5ee8"/>
        <function-ref name="clr" scoped="" ref="0x403f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403f34f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403f34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f36c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f37a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f3888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f3968"/>
        <function-ref name="get" scoped="" ref="0x403f3a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f3b28"/>
        <function-ref name="set" scoped="" ref="0x403f3c08"/>
        <function-ref name="clr" scoped="" ref="0x403f3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403f64f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403f64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f66c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f67a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f6888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f6968"/>
        <function-ref name="get" scoped="" ref="0x403f6a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f6b28"/>
        <function-ref name="set" scoped="" ref="0x403f6c08"/>
        <function-ref name="clr" scoped="" ref="0x403f6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403f4170" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403f4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f4348"/>
        <function-ref name="isInput" scoped="" ref="0x403f4428"/>
        <function-ref name="toggle" scoped="" ref="0x403f4508"/>
        <function-ref name="isOutput" scoped="" ref="0x403f45e8"/>
        <function-ref name="get" scoped="" ref="0x403f46c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f47a8"/>
        <function-ref name="set" scoped="" ref="0x403f4888"/>
        <function-ref name="clr" scoped="" ref="0x403f4968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403f3e48" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403f3e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f2050"/>
        <function-ref name="isInput" scoped="" ref="0x403f2130"/>
        <function-ref name="toggle" scoped="" ref="0x403f2210"/>
        <function-ref name="isOutput" scoped="" ref="0x403f22f0"/>
        <function-ref name="get" scoped="" ref="0x403f23d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f24b0"/>
        <function-ref name="set" scoped="" ref="0x403f2590"/>
        <function-ref name="clr" scoped="" ref="0x403f2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4135b538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4135b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4135b710"/>
        <function-ref name="isInput" scoped="" ref="0x4135b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4135b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4135b9b0"/>
        <function-ref name="get" scoped="" ref="0x4135ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4135bb70"/>
        <function-ref name="set" scoped="" ref="0x4135bc50"/>
        <function-ref name="clr" scoped="" ref="0x4135bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41359010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41359010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413591e8"/>
        <function-ref name="isInput" scoped="" ref="0x413592c8"/>
        <function-ref name="toggle" scoped="" ref="0x413593a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41359488"/>
        <function-ref name="get" scoped="" ref="0x41359568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41359648"/>
        <function-ref name="set" scoped="" ref="0x41359728"/>
        <function-ref name="clr" scoped="" ref="0x41359808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413579e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413579e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41357bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41357ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41357d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41357e60"/>
        <function-ref name="get" scoped="" ref="0x41356010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413560f0"/>
        <function-ref name="set" scoped="" ref="0x413561d0"/>
        <function-ref name="clr" scoped="" ref="0x413562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41355538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41355538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41355710"/>
        <function-ref name="isInput" scoped="" ref="0x413557f0"/>
        <function-ref name="toggle" scoped="" ref="0x413558d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413559b0"/>
        <function-ref name="get" scoped="" ref="0x41355a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41355b70"/>
        <function-ref name="set" scoped="" ref="0x41355c50"/>
        <function-ref name="clr" scoped="" ref="0x41355d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41353010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41353010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413531e8"/>
        <function-ref name="isInput" scoped="" ref="0x413532c8"/>
        <function-ref name="toggle" scoped="" ref="0x413533a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41353488"/>
        <function-ref name="get" scoped="" ref="0x41353568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41353648"/>
        <function-ref name="set" scoped="" ref="0x41353728"/>
        <function-ref name="clr" scoped="" ref="0x41353808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413529e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413529e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41352bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41352ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41352d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41352e60"/>
        <function-ref name="get" scoped="" ref="0x41351010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413510f0"/>
        <function-ref name="set" scoped="" ref="0x413511d0"/>
        <function-ref name="clr" scoped="" ref="0x413512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41350538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41350538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41350710"/>
        <function-ref name="isInput" scoped="" ref="0x413507f0"/>
        <function-ref name="toggle" scoped="" ref="0x413508d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413509b0"/>
        <function-ref name="get" scoped="" ref="0x41350a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41350b70"/>
        <function-ref name="set" scoped="" ref="0x41350c50"/>
        <function-ref name="clr" scoped="" ref="0x41350d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4134e010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4134e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4134e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4134e2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4134e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4134e488"/>
        <function-ref name="get" scoped="" ref="0x4134e568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4134e648"/>
        <function-ref name="set" scoped="" ref="0x4134e728"/>
        <function-ref name="clr" scoped="" ref="0x4134e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403f76b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403f76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f7888"/>
        <function-ref name="isInput" scoped="" ref="0x403f7968"/>
        <function-ref name="toggle" scoped="" ref="0x403f7a48"/>
        <function-ref name="isOutput" scoped="" ref="0x403f7b28"/>
        <function-ref name="get" scoped="" ref="0x403f7c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f7ce8"/>
        <function-ref name="set" scoped="" ref="0x403f7dc8"/>
        <function-ref name="clr" scoped="" ref="0x403f7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403ff330" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403ff330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ff508"/>
        <function-ref name="isInput" scoped="" ref="0x403ff5e8"/>
        <function-ref name="toggle" scoped="" ref="0x403ff6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ff7a8"/>
        <function-ref name="get" scoped="" ref="0x403ff888"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ff968"/>
        <function-ref name="set" scoped="" ref="0x403ffa48"/>
        <function-ref name="clr" scoped="" ref="0x403ffb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403f83d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403f83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f85b0"/>
        <function-ref name="isInput" scoped="" ref="0x403f8690"/>
        <function-ref name="toggle" scoped="" ref="0x403f8770"/>
        <function-ref name="isOutput" scoped="" ref="0x403f8850"/>
        <function-ref name="get" scoped="" ref="0x403f8930"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f8a10"/>
        <function-ref name="set" scoped="" ref="0x403f8af0"/>
        <function-ref name="clr" scoped="" ref="0x403f8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40400030" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40400030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40400208"/>
        <function-ref name="isInput" scoped="" ref="0x404002e8"/>
        <function-ref name="toggle" scoped="" ref="0x404003c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404004a8"/>
        <function-ref name="get" scoped="" ref="0x40400588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40400668"/>
        <function-ref name="set" scoped="" ref="0x40400748"/>
        <function-ref name="clr" scoped="" ref="0x40400828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403ffc88" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403ffc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ffe60"/>
        <function-ref name="isInput" scoped="" ref="0x403fe010"/>
        <function-ref name="toggle" scoped="" ref="0x403fe0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403fe1d0"/>
        <function-ref name="get" scoped="" ref="0x403fe2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fe390"/>
        <function-ref name="set" scoped="" ref="0x403fe470"/>
        <function-ref name="clr" scoped="" ref="0x403fe550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403f8d30" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403f8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f8f08"/>
        <function-ref name="isInput" scoped="" ref="0x403f7010"/>
        <function-ref name="toggle" scoped="" ref="0x403f70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403f71d0"/>
        <function-ref name="get" scoped="" ref="0x403f72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f7390"/>
        <function-ref name="set" scoped="" ref="0x403f7470"/>
        <function-ref name="clr" scoped="" ref="0x403f7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40400988" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40400988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40400b60"/>
        <function-ref name="isInput" scoped="" ref="0x40400c40"/>
        <function-ref name="toggle" scoped="" ref="0x40400d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40400e00"/>
        <function-ref name="get" scoped="" ref="0x40400ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ff010"/>
        <function-ref name="set" scoped="" ref="0x403ff0f0"/>
        <function-ref name="clr" scoped="" ref="0x403ff1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403fe6b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403fe6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fe888"/>
        <function-ref name="isInput" scoped="" ref="0x403fe968"/>
        <function-ref name="toggle" scoped="" ref="0x403fea48"/>
        <function-ref name="isOutput" scoped="" ref="0x403feb28"/>
        <function-ref name="get" scoped="" ref="0x403fec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fece8"/>
        <function-ref name="set" scoped="" ref="0x403fedc8"/>
        <function-ref name="clr" scoped="" ref="0x403feea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413b2418" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413b2418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413b25f0"/>
        <function-ref name="isInput" scoped="" ref="0x413b26d0"/>
        <function-ref name="toggle" scoped="" ref="0x413b27b0"/>
        <function-ref name="isOutput" scoped="" ref="0x413b2890"/>
        <function-ref name="get" scoped="" ref="0x413b2970"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b2a50"/>
        <function-ref name="set" scoped="" ref="0x413b2b30"/>
        <function-ref name="clr" scoped="" ref="0x413b2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413b1de0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413b1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413b0010"/>
        <function-ref name="isInput" scoped="" ref="0x413b00f0"/>
        <function-ref name="toggle" scoped="" ref="0x413b01d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413b02b0"/>
        <function-ref name="get" scoped="" ref="0x413b0390"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b0470"/>
        <function-ref name="set" scoped="" ref="0x413b0550"/>
        <function-ref name="clr" scoped="" ref="0x413b0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413af7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413af7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413af9d0"/>
        <function-ref name="isInput" scoped="" ref="0x413afab0"/>
        <function-ref name="toggle" scoped="" ref="0x413afb90"/>
        <function-ref name="isOutput" scoped="" ref="0x413afc70"/>
        <function-ref name="get" scoped="" ref="0x413afd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x413afe30"/>
        <function-ref name="set" scoped="" ref="0x413aff10"/>
        <function-ref name="clr" scoped="" ref="0x413ae010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413ad228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413ad228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ad400"/>
        <function-ref name="isInput" scoped="" ref="0x413ad4e0"/>
        <function-ref name="toggle" scoped="" ref="0x413ad5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x413ad6a0"/>
        <function-ref name="get" scoped="" ref="0x413ad780"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ad860"/>
        <function-ref name="set" scoped="" ref="0x413ad940"/>
        <function-ref name="clr" scoped="" ref="0x413ada20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413acc08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413acc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413acde0"/>
        <function-ref name="isInput" scoped="" ref="0x413acec0"/>
        <function-ref name="toggle" scoped="" ref="0x413ab010"/>
        <function-ref name="isOutput" scoped="" ref="0x413ab0f0"/>
        <function-ref name="get" scoped="" ref="0x413ab1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ab2b0"/>
        <function-ref name="set" scoped="" ref="0x413ab390"/>
        <function-ref name="clr" scoped="" ref="0x413ab470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413aa6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413aa6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413aa898"/>
        <function-ref name="isInput" scoped="" ref="0x413aa978"/>
        <function-ref name="toggle" scoped="" ref="0x413aaa58"/>
        <function-ref name="isOutput" scoped="" ref="0x413aab38"/>
        <function-ref name="get" scoped="" ref="0x413aac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x413aacf8"/>
        <function-ref name="set" scoped="" ref="0x413aadd8"/>
        <function-ref name="clr" scoped="" ref="0x413aaeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413a80b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413a80b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413a8288"/>
        <function-ref name="isInput" scoped="" ref="0x413a8368"/>
        <function-ref name="toggle" scoped="" ref="0x413a8448"/>
        <function-ref name="isOutput" scoped="" ref="0x413a8528"/>
        <function-ref name="get" scoped="" ref="0x413a8608"/>
        <function-ref name="makeOutput" scoped="" ref="0x413a86e8"/>
        <function-ref name="set" scoped="" ref="0x413a87c8"/>
        <function-ref name="clr" scoped="" ref="0x413a88a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413a7a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413a7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413a7c60"/>
        <function-ref name="isInput" scoped="" ref="0x413a7d40"/>
        <function-ref name="toggle" scoped="" ref="0x413a7e20"/>
        <function-ref name="isOutput" scoped="" ref="0x413a7f00"/>
        <function-ref name="get" scoped="" ref="0x413a6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413a60f0"/>
        <function-ref name="set" scoped="" ref="0x413a61d0"/>
        <function-ref name="clr" scoped="" ref="0x413a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40403170" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40403170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403348"/>
        <function-ref name="isInput" scoped="" ref="0x40403428"/>
        <function-ref name="toggle" scoped="" ref="0x40403508"/>
        <function-ref name="isOutput" scoped="" ref="0x404035e8"/>
        <function-ref name="get" scoped="" ref="0x404036c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404037a8"/>
        <function-ref name="set" scoped="" ref="0x40403888"/>
        <function-ref name="clr" scoped="" ref="0x40403968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40401e48" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40401e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a050"/>
        <function-ref name="isInput" scoped="" ref="0x4040a130"/>
        <function-ref name="toggle" scoped="" ref="0x4040a210"/>
        <function-ref name="isOutput" scoped="" ref="0x4040a2f0"/>
        <function-ref name="get" scoped="" ref="0x4040a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040a4b0"/>
        <function-ref name="set" scoped="" ref="0x4040a590"/>
        <function-ref name="clr" scoped="" ref="0x4040a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40405dc8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40405dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404010"/>
        <function-ref name="isInput" scoped="" ref="0x404040f0"/>
        <function-ref name="toggle" scoped="" ref="0x404041d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404042b0"/>
        <function-ref name="get" scoped="" ref="0x40404390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404470"/>
        <function-ref name="set" scoped="" ref="0x40404550"/>
        <function-ref name="clr" scoped="" ref="0x40404630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40403ac8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40403ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40403d80"/>
        <function-ref name="toggle" scoped="" ref="0x40403e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40401010"/>
        <function-ref name="get" scoped="" ref="0x404010f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404011d0"/>
        <function-ref name="set" scoped="" ref="0x404012b0"/>
        <function-ref name="clr" scoped="" ref="0x40401390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4040a7d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4040a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4040aa88"/>
        <function-ref name="toggle" scoped="" ref="0x4040ab68"/>
        <function-ref name="isOutput" scoped="" ref="0x4040ac48"/>
        <function-ref name="get" scoped="" ref="0x4040ad28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040ae08"/>
        <function-ref name="set" scoped="" ref="0x4040aee8"/>
        <function-ref name="clr" scoped="" ref="0x40409010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40404790" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40404790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404968"/>
        <function-ref name="isInput" scoped="" ref="0x40404a48"/>
        <function-ref name="toggle" scoped="" ref="0x40404b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40404c08"/>
        <function-ref name="get" scoped="" ref="0x40404ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404dc8"/>
        <function-ref name="set" scoped="" ref="0x40404ea8"/>
        <function-ref name="clr" scoped="" ref="0x40403010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404014f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404014f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404016c8"/>
        <function-ref name="isInput" scoped="" ref="0x404017a8"/>
        <function-ref name="toggle" scoped="" ref="0x40401888"/>
        <function-ref name="isOutput" scoped="" ref="0x40401968"/>
        <function-ref name="get" scoped="" ref="0x40401a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40401b28"/>
        <function-ref name="set" scoped="" ref="0x40401c08"/>
        <function-ref name="clr" scoped="" ref="0x40401ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40409170" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40409170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409348"/>
        <function-ref name="isInput" scoped="" ref="0x40409428"/>
        <function-ref name="toggle" scoped="" ref="0x40409508"/>
        <function-ref name="isOutput" scoped="" ref="0x404095e8"/>
        <function-ref name="get" scoped="" ref="0x404096c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404097a8"/>
        <function-ref name="set" scoped="" ref="0x40409888"/>
        <function-ref name="clr" scoped="" ref="0x40409968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413c26c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413c26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413c2898"/>
        <function-ref name="isInput" scoped="" ref="0x413c2978"/>
        <function-ref name="toggle" scoped="" ref="0x413c2a58"/>
        <function-ref name="isOutput" scoped="" ref="0x413c2b38"/>
        <function-ref name="get" scoped="" ref="0x413c2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x413c2cf8"/>
        <function-ref name="set" scoped="" ref="0x413c2dd8"/>
        <function-ref name="clr" scoped="" ref="0x413c2eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413c00b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413c00b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413c0288"/>
        <function-ref name="isInput" scoped="" ref="0x413c0368"/>
        <function-ref name="toggle" scoped="" ref="0x413c0448"/>
        <function-ref name="isOutput" scoped="" ref="0x413c0528"/>
        <function-ref name="get" scoped="" ref="0x413c0608"/>
        <function-ref name="makeOutput" scoped="" ref="0x413c06e8"/>
        <function-ref name="set" scoped="" ref="0x413c07c8"/>
        <function-ref name="clr" scoped="" ref="0x413c08a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413bfa88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413bfa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413bfc60"/>
        <function-ref name="isInput" scoped="" ref="0x413bfd40"/>
        <function-ref name="toggle" scoped="" ref="0x413bfe20"/>
        <function-ref name="isOutput" scoped="" ref="0x413bff00"/>
        <function-ref name="get" scoped="" ref="0x413be010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413be0f0"/>
        <function-ref name="set" scoped="" ref="0x413be1d0"/>
        <function-ref name="clr" scoped="" ref="0x413be2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413bd538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413bd538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413bd710"/>
        <function-ref name="isInput" scoped="" ref="0x413bd7f0"/>
        <function-ref name="toggle" scoped="" ref="0x413bd8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413bd9b0"/>
        <function-ref name="get" scoped="" ref="0x413bda90"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bdb70"/>
        <function-ref name="set" scoped="" ref="0x413bdc50"/>
        <function-ref name="clr" scoped="" ref="0x413bdd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413bb010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413bb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413bb1e8"/>
        <function-ref name="isInput" scoped="" ref="0x413bb2c8"/>
        <function-ref name="toggle" scoped="" ref="0x413bb3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x413bb488"/>
        <function-ref name="get" scoped="" ref="0x413bb568"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bb648"/>
        <function-ref name="set" scoped="" ref="0x413bb728"/>
        <function-ref name="clr" scoped="" ref="0x413bb808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413ba9e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413ba9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413babc0"/>
        <function-ref name="isInput" scoped="" ref="0x413baca0"/>
        <function-ref name="toggle" scoped="" ref="0x413bad80"/>
        <function-ref name="isOutput" scoped="" ref="0x413bae60"/>
        <function-ref name="get" scoped="" ref="0x413b9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b90f0"/>
        <function-ref name="set" scoped="" ref="0x413b91d0"/>
        <function-ref name="clr" scoped="" ref="0x413b92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413b8538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413b8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413b8710"/>
        <function-ref name="isInput" scoped="" ref="0x413b87f0"/>
        <function-ref name="toggle" scoped="" ref="0x413b88d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413b89b0"/>
        <function-ref name="get" scoped="" ref="0x413b8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b8b70"/>
        <function-ref name="set" scoped="" ref="0x413b8c50"/>
        <function-ref name="clr" scoped="" ref="0x413b8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41400010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41400010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414001e8"/>
        <function-ref name="isInput" scoped="" ref="0x414002c8"/>
        <function-ref name="toggle" scoped="" ref="0x414003a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41400488"/>
        <function-ref name="get" scoped="" ref="0x41400568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41400648"/>
        <function-ref name="set" scoped="" ref="0x41400728"/>
        <function-ref name="clr" scoped="" ref="0x41400808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4040f7f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4040f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f9c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040faa8"/>
        <function-ref name="toggle" scoped="" ref="0x4040fb88"/>
        <function-ref name="isOutput" scoped="" ref="0x4040fc68"/>
        <function-ref name="get" scoped="" ref="0x4040fd48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040fe28"/>
        <function-ref name="set" scoped="" ref="0x4040ff08"/>
        <function-ref name="clr" scoped="" ref="0x4040e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4040d4f0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4040d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4040d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d968"/>
        <function-ref name="get" scoped="" ref="0x4040da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040db28"/>
        <function-ref name="set" scoped="" ref="0x4040dc08"/>
        <function-ref name="clr" scoped="" ref="0x4040dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40406518" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40406518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404066f0"/>
        <function-ref name="isInput" scoped="" ref="0x404067d0"/>
        <function-ref name="toggle" scoped="" ref="0x404068b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40406990"/>
        <function-ref name="get" scoped="" ref="0x40406a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406b50"/>
        <function-ref name="set" scoped="" ref="0x40406c30"/>
        <function-ref name="clr" scoped="" ref="0x40406d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4040e170" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4040e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e348"/>
        <function-ref name="isInput" scoped="" ref="0x4040e428"/>
        <function-ref name="toggle" scoped="" ref="0x4040e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e5e8"/>
        <function-ref name="get" scoped="" ref="0x4040e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e7a8"/>
        <function-ref name="set" scoped="" ref="0x4040e888"/>
        <function-ref name="clr" scoped="" ref="0x4040e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4040de48" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4040de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c050"/>
        <function-ref name="isInput" scoped="" ref="0x4040c130"/>
        <function-ref name="toggle" scoped="" ref="0x4040c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c2f0"/>
        <function-ref name="get" scoped="" ref="0x4040c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c4b0"/>
        <function-ref name="set" scoped="" ref="0x4040c590"/>
        <function-ref name="clr" scoped="" ref="0x4040c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40406e70" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40406e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f070"/>
        <function-ref name="isInput" scoped="" ref="0x4040f150"/>
        <function-ref name="toggle" scoped="" ref="0x4040f230"/>
        <function-ref name="isOutput" scoped="" ref="0x4040f310"/>
        <function-ref name="get" scoped="" ref="0x4040f3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040f4d0"/>
        <function-ref name="set" scoped="" ref="0x4040f5b0"/>
        <function-ref name="clr" scoped="" ref="0x4040f690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4040eac8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4040eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4040ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4040ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d010"/>
        <function-ref name="get" scoped="" ref="0x4040d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040d1d0"/>
        <function-ref name="set" scoped="" ref="0x4040d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4040d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4040c7d0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4040c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4040ca88"/>
        <function-ref name="toggle" scoped="" ref="0x4040cb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4040cc48"/>
        <function-ref name="get" scoped="" ref="0x4040cd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040ce08"/>
        <function-ref name="set" scoped="" ref="0x4040cee8"/>
        <function-ref name="clr" scoped="" ref="0x4040b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4141e418" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4141e418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4141e5f0"/>
        <function-ref name="isInput" scoped="" ref="0x4141e6d0"/>
        <function-ref name="toggle" scoped="" ref="0x4141e7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4141e890"/>
        <function-ref name="get" scoped="" ref="0x4141e970"/>
        <function-ref name="makeOutput" scoped="" ref="0x4141ea50"/>
        <function-ref name="set" scoped="" ref="0x4141eb30"/>
        <function-ref name="clr" scoped="" ref="0x4141ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4141dde0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4141dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4141c010"/>
        <function-ref name="isInput" scoped="" ref="0x4141c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4141c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4141c2b0"/>
        <function-ref name="get" scoped="" ref="0x4141c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4141c470"/>
        <function-ref name="set" scoped="" ref="0x4141c550"/>
        <function-ref name="clr" scoped="" ref="0x4141c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4141b7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4141b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4141b9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4141bab0"/>
        <function-ref name="toggle" scoped="" ref="0x4141bb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4141bc70"/>
        <function-ref name="get" scoped="" ref="0x4141bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4141be30"/>
        <function-ref name="set" scoped="" ref="0x4141bf10"/>
        <function-ref name="clr" scoped="" ref="0x4141a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41419228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41419228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41419400"/>
        <function-ref name="isInput" scoped="" ref="0x414194e0"/>
        <function-ref name="toggle" scoped="" ref="0x414195c0"/>
        <function-ref name="isOutput" scoped="" ref="0x414196a0"/>
        <function-ref name="get" scoped="" ref="0x41419780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41419860"/>
        <function-ref name="set" scoped="" ref="0x41419940"/>
        <function-ref name="clr" scoped="" ref="0x41419a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41418c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41418c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41418de0"/>
        <function-ref name="isInput" scoped="" ref="0x41418ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41417010"/>
        <function-ref name="isOutput" scoped="" ref="0x414170f0"/>
        <function-ref name="get" scoped="" ref="0x414171d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x414172b0"/>
        <function-ref name="set" scoped="" ref="0x41417390"/>
        <function-ref name="clr" scoped="" ref="0x41417470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414166c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414166c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41416898"/>
        <function-ref name="isInput" scoped="" ref="0x41416978"/>
        <function-ref name="toggle" scoped="" ref="0x41416a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41416b38"/>
        <function-ref name="get" scoped="" ref="0x41416c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41416cf8"/>
        <function-ref name="set" scoped="" ref="0x41416dd8"/>
        <function-ref name="clr" scoped="" ref="0x41416eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414140b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414140b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41414288"/>
        <function-ref name="isInput" scoped="" ref="0x41414368"/>
        <function-ref name="toggle" scoped="" ref="0x41414448"/>
        <function-ref name="isOutput" scoped="" ref="0x41414528"/>
        <function-ref name="get" scoped="" ref="0x41414608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414146e8"/>
        <function-ref name="set" scoped="" ref="0x414147c8"/>
        <function-ref name="clr" scoped="" ref="0x414148a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41413a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41413a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41413c60"/>
        <function-ref name="isInput" scoped="" ref="0x41413d40"/>
        <function-ref name="toggle" scoped="" ref="0x41413e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41413f00"/>
        <function-ref name="get" scoped="" ref="0x41412010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414120f0"/>
        <function-ref name="set" scoped="" ref="0x414121d0"/>
        <function-ref name="clr" scoped="" ref="0x414122b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40411818" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40411818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404119f0"/>
        <function-ref name="isInput" scoped="" ref="0x40411ad0"/>
        <function-ref name="toggle" scoped="" ref="0x40411bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40411c90"/>
        <function-ref name="get" scoped="" ref="0x40411d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411e50"/>
        <function-ref name="set" scoped="" ref="0x40410010"/>
        <function-ref name="clr" scoped="" ref="0x404100f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40421ec0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40421ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404200c0"/>
        <function-ref name="isInput" scoped="" ref="0x404201a0"/>
        <function-ref name="toggle" scoped="" ref="0x40420280"/>
        <function-ref name="isOutput" scoped="" ref="0x40420360"/>
        <function-ref name="get" scoped="" ref="0x40420440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420520"/>
        <function-ref name="set" scoped="" ref="0x40420600"/>
        <function-ref name="clr" scoped="" ref="0x404206e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40429538" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40429538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429710"/>
        <function-ref name="isInput" scoped="" ref="0x404297f0"/>
        <function-ref name="toggle" scoped="" ref="0x404298d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404299b0"/>
        <function-ref name="get" scoped="" ref="0x40429a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429b70"/>
        <function-ref name="set" scoped="" ref="0x40429c50"/>
        <function-ref name="clr" scoped="" ref="0x40429d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40426b68" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40426b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426d40"/>
        <function-ref name="isInput" scoped="" ref="0x40426e20"/>
        <function-ref name="toggle" scoped="" ref="0x40426f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40425010"/>
        <function-ref name="get" scoped="" ref="0x404250f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404251d0"/>
        <function-ref name="set" scoped="" ref="0x404252b0"/>
        <function-ref name="clr" scoped="" ref="0x40425390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4042f228" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4042f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f400"/>
        <function-ref name="isInput" scoped="" ref="0x4042f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4042f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f6a0"/>
        <function-ref name="get" scoped="" ref="0x4042f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f860"/>
        <function-ref name="set" scoped="" ref="0x4042f940"/>
        <function-ref name="clr" scoped="" ref="0x4042fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4042d880" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4042d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042da58"/>
        <function-ref name="isInput" scoped="" ref="0x4042db38"/>
        <function-ref name="toggle" scoped="" ref="0x4042dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x4042dcf8"/>
        <function-ref name="get" scoped="" ref="0x4042ddd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042deb8"/>
        <function-ref name="set" scoped="" ref="0x4042b010"/>
        <function-ref name="clr" scoped="" ref="0x4042b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40435010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40435010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404351e8"/>
        <function-ref name="isInput" scoped="" ref="0x404352c8"/>
        <function-ref name="toggle" scoped="" ref="0x404353a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40435488"/>
        <function-ref name="get" scoped="" ref="0x40435568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435648"/>
        <function-ref name="set" scoped="" ref="0x40435728"/>
        <function-ref name="clr" scoped="" ref="0x40435808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404335e8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404335e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404337c0"/>
        <function-ref name="isInput" scoped="" ref="0x404338a0"/>
        <function-ref name="toggle" scoped="" ref="0x40433980"/>
        <function-ref name="isOutput" scoped="" ref="0x40433a60"/>
        <function-ref name="get" scoped="" ref="0x40433b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433c20"/>
        <function-ref name="set" scoped="" ref="0x40433d00"/>
        <function-ref name="clr" scoped="" ref="0x40433de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40430bd0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40430bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430da8"/>
        <function-ref name="isInput" scoped="" ref="0x40430e88"/>
        <function-ref name="toggle" scoped="" ref="0x4043b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b0f0"/>
        <function-ref name="get" scoped="" ref="0x4043b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043b2b0"/>
        <function-ref name="set" scoped="" ref="0x4043b390"/>
        <function-ref name="clr" scoped="" ref="0x4043b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40439228" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40439228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439400"/>
        <function-ref name="isInput" scoped="" ref="0x404394e0"/>
        <function-ref name="toggle" scoped="" ref="0x404395c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404396a0"/>
        <function-ref name="get" scoped="" ref="0x40439780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439860"/>
        <function-ref name="set" scoped="" ref="0x40439940"/>
        <function-ref name="clr" scoped="" ref="0x40439a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40437788" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40437788"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437960"/>
        <function-ref name="isInput" scoped="" ref="0x40437a40"/>
        <function-ref name="toggle" scoped="" ref="0x40437b20"/>
        <function-ref name="isOutput" scoped="" ref="0x40437c00"/>
        <function-ref name="get" scoped="" ref="0x40437ce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40437dc0"/>
        <function-ref name="set" scoped="" ref="0x40437ea0"/>
        <function-ref name="clr" scoped="" ref="0x40436010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40440d00" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40440d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40440ed8"/>
        <function-ref name="isInput" scoped="" ref="0x4043f010"/>
        <function-ref name="toggle" scoped="" ref="0x4043f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043f1d0"/>
        <function-ref name="get" scoped="" ref="0x4043f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043f390"/>
        <function-ref name="set" scoped="" ref="0x4043f470"/>
        <function-ref name="clr" scoped="" ref="0x4043f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4043d260" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4043d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043d438"/>
        <function-ref name="isInput" scoped="" ref="0x4043d518"/>
        <function-ref name="toggle" scoped="" ref="0x4043d5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043d6d8"/>
        <function-ref name="get" scoped="" ref="0x4043d7b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043d898"/>
        <function-ref name="set" scoped="" ref="0x4043d978"/>
        <function-ref name="clr" scoped="" ref="0x4043da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404636d8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404636d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402e4ce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402e4ce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404638b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40463a88" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40463a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40463c60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40463d40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40463e20"/>
        <function-ref name="actualMicro" scoped="" ref="0x40463f00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40462010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40474240" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40474240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40474418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40457418" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40457418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404575f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40457d78" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40457d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40474010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x404577b0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x404577b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40457988"/>
        <function-ref name="taskLoop" scoped="" ref="0x40457a68"/>
        <function-ref name="runNextTask" scoped="" ref="0x40457b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402f2bc0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402f2d98"/>
        <function-ref name="runTask" scoped="" ref="0x402f2e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402eb408" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402eb408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402eb5e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402eb6c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402eb7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40358950" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40358950"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40358b28"/>
        <function-ref name="runTask" scoped="" ref="0x40358c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x4035d5f0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4035d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4035d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40358118" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40358118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403582f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403583d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403584b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4036a370" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4036a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4036a548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40366010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40366010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403661e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40366cc8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40366ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x404c9620" loc="36:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x404c9620"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x404c97f8"/>
        <function-ref name="setRoot" scoped="" ref="0x404c98d8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x404c99b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x404bef10" loc="35:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x404bef10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4047e108"/>
        <function-ref name="setOrigin" scoped="" ref="0x4047e1e8"/>
        <function-ref name="setType" scoped="" ref="0x4047e2c8"/>
        <function-ref name="getOrigin" scoped="" ref="0x4047e3a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4047e488"/>
        <function-ref name="getType" scoped="" ref="0x4047e568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x4047a768" loc="25:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4047a768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4047a940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40479518" loc="27:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40479518"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404796f0"/>
        <function-ref name="stopDone" scoped="" ref="0x404797d0"/>
        <function-ref name="start" scoped="" ref="0x404798b0"/>
        <function-ref name="stop" scoped="" ref="0x40479990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x404e4ba8" loc="51:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x404e4ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404e4d80"/>
        <function-ref name="runTask" scoped="" ref="0x404e4e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Snoop" ref="0x404b96b8" loc="32:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x404b96b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404b9890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40482de0" loc="26:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40482de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40479010"/>
        <function-ref name="stopDone" scoped="" ref="0x404790f0"/>
        <function-ref name="start" scoped="" ref="0x404791d0"/>
        <function-ref name="stop" scoped="" ref="0x404792b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x404ae548" loc="31:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x404ae548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404ae720"/>
        <function-ref name="getPayload" scoped="" ref="0x404ae800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404ae8e0"/>
        <function-ref name="cancel" scoped="" ref="0x404ae9c0"/>
        <function-ref name="sendDone" scoped="" ref="0x404aeaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTMessagePool" ref="0x404cc300" loc="39:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTMessagePool" scoped="" ref="0x404cc300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
            <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404c43d8"/>
        <function-ref name="maxSize" scoped="" ref="0x404ccdd8"/>
        <function-ref name="empty" scoped="" ref="0x404cc928"/>
        <function-ref name="put" scoped="" ref="0x404c4048"/>
        <function-ref name="size" scoped="" ref="0x404ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x404de8e0" loc="43:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x404de8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x404def08"/>
        <function-ref name="readDone" scoped="" ref="0x404d1180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x404ecb10" loc="46:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x404ecb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x404ecce8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x404ecdc8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x404ecea8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x404e4010"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x404e40f0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x404e41d0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x404e42b0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x404e4390"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x404e4470"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x404e4550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x404b5ed0" loc="34:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x404b5ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404810c0"/>
        <function-ref name="getPayload" scoped="" ref="0x404811a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40481280"/>
        <function-ref name="cancel" scoped="" ref="0x40481360"/>
        <function-ref name="sendDone" scoped="" ref="0x40481440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x40480d40" loc="28:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x40480d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40480f18"/>
        <function-ref name="stop" scoped="" ref="0x40478010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x404b9a18" loc="33:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x404b9a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404b9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404e5528" loc="44:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404e5528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404e5700"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404e57e0"/>
        <function-ref name="led1On" scoped="" ref="0x404e58c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404e59a0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404e5a80"/>
        <function-ref name="get" scoped="" ref="0x404e5b60"/>
        <function-ref name="led1Off" scoped="" ref="0x404e5c40"/>
        <function-ref name="led2Off" scoped="" ref="0x404dd010"/>
        <function-ref name="set" scoped="" ref="0x404e5d20"/>
        <function-ref name="led0On" scoped="" ref="0x404e5e00"/>
        <function-ref name="led2On" scoped="" ref="0x404e5ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTQueue" ref="0x404c2010" loc="38:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTQueue" scoped="" ref="0x404c2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
              <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x404c2d40"/>
        <function-ref name="enqueue" scoped="" ref="0x404bc458"/>
        <function-ref name="element" scoped="" ref="0x404bc7a8"/>
        <function-ref name="maxSize" scoped="" ref="0x404c2ae8"/>
        <function-ref name="dequeue" scoped="" ref="0x404bc0e8"/>
        <function-ref name="empty" scoped="" ref="0x404c2638"/>
        <function-ref name="size" scoped="" ref="0x404c2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x404d3210" loc="42:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x404d3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404cdd90"/>
        <function-ref name="fired" scoped="" ref="0x404cd048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404cd750"/>
        <function-ref name="isOneShot" scoped="" ref="0x404cd4f8"/>
        <function-ref name="getdt" scoped="" ref="0x404cb268"/>
        <function-ref name="gett0" scoped="" ref="0x404cb010"/>
        <function-ref name="isRunning" scoped="" ref="0x404cd2a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404d38b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404cda70"/>
        <function-ref name="startOneShot" scoped="" ref="0x404d3b38"/>
        <function-ref name="stop" scoped="" ref="0x404d3db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40376d48" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40376d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40376f20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40514018"/>
        <function-ref name="led1On" scoped="" ref="0x405140f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405141d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405142b8"/>
        <function-ref name="get" scoped="" ref="0x40514398"/>
        <function-ref name="led1Off" scoped="" ref="0x40514478"/>
        <function-ref name="led2Off" scoped="" ref="0x405147f8"/>
        <function-ref name="set" scoped="" ref="0x40514558"/>
        <function-ref name="led0On" scoped="" ref="0x40514638"/>
        <function-ref name="led2On" scoped="" ref="0x40514718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40510110" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40510110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405102e8"/>
        <function-ref name="isInput" scoped="" ref="0x405103c8"/>
        <function-ref name="toggle" scoped="" ref="0x405104a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40510588"/>
        <function-ref name="get" scoped="" ref="0x40510668"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510748"/>
        <function-ref name="set" scoped="" ref="0x40510828"/>
        <function-ref name="clr" scoped="" ref="0x40510908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405110a0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405110a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40511278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40510af8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40510af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510cd0"/>
        <function-ref name="isInput" scoped="" ref="0x40510db0"/>
        <function-ref name="toggle" scoped="" ref="0x40510e90"/>
        <function-ref name="isOutput" scoped="" ref="0x4051d010"/>
        <function-ref name="get" scoped="" ref="0x4051d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051d1d0"/>
        <function-ref name="set" scoped="" ref="0x4051d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4051d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x405113e8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405113e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405115c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405116a0"/>
        <function-ref name="led1On" scoped="" ref="0x40511780"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40511860"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40511940"/>
        <function-ref name="get" scoped="" ref="0x40511a20"/>
        <function-ref name="led1Off" scoped="" ref="0x40511b00"/>
        <function-ref name="led2Off" scoped="" ref="0x40511e80"/>
        <function-ref name="set" scoped="" ref="0x40511be0"/>
        <function-ref name="led0On" scoped="" ref="0x40511cc0"/>
        <function-ref name="led2On" scoped="" ref="0x40511da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4051d580" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4051d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051d758"/>
        <function-ref name="isInput" scoped="" ref="0x4051d838"/>
        <function-ref name="toggle" scoped="" ref="0x4051d918"/>
        <function-ref name="isOutput" scoped="" ref="0x4051d9f8"/>
        <function-ref name="get" scoped="" ref="0x4051dad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051dbb8"/>
        <function-ref name="set" scoped="" ref="0x4051dc98"/>
        <function-ref name="clr" scoped="" ref="0x4051dd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x405298e8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x405298e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40529ac0"/>
        <function-ref name="isInput" scoped="" ref="0x40529ba0"/>
        <function-ref name="toggle" scoped="" ref="0x40529c80"/>
        <function-ref name="isOutput" scoped="" ref="0x40529d60"/>
        <function-ref name="get" scoped="" ref="0x40529e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40529f20"/>
        <function-ref name="set" scoped="" ref="0x40528018"/>
        <function-ref name="clr" scoped="" ref="0x405280f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40528308" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40528308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405284e0"/>
        <function-ref name="isInput" scoped="" ref="0x405285c0"/>
        <function-ref name="toggle" scoped="" ref="0x405286a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40528780"/>
        <function-ref name="get" scoped="" ref="0x40528860"/>
        <function-ref name="makeOutput" scoped="" ref="0x40528940"/>
        <function-ref name="set" scoped="" ref="0x40528a20"/>
        <function-ref name="clr" scoped="" ref="0x40528b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x405276e0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405276e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405278b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40528d10" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40528d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40528ee8"/>
        <function-ref name="isInput" scoped="" ref="0x40527010"/>
        <function-ref name="toggle" scoped="" ref="0x405270f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405271d0"/>
        <function-ref name="get" scoped="" ref="0x405272b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40527390"/>
        <function-ref name="set" scoped="" ref="0x40527470"/>
        <function-ref name="clr" scoped="" ref="0x40527550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40534010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40534010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40624b00"/>
        <function-ref name="fired" scoped="" ref="0x40534d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406244c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40624268"/>
        <function-ref name="getdt" scoped="" ref="0x40623010"/>
        <function-ref name="gett0" scoped="" ref="0x40624d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40624010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40534638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406247e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x405348b8"/>
        <function-ref name="stop" scoped="" ref="0x40534b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4052f670" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4052f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4053c170"/>
        <function-ref name="fired" scoped="" ref="0x4052d408"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4052db10"/>
        <function-ref name="isOneShot" scoped="" ref="0x4052d8b8"/>
        <function-ref name="getdt" scoped="" ref="0x4053c620"/>
        <function-ref name="gett0" scoped="" ref="0x4053c3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4052d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4052fc98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4052de30"/>
        <function-ref name="startOneShot" scoped="" ref="0x4052ff18"/>
        <function-ref name="stop" scoped="" ref="0x4052d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40539698" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40539698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40536248"/>
        <function-ref name="fired" scoped="" ref="0x405374e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40537bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40537998"/>
        <function-ref name="getdt" scoped="" ref="0x405366f8"/>
        <function-ref name="gett0" scoped="" ref="0x405364a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40537740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40539cc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40537f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40537010"/>
        <function-ref name="stop" scoped="" ref="0x40537290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40543718" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40543718"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40543d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4053cea8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4053cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405390c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40549010" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40549010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40549760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40549c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405499d8"/>
        <function-ref name="overflow" scoped="" ref="0x40549ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40535dc0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40535dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40540010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x4054b610" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x4054b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4053eab8"/>
        <function-ref name="fired" scoped="" ref="0x4053e288"/>
        <function-ref name="startAt" scoped="" ref="0x4053e778"/>
        <function-ref name="isRunning" scoped="" ref="0x4053e500"/>
        <function-ref name="getAlarm" scoped="" ref="0x4053ed30"/>
        <function-ref name="start" scoped="" ref="0x4054bd60"/>
        <function-ref name="stop" scoped="" ref="0x4053e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x405d7730" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405d7730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405d6bd8"/>
        <function-ref name="fired" scoped="" ref="0x405d63a8"/>
        <function-ref name="startAt" scoped="" ref="0x405d6898"/>
        <function-ref name="isRunning" scoped="" ref="0x405d6620"/>
        <function-ref name="getAlarm" scoped="" ref="0x405d6e50"/>
        <function-ref name="start" scoped="" ref="0x405d7e80"/>
        <function-ref name="stop" scoped="" ref="0x405d6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405d72f8" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405d72f8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405d74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405d4190" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405d4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405d48e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405d4dd0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405d4b58"/>
        <function-ref name="overflow" scoped="" ref="0x405d3068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x414844e0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x414844e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x414846b8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41484798"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41484878"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41484958"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x41484a38"/>
        <function-ref name="setControl" scoped="" ref="0x41484b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4148a638" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4148a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41489af0"/>
        <function-ref name="fired" scoped="" ref="0x414892c0"/>
        <function-ref name="startAt" scoped="" ref="0x414897b0"/>
        <function-ref name="isRunning" scoped="" ref="0x41489538"/>
        <function-ref name="getAlarm" scoped="" ref="0x41489d68"/>
        <function-ref name="start" scoped="" ref="0x4148ad88"/>
        <function-ref name="stop" scoped="" ref="0x41489048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4148a200" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4148a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4148a3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x414880c0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x414880c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41488810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41488d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41488a88"/>
        <function-ref name="overflow" scoped="" ref="0x41486010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x41481730" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x41481730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x41481908"/>
        <function-ref name="compareBusy" scoped="" ref="0x414819e8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x41481ac8"/>
        <function-ref name="countBusy" scoped="" ref="0x41481ba8"/>
        <function-ref name="getAssr" scoped="" ref="0x41481c88"/>
        <function-ref name="setAssr" scoped="" ref="0x41481d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x41484d08" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x41484d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41481288"/>
        <function-ref name="fired" scoped="" ref="0x41483888"/>
        <function-ref name="get" scoped="" ref="0x41483370"/>
        <function-ref name="reset" scoped="" ref="0x41483b00"/>
        <function-ref name="isOn" scoped="" ref="0x41481500"/>
        <function-ref name="set" scoped="" ref="0x414835e8"/>
        <function-ref name="start" scoped="" ref="0x41483d78"/>
        <function-ref name="stop" scoped="" ref="0x41481010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41486300" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41486300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41485d68"/>
        <function-ref name="test" scoped="" ref="0x41485878"/>
        <function-ref name="get" scoped="" ref="0x41486948"/>
        <function-ref name="setScale" scoped="" ref="0x41484010"/>
        <function-ref name="getScale" scoped="" ref="0x414842b0"/>
        <function-ref name="reset" scoped="" ref="0x41485110"/>
        <function-ref name="overflow" scoped="" ref="0x41486e60"/>
        <function-ref name="isOn" scoped="" ref="0x41485af0"/>
        <function-ref name="set" scoped="" ref="0x41486bc0"/>
        <function-ref name="start" scoped="" ref="0x41485388"/>
        <function-ref name="stop" scoped="" ref="0x41485600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4059b510" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4059b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x4059b6e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4059b7c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4059b8a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4059b988"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4059ba68"/>
        <function-ref name="setControl" scoped="" ref="0x4059bb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405989b8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405989b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40598b90"/>
        <function-ref name="compareBusy" scoped="" ref="0x40598c70"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40598d50"/>
        <function-ref name="countBusy" scoped="" ref="0x40598e30"/>
        <function-ref name="getAssr" scoped="" ref="0x40598f10"/>
        <function-ref name="setAssr" scoped="" ref="0x40597010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4059be70" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4059be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405983e8"/>
        <function-ref name="fired" scoped="" ref="0x4059a9f0"/>
        <function-ref name="get" scoped="" ref="0x4059a4d8"/>
        <function-ref name="reset" scoped="" ref="0x4059ac68"/>
        <function-ref name="isOn" scoped="" ref="0x40598660"/>
        <function-ref name="set" scoped="" ref="0x4059a750"/>
        <function-ref name="start" scoped="" ref="0x4059aee0"/>
        <function-ref name="stop" scoped="" ref="0x40598170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4058d170" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4058d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4059cc68"/>
        <function-ref name="test" scoped="" ref="0x4059c778"/>
        <function-ref name="get" scoped="" ref="0x4058d7b8"/>
        <function-ref name="setScale" scoped="" ref="0x4059cee0"/>
        <function-ref name="getScale" scoped="" ref="0x4059b1c0"/>
        <function-ref name="reset" scoped="" ref="0x4059c010"/>
        <function-ref name="overflow" scoped="" ref="0x4058dcd0"/>
        <function-ref name="isOn" scoped="" ref="0x4059c9f0"/>
        <function-ref name="set" scoped="" ref="0x4058da30"/>
        <function-ref name="start" scoped="" ref="0x4059c288"/>
        <function-ref name="stop" scoped="" ref="0x4059c500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405a1010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405a1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x405a11e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405a12c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405a13a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405a1488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405a1568"/>
        <function-ref name="setControl" scoped="" ref="0x405a1648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4059f458" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4059f458"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4059f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4059f8b8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4059f8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x4059fa90"/>
        <function-ref name="compareBusy" scoped="" ref="0x4059fb70"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x4059fc50"/>
        <function-ref name="countBusy" scoped="" ref="0x4059fd30"/>
        <function-ref name="getAssr" scoped="" ref="0x4059fe10"/>
        <function-ref name="setAssr" scoped="" ref="0x4059fef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405a1970" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405a1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405a0f08"/>
        <function-ref name="fired" scoped="" ref="0x405a0528"/>
        <function-ref name="get" scoped="" ref="0x405a0010"/>
        <function-ref name="reset" scoped="" ref="0x405a07a0"/>
        <function-ref name="isOn" scoped="" ref="0x4059f1a0"/>
        <function-ref name="set" scoped="" ref="0x405a0288"/>
        <function-ref name="start" scoped="" ref="0x405a0a18"/>
        <function-ref name="stop" scoped="" ref="0x405a0c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40597ca0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40597ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405a3778"/>
        <function-ref name="test" scoped="" ref="0x405a3288"/>
        <function-ref name="get" scoped="" ref="0x405a4308"/>
        <function-ref name="setScale" scoped="" ref="0x405a39f0"/>
        <function-ref name="getScale" scoped="" ref="0x405a3c90"/>
        <function-ref name="reset" scoped="" ref="0x405a4a98"/>
        <function-ref name="overflow" scoped="" ref="0x405a4820"/>
        <function-ref name="isOn" scoped="" ref="0x405a3500"/>
        <function-ref name="set" scoped="" ref="0x405a4580"/>
        <function-ref name="start" scoped="" ref="0x405a4d10"/>
        <function-ref name="stop" scoped="" ref="0x405a3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x405ef298" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x405ef298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405ef470"/>
        <function-ref name="runTask" scoped="" ref="0x405ef550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x405f28d8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405f28d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405f0d90"/>
        <function-ref name="fired" scoped="" ref="0x405f0560"/>
        <function-ref name="startAt" scoped="" ref="0x405f0a50"/>
        <function-ref name="isRunning" scoped="" ref="0x405f07d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x405ef048"/>
        <function-ref name="start" scoped="" ref="0x405f0048"/>
        <function-ref name="stop" scoped="" ref="0x405f02e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405d25d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405d25d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405f20d8"/>
        <function-ref name="fired" scoped="" ref="0x405f3368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405f3a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x405f3818"/>
        <function-ref name="getdt" scoped="" ref="0x405f2588"/>
        <function-ref name="gett0" scoped="" ref="0x405f2330"/>
        <function-ref name="isRunning" scoped="" ref="0x405f35c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405d2c00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405f3d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x405d2e80"/>
        <function-ref name="stop" scoped="" ref="0x405f3110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x4061c948" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x4061c948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4061cb20"/>
        <function-ref name="runTask" scoped="" ref="0x4061cc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x4061e688" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x4061e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4061c248"/>
        <function-ref name="fired" scoped="" ref="0x4061d4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4061dbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4061d998"/>
        <function-ref name="getdt" scoped="" ref="0x4061c6f8"/>
        <function-ref name="gett0" scoped="" ref="0x4061c4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4061d740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4061ecb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4061df10"/>
        <function-ref name="startOneShot" scoped="" ref="0x4061d010"/>
        <function-ref name="stop" scoped="" ref="0x4061d290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40621338" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40621338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40620ea8"/>
        <function-ref name="fired" scoped="" ref="0x40620110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40620848"/>
        <function-ref name="isOneShot" scoped="" ref="0x406205e0"/>
        <function-ref name="getdt" scoped="" ref="0x4061e398"/>
        <function-ref name="gett0" scoped="" ref="0x4061e130"/>
        <function-ref name="isRunning" scoped="" ref="0x40620378"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40621970"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40620b78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40621c00"/>
        <function-ref name="stop" scoped="" ref="0x40621e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40626d28" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40626d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4062c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4062c6e0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4062c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4062ce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4062b350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4062b0d8"/>
        <function-ref name="overflow" scoped="" ref="0x4062b5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40636988" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40636988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40635010"/>
        <function-ref name="readDone" scoped="" ref="0x40635268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x414a1448" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x414a1448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414a1a70"/>
        <function-ref name="readDone" scoped="" ref="0x414a1cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4149fd20" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4149fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4149fef8"/>
        <function-ref name="configure" scoped="" ref="0x4149e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x414a0cb0" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x414a0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4149f2e8"/>
        <function-ref name="readDone" scoped="" ref="0x4149f540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4149f848" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4149f848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4149fa20"/>
        <function-ref name="getChannel" scoped="" ref="0x4149fb00"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4149fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4063f900" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4063f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4063ff28"/>
        <function-ref name="readDone" scoped="" ref="0x4063a190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x4064ad18" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x4064ad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40639370"/>
        <function-ref name="readDone" scoped="" ref="0x406395e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40639ca0" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40639ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40639e78"/>
        <function-ref name="getChannel" scoped="" ref="0x40638010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x406380f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x406465e8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406465e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406467c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406468a0"/>
        <function-ref name="request" scoped="" ref="0x40646980"/>
        <function-ref name="granted" scoped="" ref="0x40646a60"/>
        <function-ref name="isOwner" scoped="" ref="0x40646b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4064f848" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4064f848"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4064fa20"/>
        <function-ref name="configure" scoped="" ref="0x4064fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x4064f068" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4064f068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4064f240"/>
        <function-ref name="dataReady" scoped="" ref="0x4064f320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40654f10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40654f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40643108"/>
        <function-ref name="cancel" scoped="" ref="0x406431e8"/>
        <function-ref name="dataReady" scoped="" ref="0x406432c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406445a0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406445a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40644778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40644858"/>
        <function-ref name="request" scoped="" ref="0x40644938"/>
        <function-ref name="granted" scoped="" ref="0x40644a18"/>
        <function-ref name="isOwner" scoped="" ref="0x40644af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4064e480" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4064e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4064e658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x4064d2e0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4064d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4064d4b8"/>
        <function-ref name="dataReady" scoped="" ref="0x4064d598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x4064bcd0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4064bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4064bea8"/>
        <function-ref name="cancel" scoped="" ref="0x4064d010"/>
        <function-ref name="dataReady" scoped="" ref="0x4064d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40657bc0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40657bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40657d98"/>
        <function-ref name="getAdmux" scoped="" ref="0x40657e78"/>
        <function-ref name="setPrescaler" scoped="" ref="0x4064c010"/>
        <function-ref name="isEnabled" scoped="" ref="0x4064c0f0"/>
        <function-ref name="enableAdc" scoped="" ref="0x4064c1d0"/>
        <function-ref name="setAdmux" scoped="" ref="0x4064c2b0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x4064c390"/>
        <function-ref name="isComplete" scoped="" ref="0x4064c470"/>
        <function-ref name="cancel" scoped="" ref="0x4064c550"/>
        <function-ref name="disableAdc" scoped="" ref="0x4064c630"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x4064c710"/>
        <function-ref name="disableInterruption" scoped="" ref="0x4064c7f0"/>
        <function-ref name="startConversion" scoped="" ref="0x4064c8d0"/>
        <function-ref name="isStarted" scoped="" ref="0x4064ca30"/>
        <function-ref name="setAdcsra" scoped="" ref="0x4064cb10"/>
        <function-ref name="setContinuous" scoped="" ref="0x4064cbf0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x4064ccd0"/>
        <function-ref name="getValue" scoped="" ref="0x4064cdb0"/>
        <function-ref name="dataReady" scoped="" ref="0x4064ce90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x4064b840" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x4064b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4064ba18"/>
        <function-ref name="stop" scoped="" ref="0x4064baf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x4065e0f8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4065e0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4065e2d0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4065e3b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4065e490"/>
        <function-ref name="actualMicro" scoped="" ref="0x4065e570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4065e650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40675278" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40675278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40675450"/>
        <function-ref name="getAdmux" scoped="" ref="0x40675530"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40675610"/>
        <function-ref name="isEnabled" scoped="" ref="0x406756f0"/>
        <function-ref name="enableAdc" scoped="" ref="0x406757d0"/>
        <function-ref name="setAdmux" scoped="" ref="0x406758b0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40675990"/>
        <function-ref name="isComplete" scoped="" ref="0x40675a70"/>
        <function-ref name="cancel" scoped="" ref="0x40675b50"/>
        <function-ref name="disableAdc" scoped="" ref="0x40675c30"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40675d10"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40675df0"/>
        <function-ref name="startConversion" scoped="" ref="0x40675ed0"/>
        <function-ref name="isStarted" scoped="" ref="0x40674090"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40674170"/>
        <function-ref name="setContinuous" scoped="" ref="0x40674250"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40674330"/>
        <function-ref name="getValue" scoped="" ref="0x40674410"/>
        <function-ref name="dataReady" scoped="" ref="0x406744f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40674eb0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40674eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x406840c0"/>
        <function-ref name="getAdmux" scoped="" ref="0x406841a0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40684280"/>
        <function-ref name="isEnabled" scoped="" ref="0x40684360"/>
        <function-ref name="enableAdc" scoped="" ref="0x40684440"/>
        <function-ref name="setAdmux" scoped="" ref="0x40684520"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40684600"/>
        <function-ref name="isComplete" scoped="" ref="0x406846e0"/>
        <function-ref name="cancel" scoped="" ref="0x406847c0"/>
        <function-ref name="disableAdc" scoped="" ref="0x406848a0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40684980"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40684a60"/>
        <function-ref name="startConversion" scoped="" ref="0x40684b40"/>
        <function-ref name="isStarted" scoped="" ref="0x40684ca0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40684d80"/>
        <function-ref name="setContinuous" scoped="" ref="0x40684e60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40683010"/>
        <function-ref name="getValue" scoped="" ref="0x406830f0"/>
        <function-ref name="dataReady" scoped="" ref="0x406831d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x406833b8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x406833b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40683590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40686d40" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40686d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40686f28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406df018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406dfca0" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406dfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406dfe88"/>
        <function-ref name="configure" scoped="" ref="0x406de010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x406df158" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406df158"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406df330"/>
        <function-ref name="requested" scoped="" ref="0x406df410"/>
        <function-ref name="granted" scoped="" ref="0x406df4f0"/>
        <function-ref name="isOwner" scoped="" ref="0x406df5d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406df6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40686600" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40686600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406867e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406868c8"/>
        <function-ref name="request" scoped="" ref="0x406869a8"/>
        <function-ref name="granted" scoped="" ref="0x40686a88"/>
        <function-ref name="isOwner" scoped="" ref="0x40686b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x406df7f0" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406df7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406df9c8"/>
        <function-ref name="userId" scoped="" ref="0x406dfaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414e48d0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414e48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414e4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x414e4c08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x414e4c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x414e4de0"/>
        <function-ref name="isEmpty" scoped="" ref="0x414e4ec0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x414e1010"/>
        <function-ref name="dequeue" scoped="" ref="0x414e10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x414e0568" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x414e0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x414e0750"/>
        <function-ref name="immediateRequested" scoped="" ref="0x414e0830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x414df4f0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x414df4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x414df6d8"/>
        <function-ref name="configure" scoped="" ref="0x414df7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x414df918" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x414df918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x414dfaf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x414dfbd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x414dfcb0"/>
        <function-ref name="dequeue" scoped="" ref="0x414dfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x414e0970" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x414e0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414e0b48"/>
        <function-ref name="requested" scoped="" ref="0x414e0c28"/>
        <function-ref name="granted" scoped="" ref="0x414e0d08"/>
        <function-ref name="isOwner" scoped="" ref="0x414e0de8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x414e0ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x414dfed0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x414dfed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x414de0c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x414de1a0"/>
        <function-ref name="led1On" scoped="" ref="0x414de280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x414de360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x414de440"/>
        <function-ref name="get" scoped="" ref="0x414de520"/>
        <function-ref name="led1Off" scoped="" ref="0x414de600"/>
        <function-ref name="led0On" scoped="" ref="0x414de980"/>
        <function-ref name="set" scoped="" ref="0x414de7c0"/>
        <function-ref name="led2On" scoped="" ref="0x414de6e0"/>
        <function-ref name="led2Off" scoped="" ref="0x414de8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414e1dc8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414e1dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414e0010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414e00f0"/>
        <function-ref name="request" scoped="" ref="0x414e01d0"/>
        <function-ref name="granted" scoped="" ref="0x414e02b0"/>
        <function-ref name="isOwner" scoped="" ref="0x414e0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x414df030" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x414df030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x414df208"/>
        <function-ref name="userId" scoped="" ref="0x414df2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x414deb00" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x414deb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414decd8"/>
        <function-ref name="runTask" scoped="" ref="0x414dedb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x406ddde8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x406ddde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x406dc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x406dc150" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406dc150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406dc328"/>
        <function-ref name="requested" scoped="" ref="0x406dc408"/>
        <function-ref name="granted" scoped="" ref="0x406dc4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x406dc5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406dc6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x406dd9f0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x406dd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406ddbc8"/>
        <function-ref name="stop" scoped="" ref="0x406ddca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x406dc7e8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406dc7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406dc9c0"/>
        <function-ref name="userId" scoped="" ref="0x406dcaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x414c34a8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x414c34a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x414c3680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x414c37c0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x414c37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414c3998"/>
        <function-ref name="requested" scoped="" ref="0x414c3a78"/>
        <function-ref name="granted" scoped="" ref="0x414c3b58"/>
        <function-ref name="isOwner" scoped="" ref="0x414c3c38"/>
        <function-ref name="immediateRequested" scoped="" ref="0x414c3d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x414c30b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x414c30b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414c3288"/>
        <function-ref name="stop" scoped="" ref="0x414c3368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x414c3e58" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x414c3e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41510050"/>
        <function-ref name="userId" scoped="" ref="0x41510130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x406f61d8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x406f61d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406f6800"/>
        <function-ref name="readDone" scoped="" ref="0x406f6a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x406f5178" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x406f5178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406f57c0"/>
        <function-ref name="readDone" scoped="" ref="0x406f5a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x406f46b0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406f46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x406f4888"/>
        <function-ref name="getChannel" scoped="" ref="0x406f4968"/>
        <function-ref name="getPrescaler" scoped="" ref="0x406f4a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x406f5de8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406f5de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x406f4010"/>
        <function-ref name="cancel" scoped="" ref="0x406f40f0"/>
        <function-ref name="dataReady" scoped="" ref="0x406f41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x40701e90" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x40701e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40700080"/>
        <function-ref name="runTask" scoped="" ref="0x40700160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x406f7560" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x406f7560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406f7b98"/>
        <function-ref name="readDone" scoped="" ref="0x406f7e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x4070b280" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x4070b280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4070b8b8"/>
        <function-ref name="readDone" scoped="" ref="0x4070bb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4070bea0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4070bea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407280c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407281a0"/>
        <function-ref name="request" scoped="" ref="0x40728280"/>
        <function-ref name="granted" scoped="" ref="0x40728360"/>
        <function-ref name="isOwner" scoped="" ref="0x40728440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40724468" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40724468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40724640"/>
        <function-ref name="getChannel" scoped="" ref="0x40724720"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40724800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4071e010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4071e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4071e1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x4071e2c8"/>
        <function-ref name="start" scoped="" ref="0x4071e3a8"/>
        <function-ref name="stop" scoped="" ref="0x4071e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4073a100" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4073a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4073a2d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4073a3b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4073a498"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4073a578"/>
        <function-ref name="setCca" scoped="" ref="0x4073a658"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4073a738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40755898" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40755898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40755af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4073bce8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4073bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4073bec0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40732010"/>
        <function-ref name="getPayload" scoped="" ref="0x407320f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407321d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407322b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4071e8e8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4071e8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4071eac0"/>
        <function-ref name="getPayload" scoped="" ref="0x4071eba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4071ec80"/>
        <function-ref name="cancel" scoped="" ref="0x4071ed60"/>
        <function-ref name="sendDone" scoped="" ref="0x4071ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40734960" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40734960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40734b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40737430" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40737430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40737608"/>
        <function-ref name="getRssi" scoped="" ref="0x407376e8"/>
        <function-ref name="getPower" scoped="" ref="0x407377c8"/>
        <function-ref name="getLqi" scoped="" ref="0x407378a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4073a928" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4073a928"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x4073ab00"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x4073abe0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x4073acc0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x4073ada0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x4073ae80"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x4074a010"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x4074a0f0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x4074a1d0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x4074a2b0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x4074a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407342c8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407342c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407344a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4073f010" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4073f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4073f1e8"/>
        <function-ref name="noAck" scoped="" ref="0x4073f2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4073f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x407578f8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x407578f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40757ad0"/>
        <function-ref name="setRetries" scoped="" ref="0x40757bb0"/>
        <function-ref name="getRetries" scoped="" ref="0x40757c90"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40757d70"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40757e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x407293b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407293b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40729590"/>
        <function-ref name="source" scoped="" ref="0x40729670"/>
        <function-ref name="address" scoped="" ref="0x40729750"/>
        <function-ref name="destination" scoped="" ref="0x40729830"/>
        <function-ref name="setSource" scoped="" ref="0x40729910"/>
        <function-ref name="setDestination" scoped="" ref="0x407299f0"/>
        <function-ref name="type" scoped="" ref="0x40729ad0"/>
        <function-ref name="setType" scoped="" ref="0x40729bb0"/>
        <function-ref name="isForMe" scoped="" ref="0x40729c90"/>
        <function-ref name="setGroup" scoped="" ref="0x40729d70"/>
        <function-ref name="localGroup" scoped="" ref="0x40729e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40749500" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40749500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x407496d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4074fa70" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4074fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4074fc48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4074f308" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4074f308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4074f4e0"/>
        <function-ref name="getPayload" scoped="" ref="0x4074f5c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4074f6a0"/>
        <function-ref name="cancel" scoped="" ref="0x4074f780"/>
        <function-ref name="sendDone" scoped="" ref="0x4074f860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x4075b7e0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x4075b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x4075b9b8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x4075ba98"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x4075bb78"/>
        <function-ref name="syncDone" scoped="" ref="0x4075bc58"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x4075bd38"/>
        <function-ref name="setShortAddr" scoped="" ref="0x4075be18"/>
        <function-ref name="setChannel" scoped="" ref="0x4075bef8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40764010"/>
        <function-ref name="setPanAddr" scoped="" ref="0x407640f0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x407641d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x407642b0"/>
        <function-ref name="sync" scoped="" ref="0x40764390"/>
        <function-ref name="getChannel" scoped="" ref="0x40764470"/>
        <function-ref name="getPanAddr" scoped="" ref="0x407645d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40750a38" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40750a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40750c10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40750cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40750dd0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40750eb0"/>
        <function-ref name="setCca" scoped="" ref="0x4074f010"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4074f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x407503c0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x407503c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40750598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x4076f818" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x4076f818"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4076f9f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4076fad0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4076fbb0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4076fc90"/>
        <function-ref name="setCca" scoped="" ref="0x4076fd70"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4076fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40751970" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40751970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40751b48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40751c28"/>
        <function-ref name="getPayload" scoped="" ref="0x40751d08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40751de8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40751ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x407568e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x407568e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40756ac0"/>
        <function-ref name="getPayload" scoped="" ref="0x40756ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40756c80"/>
        <function-ref name="cancel" scoped="" ref="0x40756d60"/>
        <function-ref name="sendDone" scoped="" ref="0x40756e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40752960" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40752960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40752b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x4074fe08" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x4074fe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4074e010"/>
        <function-ref name="getRssi" scoped="" ref="0x4074e0f0"/>
        <function-ref name="getPower" scoped="" ref="0x4074e1d0"/>
        <function-ref name="getLqi" scoped="" ref="0x4074e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4076f0d8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4076f0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4076f330"/>
        <function-ref name="changed" scoped="" ref="0x4076f410"/>
        <function-ref name="amGroup" scoped="" ref="0x4076f4f0"/>
        <function-ref name="setAddress" scoped="" ref="0x4076f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40763df0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40763df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x4074d010"/>
        <function-ref name="getMetadata" scoped="" ref="0x4074d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407522c8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407522c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407524a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40761010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40761010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407611e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407612c8"/>
        <function-ref name="led1On" scoped="" ref="0x407613a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40761488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40761568"/>
        <function-ref name="get" scoped="" ref="0x40761648"/>
        <function-ref name="led1Off" scoped="" ref="0x40761728"/>
        <function-ref name="led2Off" scoped="" ref="0x40761aa8"/>
        <function-ref name="set" scoped="" ref="0x40761808"/>
        <function-ref name="led0On" scoped="" ref="0x407618e8"/>
        <function-ref name="led2On" scoped="" ref="0x407619c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40752cd0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40752cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40752ea8"/>
        <function-ref name="source" scoped="" ref="0x40751010"/>
        <function-ref name="address" scoped="" ref="0x407510f0"/>
        <function-ref name="destination" scoped="" ref="0x407511d0"/>
        <function-ref name="setSource" scoped="" ref="0x407512b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40751390"/>
        <function-ref name="type" scoped="" ref="0x40751470"/>
        <function-ref name="setType" scoped="" ref="0x40751550"/>
        <function-ref name="isForMe" scoped="" ref="0x40751630"/>
        <function-ref name="setGroup" scoped="" ref="0x40751710"/>
        <function-ref name="localGroup" scoped="" ref="0x407517f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407aaee8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407aaee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407a90e0"/>
        <function-ref name="stopDone" scoped="" ref="0x407a91c0"/>
        <function-ref name="start" scoped="" ref="0x407a92a0"/>
        <function-ref name="stop" scoped="" ref="0x407a9380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x407a8010" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x407a8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x407a81e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x407a82c8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x407a83a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x407a8488"/>
        <function-ref name="setCca" scoped="" ref="0x407a8568"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x407a8648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407a9510" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407a9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407a96e8"/>
        <function-ref name="getPayload" scoped="" ref="0x407a97c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407a98a8"/>
        <function-ref name="cancel" scoped="" ref="0x407a9988"/>
        <function-ref name="sendDone" scoped="" ref="0x407a9a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407a9c10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407a9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407a9de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407a5010" loc="39:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407a51e8"/>
        <function-ref name="stopDone" scoped="" ref="0x407a52c8"/>
        <function-ref name="start" scoped="" ref="0x407a53a8"/>
        <function-ref name="stop" scoped="" ref="0x407a5488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x407a5d50" loc="41:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x407a5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x407a5f28"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x407a4018"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x407a40f8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x407a41d8"/>
        <function-ref name="setCca" scoped="" ref="0x407a42b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x407a4398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x407a2030" loc="47:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x407a2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x407a2208"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x407a22e8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x407a23c8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x407a24a8"/>
        <function-ref name="setCca" scoped="" ref="0x407a2588"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x407a2668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x407b6650" loc="50:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x407b6650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x407b6828"/>
        <function-ref name="getRssi" scoped="" ref="0x407b6908"/>
        <function-ref name="getPower" scoped="" ref="0x407b69e8"/>
        <function-ref name="getLqi" scoped="" ref="0x407b6ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x407b3858" loc="46:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x407b3858"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407b3a30"/>
        <function-ref name="cancel" scoped="" ref="0x407b3b10"/>
        <function-ref name="modify" scoped="" ref="0x407b3bf0"/>
        <function-ref name="sendDone" scoped="" ref="0x407b3cd0"/>
        <function-ref name="resend" scoped="" ref="0x407b3db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407a5618" loc="40:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407a5618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407a57f0"/>
        <function-ref name="getPayload" scoped="" ref="0x407a58d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407a59b0"/>
        <function-ref name="cancel" scoped="" ref="0x407a5a90"/>
        <function-ref name="sendDone" scoped="" ref="0x407a5b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x407b04c8" loc="48:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x407b04c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x407b06a0"/>
        <function-ref name="rand32" scoped="" ref="0x407b0780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x407a3260" loc="45:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x407a3260"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407a3438"/>
        <function-ref name="stop" scoped="" ref="0x407a3518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x407b6cd0" loc="51:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x407b6cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x407b6ea8"/>
        <function-ref name="getMetadata" scoped="" ref="0x407b1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x407b77e0" loc="44:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x407b77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x407b79b8"/>
        <function-ref name="rfOff" scoped="" ref="0x407b7a98"/>
        <function-ref name="rxOn" scoped="" ref="0x407b7b78"/>
        <function-ref name="startVReg" scoped="" ref="0x407b7c58"/>
        <function-ref name="stopVReg" scoped="" ref="0x407b7d38"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x407b7e18"/>
        <function-ref name="stopOscillator" scoped="" ref="0x407b7ef8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x407a3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407b0910" loc="49:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407b0910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407b0ae8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407b0bc8"/>
        <function-ref name="led1On" scoped="" ref="0x407b0ca8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407b0d88"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407b0e68"/>
        <function-ref name="get" scoped="" ref="0x407b6010"/>
        <function-ref name="led1Off" scoped="" ref="0x407b60f0"/>
        <function-ref name="led2Off" scoped="" ref="0x407b6470"/>
        <function-ref name="set" scoped="" ref="0x407b61d0"/>
        <function-ref name="led0On" scoped="" ref="0x407b62b0"/>
        <function-ref name="led2On" scoped="" ref="0x407b6390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x407a4550" loc="43:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407a4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407a4728"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407a4808"/>
        <function-ref name="request" scoped="" ref="0x407a48e8"/>
        <function-ref name="granted" scoped="" ref="0x407a49c8"/>
        <function-ref name="isOwner" scoped="" ref="0x407a4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x407c6578" loc="52:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x407c6578"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x407c67d0"/>
        <function-ref name="toIdle" scoped="" ref="0x407c68b0"/>
        <function-ref name="isState" scoped="" ref="0x407c6990"/>
        <function-ref name="isIdle" scoped="" ref="0x407c6a70"/>
        <function-ref name="requestState" scoped="" ref="0x407c6b50"/>
        <function-ref name="forceState" scoped="" ref="0x407c6c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x407c4a00" loc="77:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x407c4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407c4bd8"/>
        <function-ref name="runTask" scoped="" ref="0x407c4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x407c41f0" loc="76:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x407c41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407c43c8"/>
        <function-ref name="runTask" scoped="" ref="0x407c44a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x407c5680" loc="74:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x407c5680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407c5858"/>
        <function-ref name="runTask" scoped="" ref="0x407c5938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x407e9798" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x407e9798"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x407e9970"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x407e9a50"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x407e9b30"/>
        <function-ref name="syncDone" scoped="" ref="0x407e9c10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x407e9cf0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x407e9dd0"/>
        <function-ref name="setChannel" scoped="" ref="0x407e9eb0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x407e8010"/>
        <function-ref name="setPanAddr" scoped="" ref="0x407e80f0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x407e81d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x407e82b0"/>
        <function-ref name="sync" scoped="" ref="0x407e8390"/>
        <function-ref name="getChannel" scoped="" ref="0x407e8470"/>
        <function-ref name="getPanAddr" scoped="" ref="0x407e85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x407e7300" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x407e7300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407e7928"/>
        <function-ref name="readDone" scoped="" ref="0x407e7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x407e87a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x407e87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x407e8978"/>
        <function-ref name="rfOff" scoped="" ref="0x407e8a58"/>
        <function-ref name="rxOn" scoped="" ref="0x407e8b38"/>
        <function-ref name="startVReg" scoped="" ref="0x407e8c18"/>
        <function-ref name="stopVReg" scoped="" ref="0x407e8cf8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x407e8dd8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x407e8eb8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x407e7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407e9060" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407e9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407e9238"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407e9318"/>
        <function-ref name="request" scoped="" ref="0x407e93f8"/>
        <function-ref name="granted" scoped="" ref="0x407e94d8"/>
        <function-ref name="isOwner" scoped="" ref="0x407e95b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x407e31f0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x407e31f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x407e33c8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x407e34a8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x407e3588"/>
        <function-ref name="syncDone" scoped="" ref="0x407e3668"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x407e3748"/>
        <function-ref name="setShortAddr" scoped="" ref="0x407e3828"/>
        <function-ref name="setChannel" scoped="" ref="0x407e3908"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x407e39e8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x407e3ac8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x407e3ba8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x407e3c88"/>
        <function-ref name="sync" scoped="" ref="0x407e3d68"/>
        <function-ref name="getChannel" scoped="" ref="0x407e3e48"/>
        <function-ref name="getPanAddr" scoped="" ref="0x407e2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x407f1a40" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x407f1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407f1c18"/>
        <function-ref name="write" scoped="" ref="0x407f1cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x407e1af0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x407e1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407f8068"/>
        <function-ref name="fired" scoped="" ref="0x407f9820"/>
        <function-ref name="startAt" scoped="" ref="0x407f9d10"/>
        <function-ref name="isRunning" scoped="" ref="0x407f9a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x407f82e0"/>
        <function-ref name="start" scoped="" ref="0x407f9308"/>
        <function-ref name="stop" scoped="" ref="0x407f95a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x407f1010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x407f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407f11e8"/>
        <function-ref name="write" scoped="" ref="0x407f12c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x407f7010" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x407f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f71e8"/>
        <function-ref name="isInput" scoped="" ref="0x407f72c8"/>
        <function-ref name="toggle" scoped="" ref="0x407f73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x407f7488"/>
        <function-ref name="get" scoped="" ref="0x407f7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f7648"/>
        <function-ref name="set" scoped="" ref="0x407f7728"/>
        <function-ref name="clr" scoped="" ref="0x407f7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x407e2cc8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x407e2cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407e1310"/>
        <function-ref name="readDone" scoped="" ref="0x407e1568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x407fd308" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x407fd308"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407fd4e0"/>
        <function-ref name="runTask" scoped="" ref="0x407fd5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x40806010" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40806010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408061e8"/>
        <function-ref name="write" scoped="" ref="0x408062c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x407f4598" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x407f4598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407f4770"/>
        <function-ref name="write" scoped="" ref="0x407f4850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x407f5248" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407f5248"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x407f5420"/>
        <function-ref name="changed" scoped="" ref="0x407f5500"/>
        <function-ref name="amGroup" scoped="" ref="0x407f55e0"/>
        <function-ref name="setAddress" scoped="" ref="0x407f56c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x407f85b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x407f85b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f8788"/>
        <function-ref name="isInput" scoped="" ref="0x407f8868"/>
        <function-ref name="toggle" scoped="" ref="0x407f8948"/>
        <function-ref name="isOutput" scoped="" ref="0x407f8a28"/>
        <function-ref name="get" scoped="" ref="0x407f8b08"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f8be8"/>
        <function-ref name="set" scoped="" ref="0x407f8cc8"/>
        <function-ref name="clr" scoped="" ref="0x407f8da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x408046e0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x408046e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408048b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x407f7a18" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x407f7a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f7bf0"/>
        <function-ref name="isInput" scoped="" ref="0x407f7cd0"/>
        <function-ref name="toggle" scoped="" ref="0x407f7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x407f7e90"/>
        <function-ref name="get" scoped="" ref="0x407f6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f60f0"/>
        <function-ref name="set" scoped="" ref="0x407f61d0"/>
        <function-ref name="clr" scoped="" ref="0x407f62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407e6708" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407e6708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407e68e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x407f1530" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x407f1530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407f1708"/>
        <function-ref name="write" scoped="" ref="0x407f17e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x40804b00" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40804b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40804cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40804f20" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40804f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40803110"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408031f0"/>
        <function-ref name="request" scoped="" ref="0x408032d0"/>
        <function-ref name="granted" scoped="" ref="0x408033b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40803490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x40802010" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x40802010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408021e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408022c8"/>
        <function-ref name="request" scoped="" ref="0x408023a8"/>
        <function-ref name="granted" scoped="" ref="0x40802488"/>
        <function-ref name="isOwner" scoped="" ref="0x40802568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x407e21e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x407e21e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x407e23b8"/>
        <function-ref name="rfOff" scoped="" ref="0x407e2498"/>
        <function-ref name="rxOn" scoped="" ref="0x407e2578"/>
        <function-ref name="startVReg" scoped="" ref="0x407e2658"/>
        <function-ref name="stopVReg" scoped="" ref="0x407e2738"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x407e2818"/>
        <function-ref name="stopOscillator" scoped="" ref="0x407e28f8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x407e29d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x407f4aa0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x407f4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407f4c78"/>
        <function-ref name="write" scoped="" ref="0x407f4d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x407f4010" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x407f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407f4268"/>
        <function-ref name="write" scoped="" ref="0x407f4348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x40806e88" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40806e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40804070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408026f8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408026f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408028d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408029b0"/>
        <function-ref name="led1On" scoped="" ref="0x40802a90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40802b70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40802c50"/>
        <function-ref name="get" scoped="" ref="0x40802d30"/>
        <function-ref name="led1Off" scoped="" ref="0x40802e10"/>
        <function-ref name="led2Off" scoped="" ref="0x408011d0"/>
        <function-ref name="set" scoped="" ref="0x40802ef0"/>
        <function-ref name="led0On" scoped="" ref="0x40801010"/>
        <function-ref name="led2On" scoped="" ref="0x408010f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x407feae8" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x407feae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407fecc0"/>
        <function-ref name="runTask" scoped="" ref="0x407feda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407e6a98" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407e6a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407e6c70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407e6d50"/>
        <function-ref name="request" scoped="" ref="0x407e6e30"/>
        <function-ref name="granted" scoped="" ref="0x407e6f10"/>
        <function-ref name="isOwner" scoped="" ref="0x407e3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x407ee868" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x407ee868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407eea40"/>
        <function-ref name="write" scoped="" ref="0x407eeb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x407f3b88" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x407f3b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407f3d60"/>
        <function-ref name="disable" scoped="" ref="0x407f3e40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407f3f20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407f5018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x408036e8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x408036e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408039c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40803aa0"/>
        <function-ref name="request" scoped="" ref="0x40803b80"/>
        <function-ref name="granted" scoped="" ref="0x40803c60"/>
        <function-ref name="isOwner" scoped="" ref="0x40803d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x408042b0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x408042b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40804488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408475e0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408475e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408477b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x40847ba8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x40847ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40843088"/>
        <function-ref name="fired" scoped="" ref="0x40844830"/>
        <function-ref name="startAt" scoped="" ref="0x40844d20"/>
        <function-ref name="isRunning" scoped="" ref="0x40844aa8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40843300"/>
        <function-ref name="start" scoped="" ref="0x40844318"/>
        <function-ref name="stop" scoped="" ref="0x408445b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4093be78" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4093be78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40841350"/>
        <function-ref name="fired" scoped="" ref="0x40842af8"/>
        <function-ref name="startAt" scoped="" ref="0x40841010"/>
        <function-ref name="isRunning" scoped="" ref="0x40842d70"/>
        <function-ref name="getAlarm" scoped="" ref="0x408415c8"/>
        <function-ref name="start" scoped="" ref="0x408425e0"/>
        <function-ref name="stop" scoped="" ref="0x40842880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408417f8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408417f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408419d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x414fb508" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x414fb508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414fa9d0"/>
        <function-ref name="fired" scoped="" ref="0x414fa1a0"/>
        <function-ref name="startAt" scoped="" ref="0x414fa690"/>
        <function-ref name="isRunning" scoped="" ref="0x414fa418"/>
        <function-ref name="getAlarm" scoped="" ref="0x414fac48"/>
        <function-ref name="start" scoped="" ref="0x414fbc58"/>
        <function-ref name="stop" scoped="" ref="0x414fbef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x414f72c8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x414f72c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414f6840"/>
        <function-ref name="fired" scoped="" ref="0x414f6010"/>
        <function-ref name="startAt" scoped="" ref="0x414f6500"/>
        <function-ref name="isRunning" scoped="" ref="0x414f6288"/>
        <function-ref name="getAlarm" scoped="" ref="0x414f6ab8"/>
        <function-ref name="start" scoped="" ref="0x414f7a18"/>
        <function-ref name="stop" scoped="" ref="0x414f7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40860bb0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40860bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40860d88"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40860e68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40865010"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x408650f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x408651d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x408652b0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40865390"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40865470"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40865550"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40865630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4085ca28" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4085ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4085f500"/>
        <function-ref name="test" scoped="" ref="0x4085f010"/>
        <function-ref name="get" scoped="" ref="0x40864088"/>
        <function-ref name="captured" scoped="" ref="0x408645a0"/>
        <function-ref name="reset" scoped="" ref="0x40864840"/>
        <function-ref name="isOn" scoped="" ref="0x4085f288"/>
        <function-ref name="set" scoped="" ref="0x40864300"/>
        <function-ref name="start" scoped="" ref="0x40864ab8"/>
        <function-ref name="stop" scoped="" ref="0x40864d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4085fc10" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4085fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408741a0"/>
        <function-ref name="fired" scoped="" ref="0x4085a790"/>
        <function-ref name="get" scoped="" ref="0x4085a278"/>
        <function-ref name="reset" scoped="" ref="0x4085aa08"/>
        <function-ref name="isOn" scoped="" ref="0x40874418"/>
        <function-ref name="set" scoped="" ref="0x4085a4f0"/>
        <function-ref name="start" scoped="" ref="0x4085ac80"/>
        <function-ref name="stop" scoped="" ref="0x4085aef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40850cd8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40850cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4084c778"/>
        <function-ref name="test" scoped="" ref="0x4084c288"/>
        <function-ref name="get" scoped="" ref="0x4084d370"/>
        <function-ref name="setScale" scoped="" ref="0x4084c9f0"/>
        <function-ref name="getScale" scoped="" ref="0x4084cc90"/>
        <function-ref name="reset" scoped="" ref="0x4084db00"/>
        <function-ref name="overflow" scoped="" ref="0x4084d888"/>
        <function-ref name="isOn" scoped="" ref="0x4084c500"/>
        <function-ref name="set" scoped="" ref="0x4084d5e8"/>
        <function-ref name="start" scoped="" ref="0x4084dd78"/>
        <function-ref name="stop" scoped="" ref="0x4084c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4086e610" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4086e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4086e7e8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x4086e8c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4086e9a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x4086ea88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4086eb68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4086ec48"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x4086ed28"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x4086ee08"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x4086eee8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x4086d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x40880610" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x40880610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x408807e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x408808c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x408809a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40880a88"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40880b68"/>
        <function-ref name="setControl" scoped="" ref="0x40880c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4086b268" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4086b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408697d0"/>
        <function-ref name="fired" scoped="" ref="0x4086bdc8"/>
        <function-ref name="get" scoped="" ref="0x4086b8b0"/>
        <function-ref name="reset" scoped="" ref="0x40869068"/>
        <function-ref name="isOn" scoped="" ref="0x40869a48"/>
        <function-ref name="set" scoped="" ref="0x4086bb28"/>
        <function-ref name="start" scoped="" ref="0x408692e0"/>
        <function-ref name="stop" scoped="" ref="0x40869558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4086d348" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4086d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4086cdc8"/>
        <function-ref name="test" scoped="" ref="0x4086c8d8"/>
        <function-ref name="get" scoped="" ref="0x4086d990"/>
        <function-ref name="captured" scoped="" ref="0x4086dea8"/>
        <function-ref name="reset" scoped="" ref="0x4086c170"/>
        <function-ref name="isOn" scoped="" ref="0x4086cb50"/>
        <function-ref name="set" scoped="" ref="0x4086dc08"/>
        <function-ref name="start" scoped="" ref="0x4086c3e8"/>
        <function-ref name="stop" scoped="" ref="0x4086c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40869e60" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40869e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408833e8"/>
        <function-ref name="fired" scoped="" ref="0x408689f0"/>
        <function-ref name="get" scoped="" ref="0x408684d8"/>
        <function-ref name="reset" scoped="" ref="0x40868c68"/>
        <function-ref name="isOn" scoped="" ref="0x40883660"/>
        <function-ref name="set" scoped="" ref="0x40868750"/>
        <function-ref name="start" scoped="" ref="0x40868ee0"/>
        <function-ref name="stop" scoped="" ref="0x40883170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40883a78" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40883a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40880010"/>
        <function-ref name="fired" scoped="" ref="0x408825f0"/>
        <function-ref name="get" scoped="" ref="0x408820d8"/>
        <function-ref name="reset" scoped="" ref="0x40882868"/>
        <function-ref name="isOn" scoped="" ref="0x40880288"/>
        <function-ref name="set" scoped="" ref="0x40882350"/>
        <function-ref name="start" scoped="" ref="0x40882ae0"/>
        <function-ref name="stop" scoped="" ref="0x40882d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408712b8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408712b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40870d00"/>
        <function-ref name="test" scoped="" ref="0x40870810"/>
        <function-ref name="get" scoped="" ref="0x40871900"/>
        <function-ref name="setScale" scoped="" ref="0x4086e010"/>
        <function-ref name="getScale" scoped="" ref="0x4086e2b0"/>
        <function-ref name="reset" scoped="" ref="0x408700a8"/>
        <function-ref name="overflow" scoped="" ref="0x40871e18"/>
        <function-ref name="isOn" scoped="" ref="0x40870a88"/>
        <function-ref name="set" scoped="" ref="0x40871b78"/>
        <function-ref name="start" scoped="" ref="0x40870320"/>
        <function-ref name="stop" scoped="" ref="0x40870598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408bedb8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408bedb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408bd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x408bd220" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408bd220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x408d3c68"/>
        <function-ref name="test" scoped="" ref="0x408d3778"/>
        <function-ref name="get" scoped="" ref="0x408bd868"/>
        <function-ref name="setScale" scoped="" ref="0x408d3ee0"/>
        <function-ref name="getScale" scoped="" ref="0x408d21c0"/>
        <function-ref name="reset" scoped="" ref="0x408d3010"/>
        <function-ref name="overflow" scoped="" ref="0x408bdd80"/>
        <function-ref name="isOn" scoped="" ref="0x408d39f0"/>
        <function-ref name="set" scoped="" ref="0x408bdae0"/>
        <function-ref name="start" scoped="" ref="0x408d3288"/>
        <function-ref name="stop" scoped="" ref="0x408d3500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x414ec1a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x414ec1a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402e48e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402e48e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414ea660"/>
        <function-ref name="fired" scoped="" ref="0x414ece08"/>
        <function-ref name="startAt" scoped="" ref="0x414ea320"/>
        <function-ref name="isRunning" scoped="" ref="0x414ea0a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x414ea8d8"/>
        <function-ref name="start" scoped="" ref="0x414ec8f0"/>
        <function-ref name="stop" scoped="" ref="0x414ecb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x41538dd8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x41538dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41535388"/>
        <function-ref name="fired" scoped="" ref="0x41537980"/>
        <function-ref name="get" scoped="" ref="0x41537468"/>
        <function-ref name="reset" scoped="" ref="0x41537bf8"/>
        <function-ref name="isOn" scoped="" ref="0x41535600"/>
        <function-ref name="set" scoped="" ref="0x415376e0"/>
        <function-ref name="start" scoped="" ref="0x41537e70"/>
        <function-ref name="stop" scoped="" ref="0x41535110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x414eab98" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x414eab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41538600"/>
        <function-ref name="test" scoped="" ref="0x41538110"/>
        <function-ref name="get" scoped="" ref="0x41539200"/>
        <function-ref name="setScale" scoped="" ref="0x41538878"/>
        <function-ref name="getScale" scoped="" ref="0x41538b18"/>
        <function-ref name="reset" scoped="" ref="0x41539990"/>
        <function-ref name="overflow" scoped="" ref="0x41539718"/>
        <function-ref name="isOn" scoped="" ref="0x41538388"/>
        <function-ref name="set" scoped="" ref="0x41539478"/>
        <function-ref name="start" scoped="" ref="0x41539c08"/>
        <function-ref name="stop" scoped="" ref="0x41539e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408ef930" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408ef930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408ec0a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408ec598"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408ec320"/>
        <function-ref name="overflow" scoped="" ref="0x408ec810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x409073a0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409073a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40907af0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40906010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40907d68"/>
        <function-ref name="overflow" scoped="" ref="0x40906288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40904b30" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40904b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40903308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409037f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40903580"/>
        <function-ref name="overflow" scoped="" ref="0x40903a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40903d50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40903d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x409157f0"/>
        <function-ref name="test" scoped="" ref="0x40915300"/>
        <function-ref name="get" scoped="" ref="0x408f93e0"/>
        <function-ref name="setScale" scoped="" ref="0x40915a68"/>
        <function-ref name="getScale" scoped="" ref="0x40915d08"/>
        <function-ref name="reset" scoped="" ref="0x408f9b70"/>
        <function-ref name="overflow" scoped="" ref="0x408f98f8"/>
        <function-ref name="isOn" scoped="" ref="0x40915578"/>
        <function-ref name="set" scoped="" ref="0x408f9658"/>
        <function-ref name="start" scoped="" ref="0x408f9de8"/>
        <function-ref name="stop" scoped="" ref="0x40915088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4091f0e0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4091f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4091f830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4091fd20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4091faa8"/>
        <function-ref name="overflow" scoped="" ref="0x4091e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40913e60" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40913e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409115e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40911ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40911858"/>
        <function-ref name="overflow" scoped="" ref="0x40911d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x414f5d10" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x414f5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414f31e8"/>
        <function-ref name="fired" scoped="" ref="0x414f4990"/>
        <function-ref name="startAt" scoped="" ref="0x414f4e80"/>
        <function-ref name="isRunning" scoped="" ref="0x414f4c08"/>
        <function-ref name="getAlarm" scoped="" ref="0x414f3460"/>
        <function-ref name="start" scoped="" ref="0x414f4478"/>
        <function-ref name="stop" scoped="" ref="0x414f4718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x414f2a00" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x414f2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414ef010"/>
        <function-ref name="fired" scoped="" ref="0x414f0718"/>
        <function-ref name="startAt" scoped="" ref="0x414f0c08"/>
        <function-ref name="isRunning" scoped="" ref="0x414f0990"/>
        <function-ref name="getAlarm" scoped="" ref="0x414ef288"/>
        <function-ref name="start" scoped="" ref="0x414f0200"/>
        <function-ref name="stop" scoped="" ref="0x414f04a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x414f37b0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x414f37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414f3f00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x414f2418"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x414f21a0"/>
        <function-ref name="overflow" scoped="" ref="0x414f2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4093cbb8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4093cbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4093cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x409368d0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x409368d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40936aa8"/>
        <function-ref name="isInput" scoped="" ref="0x40936b88"/>
        <function-ref name="toggle" scoped="" ref="0x40936c68"/>
        <function-ref name="isOutput" scoped="" ref="0x40936d48"/>
        <function-ref name="get" scoped="" ref="0x40936e28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40936f08"/>
        <function-ref name="set" scoped="" ref="0x40955010"/>
        <function-ref name="clr" scoped="" ref="0x409550f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x409552e8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x409552e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409554c0"/>
        <function-ref name="isInput" scoped="" ref="0x409555a0"/>
        <function-ref name="toggle" scoped="" ref="0x40955680"/>
        <function-ref name="isOutput" scoped="" ref="0x40955760"/>
        <function-ref name="get" scoped="" ref="0x40955840"/>
        <function-ref name="makeOutput" scoped="" ref="0x40955920"/>
        <function-ref name="set" scoped="" ref="0x40955a00"/>
        <function-ref name="clr" scoped="" ref="0x40955ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40955cd0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40955cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40955ea8"/>
        <function-ref name="isInput" scoped="" ref="0x40954010"/>
        <function-ref name="toggle" scoped="" ref="0x409540f0"/>
        <function-ref name="isOutput" scoped="" ref="0x409541d0"/>
        <function-ref name="get" scoped="" ref="0x409542b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40954390"/>
        <function-ref name="set" scoped="" ref="0x40954470"/>
        <function-ref name="clr" scoped="" ref="0x40954550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x40846e98" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40846e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409360c0"/>
        <function-ref name="isInput" scoped="" ref="0x409361a0"/>
        <function-ref name="toggle" scoped="" ref="0x40936280"/>
        <function-ref name="isOutput" scoped="" ref="0x40936360"/>
        <function-ref name="get" scoped="" ref="0x40936440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40936520"/>
        <function-ref name="set" scoped="" ref="0x40936600"/>
        <function-ref name="clr" scoped="" ref="0x409366e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x40953128" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x40953128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40953300"/>
        <function-ref name="isInput" scoped="" ref="0x409533e0"/>
        <function-ref name="toggle" scoped="" ref="0x409534c0"/>
        <function-ref name="isOutput" scoped="" ref="0x409535a0"/>
        <function-ref name="get" scoped="" ref="0x40953680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40953760"/>
        <function-ref name="set" scoped="" ref="0x40953840"/>
        <function-ref name="clr" scoped="" ref="0x40953920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x408464c0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x408464c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40846698"/>
        <function-ref name="isInput" scoped="" ref="0x40846778"/>
        <function-ref name="toggle" scoped="" ref="0x40846858"/>
        <function-ref name="isOutput" scoped="" ref="0x40846938"/>
        <function-ref name="get" scoped="" ref="0x40846a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40846af8"/>
        <function-ref name="set" scoped="" ref="0x40846bd8"/>
        <function-ref name="clr" scoped="" ref="0x40846cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x40954730" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40954730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40954908"/>
        <function-ref name="isInput" scoped="" ref="0x409549e8"/>
        <function-ref name="toggle" scoped="" ref="0x40954ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40954ba8"/>
        <function-ref name="get" scoped="" ref="0x40954c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40954d68"/>
        <function-ref name="set" scoped="" ref="0x40954e48"/>
        <function-ref name="clr" scoped="" ref="0x40954f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x4094ba80" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x4094ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x4094bc58"/>
        <function-ref name="disable" scoped="" ref="0x4094bd38"/>
        <function-ref name="captured" scoped="" ref="0x4094be18"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x4094bef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x4094d198" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x4094d198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4094d370"/>
        <function-ref name="disable" scoped="" ref="0x4094d450"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4094d530"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4094d610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x4094d8a8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x4094d8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4094da80"/>
        <function-ref name="disable" scoped="" ref="0x4094db60"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4094dc40"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4094dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40960f00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40960f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x4094a0f0"/>
        <function-ref name="disable" scoped="" ref="0x4094a1d0"/>
        <function-ref name="captured" scoped="" ref="0x4094a2b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x4094a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x4094a5a0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x4094a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4095e048"/>
        <function-ref name="test" scoped="" ref="0x40949b38"/>
        <function-ref name="get" scoped="" ref="0x4094abe8"/>
        <function-ref name="captured" scoped="" ref="0x40949130"/>
        <function-ref name="reset" scoped="" ref="0x409493d0"/>
        <function-ref name="isOn" scoped="" ref="0x40949db0"/>
        <function-ref name="set" scoped="" ref="0x4094ae60"/>
        <function-ref name="start" scoped="" ref="0x40949648"/>
        <function-ref name="stop" scoped="" ref="0x409498c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x4095c8c0" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x4095c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4095ca98"/>
        <function-ref name="fired" scoped="" ref="0x4095cb78"/>
        <function-ref name="disable" scoped="" ref="0x4095cc58"/>
        <function-ref name="edge" scoped="" ref="0x4095cd38"/>
        <function-ref name="enable" scoped="" ref="0x4095ce18"/>
        <function-ref name="getValue" scoped="" ref="0x4095cef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x4095c2c8" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x4095c2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4095c4a0"/>
        <function-ref name="disable" scoped="" ref="0x4095c580"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4095c660"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4095c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x4096c168" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x4096c168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096c340"/>
        <function-ref name="fired" scoped="" ref="0x4096c420"/>
        <function-ref name="disable" scoped="" ref="0x4096c500"/>
        <function-ref name="edge" scoped="" ref="0x4096c5e0"/>
        <function-ref name="enable" scoped="" ref="0x4096c6c0"/>
        <function-ref name="getValue" scoped="" ref="0x4096c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x4096f4f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x4096f4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096f6d0"/>
        <function-ref name="fired" scoped="" ref="0x4096f7b0"/>
        <function-ref name="disable" scoped="" ref="0x4096f890"/>
        <function-ref name="edge" scoped="" ref="0x4096f970"/>
        <function-ref name="enable" scoped="" ref="0x4096fa50"/>
        <function-ref name="getValue" scoped="" ref="0x4096fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x4096d010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x4096d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096d1e8"/>
        <function-ref name="fired" scoped="" ref="0x4096d2c8"/>
        <function-ref name="disable" scoped="" ref="0x4096d3a8"/>
        <function-ref name="edge" scoped="" ref="0x4096d488"/>
        <function-ref name="enable" scoped="" ref="0x4096d568"/>
        <function-ref name="getValue" scoped="" ref="0x4096d648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x4096c9e8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x4096c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096cbc0"/>
        <function-ref name="fired" scoped="" ref="0x4096cca0"/>
        <function-ref name="disable" scoped="" ref="0x4096cd80"/>
        <function-ref name="edge" scoped="" ref="0x4096ce60"/>
        <function-ref name="enable" scoped="" ref="0x4096b010"/>
        <function-ref name="getValue" scoped="" ref="0x4096b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x4096fd78" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x4096fd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096e010"/>
        <function-ref name="fired" scoped="" ref="0x4096e0f0"/>
        <function-ref name="disable" scoped="" ref="0x4096e1d0"/>
        <function-ref name="edge" scoped="" ref="0x4096e2b0"/>
        <function-ref name="enable" scoped="" ref="0x4096e390"/>
        <function-ref name="getValue" scoped="" ref="0x4096e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x4096d890" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x4096d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096da68"/>
        <function-ref name="fired" scoped="" ref="0x4096db48"/>
        <function-ref name="disable" scoped="" ref="0x4096dc28"/>
        <function-ref name="edge" scoped="" ref="0x4096dd08"/>
        <function-ref name="enable" scoped="" ref="0x4096dde8"/>
        <function-ref name="getValue" scoped="" ref="0x4096dec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40972c20" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40972c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40972df8"/>
        <function-ref name="fired" scoped="" ref="0x40972ed8"/>
        <function-ref name="disable" scoped="" ref="0x4096f010"/>
        <function-ref name="edge" scoped="" ref="0x4096f0f0"/>
        <function-ref name="enable" scoped="" ref="0x4096f1d0"/>
        <function-ref name="getValue" scoped="" ref="0x4096f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x4096e6b8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x4096e6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096e890"/>
        <function-ref name="fired" scoped="" ref="0x4096e970"/>
        <function-ref name="disable" scoped="" ref="0x4096ea50"/>
        <function-ref name="edge" scoped="" ref="0x4096eb30"/>
        <function-ref name="enable" scoped="" ref="0x4096ec10"/>
        <function-ref name="getValue" scoped="" ref="0x4096ecf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x409671a0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x409671a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40967378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x40966a60" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x40966a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40966c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x409687d8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x409687d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409689b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x40967618" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x40967618"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x40966ed8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x40966ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409680c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x40968c50" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x40968c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40968e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x409665e8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x409665e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409667c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x40968360" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x40968360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40968538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40969570" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40969570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40969748"/>
        <function-ref name="fired" scoped="" ref="0x40969828"/>
        <function-ref name="disable" scoped="" ref="0x40969908"/>
        <function-ref name="edge" scoped="" ref="0x409699e8"/>
        <function-ref name="enable" scoped="" ref="0x40969ac8"/>
        <function-ref name="getValue" scoped="" ref="0x40969ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40969d28" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40969d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40969f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4098a6c0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4098a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4098a898"/>
        <function-ref name="fired" scoped="" ref="0x4098a978"/>
        <function-ref name="disable" scoped="" ref="0x4098aa58"/>
        <function-ref name="edge" scoped="" ref="0x4098ab38"/>
        <function-ref name="enable" scoped="" ref="0x4098ac18"/>
        <function-ref name="getValue" scoped="" ref="0x4098acf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4098ae78" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4098ae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40989070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409887a8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409887a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40988980"/>
        <function-ref name="fired" scoped="" ref="0x40988a60"/>
        <function-ref name="disable" scoped="" ref="0x40988b40"/>
        <function-ref name="edge" scoped="" ref="0x40988c20"/>
        <function-ref name="enable" scoped="" ref="0x40988d00"/>
        <function-ref name="getValue" scoped="" ref="0x40988de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40987010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40987010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409871e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40986920" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40986920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40986af8"/>
        <function-ref name="fired" scoped="" ref="0x40986bd8"/>
        <function-ref name="disable" scoped="" ref="0x40986cb8"/>
        <function-ref name="edge" scoped="" ref="0x40986d98"/>
        <function-ref name="enable" scoped="" ref="0x40986e78"/>
        <function-ref name="getValue" scoped="" ref="0x409a5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x409a5190" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x409a5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409a5368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409a3bd0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409a3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409a3da8"/>
        <function-ref name="fired" scoped="" ref="0x409a3e88"/>
        <function-ref name="disable" scoped="" ref="0x409a2010"/>
        <function-ref name="edge" scoped="" ref="0x409a20f0"/>
        <function-ref name="enable" scoped="" ref="0x409a21d0"/>
        <function-ref name="getValue" scoped="" ref="0x409a22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x409a2430" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x409a2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409a2608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409a1e68" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409a1e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409a0050"/>
        <function-ref name="fired" scoped="" ref="0x409a0130"/>
        <function-ref name="disable" scoped="" ref="0x409a0210"/>
        <function-ref name="edge" scoped="" ref="0x409a02f0"/>
        <function-ref name="enable" scoped="" ref="0x409a03d0"/>
        <function-ref name="getValue" scoped="" ref="0x409a04b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x409a0630" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x409a0630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409a0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4099e050" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4099e050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4099e228"/>
        <function-ref name="fired" scoped="" ref="0x4099e308"/>
        <function-ref name="disable" scoped="" ref="0x4099e3e8"/>
        <function-ref name="edge" scoped="" ref="0x4099e4c8"/>
        <function-ref name="enable" scoped="" ref="0x4099e5a8"/>
        <function-ref name="getValue" scoped="" ref="0x4099e688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4099e808" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4099e808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4099e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4099c2b0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4099c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4099c488"/>
        <function-ref name="fired" scoped="" ref="0x4099c568"/>
        <function-ref name="disable" scoped="" ref="0x4099c648"/>
        <function-ref name="edge" scoped="" ref="0x4099c728"/>
        <function-ref name="enable" scoped="" ref="0x4099c808"/>
        <function-ref name="getValue" scoped="" ref="0x4099c8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4099ca68" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4099ca68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4099cc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x409b68d8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x409b68d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409b6ab0"/>
        <function-ref name="isInput" scoped="" ref="0x409b6b90"/>
        <function-ref name="toggle" scoped="" ref="0x409b6c70"/>
        <function-ref name="isOutput" scoped="" ref="0x409b6d50"/>
        <function-ref name="get" scoped="" ref="0x409b6e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x409b6f10"/>
        <function-ref name="set" scoped="" ref="0x409b5010"/>
        <function-ref name="clr" scoped="" ref="0x409b50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x409b6220" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x409b6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409b63f8"/>
        <function-ref name="disable" scoped="" ref="0x409b64d8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x409b65b8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x409b6698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x409b30f8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x409b30f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409b32d0"/>
        <function-ref name="runTask" scoped="" ref="0x409b33b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40ae9a00" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40ae9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae9cd8"/>
        <function-ref name="write" scoped="" ref="0x40ae9db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40b0aca0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40b0aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b0ae78"/>
        <function-ref name="writeDone" scoped="" ref="0x40b08010"/>
        <function-ref name="write" scoped="" ref="0x40b080f0"/>
        <function-ref name="beginRead" scoped="" ref="0x40b081d0"/>
        <function-ref name="readDone" scoped="" ref="0x40b082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40af0ef8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40af0ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aee0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40aeb010" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40aeb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aeb1e8"/>
        <function-ref name="write" scoped="" ref="0x40aeb2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40ae8880" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40ae8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae8a58"/>
        <function-ref name="write" scoped="" ref="0x40ae8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40ae8cb8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40ae8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae8e90"/>
        <function-ref name="write" scoped="" ref="0x40ae7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40aee910" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40aee910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aeeae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40b0a190" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b0a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b0a368"/>
        <function-ref name="write" scoped="" ref="0x40b0a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40aeb880" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40aeb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aeba58"/>
        <function-ref name="write" scoped="" ref="0x40aebb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40ae9190" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40ae9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae9368"/>
        <function-ref name="write" scoped="" ref="0x40ae9448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40ae7190" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40ae7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae7368"/>
        <function-ref name="write" scoped="" ref="0x40ae7448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40ae66e8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40ae66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae68c0"/>
        <function-ref name="write" scoped="" ref="0x40ae69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40af0330" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40af0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40af0508"/>
        <function-ref name="abortRelease" scoped="" ref="0x40af05e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40af06c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40aed6c0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40aed6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aed898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40aeda18" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40aeda18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aedc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40aeddf0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40aeddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aec010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40aed010" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40aed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aed1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40aebcb8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40aebcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aebe90"/>
        <function-ref name="write" scoped="" ref="0x40ae9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40aeb448" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40aeb448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aeb620"/>
        <function-ref name="write" scoped="" ref="0x40aeb700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40af0ba0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40af0ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40af0d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40ae6b20" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40ae6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae6cf8"/>
        <function-ref name="write" scoped="" ref="0x40ae6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40ae5cb8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40ae5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae5e90"/>
        <function-ref name="write" scoped="" ref="0x40b0a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40ae7a00" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40ae7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae7bd8"/>
        <function-ref name="write" scoped="" ref="0x40ae7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40af0848" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40af0848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40af0a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40aecb98" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40aecb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aecd70"/>
        <function-ref name="write" scoped="" ref="0x40aece50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40ae95c8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40ae95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae97a0"/>
        <function-ref name="write" scoped="" ref="0x40ae9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40b0a5c8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40b0a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b0a7a0"/>
        <function-ref name="writeDone" scoped="" ref="0x40b0a880"/>
        <function-ref name="write" scoped="" ref="0x40b0a960"/>
        <function-ref name="beginRead" scoped="" ref="0x40b0aa40"/>
        <function-ref name="readDone" scoped="" ref="0x40b0ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40ae75c8" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40ae75c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae77a0"/>
        <function-ref name="write" scoped="" ref="0x40ae7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40ae8010" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40ae8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae81e8"/>
        <function-ref name="write" scoped="" ref="0x40ae82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40aee260" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40aee260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aee438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40ae8448" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40ae8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae8620"/>
        <function-ref name="write" scoped="" ref="0x40ae8700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40af1c50" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40af1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40af1e28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40af1f08"/>
        <function-ref name="request" scoped="" ref="0x40af0010"/>
        <function-ref name="granted" scoped="" ref="0x40af00f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40af01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40aec190" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40aec190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aec368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40aec840" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40aec840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aeca18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40ae5880" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40ae5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae5a58"/>
        <function-ref name="write" scoped="" ref="0x40ae5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40ae5448" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40ae5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae5620"/>
        <function-ref name="write" scoped="" ref="0x40ae5700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40aed368" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40aed368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aed540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40ae5010" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40ae5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae51e8"/>
        <function-ref name="write" scoped="" ref="0x40ae52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40aee5b8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40aee5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aee790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40aeec68" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40aeec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aeee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40aec4e8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40aec4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40aec6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40ae7e38" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40ae7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae6050"/>
        <function-ref name="write" scoped="" ref="0x40ae6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40ae62b0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40ae62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae6488"/>
        <function-ref name="write" scoped="" ref="0x40ae6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x409d5a98" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x409d5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409d5c70"/>
        <function-ref name="writeDone" scoped="" ref="0x409d5d50"/>
        <function-ref name="write" scoped="" ref="0x409d5e30"/>
        <function-ref name="beginRead" scoped="" ref="0x409d5f10"/>
        <function-ref name="readDone" scoped="" ref="0x409d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409d5208" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409d5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409d53e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x409d54c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409d55a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x409d4500" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x409d4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d46d8"/>
        <function-ref name="write" scoped="" ref="0x409d47b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x409d4cc8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x409d4cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d4ea0"/>
        <function-ref name="write" scoped="" ref="0x409d3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409bb9e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409bb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409bbbc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409bbca0"/>
        <function-ref name="request" scoped="" ref="0x409bbd80"/>
        <function-ref name="granted" scoped="" ref="0x409bbe60"/>
        <function-ref name="isOwner" scoped="" ref="0x409d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x409d3530" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x409d3530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d3708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x409e65c0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x409e65c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e6798"/>
        <function-ref name="sendDone" scoped="" ref="0x409e6878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x409ce370" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x409ce370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409ce548"/>
        <function-ref name="writeDone" scoped="" ref="0x409ce628"/>
        <function-ref name="write" scoped="" ref="0x409ce708"/>
        <function-ref name="beginRead" scoped="" ref="0x409ce7e8"/>
        <function-ref name="readDone" scoped="" ref="0x409ce8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409cf0f8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409cf0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409cf2d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x409cf3b0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409cf490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x409c9258" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409c9258"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409c9430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x409e6a90" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x409e6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x409e6c68"/>
        <function-ref name="toIdle" scoped="" ref="0x409e6d48"/>
        <function-ref name="isState" scoped="" ref="0x409e6e28"/>
        <function-ref name="isIdle" scoped="" ref="0x409e6f08"/>
        <function-ref name="requestState" scoped="" ref="0x409cb010"/>
        <function-ref name="forceState" scoped="" ref="0x409cb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x409cc278" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409cc278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409cc450"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409cc530"/>
        <function-ref name="request" scoped="" ref="0x409cc610"/>
        <function-ref name="granted" scoped="" ref="0x409cc6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x409cc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x409ced98" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x409ced98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cd010"/>
        <function-ref name="write" scoped="" ref="0x409cd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x409cd5e0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x409cd5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cd7b8"/>
        <function-ref name="write" scoped="" ref="0x409cd898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409cb260" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409cb260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409cb438"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409cb518"/>
        <function-ref name="led1On" scoped="" ref="0x409cb5f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409cb6d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409cb7b8"/>
        <function-ref name="get" scoped="" ref="0x409cb898"/>
        <function-ref name="led1Off" scoped="" ref="0x409cb978"/>
        <function-ref name="led2Off" scoped="" ref="0x409cbcf8"/>
        <function-ref name="set" scoped="" ref="0x409cba58"/>
        <function-ref name="led0On" scoped="" ref="0x409cbb38"/>
        <function-ref name="led2On" scoped="" ref="0x409cbc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409cf908" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409cf908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409cfae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409cfbc0"/>
        <function-ref name="request" scoped="" ref="0x409cfca0"/>
        <function-ref name="granted" scoped="" ref="0x409cfd80"/>
        <function-ref name="isOwner" scoped="" ref="0x409cfe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x409e4010" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x409e4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409e41e8"/>
        <function-ref name="runTask" scoped="" ref="0x409e42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x409cdd98" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x409cdd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40a18770" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40a18770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40a18948"/>
        <function-ref name="toIdle" scoped="" ref="0x40a18a28"/>
        <function-ref name="isState" scoped="" ref="0x40a18b08"/>
        <function-ref name="isIdle" scoped="" ref="0x40a18be8"/>
        <function-ref name="requestState" scoped="" ref="0x40a18cc8"/>
        <function-ref name="forceState" scoped="" ref="0x40a18da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40a16a28" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40a16a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40a16c00"/>
        <function-ref name="toIdle" scoped="" ref="0x40a16ce0"/>
        <function-ref name="isState" scoped="" ref="0x40a16dc0"/>
        <function-ref name="isIdle" scoped="" ref="0x40a16ea0"/>
        <function-ref name="requestState" scoped="" ref="0x40a12010"/>
        <function-ref name="forceState" scoped="" ref="0x40a120f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a12ad0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a12ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a12ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40a0f120" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40a0f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40a0f2f8"/>
        <function-ref name="toIdle" scoped="" ref="0x40a0f3d8"/>
        <function-ref name="isState" scoped="" ref="0x40a0f4b8"/>
        <function-ref name="isIdle" scoped="" ref="0x40a0f598"/>
        <function-ref name="requestState" scoped="" ref="0x40a0f678"/>
        <function-ref name="forceState" scoped="" ref="0x40a0f758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a108d8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a108d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a10ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a10b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a105a0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a105a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a10778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a14b70" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a14b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a14d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a14ea8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a14ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a100c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a101a0"/>
        <function-ref name="request" scoped="" ref="0x40a10280"/>
        <function-ref name="granted" scoped="" ref="0x40a10360"/>
        <function-ref name="isOwner" scoped="" ref="0x40a10440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a239c0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a239c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a23b98"/>
        <function-ref name="sendDone" scoped="" ref="0x40a23c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a23628" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a23628"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a23800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a232a8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a232a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a23480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a20120" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a20120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a202f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a203d8"/>
        <function-ref name="request" scoped="" ref="0x40a204b8"/>
        <function-ref name="granted" scoped="" ref="0x40a20598"/>
        <function-ref name="isOwner" scoped="" ref="0x40a20678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40a43798" loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40a43798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a43970"/>
        <function-ref name="runTask" scoped="" ref="0x40a43a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a1d928" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a1d928"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a1db00"/>
        <function-ref name="sendDone" scoped="" ref="0x40a1dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40a3ee00" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40a3ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a3d010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a3d0f0"/>
        <function-ref name="request" scoped="" ref="0x40a3d1d0"/>
        <function-ref name="granted" scoped="" ref="0x40a3d2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a3d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a1d5b0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a1d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a1d788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a1d250" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a1d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a1d428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40a2e1c8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40a2e1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a2e3a0"/>
        <function-ref name="sleep" scoped="" ref="0x40a3e7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a2e560"/>
        <function-ref name="dataReady" scoped="" ref="0x40a3e8d0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a2e720"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a2e800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a2e8e0"/>
        <function-ref name="read" scoped="" ref="0x40a2e9c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a2eaa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a2eb80"/>
        <function-ref name="setClock" scoped="" ref="0x40a2ec60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a2ed40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a2ee20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a3e010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a3e0f0"/>
        <function-ref name="write" scoped="" ref="0x40a3e1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a3e2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a3e390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a3e470"/>
        <function-ref name="getClock" scoped="" ref="0x40a3e550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a3e630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a2e480"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a2e640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a3e710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a3f100" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a3f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a3f2d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a3f3b8"/>
        <function-ref name="request" scoped="" ref="0x40a3f498"/>
        <function-ref name="granted" scoped="" ref="0x40a3f578"/>
        <function-ref name="isOwner" scoped="" ref="0x40a3f658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a3d9c0" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a3d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a3db98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a3d540" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a3d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a3d718"/>
        <function-ref name="userId" scoped="" ref="0x40a3d7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40a720c0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40a720c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a72298"/>
        <function-ref name="sleep" scoped="" ref="0x40a71710"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a72458"/>
        <function-ref name="dataReady" scoped="" ref="0x40a717f0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a72618"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a726f8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a727d8"/>
        <function-ref name="read" scoped="" ref="0x40a728b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a72998"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a72a78"/>
        <function-ref name="setClock" scoped="" ref="0x40a72b58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a72c38"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a72d18"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a72e78"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a71010"/>
        <function-ref name="write" scoped="" ref="0x40a710f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a711d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a712b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a71390"/>
        <function-ref name="getClock" scoped="" ref="0x40a71470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a71550"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a72378"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a72538"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a71630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40a6a200" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40a6a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a6a3d8"/>
        <function-ref name="isInput" scoped="" ref="0x40a6a4b8"/>
        <function-ref name="toggle" scoped="" ref="0x40a6a598"/>
        <function-ref name="isOutput" scoped="" ref="0x40a6a678"/>
        <function-ref name="get" scoped="" ref="0x40a6a758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a6a838"/>
        <function-ref name="set" scoped="" ref="0x40a6a918"/>
        <function-ref name="clr" scoped="" ref="0x40a6a9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40a6ccd0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40a6ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a6cea8"/>
        <function-ref name="isInput" scoped="" ref="0x40a6b010"/>
        <function-ref name="toggle" scoped="" ref="0x40a6b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a6b1d0"/>
        <function-ref name="get" scoped="" ref="0x40a6b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a6b390"/>
        <function-ref name="set" scoped="" ref="0x40a6b470"/>
        <function-ref name="clr" scoped="" ref="0x40a6b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40a6c2f8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40a6c2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a6c4d0"/>
        <function-ref name="isInput" scoped="" ref="0x40a6c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x40a6c690"/>
        <function-ref name="isOutput" scoped="" ref="0x40a6c770"/>
        <function-ref name="get" scoped="" ref="0x40a6c850"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a6c930"/>
        <function-ref name="set" scoped="" ref="0x40a6ca10"/>
        <function-ref name="clr" scoped="" ref="0x40a6caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40a6dde8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40a6dde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a6c010"/>
        <function-ref name="stop" scoped="" ref="0x40a6c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40a6ac00" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40a6ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a6add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40a6e4a0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40a6e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a6e678"/>
        <function-ref name="sleep" scoped="" ref="0x40a6db10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a6e838"/>
        <function-ref name="dataReady" scoped="" ref="0x40a6dbf0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a6e9f8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a6ead8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a6ebb8"/>
        <function-ref name="read" scoped="" ref="0x40a6ec98"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a6ed78"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a6ee58"/>
        <function-ref name="setClock" scoped="" ref="0x40a6d010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a6d0f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a6d1d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a6d330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a6d410"/>
        <function-ref name="write" scoped="" ref="0x40a6d4f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a6d5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a6d6b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a6d790"/>
        <function-ref name="getClock" scoped="" ref="0x40a6d870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a6d950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a6e758"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a6e918"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a6da30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40a6b740" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40a6b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a6b918"/>
        <function-ref name="isInput" scoped="" ref="0x40a6b9f8"/>
        <function-ref name="toggle" scoped="" ref="0x40a6bad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a6bbb8"/>
        <function-ref name="get" scoped="" ref="0x40a6bc98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a6bd78"/>
        <function-ref name="set" scoped="" ref="0x40a6be58"/>
        <function-ref name="clr" scoped="" ref="0x40a6a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40acacb0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40acacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40acae98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ac9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ac9600" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ac9600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ac97e8"/>
        <function-ref name="configure" scoped="" ref="0x40ac98c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40aca570" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40aca570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aca758"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aca838"/>
        <function-ref name="request" scoped="" ref="0x40aca918"/>
        <function-ref name="granted" scoped="" ref="0x40aca9f8"/>
        <function-ref name="isOwner" scoped="" ref="0x40acaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ac9150" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ac9328"/>
        <function-ref name="userId" scoped="" ref="0x40ac9408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4156cd68" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4156cd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4156a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4156a170" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4156a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4156a348"/>
        <function-ref name="isEmpty" scoped="" ref="0x4156a428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4156a508"/>
        <function-ref name="dequeue" scoped="" ref="0x4156a5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x415698c0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x415698c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41569aa8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41569b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41568218" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41568218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41568400"/>
        <function-ref name="configure" scoped="" ref="0x415684e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41568640" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41568640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41568818"/>
        <function-ref name="isEmpty" scoped="" ref="0x415688f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x415689d8"/>
        <function-ref name="dequeue" scoped="" ref="0x41568ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41569180" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41569180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41569368"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41569448"/>
        <function-ref name="request" scoped="" ref="0x41569528"/>
        <function-ref name="granted" scoped="" ref="0x41569608"/>
        <function-ref name="isOwner" scoped="" ref="0x415696e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41569cc8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41569cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41569ea0"/>
        <function-ref name="userId" scoped="" ref="0x41568010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41568c38" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41568c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41568e10"/>
        <function-ref name="runTask" scoped="" ref="0x41568ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40ac3740" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40ac3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac3918"/>
        <function-ref name="isInput" scoped="" ref="0x40ac39f8"/>
        <function-ref name="toggle" scoped="" ref="0x40ac3ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac3bb8"/>
        <function-ref name="get" scoped="" ref="0x40ac3c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac3d78"/>
        <function-ref name="set" scoped="" ref="0x40ac3e58"/>
        <function-ref name="clr" scoped="" ref="0x40ac2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ac67c0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ac67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ac6998"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ac6a78"/>
        <function-ref name="request" scoped="" ref="0x40ac6b58"/>
        <function-ref name="granted" scoped="" ref="0x40ac6c38"/>
        <function-ref name="isOwner" scoped="" ref="0x40ac6d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40ac3010" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40ac3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ac31e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ac32c8"/>
        <function-ref name="request" scoped="" ref="0x40ac33a8"/>
        <function-ref name="granted" scoped="" ref="0x40ac3488"/>
        <function-ref name="isOwner" scoped="" ref="0x40ac3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ae2dd0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ae2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40adf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40adf1a0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40adf1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40adf378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40adf458"/>
        <function-ref name="led1On" scoped="" ref="0x40adf538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40adf618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40adf6f8"/>
        <function-ref name="get" scoped="" ref="0x40adf7d8"/>
        <function-ref name="led1Off" scoped="" ref="0x40adf8b8"/>
        <function-ref name="led2Off" scoped="" ref="0x40adfc38"/>
        <function-ref name="set" scoped="" ref="0x40adf998"/>
        <function-ref name="led0On" scoped="" ref="0x40adfa78"/>
        <function-ref name="led2On" scoped="" ref="0x40adfb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40afda00" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40afda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afdcd8"/>
        <function-ref name="write" scoped="" ref="0x40afddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40b1dca0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40b1dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b1de78"/>
        <function-ref name="writeDone" scoped="" ref="0x40b1c010"/>
        <function-ref name="write" scoped="" ref="0x40b1c0f0"/>
        <function-ref name="beginRead" scoped="" ref="0x40b1c1d0"/>
        <function-ref name="readDone" scoped="" ref="0x40b1c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40b03ef8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40b03ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b020e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40afe010" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40afe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afe1e8"/>
        <function-ref name="write" scoped="" ref="0x40afe2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40afc880" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40afc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afca58"/>
        <function-ref name="write" scoped="" ref="0x40afcb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40afccb8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40afccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afce90"/>
        <function-ref name="write" scoped="" ref="0x40afb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40b02910" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b02910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b02ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40b1d190" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b1d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1d368"/>
        <function-ref name="write" scoped="" ref="0x40b1d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40afe880" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40afe880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afea58"/>
        <function-ref name="write" scoped="" ref="0x40afeb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40afd190" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40afd190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afd368"/>
        <function-ref name="write" scoped="" ref="0x40afd448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40afb190" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40afb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afb368"/>
        <function-ref name="write" scoped="" ref="0x40afb448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40afa6e8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40afa6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afa8c0"/>
        <function-ref name="write" scoped="" ref="0x40afa9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40b03330" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b03330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b03508"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b035e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b036c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40b016c0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b016c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b01898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40b01a18" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40b01a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b01c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40b01df0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40b01df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b00010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40b01010" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40b01010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b011e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40afecb8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40afecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afee90"/>
        <function-ref name="write" scoped="" ref="0x40afd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40afe448" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40afe448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afe620"/>
        <function-ref name="write" scoped="" ref="0x40afe700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40b03ba0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40b03ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b03d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40afab20" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40afab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afacf8"/>
        <function-ref name="write" scoped="" ref="0x40afadd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40af9cb8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40af9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40af9e90"/>
        <function-ref name="write" scoped="" ref="0x40b1d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40afba00" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40afba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afbbd8"/>
        <function-ref name="write" scoped="" ref="0x40afbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40b03848" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40b03848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b03a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40b00b98" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40b00b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b00d70"/>
        <function-ref name="write" scoped="" ref="0x40b00e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40afd5c8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40afd5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afd7a0"/>
        <function-ref name="write" scoped="" ref="0x40afd880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40b1d5c8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40b1d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b1d7a0"/>
        <function-ref name="writeDone" scoped="" ref="0x40b1d880"/>
        <function-ref name="write" scoped="" ref="0x40b1d960"/>
        <function-ref name="beginRead" scoped="" ref="0x40b1da40"/>
        <function-ref name="readDone" scoped="" ref="0x40b1db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40afb5c8" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40afb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afb7a0"/>
        <function-ref name="write" scoped="" ref="0x40afb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40afc010" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40afc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afc1e8"/>
        <function-ref name="write" scoped="" ref="0x40afc2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40b02260" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40b02260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b02438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40afc448" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40afc448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afc620"/>
        <function-ref name="write" scoped="" ref="0x40afc700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b04c48" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b04c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b04e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b04f00"/>
        <function-ref name="request" scoped="" ref="0x40b03010"/>
        <function-ref name="granted" scoped="" ref="0x40b030f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40b031d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40b00190" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40b00190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b00368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40b00840" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40b00840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b00a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40af9880" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40af9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40af9a58"/>
        <function-ref name="write" scoped="" ref="0x40af9b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40af9448" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40af9448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40af9620"/>
        <function-ref name="write" scoped="" ref="0x40af9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40b01368" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40b01368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b01540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40af9010" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40af9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40af91e8"/>
        <function-ref name="write" scoped="" ref="0x40af92c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40b025b8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b025b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b02790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40b02c68" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40b02c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b02e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40b004e8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40b004e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b006c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40afbe38" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40afbe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afa050"/>
        <function-ref name="write" scoped="" ref="0x40afa130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40afa2b0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40afa2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40afa488"/>
        <function-ref name="write" scoped="" ref="0x40afa568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40b13bd8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40b13bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b13eb0"/>
        <function-ref name="write" scoped="" ref="0x40b12010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40b0ddc0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40b0ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b0c010"/>
        <function-ref name="writeDone" scoped="" ref="0x40b0c0f0"/>
        <function-ref name="write" scoped="" ref="0x40b0c1d0"/>
        <function-ref name="beginRead" scoped="" ref="0x40b0c2b0"/>
        <function-ref name="readDone" scoped="" ref="0x40b0c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40b18010" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40b18010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b181e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40b14270" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40b14270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b14448"/>
        <function-ref name="write" scoped="" ref="0x40b14528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40b12a00" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40b12a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b12bd8"/>
        <function-ref name="write" scoped="" ref="0x40b12cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40b12e38" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40b12e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b11050"/>
        <function-ref name="write" scoped="" ref="0x40b11130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40b18a18" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b18a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b18bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40b0d2b0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b0d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b0d488"/>
        <function-ref name="write" scoped="" ref="0x40b0d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40b14ae0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40b14ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b14cb8"/>
        <function-ref name="write" scoped="" ref="0x40b14d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40b13368" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40b13368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b13540"/>
        <function-ref name="write" scoped="" ref="0x40b13620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40b112b0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40b112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b11488"/>
        <function-ref name="write" scoped="" ref="0x40b11568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40b0f880" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40b0f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b0fa58"/>
        <function-ref name="write" scoped="" ref="0x40b0fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40b19410" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b19410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b195e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b196c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b197a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40b17840" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b17840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b17a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40b17b98" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40b17b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b17df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40b15010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40b15010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b151e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40b17190" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40b17190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b17368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40b14f18" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40b14f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b13108"/>
        <function-ref name="write" scoped="" ref="0x40b131e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40b146a8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40b146a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b14880"/>
        <function-ref name="write" scoped="" ref="0x40b14960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40b19c80" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40b19c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b19e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40b0fcb8" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40b0fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b0fe90"/>
        <function-ref name="write" scoped="" ref="0x40b0e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40b0ee38" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40b0ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b0d050"/>
        <function-ref name="write" scoped="" ref="0x40b0d130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40b11b20" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40b11b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b11cf8"/>
        <function-ref name="write" scoped="" ref="0x40b11dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40b19928" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40b19928"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b19b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40b15d70" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40b15d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b14010"/>
        <function-ref name="write" scoped="" ref="0x40b140f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40b137a0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40b137a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b13978"/>
        <function-ref name="write" scoped="" ref="0x40b13a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40b0d6e8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40b0d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b0d8c0"/>
        <function-ref name="writeDone" scoped="" ref="0x40b0d9a0"/>
        <function-ref name="write" scoped="" ref="0x40b0da80"/>
        <function-ref name="beginRead" scoped="" ref="0x40b0db60"/>
        <function-ref name="readDone" scoped="" ref="0x40b0dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40b116e8" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40b116e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b118c0"/>
        <function-ref name="write" scoped="" ref="0x40b119a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40b12190" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40b12190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b12368"/>
        <function-ref name="write" scoped="" ref="0x40b12448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40b18368" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40b18368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b18540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40b125c8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40b125c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b127a0"/>
        <function-ref name="write" scoped="" ref="0x40b12880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b1ac90" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b1ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b1ae68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b19010"/>
        <function-ref name="request" scoped="" ref="0x40b190f0"/>
        <function-ref name="granted" scoped="" ref="0x40b191d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40b192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40b15368" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40b15368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b15540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40b15a18" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40b15a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b15bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40b0ea00" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40b0ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b0ebd8"/>
        <function-ref name="write" scoped="" ref="0x40b0ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40b0e5c8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40b0e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b0e7a0"/>
        <function-ref name="write" scoped="" ref="0x40b0e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40b174e8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40b174e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b176c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40b0e190" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40b0e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b0e368"/>
        <function-ref name="write" scoped="" ref="0x40b0e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40b186c0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b186c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b18898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40b18d70" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40b18d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b17010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40b156c0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40b156c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b15898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40b0f010" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40b0f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b0f1e8"/>
        <function-ref name="write" scoped="" ref="0x40b0f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40b0f448" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40b0f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b0f620"/>
        <function-ref name="write" scoped="" ref="0x40b0f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40b2d010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40b2d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40b2d1e8"/>
        <function-ref name="changed" scoped="" ref="0x40b2d2c8"/>
        <function-ref name="amGroup" scoped="" ref="0x40b2d3a8"/>
        <function-ref name="setAddress" scoped="" ref="0x40b2d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40b1f390" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40b1f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40b1f568"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40b1f648"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40b1f728"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40b1f808"/>
        <function-ref name="setCca" scoped="" ref="0x40b1f8e8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40b1f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40b43468" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40b43468"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40b43640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x40b22c58" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x40b22c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b22e30"/>
        <function-ref name="cancel" scoped="" ref="0x40b22f10"/>
        <function-ref name="modify" scoped="" ref="0x40b1f010"/>
        <function-ref name="sendDone" scoped="" ref="0x40b1f0f0"/>
        <function-ref name="resend" scoped="" ref="0x40b1f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40b227d0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40b227d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b229a8"/>
        <function-ref name="stop" scoped="" ref="0x40b22a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40b438d0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40b438d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40b43aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40b31748" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40b31748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40b31920"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40b31a00"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40b31ae0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40b31bc0"/>
        <function-ref name="setCca" scoped="" ref="0x40b31ca0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40b31d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40b4d3b0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40b4d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b4deb0"/>
        <function-ref name="clear" scoped="" ref="0x40b53280"/>
        <function-ref name="isValid" scoped="" ref="0x40b4db00"/>
        <function-ref name="set" scoped="" ref="0x40b53630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40b580c8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40b580c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40b582a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x40b6c678" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b6c678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b6c850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x40b47970" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40b47970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40b47b48"/>
        <function-ref name="disable" scoped="" ref="0x40b47c28"/>
        <function-ref name="captured" scoped="" ref="0x40b47d08"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40b47de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x40b58b18" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x40b58b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b55068"/>
        <function-ref name="fired" scoped="" ref="0x40b57820"/>
        <function-ref name="startAt" scoped="" ref="0x40b57d10"/>
        <function-ref name="isRunning" scoped="" ref="0x40b57a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b552e0"/>
        <function-ref name="start" scoped="" ref="0x40b57308"/>
        <function-ref name="stop" scoped="" ref="0x40b575a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40b55590" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40b55590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40b55768"/>
        <function-ref name="getRssi" scoped="" ref="0x40b55848"/>
        <function-ref name="getPower" scoped="" ref="0x40b55928"/>
        <function-ref name="getLqi" scoped="" ref="0x40b55a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x40b46418" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b46418"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b465f0"/>
        <function-ref name="write" scoped="" ref="0x40b466d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40b46920" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40b46920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b46af8"/>
        <function-ref name="write" scoped="" ref="0x40b46bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x40b68d70" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40b68d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b6a010"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40b6a0f0"/>
        <function-ref name="sfd" scoped="" ref="0x40b6a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b31010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b31010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b311e8"/>
        <function-ref name="cancel" scoped="" ref="0x40b312c8"/>
        <function-ref name="modify" scoped="" ref="0x40b313a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b31488"/>
        <function-ref name="resend" scoped="" ref="0x40b31568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x40b48658" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b48658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b48830"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b48910"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b489f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x40b6caa8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b6caa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b6cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40b52a88" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40b52a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b52c60"/>
        <function-ref name="isInput" scoped="" ref="0x40b52d40"/>
        <function-ref name="toggle" scoped="" ref="0x40b52e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40b52f00"/>
        <function-ref name="get" scoped="" ref="0x40b4f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b4f0f0"/>
        <function-ref name="set" scoped="" ref="0x40b4f1d0"/>
        <function-ref name="clr" scoped="" ref="0x40b4f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b32758" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b32758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b32930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40b55c10" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b55c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40b55de8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40b55ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40b472a0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40b472a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b47478"/>
        <function-ref name="isSet" scoped="" ref="0x40b47558"/>
        <function-ref name="cancel" scoped="" ref="0x40b47638"/>
        <function-ref name="set" scoped="" ref="0x40b47718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40b6cee8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40b6cee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b6b208"/>
        <function-ref name="write" scoped="" ref="0x40b6b2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40b4fef0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40b4fef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b480e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b481c0"/>
        <function-ref name="request" scoped="" ref="0x40b482a0"/>
        <function-ref name="granted" scoped="" ref="0x40b48380"/>
        <function-ref name="isOwner" scoped="" ref="0x40b48460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x40b52010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40b52010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b52268"/>
        <function-ref name="isInput" scoped="" ref="0x40b52348"/>
        <function-ref name="toggle" scoped="" ref="0x40b52428"/>
        <function-ref name="isOutput" scoped="" ref="0x40b52508"/>
        <function-ref name="get" scoped="" ref="0x40b525e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b526c8"/>
        <function-ref name="set" scoped="" ref="0x40b527a8"/>
        <function-ref name="clr" scoped="" ref="0x40b52888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40b46e08" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40b46e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b6c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x40b4f4b0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40b4f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b4f688"/>
        <function-ref name="isInput" scoped="" ref="0x40b4f768"/>
        <function-ref name="toggle" scoped="" ref="0x40b4f848"/>
        <function-ref name="isOutput" scoped="" ref="0x40b4f928"/>
        <function-ref name="get" scoped="" ref="0x40b4fa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b4fae8"/>
        <function-ref name="set" scoped="" ref="0x40b4fbc8"/>
        <function-ref name="clr" scoped="" ref="0x40b4fca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40b6a360" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b6a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b6a538"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b6a618"/>
        <function-ref name="led1On" scoped="" ref="0x40b6a6f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b6a7d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b6a8b8"/>
        <function-ref name="get" scoped="" ref="0x40b6a998"/>
        <function-ref name="led1Off" scoped="" ref="0x40b6aa78"/>
        <function-ref name="led2Off" scoped="" ref="0x40b6adf8"/>
        <function-ref name="set" scoped="" ref="0x40b6ab58"/>
        <function-ref name="led0On" scoped="" ref="0x40b6ac38"/>
        <function-ref name="led2On" scoped="" ref="0x40b6ad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40b32af8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40b32af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b32cd0"/>
        <function-ref name="stop" scoped="" ref="0x40b32db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x40b48c18" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40b48c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b48df0"/>
        <function-ref name="writeDone" scoped="" ref="0x40b48ed0"/>
        <function-ref name="write" scoped="" ref="0x40b46010"/>
        <function-ref name="beginRead" scoped="" ref="0x40b460f0"/>
        <function-ref name="readDone" scoped="" ref="0x40b461d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x40b6c248" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b6c248"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b6c420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40b58550" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40b58550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40b58728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40bb2368" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40bb2368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb2640"/>
        <function-ref name="write" scoped="" ref="0x40bb2720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40bac550" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40bac550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bac728"/>
        <function-ref name="writeDone" scoped="" ref="0x40bac808"/>
        <function-ref name="write" scoped="" ref="0x40bac8e8"/>
        <function-ref name="beginRead" scoped="" ref="0x40bac9c8"/>
        <function-ref name="readDone" scoped="" ref="0x40bacaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40bb8840" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40bb8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb8a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40bb4920" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40bb4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb4af8"/>
        <function-ref name="write" scoped="" ref="0x40bb4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40bb0190" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40bb0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb0368"/>
        <function-ref name="write" scoped="" ref="0x40bb0448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40bb05c8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40bb05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb07a0"/>
        <function-ref name="write" scoped="" ref="0x40bb0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40bb7260" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40bb7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb7438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40bada00" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bada00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40badbd8"/>
        <function-ref name="write" scoped="" ref="0x40badcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40bb3270" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40bb3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb3448"/>
        <function-ref name="write" scoped="" ref="0x40bb3528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40bb3ae0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40bb3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb3cb8"/>
        <function-ref name="write" scoped="" ref="0x40bb3d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40bb0a00" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40bb0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb0bd8"/>
        <function-ref name="write" scoped="" ref="0x40bb0cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40bae010" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40bae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bae1e8"/>
        <function-ref name="write" scoped="" ref="0x40bae2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40bb9bd0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40bb9bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40bb9da8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40bb9e88"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40bb8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40bb5010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40bb5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40bb5368" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40bb5368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb55c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40bb5740" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40bb5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb5918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40bb7910" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40bb7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40bb36a8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40bb36a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb3880"/>
        <function-ref name="write" scoped="" ref="0x40bb3960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40bb4d58" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40bb4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb3010"/>
        <function-ref name="write" scoped="" ref="0x40bb30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40bb84e8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40bb84e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40bae448" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40bae448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bae620"/>
        <function-ref name="write" scoped="" ref="0x40bae700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40bad5c8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40bad5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bad7a0"/>
        <function-ref name="write" scoped="" ref="0x40bad880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40baf2b0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40baf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40baf488"/>
        <function-ref name="write" scoped="" ref="0x40baf568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40bb8190" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40bb8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb8368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40bb44e8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40bb44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb46c0"/>
        <function-ref name="write" scoped="" ref="0x40bb47a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40bb3f18" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40bb3f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb2108"/>
        <function-ref name="write" scoped="" ref="0x40bb21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40bade38" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40bade38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bac050"/>
        <function-ref name="writeDone" scoped="" ref="0x40bac130"/>
        <function-ref name="write" scoped="" ref="0x40bac210"/>
        <function-ref name="beginRead" scoped="" ref="0x40bac2f0"/>
        <function-ref name="readDone" scoped="" ref="0x40bac3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40bb0e38" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40bb0e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40baf050"/>
        <function-ref name="write" scoped="" ref="0x40baf130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40bb28a0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40bb28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb2a78"/>
        <function-ref name="write" scoped="" ref="0x40bb2b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40bb8b98" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40bb8b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb8d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40bb2cd8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40bb2cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bb2eb0"/>
        <function-ref name="write" scoped="" ref="0x40bb0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40bb9518" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40bb9518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bb96f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bb97d0"/>
        <function-ref name="request" scoped="" ref="0x40bb98b0"/>
        <function-ref name="granted" scoped="" ref="0x40bb9990"/>
        <function-ref name="isOwner" scoped="" ref="0x40bb9a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40bb5a98" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40bb5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40bb4190" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40bb4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb4368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40bad190" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40bad190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bad368"/>
        <function-ref name="write" scoped="" ref="0x40bad448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40baecb8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40baecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40baee90"/>
        <function-ref name="write" scoped="" ref="0x40bad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40bb7c68" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40bb7c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40bae880" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40bae880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40baea58"/>
        <function-ref name="write" scoped="" ref="0x40baeb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40bb8ef0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40bb8ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb70e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40bb75b8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40bb75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb7790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40bb5df0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40bb5df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bb4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40baf6e8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40baf6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40baf8c0"/>
        <function-ref name="write" scoped="" ref="0x40baf9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40bafb20" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40bafb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bafcf8"/>
        <function-ref name="write" scoped="" ref="0x40bafdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40bcf2d8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40bcf2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bcf4b0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40bcf590"/>
        <function-ref name="sfd" scoped="" ref="0x40bcf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bcf818" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bcf818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bcf9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40bcfcb0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40bcfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40bcfe88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40bd2da0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40bd2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40bcf010"/>
        <function-ref name="stop" scoped="" ref="0x40bcf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x40bc9a18" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40bc9a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc9bf0"/>
        <function-ref name="isInput" scoped="" ref="0x40bc9cd0"/>
        <function-ref name="toggle" scoped="" ref="0x40bc9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc9e90"/>
        <function-ref name="get" scoped="" ref="0x40bc8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc80f0"/>
        <function-ref name="set" scoped="" ref="0x40bc81d0"/>
        <function-ref name="clr" scoped="" ref="0x40bc82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40bc5990" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40bc5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40bc5b68"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40bc5c48"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40bc5d28"/>
        <function-ref name="syncDone" scoped="" ref="0x40bc5e08"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40bc5ee8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40bc4010"/>
        <function-ref name="setChannel" scoped="" ref="0x40bc40f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40bc41d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40bc42b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40bc4390"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40bc4470"/>
        <function-ref name="sync" scoped="" ref="0x40bc4550"/>
        <function-ref name="getChannel" scoped="" ref="0x40bc4630"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40bc4790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x40be4178" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x40be4178"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40be4350"/>
        <function-ref name="runTask" scoped="" ref="0x40be4430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x40bc84c8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40bc84c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc86a0"/>
        <function-ref name="isInput" scoped="" ref="0x40bc8780"/>
        <function-ref name="toggle" scoped="" ref="0x40bc8860"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc8940"/>
        <function-ref name="get" scoped="" ref="0x40bc8a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc8b00"/>
        <function-ref name="set" scoped="" ref="0x40bc8be0"/>
        <function-ref name="clr" scoped="" ref="0x40bc8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40bc4b40" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40bc4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40bc36b8"/>
        <function-ref name="clear" scoped="" ref="0x40bc3a68"/>
        <function-ref name="isValid" scoped="" ref="0x40bc3308"/>
        <function-ref name="set" scoped="" ref="0x40bc3e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40bc6e68" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40bc6e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40bc5050"/>
        <function-ref name="getRssi" scoped="" ref="0x40bc5130"/>
        <function-ref name="getPower" scoped="" ref="0x40bc5210"/>
        <function-ref name="getLqi" scoped="" ref="0x40bc52f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40bca1f8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40bca1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bca3d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40bca4b0"/>
        <function-ref name="sfd" scoped="" ref="0x40bca590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40bc6600" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40bc6600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bc67d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40bc9010" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40bc9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc91e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bc92c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bc93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc9488"/>
        <function-ref name="get" scoped="" ref="0x40bc9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc9648"/>
        <function-ref name="set" scoped="" ref="0x40bc9728"/>
        <function-ref name="clr" scoped="" ref="0x40bc9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bce928" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bce928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bceb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40bc54f8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bc54f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40bc56d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bc57b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bca738" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bca738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bca910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40bc76d0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40bc76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bc78a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bc7988"/>
        <function-ref name="request" scoped="" ref="0x40bc7a68"/>
        <function-ref name="granted" scoped="" ref="0x40bc7b48"/>
        <function-ref name="isOwner" scoped="" ref="0x40bc7c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40bc7e50" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40bc7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bc6050"/>
        <function-ref name="writeDone" scoped="" ref="0x40bc6130"/>
        <function-ref name="write" scoped="" ref="0x40bc6210"/>
        <function-ref name="beginRead" scoped="" ref="0x40bc62f0"/>
        <function-ref name="readDone" scoped="" ref="0x40bc63d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40bcabd0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40bcabd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40bcada8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40bc2288" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bc2288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bc2460"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bc2540"/>
        <function-ref name="led1On" scoped="" ref="0x40bc2620"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bc2700"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bc27e0"/>
        <function-ref name="get" scoped="" ref="0x40bc28c0"/>
        <function-ref name="led1Off" scoped="" ref="0x40bc29a0"/>
        <function-ref name="led2Off" scoped="" ref="0x40bc2d20"/>
        <function-ref name="set" scoped="" ref="0x40bc2a80"/>
        <function-ref name="led0On" scoped="" ref="0x40bc2b60"/>
        <function-ref name="led2On" scoped="" ref="0x40bc2c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40bc7010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40bc7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40bc71e8"/>
        <function-ref name="disable" scoped="" ref="0x40bc72c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40bc73a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40bc7488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40bc6a30" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40bc6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bc6c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40bcecc8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40bcecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40bceea0"/>
        <function-ref name="stop" scoped="" ref="0x40bca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40c065b8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c065b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40c06790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40c09428" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c09428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c09600"/>
        <function-ref name="getRssi" scoped="" ref="0x40c096e0"/>
        <function-ref name="getPower" scoped="" ref="0x40c097c0"/>
        <function-ref name="getLqi" scoped="" ref="0x40c098a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40c06c10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40c06c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c05730"/>
        <function-ref name="clear" scoped="" ref="0x40c05ae0"/>
        <function-ref name="isValid" scoped="" ref="0x40c05380"/>
        <function-ref name="set" scoped="" ref="0x40c05e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40c06108" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c06108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40c062e0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c063c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40c02d30" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c02d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c02f08"/>
        <function-ref name="isSet" scoped="" ref="0x40c01010"/>
        <function-ref name="cancel" scoped="" ref="0x40c010f0"/>
        <function-ref name="set" scoped="" ref="0x40c011d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40c045e0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c045e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c02108"/>
        <function-ref name="clear" scoped="" ref="0x40c024b8"/>
        <function-ref name="isValid" scoped="" ref="0x40c04d30"/>
        <function-ref name="set" scoped="" ref="0x40c02868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40c09b10" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40c09b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c09ce8"/>
        <function-ref name="noAck" scoped="" ref="0x40c09dc8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c09ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40bfecb0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40bfecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40bfee88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40c01b28" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c01b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c01d00"/>
        <function-ref name="getRssi" scoped="" ref="0x40c01de0"/>
        <function-ref name="getPower" scoped="" ref="0x40c01ec0"/>
        <function-ref name="getLqi" scoped="" ref="0x40bfe010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40c23b00" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c23b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c23cd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c23db8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c23e98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c22010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c220f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40bfd3a0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40bfd3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40bfdea0"/>
        <function-ref name="clear" scoped="" ref="0x40c25280"/>
        <function-ref name="isValid" scoped="" ref="0x40bfdaf0"/>
        <function-ref name="set" scoped="" ref="0x40c25630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40bfe800" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bfe800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40bfe9d8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bfeab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40c234d8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c234d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c236b0"/>
        <function-ref name="isSet" scoped="" ref="0x40c23790"/>
        <function-ref name="cancel" scoped="" ref="0x40c23870"/>
        <function-ref name="set" scoped="" ref="0x40c23950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40c22430" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40c22430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c22a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40c22e88" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40c22e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c204f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40c25d68" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c25d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c24898"/>
        <function-ref name="clear" scoped="" ref="0x40c24c48"/>
        <function-ref name="isValid" scoped="" ref="0x40c244e8"/>
        <function-ref name="set" scoped="" ref="0x40c23010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40bfe280" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40bfe280"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bfe458"/>
        <function-ref name="noAck" scoped="" ref="0x40bfe538"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bfe618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40c2a6b8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c2a6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c2ad00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40c290a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c290a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c297f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c29ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c29a68"/>
        <function-ref name="overflow" scoped="" ref="0x40c27010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c524c8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c524c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c50010"/>
        <function-ref name="fired" scoped="" ref="0x40c51268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c51970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c51718"/>
        <function-ref name="getdt" scoped="" ref="0x40c504c0"/>
        <function-ref name="gett0" scoped="" ref="0x40c50268"/>
        <function-ref name="isRunning" scoped="" ref="0x40c514c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c52af0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c51c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c52d70"/>
        <function-ref name="stop" scoped="" ref="0x40c51010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40c47190" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40c47190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c47468"/>
        <function-ref name="write" scoped="" ref="0x40c47548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40c41430" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40c41430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c41608"/>
        <function-ref name="writeDone" scoped="" ref="0x40c416e8"/>
        <function-ref name="write" scoped="" ref="0x40c417c8"/>
        <function-ref name="beginRead" scoped="" ref="0x40c418a8"/>
        <function-ref name="readDone" scoped="" ref="0x40c41988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40c4d598" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40c4d598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4d770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40c4a7a0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40c4a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c4a978"/>
        <function-ref name="write" scoped="" ref="0x40c4aa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40c46010" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40c46010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c461e8"/>
        <function-ref name="write" scoped="" ref="0x40c462c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40c46448" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40c46448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c46620"/>
        <function-ref name="write" scoped="" ref="0x40c46700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40c4c010" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40c4c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40c42880" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c42880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c42a58"/>
        <function-ref name="write" scoped="" ref="0x40c42b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40c48030" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40c48030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c48208"/>
        <function-ref name="write" scoped="" ref="0x40c482e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40c488a0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40c488a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c48a78"/>
        <function-ref name="write" scoped="" ref="0x40c48b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40c46880" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40c46880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c46a58"/>
        <function-ref name="write" scoped="" ref="0x40c46b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40c45e38" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40c45e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c44050"/>
        <function-ref name="write" scoped="" ref="0x40c44130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40c4e988" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40c4e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40c4eb60"/>
        <function-ref name="abortRelease" scoped="" ref="0x40c4ec40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40c4ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40c4cd70" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40c4cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40c4b190" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40c4b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4b3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40c4b568" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40c4b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40c4c6c0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40c4c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40c48468" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40c48468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c48640"/>
        <function-ref name="write" scoped="" ref="0x40c48720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40c4abd8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40c4abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c4adb0"/>
        <function-ref name="write" scoped="" ref="0x40c4ae90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40c4d240" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40c4d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4d418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40c442b0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40c442b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c44488"/>
        <function-ref name="write" scoped="" ref="0x40c44568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40c42448" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40c42448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c42620"/>
        <function-ref name="write" scoped="" ref="0x40c42700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40c45190" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40c45190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c45368"/>
        <function-ref name="write" scoped="" ref="0x40c45448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40c4eea0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40c4eea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4d0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40c4a368" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40c4a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c4a540"/>
        <function-ref name="write" scoped="" ref="0x40c4a620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40c48cd8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40c48cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c48eb0"/>
        <function-ref name="write" scoped="" ref="0x40c47010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40c42cb8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40c42cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c42e90"/>
        <function-ref name="writeDone" scoped="" ref="0x40c41010"/>
        <function-ref name="write" scoped="" ref="0x40c410f0"/>
        <function-ref name="beginRead" scoped="" ref="0x40c411d0"/>
        <function-ref name="readDone" scoped="" ref="0x40c412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40c46cb8" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40c46cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c46e90"/>
        <function-ref name="write" scoped="" ref="0x40c45010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40c476c8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40c476c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c478a0"/>
        <function-ref name="write" scoped="" ref="0x40c47980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40c4d8f0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40c4d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4dac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40c47b00" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40c47b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c47cd8"/>
        <function-ref name="write" scoped="" ref="0x40c47db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c4e2d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c4e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c4e4a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c4e588"/>
        <function-ref name="request" scoped="" ref="0x40c4e668"/>
        <function-ref name="granted" scoped="" ref="0x40c4e748"/>
        <function-ref name="isOwner" scoped="" ref="0x40c4e828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40c4b8c0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40c4b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4ba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40c4a010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40c4a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40c42010" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40c42010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c421e8"/>
        <function-ref name="write" scoped="" ref="0x40c422c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40c44b20" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40c44b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c44cf8"/>
        <function-ref name="write" scoped="" ref="0x40c44dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40c4ca18" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40c4ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40c446e8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40c446e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c448c0"/>
        <function-ref name="write" scoped="" ref="0x40c449a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40c4dc48" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40c4dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40c4c368" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40c4c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40c4bc18" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40c4bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c4bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40c455c8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40c455c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c457a0"/>
        <function-ref name="write" scoped="" ref="0x40c45880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40c45a00" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40c45a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c45bd8"/>
        <function-ref name="write" scoped="" ref="0x40c45cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40c5c3a0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40c5c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40c5c578"/>
        <function-ref name="rand32" scoped="" ref="0x40c5c658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40c5aad0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40c5aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c5c108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c5f820" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c5f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c5f9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40c58e20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40c58e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40c56010"/>
        <function-ref name="rand32" scoped="" ref="0x40c560f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40c58560" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40c58560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c58b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c58040" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c58040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c58218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40c5d010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c5d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c5d1e8"/>
        <function-ref name="toIdle" scoped="" ref="0x40c5d2c8"/>
        <function-ref name="isState" scoped="" ref="0x40c5d3a8"/>
        <function-ref name="isIdle" scoped="" ref="0x40c5d488"/>
        <function-ref name="requestState" scoped="" ref="0x40c5d568"/>
        <function-ref name="forceState" scoped="" ref="0x40c5d648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c785e8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c785e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c787c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c788a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c78980"/>
        <function-ref name="cancel" scoped="" ref="0x40c78a60"/>
        <function-ref name="sendDone" scoped="" ref="0x40c78b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c7be28" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c7be28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c78050"/>
        <function-ref name="getPayload" scoped="" ref="0x40c78130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c78210"/>
        <function-ref name="cancel" scoped="" ref="0x40c782f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c783d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c74010" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c74010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c741e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c742c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c743a8"/>
        <function-ref name="cancel" scoped="" ref="0x40c74488"/>
        <function-ref name="sendDone" scoped="" ref="0x40c74568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c774c0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c774c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c77698"/>
        <function-ref name="getPayload" scoped="" ref="0x40c77778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c77858"/>
        <function-ref name="cancel" scoped="" ref="0x40c77938"/>
        <function-ref name="sendDone" scoped="" ref="0x40c77a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40c74e98" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40c74e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40c730c0"/>
        <function-ref name="rand32" scoped="" ref="0x40c731a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c77b88" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c77b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c77d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c73388" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c73388"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40c73560"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c73640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40c746e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c746e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c748b8"/>
        <function-ref name="toIdle" scoped="" ref="0x40c74998"/>
        <function-ref name="isState" scoped="" ref="0x40c74a78"/>
        <function-ref name="isIdle" scoped="" ref="0x40c74b58"/>
        <function-ref name="requestState" scoped="" ref="0x40c74c38"/>
        <function-ref name="forceState" scoped="" ref="0x40c74d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40c762d0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c762d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c764a8"/>
        <function-ref name="toIdle" scoped="" ref="0x40c76588"/>
        <function-ref name="isState" scoped="" ref="0x40c76668"/>
        <function-ref name="isIdle" scoped="" ref="0x40c76748"/>
        <function-ref name="requestState" scoped="" ref="0x40c76828"/>
        <function-ref name="forceState" scoped="" ref="0x40c76908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c93260" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c93260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c93438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c7a960" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c7a960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c7ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40c7ad88" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40c7ad88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c93010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c8fa80" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c8fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c8fc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c8f658" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c8f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c8f830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c93ec8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c93ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c8f0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c8fe40" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c8fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40c8e050"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c8e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40c8f310" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40c8f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c8f4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ca9a38" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ca9a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ca9c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ca9de8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ca9de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ca8010"/>
        <function-ref name="getPayload" scoped="" ref="0x40ca80f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca81d0"/>
        <function-ref name="cancel" scoped="" ref="0x40ca82b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ca8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c79f10" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c79f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ca9108"/>
        <function-ref name="getPayload" scoped="" ref="0x40ca91e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca92c8"/>
        <function-ref name="cancel" scoped="" ref="0x40ca93a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ca9488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ca9610" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ca9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ca97e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ca40c8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ca40c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ca42a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ca4380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca4460"/>
        <function-ref name="cancel" scoped="" ref="0x40ca4540"/>
        <function-ref name="sendDone" scoped="" ref="0x40ca4620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ca4830" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ca4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ca4a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ca8e38" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ca8e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ca5050"/>
        <function-ref name="getPayload" scoped="" ref="0x40ca5130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca5210"/>
        <function-ref name="cancel" scoped="" ref="0x40ca52f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ca53d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x40ca5ca8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x40ca5ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ca5e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40ca4bf0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ca4bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40ca4dc8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40ca4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ca5558" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ca5558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ca5730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c95cd8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c95cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c95eb0"/>
        <function-ref name="stopDone" scoped="" ref="0x40cc0010"/>
        <function-ref name="start" scoped="" ref="0x40cc00f0"/>
        <function-ref name="stop" scoped="" ref="0x40cc01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cc0c18" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cc0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc0df0"/>
        <function-ref name="getPayload" scoped="" ref="0x40cc0ed0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cbf010"/>
        <function-ref name="cancel" scoped="" ref="0x40cbf0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cbf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cbf3e0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cbf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cbf5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c95260" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c95260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c95438"/>
        <function-ref name="getPayload" scoped="" ref="0x40c95518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c955f8"/>
        <function-ref name="cancel" scoped="" ref="0x40c956d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c957b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40c976f0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40c976f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40c978c8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40c979a8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40c97a88"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40c97b68"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40c97c48"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40c97d28"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40c97e08"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40c97ee8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40c95010"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40c950f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40cc03c8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40cc03c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40cc05a0"/>
        <function-ref name="toIdle" scoped="" ref="0x40cc0680"/>
        <function-ref name="isState" scoped="" ref="0x40cc0760"/>
        <function-ref name="isIdle" scoped="" ref="0x40cc0840"/>
        <function-ref name="requestState" scoped="" ref="0x40cc0920"/>
        <function-ref name="forceState" scoped="" ref="0x40cc0a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40cbf800" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40cbf800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cbf9d8"/>
        <function-ref name="stopDone" scoped="" ref="0x40cbfab8"/>
        <function-ref name="start" scoped="" ref="0x40cbfb98"/>
        <function-ref name="stop" scoped="" ref="0x40cbfc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c95940" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c95940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c95b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cb9680" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cb9680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cb9858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cbbef0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cbbef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cba0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40cba1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cba2a0"/>
        <function-ref name="cancel" scoped="" ref="0x40cba380"/>
        <function-ref name="sendDone" scoped="" ref="0x40cba460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x40cabef0" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x40cabef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cd80e0"/>
        <function-ref name="runTask" scoped="" ref="0x40cd81c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioBackoff" ref="0x40cbada8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40cbada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40cb9010"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40cb90f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40cb91d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40cb92b0"/>
        <function-ref name="setCca" scoped="" ref="0x40cb9390"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40cb9470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OffTimer" ref="0x40cb6c30" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OffTimer" scoped="" ref="0x40cb6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cb1730"/>
        <function-ref name="fired" scoped="" ref="0x40cb39d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cb10f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cb3e80"/>
        <function-ref name="getdt" scoped="" ref="0x40cb1be0"/>
        <function-ref name="gett0" scoped="" ref="0x40cb1988"/>
        <function-ref name="isRunning" scoped="" ref="0x40cb3c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cb3278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cb1410"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cb34f8"/>
        <function-ref name="stop" scoped="" ref="0x40cb3778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40cbb420" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40cbb420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cbb5f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40cbb6d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cbb7b8"/>
        <function-ref name="cancel" scoped="" ref="0x40cbb898"/>
        <function-ref name="sendDone" scoped="" ref="0x40cbb978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40cbe8d8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40cbe8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40cbeab0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40cbeb90"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40cbec70"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40cbed50"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40cbee30"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40cbef10"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40cbb010"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40cbb0f0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40cbb1d0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40cbb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x40cb7208" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40cb7208"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40cb73e0"/>
        <function-ref name="toIdle" scoped="" ref="0x40cb74c0"/>
        <function-ref name="isState" scoped="" ref="0x40cb75a0"/>
        <function-ref name="isIdle" scoped="" ref="0x40cb7680"/>
        <function-ref name="requestState" scoped="" ref="0x40cb7760"/>
        <function-ref name="forceState" scoped="" ref="0x40cb7840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40cad260" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40cad260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40cad438"/>
        <function-ref name="rand32" scoped="" ref="0x40cad518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resend" ref="0x40cba690" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resend" scoped="" ref="0x40cba690"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cba868"/>
        <function-ref name="cancel" scoped="" ref="0x40cba948"/>
        <function-ref name="modify" scoped="" ref="0x40cbaa28"/>
        <function-ref name="sendDone" scoped="" ref="0x40cbab08"/>
        <function-ref name="resend" scoped="" ref="0x40cbabe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cbe510" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cbe510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cbe6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40cb8798" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40cb8798"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cb8970"/>
        <function-ref name="stopDone" scoped="" ref="0x40cb8a50"/>
        <function-ref name="start" scoped="" ref="0x40cb8b30"/>
        <function-ref name="stop" scoped="" ref="0x40cb8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cbbb00" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cbbb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cbbcd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40cb46b0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40cb46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40cb4888"/>
        <function-ref name="getMetadata" scoped="" ref="0x40cb4968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPowerState" ref="0x40cb7a70" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPowerState" scoped="" ref="0x40cb7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40cb7c48"/>
        <function-ref name="toIdle" scoped="" ref="0x40cb7d28"/>
        <function-ref name="isState" scoped="" ref="0x40cb7e08"/>
        <function-ref name="isIdle" scoped="" ref="0x40cb7ee8"/>
        <function-ref name="requestState" scoped="" ref="0x40cb6010"/>
        <function-ref name="forceState" scoped="" ref="0x40cb60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startRadio" ref="0x40cd7010" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startRadio" scoped="" ref="0x40cd7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cd71e8"/>
        <function-ref name="runTask" scoped="" ref="0x40cd72c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cad688" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cad688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40cad860"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40cad940"/>
        <function-ref name="led1On" scoped="" ref="0x40cada20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40cadb00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cadbe0"/>
        <function-ref name="get" scoped="" ref="0x40cadcc0"/>
        <function-ref name="led1Off" scoped="" ref="0x40cadda0"/>
        <function-ref name="led2Off" scoped="" ref="0x40cac1d0"/>
        <function-ref name="set" scoped="" ref="0x40cade80"/>
        <function-ref name="led0On" scoped="" ref="0x40cac010"/>
        <function-ref name="led2On" scoped="" ref="0x40cac0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDoneTimer" ref="0x40cb0010" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDoneTimer" scoped="" ref="0x40cb0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cafb00"/>
        <function-ref name="fired" scoped="" ref="0x40cb0d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40caf4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40caf268"/>
        <function-ref name="getdt" scoped="" ref="0x40cad010"/>
        <function-ref name="gett0" scoped="" ref="0x40cafd58"/>
        <function-ref name="isRunning" scoped="" ref="0x40caf010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cb0638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40caf7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cb08b8"/>
        <function-ref name="stop" scoped="" ref="0x40cb0b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40cb4b88" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cb4b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40cb4de0"/>
        <function-ref name="noAck" scoped="" ref="0x40cb4ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40cb7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x40cb6338" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x40cb6338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40cb6510"/>
        <function-ref name="toIdle" scoped="" ref="0x40cb65f0"/>
        <function-ref name="isState" scoped="" ref="0x40cb66d0"/>
        <function-ref name="isIdle" scoped="" ref="0x40cb67b0"/>
        <function-ref name="requestState" scoped="" ref="0x40cb6890"/>
        <function-ref name="forceState" scoped="" ref="0x40cb6970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="resend" ref="0x40cd86f8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="resend" scoped="" ref="0x40cd86f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cd88d0"/>
        <function-ref name="runTask" scoped="" ref="0x40cd89b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40cb99f0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cb99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cb9bc8"/>
        <function-ref name="source" scoped="" ref="0x40cb9ca8"/>
        <function-ref name="address" scoped="" ref="0x40cb9d88"/>
        <function-ref name="destination" scoped="" ref="0x40cb9e68"/>
        <function-ref name="setSource" scoped="" ref="0x40cb8010"/>
        <function-ref name="setDestination" scoped="" ref="0x40cb80f0"/>
        <function-ref name="type" scoped="" ref="0x40cb81d0"/>
        <function-ref name="setType" scoped="" ref="0x40cb82b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40cb8390"/>
        <function-ref name="setGroup" scoped="" ref="0x40cb8470"/>
        <function-ref name="localGroup" scoped="" ref="0x40cb8550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerCycle" ref="0x40cb4130" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerCycle" scoped="" ref="0x40cb4130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x40cb4308"/>
        <function-ref name="detected" scoped="" ref="0x40cb43e8"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x40cb44c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopRadio" ref="0x40cd77f8" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopRadio" scoped="" ref="0x40cd77f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cd79d0"/>
        <function-ref name="runTask" scoped="" ref="0x40cd7ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40cfa950" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40cfa950"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cfab28"/>
        <function-ref name="stopDone" scoped="" ref="0x40cfac08"/>
        <function-ref name="start" scoped="" ref="0x40cface8"/>
        <function-ref name="stop" scoped="" ref="0x40cfadc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPowerState" ref="0x40cf7898" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPowerState" scoped="" ref="0x40cf7898"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40cf7a70"/>
        <function-ref name="toIdle" scoped="" ref="0x40cf7b50"/>
        <function-ref name="isState" scoped="" ref="0x40cf7c30"/>
        <function-ref name="isIdle" scoped="" ref="0x40cf7d10"/>
        <function-ref name="requestState" scoped="" ref="0x40cf7df0"/>
        <function-ref name="forceState" scoped="" ref="0x40cf7ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControlState" ref="0x40cf7030" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x40cf7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40cf7208"/>
        <function-ref name="toIdle" scoped="" ref="0x40cf72e8"/>
        <function-ref name="isState" scoped="" ref="0x40cf73c8"/>
        <function-ref name="isIdle" scoped="" ref="0x40cf74a8"/>
        <function-ref name="requestState" scoped="" ref="0x40cf7588"/>
        <function-ref name="forceState" scoped="" ref="0x40cf7668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerCycle" ref="0x40cfa3f8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerCycle" scoped="" ref="0x40cfa3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x40cfa5d0"/>
        <function-ref name="detected" scoped="" ref="0x40cfa6b0"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x40cfa790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40cf6b00" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40cf6b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cf6cd8"/>
        <function-ref name="stopDone" scoped="" ref="0x40cf6db8"/>
        <function-ref name="start" scoped="" ref="0x40cf6e98"/>
        <function-ref name="stop" scoped="" ref="0x40cf3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteIndicator" ref="0x40d1b718" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40d1b718"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40d1b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnergyIndicator" ref="0x40d1b2b0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40d1b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40d1b488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x40d1dd28" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40d1dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40d1df00"/>
        <function-ref name="toIdle" scoped="" ref="0x40d1c010"/>
        <function-ref name="isState" scoped="" ref="0x40d1c0f0"/>
        <function-ref name="isIdle" scoped="" ref="0x40d1c1d0"/>
        <function-ref name="requestState" scoped="" ref="0x40d1c2b0"/>
        <function-ref name="forceState" scoped="" ref="0x40d1c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startRadio" ref="0x40d199f0" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startRadio" scoped="" ref="0x40d199f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d19c48"/>
        <function-ref name="runTask" scoped="" ref="0x40d19d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40cf05b8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40cf05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cf0790"/>
        <function-ref name="stopDone" scoped="" ref="0x40cf0870"/>
        <function-ref name="start" scoped="" ref="0x40cf0950"/>
        <function-ref name="stop" scoped="" ref="0x40cf0a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPowerState" ref="0x40cf0c60" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPowerState" scoped="" ref="0x40cf0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40cf0e38"/>
        <function-ref name="toIdle" scoped="" ref="0x40cf0f18"/>
        <function-ref name="isState" scoped="" ref="0x40d1d010"/>
        <function-ref name="isIdle" scoped="" ref="0x40d1d0f0"/>
        <function-ref name="requestState" scoped="" ref="0x40d1d1d0"/>
        <function-ref name="forceState" scoped="" ref="0x40d1d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketIndicator" ref="0x40d1bb90" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40d1bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40d1bd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d1c500" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d1c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d1c6d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d1c7b8"/>
        <function-ref name="led1On" scoped="" ref="0x40d1c898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d1c978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d1ca58"/>
        <function-ref name="get" scoped="" ref="0x40d1cb38"/>
        <function-ref name="led1Off" scoped="" ref="0x40d1cc18"/>
        <function-ref name="led2Off" scoped="" ref="0x40d1b010"/>
        <function-ref name="set" scoped="" ref="0x40d1ccf8"/>
        <function-ref name="led0On" scoped="" ref="0x40d1cdd8"/>
        <function-ref name="led2On" scoped="" ref="0x40d1ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getCca" ref="0x40d18250" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="getCca" scoped="" ref="0x40d18250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d18428"/>
        <function-ref name="runTask" scoped="" ref="0x40d18508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x40d1d4f8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x40d1d4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40d1d6d0"/>
        <function-ref name="toIdle" scoped="" ref="0x40d1d7b0"/>
        <function-ref name="isState" scoped="" ref="0x40d1d890"/>
        <function-ref name="isIdle" scoped="" ref="0x40d1d970"/>
        <function-ref name="requestState" scoped="" ref="0x40d1da50"/>
        <function-ref name="forceState" scoped="" ref="0x40d1db30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OnTimer" ref="0x40cf3300" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OnTimer" scoped="" ref="0x40cf3300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cf1de0"/>
        <function-ref name="fired" scoped="" ref="0x40cf1098"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cf17a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cf1548"/>
        <function-ref name="getdt" scoped="" ref="0x40cf02a0"/>
        <function-ref name="gett0" scoped="" ref="0x40cf0048"/>
        <function-ref name="isRunning" scoped="" ref="0x40cf12f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cf3928"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cf1ac0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cf3ba8"/>
        <function-ref name="stop" scoped="" ref="0x40cf3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerCycle" ref="0x40cf65a8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerCycle" scoped="" ref="0x40cf65a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x40cf6780"/>
        <function-ref name="detected" scoped="" ref="0x40cf6860"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x40cf6940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopRadio" ref="0x40d191d0" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopRadio" scoped="" ref="0x40d191d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d193a8"/>
        <function-ref name="runTask" scoped="" ref="0x40d19488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40d29790" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="PowerCycleC.RadioPowerStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40d29790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40d29968"/>
        <function-ref name="toIdle" scoped="" ref="0x40d29a48"/>
        <function-ref name="isState" scoped="" ref="0x40d29b28"/>
        <function-ref name="isIdle" scoped="" ref="0x40d29c08"/>
        <function-ref name="requestState" scoped="" ref="0x40d29ce8"/>
        <function-ref name="forceState" scoped="" ref="0x40d29dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40d28978" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="PowerCycleC.SplitControlStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40d28978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40d28b50"/>
        <function-ref name="toIdle" scoped="" ref="0x40d28c30"/>
        <function-ref name="isState" scoped="" ref="0x40d28d10"/>
        <function-ref name="isIdle" scoped="" ref="0x40d28df0"/>
        <function-ref name="requestState" scoped="" ref="0x40d28ed0"/>
        <function-ref name="forceState" scoped="" ref="0x40d27010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d27bf8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PowerCycleC.OnTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d27bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d25730"/>
        <function-ref name="fired" scoped="" ref="0x40d269b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d250f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d26e60"/>
        <function-ref name="getdt" scoped="" ref="0x40d25be0"/>
        <function-ref name="gett0" scoped="" ref="0x40d25988"/>
        <function-ref name="isRunning" scoped="" ref="0x40d26c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d26258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d25410"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d264d8"/>
        <function-ref name="stop" scoped="" ref="0x40d26758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d24ab8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PowerCycleC.CheckTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d24ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d21650"/>
        <function-ref name="fired" scoped="" ref="0x40d23858"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d21010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d23d08"/>
        <function-ref name="getdt" scoped="" ref="0x40d21b00"/>
        <function-ref name="gett0" scoped="" ref="0x40d218a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40d23ab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d23100"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d21330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d23380"/>
        <function-ref name="stop" scoped="" ref="0x40d23600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40d4b7b0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DefaultLplC.SendStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40d4b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40d4b988"/>
        <function-ref name="toIdle" scoped="" ref="0x40d4ba68"/>
        <function-ref name="isState" scoped="" ref="0x40d4bb48"/>
        <function-ref name="isIdle" scoped="" ref="0x40d4bc28"/>
        <function-ref name="requestState" scoped="" ref="0x40d4bd08"/>
        <function-ref name="forceState" scoped="" ref="0x40d4bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d4aad8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DefaultLplC.OffTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d4aad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d476a8"/>
        <function-ref name="fired" scoped="" ref="0x40d49938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d47068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d49de8"/>
        <function-ref name="getdt" scoped="" ref="0x40d47b58"/>
        <function-ref name="gett0" scoped="" ref="0x40d47900"/>
        <function-ref name="isRunning" scoped="" ref="0x40d49b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d491e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d47388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d49460"/>
        <function-ref name="stop" scoped="" ref="0x40d496e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d46988" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DefaultLplC.SendDoneTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d46988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d444c8"/>
        <function-ref name="fired" scoped="" ref="0x40d45768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d45e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d45c18"/>
        <function-ref name="getdt" scoped="" ref="0x40d44978"/>
        <function-ref name="gett0" scoped="" ref="0x40d44720"/>
        <function-ref name="isRunning" scoped="" ref="0x40d459c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d45010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d441a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d45290"/>
        <function-ref name="stop" scoped="" ref="0x40d45510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d38bc8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d38bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d38da0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d38e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d37010"/>
        <function-ref name="cancel" scoped="" ref="0x40d370f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d371d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d3bcf0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d3bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d3bec8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d38010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d380f0"/>
        <function-ref name="cancel" scoped="" ref="0x40d381d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d382b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40d38458" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40d38458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40d38630"/>
        <function-ref name="setRetries" scoped="" ref="0x40d38710"/>
        <function-ref name="getRetries" scoped="" ref="0x40d387f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40d388d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40d389b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40d64140" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d64140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d64318"/>
        <function-ref name="noAck" scoped="" ref="0x40d643f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d644d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40d37920" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40d37920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40d37af8"/>
        <function-ref name="setRetries" scoped="" ref="0x40d37bd8"/>
        <function-ref name="getRetries" scoped="" ref="0x40d37cb8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40d37d98"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40d37e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d5d290" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d5d290"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d5d468"/>
        <function-ref name="stopDone" scoped="" ref="0x40d5d548"/>
        <function-ref name="start" scoped="" ref="0x40d5d628"/>
        <function-ref name="stop" scoped="" ref="0x40d5d708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d5db68" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d5db68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d5dd40"/>
        <function-ref name="getPayload" scoped="" ref="0x40d5de20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d5df00"/>
        <function-ref name="cancel" scoped="" ref="0x40d5c010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d5c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40d5cbf0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40d5cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d5cdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d5b010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d5b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d5b1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d5b2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d5b3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d5b488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d5b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40d5ac08" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40d5ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d59730"/>
        <function-ref name="clear" scoped="" ref="0x40d59ae0"/>
        <function-ref name="isValid" scoped="" ref="0x40d59380"/>
        <function-ref name="set" scoped="" ref="0x40d59e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d5c558" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d5c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d5c730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40d5a3f0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d5a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d5a5c8"/>
        <function-ref name="noAck" scoped="" ref="0x40d5a6a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d5a788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d5b700" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d5b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d5b8d8"/>
        <function-ref name="source" scoped="" ref="0x40d5b9b8"/>
        <function-ref name="address" scoped="" ref="0x40d5ba98"/>
        <function-ref name="destination" scoped="" ref="0x40d5bb78"/>
        <function-ref name="setSource" scoped="" ref="0x40d5bc58"/>
        <function-ref name="setDestination" scoped="" ref="0x40d5bd38"/>
        <function-ref name="type" scoped="" ref="0x40d5be18"/>
        <function-ref name="setType" scoped="" ref="0x40d5bef8"/>
        <function-ref name="isForMe" scoped="" ref="0x40d5a010"/>
        <function-ref name="setGroup" scoped="" ref="0x40d5a0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40d5a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40d575e0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d575e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d56108"/>
        <function-ref name="clear" scoped="" ref="0x40d564b8"/>
        <function-ref name="isValid" scoped="" ref="0x40d57d30"/>
        <function-ref name="set" scoped="" ref="0x40d56868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40d8c8c0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40d8c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40d8ca98"/>
        <function-ref name="setRoot" scoped="" ref="0x40d8cb78"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40d8cc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40d6f8d0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40d6f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40d6faa8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40d6fb88"/>
        <function-ref name="setType" scoped="" ref="0x40d6fc68"/>
        <function-ref name="getOrigin" scoped="" ref="0x40d6fd48"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40d6fe28"/>
        <function-ref name="getType" scoped="" ref="0x40d6ff08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40d86550" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40d86550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40d867a8"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40d86888"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40d86968"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40d86a48"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40d86b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40d6dde8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40d6dde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40d6f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d6f190" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d6f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6f368"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d6f448"/>
        <function-ref name="getPayload" scoped="" ref="0x40d6f528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d6f608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d6f6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40d70210" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40d70210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d703e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d71100" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d71100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d712d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d713b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d71498"/>
        <function-ref name="cancel" scoped="" ref="0x40d71578"/>
        <function-ref name="sendDone" scoped="" ref="0x40d71658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40d8eaf0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40d8eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40d8ecc8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40d8eda8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40d8ee88"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40d6a010"/>
        <function-ref name="getEtx" scoped="" ref="0x40d6a0f0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40d6a1d0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40d6a2b0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40d6a390"/>
        <function-ref name="getParent" scoped="" ref="0x40d6a470"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40d6a550"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40d6a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d71b10" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d71b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d71ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40d8c458" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40d8c458"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40d8c630"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40d8c710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40d94618" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40d94618"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40d947f0"/>
        <function-ref name="option" scoped="" ref="0x40d948d0"/>
        <function-ref name="setEtx" scoped="" ref="0x40d949b0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40d94a90"/>
        <function-ref name="clearOption" scoped="" ref="0x40d94b70"/>
        <function-ref name="getEtx" scoped="" ref="0x40d94c50"/>
        <function-ref name="getOrigin" scoped="" ref="0x40d94d30"/>
        <function-ref name="setType" scoped="" ref="0x40d94e10"/>
        <function-ref name="setOption" scoped="" ref="0x40d94ef0"/>
        <function-ref name="matchPacket" scoped="" ref="0x40d6c010"/>
        <function-ref name="getThl" scoped="" ref="0x40d6c0f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40d6c1d0"/>
        <function-ref name="matchInstance" scoped="" ref="0x40d6c2b0"/>
        <function-ref name="getType" scoped="" ref="0x40d6c410"/>
        <function-ref name="setThl" scoped="" ref="0x40d6c4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d728f0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d728f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d72ac8"/>
        <function-ref name="stop" scoped="" ref="0x40d72ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40d8b980" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40d8b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40d8bb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40dae478" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40dae478"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40dae650"/>
        <function-ref name="setRoot" scoped="" ref="0x40dae730"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40dae810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40d82ce0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40d82ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40d82eb8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40d81010"/>
        <function-ref name="setType" scoped="" ref="0x40d810f0"/>
        <function-ref name="getOrigin" scoped="" ref="0x40d811d0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40d812b0"/>
        <function-ref name="getType" scoped="" ref="0x40d81390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40da9580" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40da9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40da9758"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40da9838"/>
        <function-ref name="txNoAck" scoped="" ref="0x40da9918"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40da99f8"/>
        <function-ref name="evicted" scoped="" ref="0x40da9ad8"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40da9bb8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40da9c98"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40da9d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40dac1e8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40dac1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40dac3c0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40dac4a0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40dac580"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40dac660"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40dac740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40d82248" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40d82248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40d82420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d825a0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d825a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d82778"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d82858"/>
        <function-ref name="getPayload" scoped="" ref="0x40d82938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d82a18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d82af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40d84b78" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40d84b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d84d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d859e0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d859e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d85bb8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d85c98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d85d78"/>
        <function-ref name="cancel" scoped="" ref="0x40d85e58"/>
        <function-ref name="sendDone" scoped="" ref="0x40d84010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40d80598" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40d80598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40d80770"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40d80850"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40d80930"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40d80a10"/>
        <function-ref name="getEtx" scoped="" ref="0x40d80af0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40d80bd0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40d80cb0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40d80d90"/>
        <function-ref name="getParent" scoped="" ref="0x40d80e70"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40daf010"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40daf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d844c8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d844c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d846a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40dae010" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40dae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40dae1e8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40dae2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40d81530" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40d81530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40d81708"/>
        <function-ref name="option" scoped="" ref="0x40d817e8"/>
        <function-ref name="setEtx" scoped="" ref="0x40d818c8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40d819a8"/>
        <function-ref name="clearOption" scoped="" ref="0x40d81a88"/>
        <function-ref name="getEtx" scoped="" ref="0x40d81b68"/>
        <function-ref name="getOrigin" scoped="" ref="0x40d81c48"/>
        <function-ref name="setType" scoped="" ref="0x40d81d28"/>
        <function-ref name="setOption" scoped="" ref="0x40d81e08"/>
        <function-ref name="matchPacket" scoped="" ref="0x40d81ee8"/>
        <function-ref name="getThl" scoped="" ref="0x40d80010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40d800f0"/>
        <function-ref name="matchInstance" scoped="" ref="0x40d801d0"/>
        <function-ref name="getType" scoped="" ref="0x40d80330"/>
        <function-ref name="setThl" scoped="" ref="0x40d80410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d852b0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d852b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d85488"/>
        <function-ref name="stop" scoped="" ref="0x40d85568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40daed18" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40daed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40dac010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e78998" loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e78998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e78b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x40e67c08" loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40e67c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40e67de0"/>
        <function-ref name="setRoot" scoped="" ref="0x40e67ec0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40e66010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e782e0" loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e782e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e784b8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e78598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e78678"/>
        <function-ref name="cancel" scoped="" ref="0x40e78758"/>
        <function-ref name="sendDone" scoped="" ref="0x40e78838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40e64150" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40e64150"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40e64328"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40e64408"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40e644e8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40e645c8"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40e646a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40e7a708" loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40e7a708"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40e7a8e0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40e7a9c0"/>
        <function-ref name="setType" scoped="" ref="0x40e7aaa0"/>
        <function-ref name="getOrigin" scoped="" ref="0x40e7ab80"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40e7ac60"/>
        <function-ref name="getType" scoped="" ref="0x40e7ad40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x40e6dbe8" loc="154:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40e6dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40e6ddc0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40e6dea0"/>
        <function-ref name="txNoAck" scoped="" ref="0x40e6c010"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40e6c0f0"/>
        <function-ref name="evicted" scoped="" ref="0x40e6c1d0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40e6c2b0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40e6c390"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40e6c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x40e69900" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x40e69900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
              <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40e69f28"/>
        <function-ref name="flush" scoped="" ref="0x40e68438"/>
        <function-ref name="lookup" scoped="" ref="0x40e681b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40e47d08" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40e47d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40e47ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e7a070" loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e7a070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e7a248"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e7a328"/>
        <function-ref name="getPayload" scoped="" ref="0x40e7a408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e7a4e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e7a5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CongestionTimer" ref="0x40e6c660" loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CongestionTimer" scoped="" ref="0x40e6c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e69170"/>
        <function-ref name="fired" scoped="" ref="0x40e6b3f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e6bb00"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e6b8a8"/>
        <function-ref name="getdt" scoped="" ref="0x40e69620"/>
        <function-ref name="gett0" scoped="" ref="0x40e693c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e6b650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e6cc88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e6be20"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e6cf08"/>
        <function-ref name="stop" scoped="" ref="0x40e6b1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40e47948" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40e47948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e47b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40e67810" loc="163:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40e67810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40e679e8"/>
        <function-ref name="rand32" scoped="" ref="0x40e67ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e48de0" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e48de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e47010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e470f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e471d0"/>
        <function-ref name="cancel" scoped="" ref="0x40e472b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e47390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40e76d08" loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40e76d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e76ee0"/>
        <function-ref name="stopDone" scoped="" ref="0x40e75010"/>
        <function-ref name="start" scoped="" ref="0x40e750f0"/>
        <function-ref name="stop" scoped="" ref="0x40e751d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x40e70a30" loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x40e70a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e6d528"/>
        <function-ref name="fired" scoped="" ref="0x40e6e7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e6eec8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e6ec70"/>
        <function-ref name="getdt" scoped="" ref="0x40e6d9d8"/>
        <function-ref name="gett0" scoped="" ref="0x40e6d780"/>
        <function-ref name="isRunning" scoped="" ref="0x40e6ea18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e6e068"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e6d208"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e6e2e8"/>
        <function-ref name="stop" scoped="" ref="0x40e6e568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40e63430" loc="259:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40e63430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e63608"/>
        <function-ref name="runTask" scoped="" ref="0x40e636e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x40e753e0" loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x40e753e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40da01b0"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40da0438"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40e74130"/>
        <function-ref name="enqueue" scoped="" ref="0x40e74810"/>
        <function-ref name="element" scoped="" ref="0x40e74b60"/>
        <function-ref name="maxSize" scoped="" ref="0x40e75eb8"/>
        <function-ref name="dequeue" scoped="" ref="0x40e744a0"/>
        <function-ref name="empty" scoped="" ref="0x40e75a08"/>
        <function-ref name="size" scoped="" ref="0x40e75c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x40e68648" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40e68648"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40e68820"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40e68900"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40e689e0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40e68ac0"/>
        <function-ref name="getEtx" scoped="" ref="0x40e68ba0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40e68c80"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40e68d60"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40e68e40"/>
        <function-ref name="getParent" scoped="" ref="0x40e68f20"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40e67018"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40e670f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40e76098" loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40e76098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e76270"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e76350"/>
        <function-ref name="getPayload" scoped="" ref="0x40e76430"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e76510"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e765f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e48638" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e48638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e48810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e47568" loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e47568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e47750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40e79e70" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40e79e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40e78070"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40e78150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x40e76730" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40e76730"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x40e76908"/>
        <function-ref name="routeFound" scoped="" ref="0x40e769e8"/>
        <function-ref name="nextHop" scoped="" ref="0x40e76ac8"/>
        <function-ref name="noRoute" scoped="" ref="0x40e76ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e647e8" loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e647e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e649c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e64aa0"/>
        <function-ref name="led1On" scoped="" ref="0x40e64b80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e64c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e64d40"/>
        <function-ref name="get" scoped="" ref="0x40e64e20"/>
        <function-ref name="led1Off" scoped="" ref="0x40e64f00"/>
        <function-ref name="led2On" scoped="" ref="0x40e632b0"/>
        <function-ref name="set" scoped="" ref="0x40e630f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40e63010"/>
        <function-ref name="led0On" scoped="" ref="0x40e631d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40e67238" loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40e67238"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e67510"/>
        <function-ref name="noAck" scoped="" ref="0x40e675f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e676d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40e7ae80" loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40e7ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40e79070"/>
        <function-ref name="option" scoped="" ref="0x40e79150"/>
        <function-ref name="setEtx" scoped="" ref="0x40e79230"/>
        <function-ref name="setOrigin" scoped="" ref="0x40e79310"/>
        <function-ref name="clearOption" scoped="" ref="0x40e793f0"/>
        <function-ref name="getEtx" scoped="" ref="0x40e794d0"/>
        <function-ref name="getOrigin" scoped="" ref="0x40e795b0"/>
        <function-ref name="setType" scoped="" ref="0x40e79690"/>
        <function-ref name="setOption" scoped="" ref="0x40e79770"/>
        <function-ref name="matchPacket" scoped="" ref="0x40e79850"/>
        <function-ref name="getThl" scoped="" ref="0x40e79930"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40e79a10"/>
        <function-ref name="matchInstance" scoped="" ref="0x40e79af0"/>
        <function-ref name="getType" scoped="" ref="0x40e79c50"/>
        <function-ref name="setThl" scoped="" ref="0x40e79d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x40e72010" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x40e72010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40da01b0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40da0438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e710e8"/>
        <function-ref name="maxSize" scoped="" ref="0x40e72ae8"/>
        <function-ref name="empty" scoped="" ref="0x40e72638"/>
        <function-ref name="put" scoped="" ref="0x40e72d40"/>
        <function-ref name="size" scoped="" ref="0x40e72890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40e66510" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e66510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e666e8"/>
        <function-ref name="source" scoped="" ref="0x40e667c8"/>
        <function-ref name="address" scoped="" ref="0x40e668a8"/>
        <function-ref name="destination" scoped="" ref="0x40e66988"/>
        <function-ref name="setSource" scoped="" ref="0x40e66a68"/>
        <function-ref name="setDestination" scoped="" ref="0x40e66b48"/>
        <function-ref name="type" scoped="" ref="0x40e66c28"/>
        <function-ref name="setType" scoped="" ref="0x40e66d08"/>
        <function-ref name="isForMe" scoped="" ref="0x40e66de8"/>
        <function-ref name="setGroup" scoped="" ref="0x40e66ec8"/>
        <function-ref name="localGroup" scoped="" ref="0x40e64010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40e48950" loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e48950"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e48b28"/>
        <function-ref name="stop" scoped="" ref="0x40e48c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x40e78cd0" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x40e78cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e78f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x40e71520" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x40e71520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
            <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e705f8"/>
        <function-ref name="maxSize" scoped="" ref="0x40e70010"/>
        <function-ref name="empty" scoped="" ref="0x40e71b48"/>
        <function-ref name="put" scoped="" ref="0x40e70268"/>
        <function-ref name="size" scoped="" ref="0x40e71da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40e661e8" loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40e661e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40e663d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40e91b70" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40e91b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
            <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e90c78"/>
        <function-ref name="maxSize" scoped="" ref="0x40e90690"/>
        <function-ref name="empty" scoped="" ref="0x40e901e0"/>
        <function-ref name="put" scoped="" ref="0x40e908e8"/>
        <function-ref name="size" scoped="" ref="0x40e90438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41665010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41665010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
            <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416630e8"/>
        <function-ref name="maxSize" scoped="" ref="0x41665ae8"/>
        <function-ref name="empty" scoped="" ref="0x41665638"/>
        <function-ref name="put" scoped="" ref="0x41665d40"/>
        <function-ref name="size" scoped="" ref="0x41665890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41666be0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41666be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41666db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40eae010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40eae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40da01b0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40da0438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ead0e8"/>
        <function-ref name="maxSize" scoped="" ref="0x40eaeae8"/>
        <function-ref name="empty" scoped="" ref="0x40eae638"/>
        <function-ref name="put" scoped="" ref="0x40eaed40"/>
        <function-ref name="size" scoped="" ref="0x40eae890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416af770" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x416af770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40da01b0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40da0438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416ae850"/>
        <function-ref name="maxSize" scoped="" ref="0x416ae268"/>
        <function-ref name="empty" scoped="" ref="0x416afd98"/>
        <function-ref name="put" scoped="" ref="0x416ae4c0"/>
        <function-ref name="size" scoped="" ref="0x416ae010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416af3c8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416af3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416af5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40eab0f0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40eab0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40da01b0"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40da0438"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40eabe20"/>
        <function-ref name="enqueue" scoped="" ref="0x40eaa518"/>
        <function-ref name="element" scoped="" ref="0x40eaa868"/>
        <function-ref name="maxSize" scoped="" ref="0x40eabbc8"/>
        <function-ref name="dequeue" scoped="" ref="0x40eaa1a8"/>
        <function-ref name="empty" scoped="" ref="0x40eab718"/>
        <function-ref name="size" scoped="" ref="0x40eab970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x40e9ac48" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x40e9ac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
              <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40e99288"/>
        <function-ref name="flush" scoped="" ref="0x40e99788"/>
        <function-ref name="lookup" scoped="" ref="0x40e99508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x416a05c8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x416a05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
              <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x416a0bf0"/>
        <function-ref name="flush" scoped="" ref="0x4169e110"/>
        <function-ref name="lookup" scoped="" ref="0x416a0e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416a0200" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416a0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416a03d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x4169e350" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x4169e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4169e528"/>
        <function-ref name="option" scoped="" ref="0x4169e608"/>
        <function-ref name="setEtx" scoped="" ref="0x4169e6e8"/>
        <function-ref name="setOrigin" scoped="" ref="0x4169e7c8"/>
        <function-ref name="clearOption" scoped="" ref="0x4169e8a8"/>
        <function-ref name="getEtx" scoped="" ref="0x4169e988"/>
        <function-ref name="getOrigin" scoped="" ref="0x4169ea68"/>
        <function-ref name="setType" scoped="" ref="0x4169eb48"/>
        <function-ref name="setOption" scoped="" ref="0x4169ec28"/>
        <function-ref name="matchPacket" scoped="" ref="0x4169ed08"/>
        <function-ref name="getThl" scoped="" ref="0x4169ede8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4169eec8"/>
        <function-ref name="matchInstance" scoped="" ref="0x4169d010"/>
        <function-ref name="getType" scoped="" ref="0x4169d170"/>
        <function-ref name="setThl" scoped="" ref="0x4169d250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40eb3680" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40eb3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40eb0170"/>
        <function-ref name="fired" scoped="" ref="0x40eb2410"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40eb2b18"/>
        <function-ref name="isOneShot" scoped="" ref="0x40eb28c0"/>
        <function-ref name="getdt" scoped="" ref="0x40eb0620"/>
        <function-ref name="gett0" scoped="" ref="0x40eb03c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40eb2668"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40eb3ca8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40eb2e38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40eb3f28"/>
        <function-ref name="stop" scoped="" ref="0x40eb21b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40eaf458" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40eaf458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ee3010"/>
        <function-ref name="fired" scoped="" ref="0x40ee4268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ee4970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ee4718"/>
        <function-ref name="getdt" scoped="" ref="0x40ee34c0"/>
        <function-ref name="gett0" scoped="" ref="0x40ee3268"/>
        <function-ref name="isRunning" scoped="" ref="0x40ee44c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40eafa80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ee4c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40eafd00"/>
        <function-ref name="stop" scoped="" ref="0x40ee4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ed64c0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ed64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ed6698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40edbb70" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40edbb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40edbd48"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40edbe28"/>
        <function-ref name="txNoAck" scoped="" ref="0x40edbf08"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40eda010"/>
        <function-ref name="evicted" scoped="" ref="0x40eda0f0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40eda1d0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40eda2b0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40eda390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40eda858" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40eda858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40edaa30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40edab10"/>
        <function-ref name="getPayload" scoped="" ref="0x40edabf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40edacd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40edadb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40ed5888" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ed5888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ed5a60"/>
        <function-ref name="getPayload" scoped="" ref="0x40ed5b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ed5c20"/>
        <function-ref name="cancel" scoped="" ref="0x40ed5d00"/>
        <function-ref name="sendDone" scoped="" ref="0x40ed5de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40edb0f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40edb0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40edb2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40edb3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40edb488"/>
        <function-ref name="cancel" scoped="" ref="0x40edb568"/>
        <function-ref name="sendDone" scoped="" ref="0x40edb648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40ed6be8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40ed6be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40ed6e40"/>
        <function-ref name="rand32" scoped="" ref="0x40ed6f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ed7cc8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ed7cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ed7ea0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ed6010"/>
        <function-ref name="getPayload" scoped="" ref="0x40ed60f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ed61d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ed62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40eda500" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40eda500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eda6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x40ed7030" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x40ed7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ed7208"/>
        <function-ref name="source" scoped="" ref="0x40ed72e8"/>
        <function-ref name="address" scoped="" ref="0x40ed73c8"/>
        <function-ref name="destination" scoped="" ref="0x40ed74a8"/>
        <function-ref name="setSource" scoped="" ref="0x40ed7588"/>
        <function-ref name="setDestination" scoped="" ref="0x40ed7668"/>
        <function-ref name="type" scoped="" ref="0x40ed7748"/>
        <function-ref name="setType" scoped="" ref="0x40ed7828"/>
        <function-ref name="isForMe" scoped="" ref="0x40ed7908"/>
        <function-ref name="setGroup" scoped="" ref="0x40ed79e8"/>
        <function-ref name="localGroup" scoped="" ref="0x40ed7ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40edb7d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40edb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40edb9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x40ed54f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x40ed54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x40ed56c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40edcc50" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40edcc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40edce28"/>
        <function-ref name="stop" scoped="" ref="0x40edcf08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x40ed6890" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ed6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ed6a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f426a0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f426a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f42878"/>
        <function-ref name="getPayload" scoped="" ref="0x40f42958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f42a38"/>
        <function-ref name="cancel" scoped="" ref="0x40f42b18"/>
        <function-ref name="sendDone" scoped="" ref="0x40f42bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f42d38" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f42d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f42f10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f70010"/>
        <function-ref name="getPayload" scoped="" ref="0x40f700f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f701d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f703f0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f703f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f705c8"/>
        <function-ref name="source" scoped="" ref="0x40f706a8"/>
        <function-ref name="address" scoped="" ref="0x40f70788"/>
        <function-ref name="destination" scoped="" ref="0x40f70868"/>
        <function-ref name="setSource" scoped="" ref="0x40f70948"/>
        <function-ref name="setDestination" scoped="" ref="0x40f70a28"/>
        <function-ref name="type" scoped="" ref="0x40f70b08"/>
        <function-ref name="setType" scoped="" ref="0x40f70be8"/>
        <function-ref name="isForMe" scoped="" ref="0x40f70cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f70da8"/>
        <function-ref name="localGroup" scoped="" ref="0x40f70e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f6f010" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f6f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f6f1e8"/>
        <function-ref name="noAck" scoped="" ref="0x40f6f2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f6f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416dd4a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416dd4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416dd680"/>
        <function-ref name="getPayload" scoped="" ref="0x416dd760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416dd840"/>
        <function-ref name="cancel" scoped="" ref="0x416dd920"/>
        <function-ref name="sendDone" scoped="" ref="0x416dda00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416ddb70" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416ddb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416ddd48"/>
        <function-ref name="getPayload" scoped="" ref="0x416dde28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416ddf08"/>
        <function-ref name="cancel" scoped="" ref="0x416db010"/>
        <function-ref name="sendDone" scoped="" ref="0x416db0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416db230" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416db230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416db408"/>
        <function-ref name="source" scoped="" ref="0x416db4e8"/>
        <function-ref name="address" scoped="" ref="0x416db5c8"/>
        <function-ref name="destination" scoped="" ref="0x416db6a8"/>
        <function-ref name="setSource" scoped="" ref="0x416db788"/>
        <function-ref name="setDestination" scoped="" ref="0x416db868"/>
        <function-ref name="type" scoped="" ref="0x416db948"/>
        <function-ref name="setType" scoped="" ref="0x416dba28"/>
        <function-ref name="isForMe" scoped="" ref="0x416dbb08"/>
        <function-ref name="setGroup" scoped="" ref="0x416dbbe8"/>
        <function-ref name="localGroup" scoped="" ref="0x416dbcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f6bc08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f6bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f6bde0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f6bec0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f68010"/>
        <function-ref name="cancel" scoped="" ref="0x40f680f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f681d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40f763d8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f763d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f765c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f766a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f76780"/>
        <function-ref name="cancel" scoped="" ref="0x40f76860"/>
        <function-ref name="sendDone" scoped="" ref="0x40f76940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f66be0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f66be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f66dc8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f66ea8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f76010"/>
        <function-ref name="cancel" scoped="" ref="0x40f760f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f761d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40f75690" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f75690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f75868"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f75948"/>
        <function-ref name="getPayload" scoped="" ref="0x40f75a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f75b08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f75be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40f75d68" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40f75d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f74010"/>
        <function-ref name="runTask" scoped="" ref="0x40f740f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40f74270" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40f74270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f74448"/>
        <function-ref name="runTask" scoped="" ref="0x40f74528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f76a80" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f76a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f76c58"/>
        <function-ref name="source" scoped="" ref="0x40f76d38"/>
        <function-ref name="address" scoped="" ref="0x40f76e18"/>
        <function-ref name="destination" scoped="" ref="0x40f76ef8"/>
        <function-ref name="setSource" scoped="" ref="0x40f75010"/>
        <function-ref name="setDestination" scoped="" ref="0x40f750f0"/>
        <function-ref name="type" scoped="" ref="0x40f751d0"/>
        <function-ref name="setType" scoped="" ref="0x40f752b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f75390"/>
        <function-ref name="setGroup" scoped="" ref="0x40f75470"/>
        <function-ref name="localGroup" scoped="" ref="0x40f75550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fa4d60" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fa4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fa1010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fa10f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40fa11d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fa12b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fa1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40fa4a48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40fa4a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fa4c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fa14d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fa14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fa16a8"/>
        <function-ref name="source" scoped="" ref="0x40fa1788"/>
        <function-ref name="address" scoped="" ref="0x40fa1868"/>
        <function-ref name="destination" scoped="" ref="0x40fa1948"/>
        <function-ref name="setSource" scoped="" ref="0x40fa1a28"/>
        <function-ref name="setDestination" scoped="" ref="0x40fa1b08"/>
        <function-ref name="type" scoped="" ref="0x40fa1be8"/>
        <function-ref name="setType" scoped="" ref="0x40fa1cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40fa1da8"/>
        <function-ref name="setGroup" scoped="" ref="0x40fa1e88"/>
        <function-ref name="localGroup" scoped="" ref="0x40fa0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f9f8d8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f9f8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f9fab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f9fb90"/>
        <function-ref name="getPayload" scoped="" ref="0x40f9fc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f9fd50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f9fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f9f5c0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f9f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f9f798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f9e010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f9e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f9e1e8"/>
        <function-ref name="source" scoped="" ref="0x40f9e2c8"/>
        <function-ref name="address" scoped="" ref="0x40f9e3a8"/>
        <function-ref name="destination" scoped="" ref="0x40f9e488"/>
        <function-ref name="setSource" scoped="" ref="0x40f9e568"/>
        <function-ref name="setDestination" scoped="" ref="0x40f9e648"/>
        <function-ref name="type" scoped="" ref="0x40f9e728"/>
        <function-ref name="setType" scoped="" ref="0x40f9e808"/>
        <function-ref name="isForMe" scoped="" ref="0x40f9e8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f9e9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40f9eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x410263f0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x410263f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x410265c8"/>
        <function-ref name="setRoot" scoped="" ref="0x410266a8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x41026788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x4101a8e0" loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x4101a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4101aab8"/>
        <function-ref name="runTask" scoped="" ref="0x4101ab98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x4101b618" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x4101b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x4101b7f0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x4101b8d0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x4101b9b0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x4101ba90"/>
        <function-ref name="logEventDbg" scoped="" ref="0x4101bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x41022010" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x41022010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x410221e8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x410222c8"/>
        <function-ref name="txNoAck" scoped="" ref="0x410223a8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x41022488"/>
        <function-ref name="evicted" scoped="" ref="0x41022568"/>
        <function-ref name="clearDLQ" scoped="" ref="0x41022648"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x41022728"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x41022808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x410258c8" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x410258c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x41025aa0"/>
        <function-ref name="setEtx" scoped="" ref="0x41025b80"/>
        <function-ref name="clearOption" scoped="" ref="0x41025c60"/>
        <function-ref name="getEtx" scoped="" ref="0x41025d40"/>
        <function-ref name="setOption" scoped="" ref="0x41025e20"/>
        <function-ref name="setParent" scoped="" ref="0x41025f00"/>
        <function-ref name="getParent" scoped="" ref="0x41024010"/>
        <function-ref name="getOption" scoped="" ref="0x410240f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x410215d0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x410215d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x410217a8"/>
        <function-ref name="stopDone" scoped="" ref="0x41021888"/>
        <function-ref name="start" scoped="" ref="0x41021968"/>
        <function-ref name="stop" scoped="" ref="0x41021a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4101b220" loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4101b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4101b3f8"/>
        <function-ref name="rand32" scoped="" ref="0x4101b4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x410268c8" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x410268c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x41026aa0"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x41026b80"/>
        <function-ref name="numNeighbors" scoped="" ref="0x41026c60"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x41026d40"/>
        <function-ref name="getEtx" scoped="" ref="0x41026e20"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x41026f00"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x41025010"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x410250f0"/>
        <function-ref name="getParent" scoped="" ref="0x410251d0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x410252b0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x41025390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x4101a4a8" loc="385:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x4101a4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4101a680"/>
        <function-ref name="runTask" scoped="" ref="0x4101a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41024230" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41024230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41024408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x41024598" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x41024598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41024770"/>
        <function-ref name="getPayload" scoped="" ref="0x41024850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41024930"/>
        <function-ref name="cancel" scoped="" ref="0x41024a10"/>
        <function-ref name="sendDone" scoped="" ref="0x41024af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x41021c38" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x41021c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4101f730"/>
        <function-ref name="fired" scoped="" ref="0x410209d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4101f0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41020e80"/>
        <function-ref name="getdt" scoped="" ref="0x4101fbe0"/>
        <function-ref name="gett0" scoped="" ref="0x4101f988"/>
        <function-ref name="isRunning" scoped="" ref="0x41020c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41020278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4101f410"/>
        <function-ref name="startOneShot" scoped="" ref="0x410204f8"/>
        <function-ref name="stop" scoped="" ref="0x41020778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x4101fea0" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x4101fea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4101cb00"/>
        <function-ref name="fired" scoped="" ref="0x4101ed30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4101c4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4101c268"/>
        <function-ref name="getdt" scoped="" ref="0x4101b010"/>
        <function-ref name="gett0" scoped="" ref="0x4101cd58"/>
        <function-ref name="isRunning" scoped="" ref="0x4101c010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4101e5d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4101c7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4101e858"/>
        <function-ref name="stop" scoped="" ref="0x4101ead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x4101bcb0" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x4101bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x4101be88"/>
        <function-ref name="setClientCongested" scoped="" ref="0x4101a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x4101a150" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x4101a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x4101a328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x41024c50" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x41024c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41024e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41022948" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41022948"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41022b20"/>
        <function-ref name="source" scoped="" ref="0x41022c00"/>
        <function-ref name="address" scoped="" ref="0x41022ce0"/>
        <function-ref name="destination" scoped="" ref="0x41022dc0"/>
        <function-ref name="setSource" scoped="" ref="0x41022ea0"/>
        <function-ref name="setDestination" scoped="" ref="0x41021010"/>
        <function-ref name="type" scoped="" ref="0x410210f0"/>
        <function-ref name="setType" scoped="" ref="0x410211d0"/>
        <function-ref name="isForMe" scoped="" ref="0x410212b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41021390"/>
        <function-ref name="localGroup" scoped="" ref="0x41021470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x410254d0" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x410254d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410256a8"/>
        <function-ref name="stop" scoped="" ref="0x41025788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x41027d60" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x41027d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x41026010"/>
        <function-ref name="routeFound" scoped="" ref="0x410260f0"/>
        <function-ref name="nextHop" scoped="" ref="0x410261d0"/>
        <function-ref name="noRoute" scoped="" ref="0x410262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41050a70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41050a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4104d570"/>
        <function-ref name="fired" scoped="" ref="0x4104f810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4104ff18"/>
        <function-ref name="isOneShot" scoped="" ref="0x4104fcc0"/>
        <function-ref name="getdt" scoped="" ref="0x4104da20"/>
        <function-ref name="gett0" scoped="" ref="0x4104d7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4104fa68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4104f0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4104d250"/>
        <function-ref name="startOneShot" scoped="" ref="0x4104f338"/>
        <function-ref name="stop" scoped="" ref="0x4104f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4104cad0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.CongestionTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4104cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4104a650"/>
        <function-ref name="fired" scoped="" ref="0x4104b860"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4104a010"/>
        <function-ref name="isOneShot" scoped="" ref="0x4104bd10"/>
        <function-ref name="getdt" scoped="" ref="0x4104ab00"/>
        <function-ref name="gett0" scoped="" ref="0x4104a8a8"/>
        <function-ref name="isRunning" scoped="" ref="0x4104bab8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4104b108"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4104a330"/>
        <function-ref name="startOneShot" scoped="" ref="0x4104b388"/>
        <function-ref name="stop" scoped="" ref="0x4104b608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41046e80" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41046e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41045070"/>
        <function-ref name="getPayload" scoped="" ref="0x41045150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41045230"/>
        <function-ref name="cancel" scoped="" ref="0x41045310"/>
        <function-ref name="sendDone" scoped="" ref="0x410453f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41045530" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41045530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41045708"/>
        <function-ref name="payloadLength" scoped="" ref="0x410457e8"/>
        <function-ref name="getPayload" scoped="" ref="0x410458c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410459a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41045a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41045bc8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41045bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41045da0"/>
        <function-ref name="source" scoped="" ref="0x41045e80"/>
        <function-ref name="address" scoped="" ref="0x41044010"/>
        <function-ref name="destination" scoped="" ref="0x410440f0"/>
        <function-ref name="setSource" scoped="" ref="0x410441d0"/>
        <function-ref name="setDestination" scoped="" ref="0x410442b0"/>
        <function-ref name="type" scoped="" ref="0x41044390"/>
        <function-ref name="setType" scoped="" ref="0x41044470"/>
        <function-ref name="isForMe" scoped="" ref="0x41044550"/>
        <function-ref name="setGroup" scoped="" ref="0x41044630"/>
        <function-ref name="localGroup" scoped="" ref="0x41044710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41044870" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41044870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41044a48"/>
        <function-ref name="noAck" scoped="" ref="0x41044b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x41044c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x417177c8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x417177c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417179a0"/>
        <function-ref name="getPayload" scoped="" ref="0x41717a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41717b60"/>
        <function-ref name="cancel" scoped="" ref="0x41717c40"/>
        <function-ref name="sendDone" scoped="" ref="0x41717d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41717e90" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41717e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41715080"/>
        <function-ref name="getPayload" scoped="" ref="0x41715160"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41715240"/>
        <function-ref name="cancel" scoped="" ref="0x41715320"/>
        <function-ref name="sendDone" scoped="" ref="0x41715400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41715540" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41715540"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41715718"/>
        <function-ref name="source" scoped="" ref="0x417157f8"/>
        <function-ref name="address" scoped="" ref="0x417158d8"/>
        <function-ref name="destination" scoped="" ref="0x417159b8"/>
        <function-ref name="setSource" scoped="" ref="0x41715a98"/>
        <function-ref name="setDestination" scoped="" ref="0x41715b78"/>
        <function-ref name="type" scoped="" ref="0x41715c58"/>
        <function-ref name="setType" scoped="" ref="0x41715d38"/>
        <function-ref name="isForMe" scoped="" ref="0x41715e18"/>
        <function-ref name="setGroup" scoped="" ref="0x41715ef8"/>
        <function-ref name="localGroup" scoped="" ref="0x41714010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41042200" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41042200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410423d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x410424b8"/>
        <function-ref name="getPayload" scoped="" ref="0x41042598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41042678"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41042758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41043ea8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41043ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410420c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41042898" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41042898"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41042a70"/>
        <function-ref name="source" scoped="" ref="0x41042b50"/>
        <function-ref name="address" scoped="" ref="0x41042c30"/>
        <function-ref name="destination" scoped="" ref="0x41042d10"/>
        <function-ref name="setSource" scoped="" ref="0x41042df0"/>
        <function-ref name="setDestination" scoped="" ref="0x41042ed0"/>
        <function-ref name="type" scoped="" ref="0x41041010"/>
        <function-ref name="setType" scoped="" ref="0x410410f0"/>
        <function-ref name="isForMe" scoped="" ref="0x410411d0"/>
        <function-ref name="setGroup" scoped="" ref="0x410412b0"/>
        <function-ref name="localGroup" scoped="" ref="0x41041390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41069010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41069010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410691e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x410692c8"/>
        <function-ref name="getPayload" scoped="" ref="0x410693a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41069488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41069568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4106a8a0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4106a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4106aa78"/>
        <function-ref name="getPayload" scoped="" ref="0x4106ab58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4106ac38"/>
        <function-ref name="cancel" scoped="" ref="0x4106ad18"/>
        <function-ref name="sendDone" scoped="" ref="0x4106adf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4175d230" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4175d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4175d408"/>
        <function-ref name="payloadLength" scoped="" ref="0x4175d4e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4175d5c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4175d6a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4175d788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4175fb68" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4175fb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4175fd40"/>
        <function-ref name="getPayload" scoped="" ref="0x4175fe20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4175ff00"/>
        <function-ref name="cancel" scoped="" ref="0x4175d010"/>
        <function-ref name="sendDone" scoped="" ref="0x4175d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x4175a328" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x4175a328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x4175a500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4105c178" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4105c178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4105c350"/>
        <function-ref name="stopDone" scoped="" ref="0x4105c430"/>
        <function-ref name="start" scoped="" ref="0x4105c510"/>
        <function-ref name="stop" scoped="" ref="0x4105c5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4105ca50" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4105ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4105cc28"/>
        <function-ref name="getPayload" scoped="" ref="0x4105cd08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4105cde8"/>
        <function-ref name="cancel" scoped="" ref="0x4105cec8"/>
        <function-ref name="sendDone" scoped="" ref="0x4105b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4105b7d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4105b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4105b9a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4105ba88"/>
        <function-ref name="getPayload" scoped="" ref="0x4105bb68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4105bc48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4105bd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4105b478" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4105b478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4105b650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x410591b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x410591b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41059388"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41059468"/>
        <function-ref name="led1On" scoped="" ref="0x41059548"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41059628"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41059708"/>
        <function-ref name="get" scoped="" ref="0x410597e8"/>
        <function-ref name="led1Off" scoped="" ref="0x410598c8"/>
        <function-ref name="led2Off" scoped="" ref="0x41059c48"/>
        <function-ref name="set" scoped="" ref="0x410599a8"/>
        <function-ref name="led0On" scoped="" ref="0x41059a88"/>
        <function-ref name="led2On" scoped="" ref="0x41059b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4105aba0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4105aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4105ad78"/>
        <function-ref name="noAck" scoped="" ref="0x4105ae58"/>
        <function-ref name="wasAcked" scoped="" ref="0x41059010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4105bec0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4105bec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4105a0c0"/>
        <function-ref name="source" scoped="" ref="0x4105a1a0"/>
        <function-ref name="address" scoped="" ref="0x4105a280"/>
        <function-ref name="destination" scoped="" ref="0x4105a360"/>
        <function-ref name="setSource" scoped="" ref="0x4105a440"/>
        <function-ref name="setDestination" scoped="" ref="0x4105a520"/>
        <function-ref name="type" scoped="" ref="0x4105a600"/>
        <function-ref name="setType" scoped="" ref="0x4105a6e0"/>
        <function-ref name="isForMe" scoped="" ref="0x4105a7c0"/>
        <function-ref name="setGroup" scoped="" ref="0x4105a8a0"/>
        <function-ref name="localGroup" scoped="" ref="0x4105a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4109f360" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4109f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4109f538"/>
        <function-ref name="getPayload" scoped="" ref="0x4109f618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4109f6f8"/>
        <function-ref name="cancel" scoped="" ref="0x4109f7d8"/>
        <function-ref name="sendDone" scoped="" ref="0x4109f8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4109fa18" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4109fa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4109fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41056108" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41056108"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410562f0"/>
        <function-ref name="getPayload" scoped="" ref="0x410563d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410564b0"/>
        <function-ref name="cancel" scoped="" ref="0x41056590"/>
        <function-ref name="sendDone" scoped="" ref="0x41056670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41055770" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41055770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41055948"/>
        <function-ref name="payloadLength" scoped="" ref="0x41055a28"/>
        <function-ref name="getPayload" scoped="" ref="0x41055b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41055be8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41055cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41056848" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41056848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41056a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x41055e08" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41055e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4109f010"/>
        <function-ref name="noAck" scoped="" ref="0x4109f0f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4109f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41056b70" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41056b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41056d48"/>
        <function-ref name="source" scoped="" ref="0x41056e28"/>
        <function-ref name="address" scoped="" ref="0x41056f08"/>
        <function-ref name="destination" scoped="" ref="0x41055010"/>
        <function-ref name="setSource" scoped="" ref="0x410550f0"/>
        <function-ref name="setDestination" scoped="" ref="0x410551d0"/>
        <function-ref name="type" scoped="" ref="0x410552b0"/>
        <function-ref name="setType" scoped="" ref="0x41055390"/>
        <function-ref name="isForMe" scoped="" ref="0x41055470"/>
        <function-ref name="setGroup" scoped="" ref="0x41055550"/>
        <function-ref name="localGroup" scoped="" ref="0x41055630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4109b1d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4109b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4109b3a8"/>
        <function-ref name="stopDone" scoped="" ref="0x4109b488"/>
        <function-ref name="start" scoped="" ref="0x4109b568"/>
        <function-ref name="stop" scoped="" ref="0x4109b648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4109a100" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4109a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404a1280"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4109a2d8"/>
        <function-ref name="getPayload" scoped="" ref="0x4109a3b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4109a498"/>
        <function-ref name="cancel" scoped="" ref="0x4109a578"/>
        <function-ref name="sendDone" scoped="" ref="0x4109a658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4109ee00" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4109ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4109b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4109ba90" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4109ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404a1280"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4109bc68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41095ca8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41095ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41095e80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41099010"/>
        <function-ref name="led1On" scoped="" ref="0x410990f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410991d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410992b0"/>
        <function-ref name="get" scoped="" ref="0x41099390"/>
        <function-ref name="led1Off" scoped="" ref="0x41099470"/>
        <function-ref name="led2Off" scoped="" ref="0x410997f0"/>
        <function-ref name="set" scoped="" ref="0x41099550"/>
        <function-ref name="led0On" scoped="" ref="0x41099630"/>
        <function-ref name="led2On" scoped="" ref="0x41099710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x410957a0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x410957a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404a1280"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x41095978"/>
        <function-ref name="offset" scoped="" ref="0x41095a58"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x41095b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x410931d0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x410931d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x410933a8"/>
        <function-ref name="stopDone" scoped="" ref="0x41093488"/>
        <function-ref name="start" scoped="" ref="0x41093568"/>
        <function-ref name="stop" scoped="" ref="0x41093648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x410d5d90" loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x410d5d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410d4010"/>
        <function-ref name="runTask" scoped="" ref="0x410d40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x410c8340" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x410c8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410c8518"/>
        <function-ref name="stop" scoped="" ref="0x410c85f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x410b5788" loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x410b5788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410b5960"/>
        <function-ref name="runTask" scoped="" ref="0x410b5a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41099de0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41099de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41093010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x410c3360" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x410c3360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x410c3538"/>
        <function-ref name="flush" scoped="" ref="0x410c3618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x410d6bd0" loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x410d6bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410d6da8"/>
        <function-ref name="runTask" scoped="" ref="0x410d6e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x410c6d08" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x410c6d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x410c6ee0"/>
        <function-ref name="resetSend" scoped="" ref="0x410cb010"/>
        <function-ref name="dataReceived" scoped="" ref="0x410cb0f0"/>
        <function-ref name="resetReceive" scoped="" ref="0x410cb1d0"/>
        <function-ref name="putData" scoped="" ref="0x410cb2b0"/>
        <function-ref name="putDone" scoped="" ref="0x410cb390"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x410cb470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x410cb5e0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x410cb5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x410cb7b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x410cb898"/>
        <function-ref name="led1On" scoped="" ref="0x410cb978"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410cba58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410cbb38"/>
        <function-ref name="get" scoped="" ref="0x410cbc18"/>
        <function-ref name="led1Off" scoped="" ref="0x410cbcf8"/>
        <function-ref name="led2Off" scoped="" ref="0x410c80f0"/>
        <function-ref name="set" scoped="" ref="0x410cbdd8"/>
        <function-ref name="led0On" scoped="" ref="0x410cbeb8"/>
        <function-ref name="led2On" scoped="" ref="0x410c8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x410d2a70" loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x410d2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410d2c48"/>
        <function-ref name="runTask" scoped="" ref="0x410d2d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x410cc960" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x410cc960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x410ccb38"/>
        <function-ref name="nextByte" scoped="" ref="0x410ccc18"/>
        <function-ref name="startSend" scoped="" ref="0x410cccf8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x410ccdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x410caa80" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x410caa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x410cac58"/>
        <function-ref name="byteReceived" scoped="" ref="0x410cad38"/>
        <function-ref name="endPacket" scoped="" ref="0x410cae18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x4115d970" loc="264:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x4115d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4115db48"/>
        <function-ref name="runTask" scoped="" ref="0x4115dc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x411604f8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x411604f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404a1280"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411606e0"/>
        <function-ref name="getPayload" scoped="" ref="0x411607c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411608a0"/>
        <function-ref name="cancel" scoped="" ref="0x41160980"/>
        <function-ref name="sendDone" scoped="" ref="0x41160a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x4115dda8" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x4115dda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4115c010"/>
        <function-ref name="runTask" scoped="" ref="0x4115c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41160138" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41160138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404a1280"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41160320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x41160c88" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x41160c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404a1280"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x41160e70"/>
        <function-ref name="offset" scoped="" ref="0x4115e010"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4115e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4115ecc0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4115ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4115ee98"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4115d010"/>
        <function-ref name="led1On" scoped="" ref="0x4115d0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4115d1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4115d2b0"/>
        <function-ref name="get" scoped="" ref="0x4115d390"/>
        <function-ref name="led1Off" scoped="" ref="0x4115d470"/>
        <function-ref name="led2On" scoped="" ref="0x4115d7f0"/>
        <function-ref name="set" scoped="" ref="0x4115d630"/>
        <function-ref name="led2Off" scoped="" ref="0x4115d550"/>
        <function-ref name="led0On" scoped="" ref="0x4115d710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x4115e708" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x4115e708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x4115e8e0"/>
        <function-ref name="nextByte" scoped="" ref="0x4115e9c0"/>
        <function-ref name="startSend" scoped="" ref="0x4115eaa0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x4115eb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x4115e230" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4115e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4115e408"/>
        <function-ref name="byteReceived" scoped="" ref="0x4115e4e8"/>
        <function-ref name="endPacket" scoped="" ref="0x4115e5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x41151630" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x41151630"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41151808"/>
        <function-ref name="receivedByte" scoped="" ref="0x411518e8"/>
        <function-ref name="receive" scoped="" ref="0x411519c8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x41151aa8"/>
        <function-ref name="receiveDone" scoped="" ref="0x41151b88"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x41151c68"/>
        <function-ref name="sendDone" scoped="" ref="0x41151d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x41159238" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x41159238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x41159410"/>
        <function-ref name="resetSend" scoped="" ref="0x411594f0"/>
        <function-ref name="dataReceived" scoped="" ref="0x411595d0"/>
        <function-ref name="resetReceive" scoped="" ref="0x411596b0"/>
        <function-ref name="putData" scoped="" ref="0x41159790"/>
        <function-ref name="putDone" scoped="" ref="0x41159870"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x41159950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41151eb8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41151eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x411580c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411581a0"/>
        <function-ref name="led1On" scoped="" ref="0x41158280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41158360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41158440"/>
        <function-ref name="get" scoped="" ref="0x41158520"/>
        <function-ref name="led1Off" scoped="" ref="0x41158600"/>
        <function-ref name="led2Off" scoped="" ref="0x41158980"/>
        <function-ref name="set" scoped="" ref="0x411586e0"/>
        <function-ref name="led0On" scoped="" ref="0x411587c0"/>
        <function-ref name="led2On" scoped="" ref="0x411588a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x4117fe20" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4117fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41181010"/>
        <function-ref name="receive" scoped="" ref="0x411810f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x41182010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x41182010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411821e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x411822c8"/>
        <function-ref name="receive" scoped="" ref="0x411823a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x41182488"/>
        <function-ref name="receiveDone" scoped="" ref="0x41182568"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x41182648"/>
        <function-ref name="sendDone" scoped="" ref="0x41182728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4115baf0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4115baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4115bcc8"/>
        <function-ref name="stop" scoped="" ref="0x4115bda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x41181cb0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x41181cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41181e88"/>
        <function-ref name="receive" scoped="" ref="0x4117c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4117c1d8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4117c1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4117c3b0"/>
        <function-ref name="receivedByte" scoped="" ref="0x4117c490"/>
        <function-ref name="receive" scoped="" ref="0x4117c570"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4117c650"/>
        <function-ref name="receiveDone" scoped="" ref="0x4117c730"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4117c810"/>
        <function-ref name="sendDone" scoped="" ref="0x4117c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4117cc50" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4117cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4117b3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4117b8e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4117b668"/>
        <function-ref name="overflow" scoped="" ref="0x4117bb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41181840" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41181840"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41181a18"/>
        <function-ref name="stop" scoped="" ref="0x41181af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x411775c8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x411775c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411777a0"/>
        <function-ref name="receive" scoped="" ref="0x41177880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x41192350" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x41192350"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41192528"/>
        <function-ref name="stop" scoped="" ref="0x41192608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41178e68" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41178e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41177050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x411779e0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x411779e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41177bb8"/>
        <function-ref name="receivedByte" scoped="" ref="0x41177c98"/>
        <function-ref name="receive" scoped="" ref="0x41177d78"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x41177e58"/>
        <function-ref name="receiveDone" scoped="" ref="0x41192010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x411920f0"/>
        <function-ref name="sendDone" scoped="" ref="0x411921d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x411918b0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x411918b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41190010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41190500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41190288"/>
        <function-ref name="overflow" scoped="" ref="0x41190778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x41192bc0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x41192bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41192d98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41192e78"/>
        <function-ref name="rxDone" scoped="" ref="0x41191010"/>
        <function-ref name="txDone" scoped="" ref="0x411910f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x411911d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x411912b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41191390"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41191470"/>
        <function-ref name="tx" scoped="" ref="0x41191550"/>
        <function-ref name="rx" scoped="" ref="0x41191630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x411771b0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x411771b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41177388"/>
        <function-ref name="stop" scoped="" ref="0x41177468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x41192788" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x41192788"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41192960"/>
        <function-ref name="stop" scoped="" ref="0x41192a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x411c1cf0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x411c1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x411c1ec8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x411c0010"/>
        <function-ref name="rxDone" scoped="" ref="0x411c00f0"/>
        <function-ref name="txDone" scoped="" ref="0x411c01d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x411c02b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x411c0390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x411c0470"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x411c0550"/>
        <function-ref name="tx" scoped="" ref="0x411c0630"/>
        <function-ref name="rx" scoped="" ref="0x411c0710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x411bf390" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x411bf390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x411bf568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x411bf648"/>
        <function-ref name="rxDone" scoped="" ref="0x411bf728"/>
        <function-ref name="txDone" scoped="" ref="0x411bf808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x411bf8e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x411bf9c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x411bfaa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x411bfb88"/>
        <function-ref name="tx" scoped="" ref="0x411bfc68"/>
        <function-ref name="rx" scoped="" ref="0x411bfd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x411c17f8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x411c17f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411c19d0"/>
        <function-ref name="stop" scoped="" ref="0x411c1ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x411c0968" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x411c0968"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411c0b40"/>
        <function-ref name="stop" scoped="" ref="0x411c0c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x411c0e78" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x411c0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411bf070"/>
        <function-ref name="stop" scoped="" ref="0x411bf150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x411c12e8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x411c12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411c14c0"/>
        <function-ref name="stop" scoped="" ref="0x411c15a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x411be578" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x411be578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411be750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x411bb420" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x411bb420"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x411bb5f8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x411bb6d8"/>
        <function-ref name="rxDone" scoped="" ref="0x411bb7b8"/>
        <function-ref name="txDone" scoped="" ref="0x411bb898"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x411bb978"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x411bba58"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x411bbb38"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x411bbc18"/>
        <function-ref name="tx" scoped="" ref="0x411bbcf8"/>
        <function-ref name="rx" scoped="" ref="0x411bbdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x411ba010" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x411ba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411ba1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x411baea8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x411baea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x411b90c0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x411b91a0"/>
        <function-ref name="rxDone" scoped="" ref="0x411b9280"/>
        <function-ref name="txDone" scoped="" ref="0x411b9360"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x411b9440"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x411b9520"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x411b9600"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x411b96e0"/>
        <function-ref name="tx" scoped="" ref="0x411b97c0"/>
        <function-ref name="rx" scoped="" ref="0x411b98a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x411beef8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x411beef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411bb0e0"/>
        <function-ref name="stop" scoped="" ref="0x411bb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x411ba460" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x411ba460"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411ba638"/>
        <function-ref name="stop" scoped="" ref="0x411ba718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x411ba990" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x411ba990"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411bab68"/>
        <function-ref name="stop" scoped="" ref="0x411bac48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x411b9a98" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x411b9a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x411b9c70"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x411b9d50"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x411b9e30"/>
        <function-ref name="actualMicro" scoped="" ref="0x411b9f10"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x411b7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x411b71f8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x411b71f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x411b73d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x411be9c8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x411be9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411beba0"/>
        <function-ref name="stop" scoped="" ref="0x411bec80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x412060d0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x412060d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41206820"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41206d10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41206a98"/>
        <function-ref name="overflow" scoped="" ref="0x41204010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41204b60" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41204b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41201308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x412017f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41201580"/>
        <function-ref name="overflow" scoped="" ref="0x41201a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x411fb7a8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x411fb7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x411fb980"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x411fba60"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x411fbb40"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x411fbc20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x411fbd00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x411fbde0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x411fbec0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x411fa010"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x411fa0f0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x411fa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x411fa508" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x411fa508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x411f8010"/>
        <function-ref name="test" scoped="" ref="0x411f9a90"/>
        <function-ref name="get" scoped="" ref="0x411fab50"/>
        <function-ref name="captured" scoped="" ref="0x411f9088"/>
        <function-ref name="reset" scoped="" ref="0x411f9328"/>
        <function-ref name="isOn" scoped="" ref="0x411f9d08"/>
        <function-ref name="set" scoped="" ref="0x411fadc8"/>
        <function-ref name="start" scoped="" ref="0x411f95a0"/>
        <function-ref name="stop" scoped="" ref="0x411f9818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x411f8720" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x411f8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x411f6c90"/>
        <function-ref name="fired" scoped="" ref="0x411f62b0"/>
        <function-ref name="get" scoped="" ref="0x411f8d68"/>
        <function-ref name="reset" scoped="" ref="0x411f6528"/>
        <function-ref name="isOn" scoped="" ref="0x411f6f08"/>
        <function-ref name="set" scoped="" ref="0x411f6010"/>
        <function-ref name="start" scoped="" ref="0x411f67a0"/>
        <function-ref name="stop" scoped="" ref="0x411f6a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x412004d0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x412004d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x411fdf18"/>
        <function-ref name="test" scoped="" ref="0x411fda28"/>
        <function-ref name="get" scoped="" ref="0x41200b18"/>
        <function-ref name="setScale" scoped="" ref="0x411fb1a8"/>
        <function-ref name="getScale" scoped="" ref="0x411fb448"/>
        <function-ref name="reset" scoped="" ref="0x411fd2c0"/>
        <function-ref name="overflow" scoped="" ref="0x411fd048"/>
        <function-ref name="isOn" scoped="" ref="0x411fdca0"/>
        <function-ref name="set" scoped="" ref="0x41200d90"/>
        <function-ref name="start" scoped="" ref="0x411fd538"/>
        <function-ref name="stop" scoped="" ref="0x411fd7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x411f0c90" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x411f0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x411f0e68"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x411ef010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x411ef0f0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x411ef1d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x411ef2b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x411ef390"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x411ef470"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x411ef550"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x411ef630"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x411ef710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4122f940" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4122f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4122df08"/>
        <function-ref name="fired" scoped="" ref="0x4122d528"/>
        <function-ref name="get" scoped="" ref="0x4122d010"/>
        <function-ref name="reset" scoped="" ref="0x4122d7a0"/>
        <function-ref name="isOn" scoped="" ref="0x4122c1a0"/>
        <function-ref name="set" scoped="" ref="0x4122d288"/>
        <function-ref name="start" scoped="" ref="0x4122da18"/>
        <function-ref name="stop" scoped="" ref="0x4122dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x411efa48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x411efa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4122f500"/>
        <function-ref name="test" scoped="" ref="0x4122f010"/>
        <function-ref name="get" scoped="" ref="0x412300a8"/>
        <function-ref name="captured" scoped="" ref="0x412305c0"/>
        <function-ref name="reset" scoped="" ref="0x41230860"/>
        <function-ref name="isOn" scoped="" ref="0x4122f288"/>
        <function-ref name="set" scoped="" ref="0x41230320"/>
        <function-ref name="start" scoped="" ref="0x41230ad8"/>
        <function-ref name="stop" scoped="" ref="0x41230d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4122c5b8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4122c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4122bb10"/>
        <function-ref name="fired" scoped="" ref="0x4122b130"/>
        <function-ref name="get" scoped="" ref="0x4122cc00"/>
        <function-ref name="reset" scoped="" ref="0x4122b3a8"/>
        <function-ref name="isOn" scoped="" ref="0x4122bd88"/>
        <function-ref name="set" scoped="" ref="0x4122ce78"/>
        <function-ref name="start" scoped="" ref="0x4122b620"/>
        <function-ref name="stop" scoped="" ref="0x4122b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x412291c0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x412291c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41228778"/>
        <function-ref name="fired" scoped="" ref="0x41229d20"/>
        <function-ref name="get" scoped="" ref="0x41229808"/>
        <function-ref name="reset" scoped="" ref="0x41228010"/>
        <function-ref name="isOn" scoped="" ref="0x412289f0"/>
        <function-ref name="set" scoped="" ref="0x41229a80"/>
        <function-ref name="start" scoped="" ref="0x41228288"/>
        <function-ref name="stop" scoped="" ref="0x41228500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x411f5950" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411f5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x411f0418"/>
        <function-ref name="test" scoped="" ref="0x411f2f08"/>
        <function-ref name="get" scoped="" ref="0x411f2010"/>
        <function-ref name="setScale" scoped="" ref="0x411f0690"/>
        <function-ref name="getScale" scoped="" ref="0x411f0930"/>
        <function-ref name="reset" scoped="" ref="0x411f27a0"/>
        <function-ref name="overflow" scoped="" ref="0x411f2528"/>
        <function-ref name="isOn" scoped="" ref="0x411f01a0"/>
        <function-ref name="set" scoped="" ref="0x411f2288"/>
        <function-ref name="start" scoped="" ref="0x411f2a18"/>
        <function-ref name="stop" scoped="" ref="0x411f2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412642b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412642b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41264488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41264698" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41264698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x412611a0"/>
        <function-ref name="test" scoped="" ref="0x41262c90"/>
        <function-ref name="get" scoped="" ref="0x41264ce0"/>
        <function-ref name="setScale" scoped="" ref="0x41261418"/>
        <function-ref name="getScale" scoped="" ref="0x412616b8"/>
        <function-ref name="reset" scoped="" ref="0x41262528"/>
        <function-ref name="overflow" scoped="" ref="0x412622b0"/>
        <function-ref name="isOn" scoped="" ref="0x41262f08"/>
        <function-ref name="set" scoped="" ref="0x41262010"/>
        <function-ref name="start" scoped="" ref="0x412627a0"/>
        <function-ref name="stop" scoped="" ref="0x41262a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41267980" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41267980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x412660f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x412665e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41266370"/>
        <function-ref name="overflow" scoped="" ref="0x41266860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41266b40" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41266b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4125d600"/>
        <function-ref name="test" scoped="" ref="0x4125d110"/>
        <function-ref name="get" scoped="" ref="0x4125e200"/>
        <function-ref name="setScale" scoped="" ref="0x4125d878"/>
        <function-ref name="getScale" scoped="" ref="0x4125db18"/>
        <function-ref name="reset" scoped="" ref="0x4125e990"/>
        <function-ref name="overflow" scoped="" ref="0x4125e718"/>
        <function-ref name="isOn" scoped="" ref="0x4125d388"/>
        <function-ref name="set" scoped="" ref="0x4125e478"/>
        <function-ref name="start" scoped="" ref="0x4125ec08"/>
        <function-ref name="stop" scoped="" ref="0x4125ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4125abd0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4125abd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41259340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41259830"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x412595b8"/>
        <function-ref name="overflow" scoped="" ref="0x41259aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4125b980" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4125b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4125a0f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4125a5e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4125a370"/>
        <function-ref name="overflow" scoped="" ref="0x4125a860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x41256560" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x41256560"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x41256738"/>
        <function-ref name="offset" scoped="" ref="0x41256818"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x412568f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41280288" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41280288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41280460"/>
        <function-ref name="getPayload" scoped="" ref="0x41280540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41280620"/>
        <function-ref name="cancel" scoped="" ref="0x41280700"/>
        <function-ref name="sendDone" scoped="" ref="0x412807e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41280920" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41280920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41280af8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41280bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x41280cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41280d98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41280e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4127f010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4127f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4127f1e8"/>
        <function-ref name="source" scoped="" ref="0x4127f2c8"/>
        <function-ref name="address" scoped="" ref="0x4127f3a8"/>
        <function-ref name="destination" scoped="" ref="0x4127f488"/>
        <function-ref name="setSource" scoped="" ref="0x4127f568"/>
        <function-ref name="setDestination" scoped="" ref="0x4127f648"/>
        <function-ref name="type" scoped="" ref="0x4127f728"/>
        <function-ref name="setType" scoped="" ref="0x4127f808"/>
        <function-ref name="isForMe" scoped="" ref="0x4127f8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x4127f9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x4127faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4127fc08" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4127fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4127fde0"/>
        <function-ref name="noAck" scoped="" ref="0x4127fec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4127e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x417ac778" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x417ac778"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417ac950"/>
        <function-ref name="getPayload" scoped="" ref="0x417aca30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417acb10"/>
        <function-ref name="cancel" scoped="" ref="0x417acbf0"/>
        <function-ref name="sendDone" scoped="" ref="0x417accd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x417ace40" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x417ace40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417aa050"/>
        <function-ref name="getPayload" scoped="" ref="0x417aa130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417aa210"/>
        <function-ref name="cancel" scoped="" ref="0x417aa2f0"/>
        <function-ref name="sendDone" scoped="" ref="0x417aa3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x417aa510" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417aa510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417aa6e8"/>
        <function-ref name="source" scoped="" ref="0x417aa7c8"/>
        <function-ref name="address" scoped="" ref="0x417aa8a8"/>
        <function-ref name="destination" scoped="" ref="0x417aa988"/>
        <function-ref name="setSource" scoped="" ref="0x417aaa68"/>
        <function-ref name="setDestination" scoped="" ref="0x417aab48"/>
        <function-ref name="type" scoped="" ref="0x417aac28"/>
        <function-ref name="setType" scoped="" ref="0x417aad08"/>
        <function-ref name="isForMe" scoped="" ref="0x417aade8"/>
        <function-ref name="setGroup" scoped="" ref="0x417aaec8"/>
        <function-ref name="localGroup" scoped="" ref="0x417a9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41288100" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41288100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412882d8"/>
        <function-ref name="getPayload" scoped="" ref="0x412883b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41288498"/>
        <function-ref name="cancel" scoped="" ref="0x41288578"/>
        <function-ref name="sendDone" scoped="" ref="0x41288658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x41285010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41285010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412851f8"/>
        <function-ref name="getPayload" scoped="" ref="0x412852d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412853b8"/>
        <function-ref name="cancel" scoped="" ref="0x41285498"/>
        <function-ref name="sendDone" scoped="" ref="0x41285578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41286818" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41286818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41286a00"/>
        <function-ref name="getPayload" scoped="" ref="0x41286ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41286bc0"/>
        <function-ref name="cancel" scoped="" ref="0x41286ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x41286d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x41284310" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41284310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412844e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x412845c8"/>
        <function-ref name="getPayload" scoped="" ref="0x412846a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41284788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41284868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x412849e8" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x412849e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41284bc0"/>
        <function-ref name="runTask" scoped="" ref="0x41284ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x41284e20" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x41284e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41283010"/>
        <function-ref name="runTask" scoped="" ref="0x412830f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x412856b8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412856b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41285890"/>
        <function-ref name="source" scoped="" ref="0x41285970"/>
        <function-ref name="address" scoped="" ref="0x41285a50"/>
        <function-ref name="destination" scoped="" ref="0x41285b30"/>
        <function-ref name="setSource" scoped="" ref="0x41285c10"/>
        <function-ref name="setDestination" scoped="" ref="0x41285cf0"/>
        <function-ref name="type" scoped="" ref="0x41285dd0"/>
        <function-ref name="setType" scoped="" ref="0x41285eb0"/>
        <function-ref name="isForMe" scoped="" ref="0x41284010"/>
        <function-ref name="setGroup" scoped="" ref="0x412840f0"/>
        <function-ref name="localGroup" scoped="" ref="0x412841d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4127b058" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4127b058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
            <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4127a130"/>
        <function-ref name="maxSize" scoped="" ref="0x4127bb30"/>
        <function-ref name="empty" scoped="" ref="0x4127b680"/>
        <function-ref name="put" scoped="" ref="0x4127bd88"/>
        <function-ref name="size" scoped="" ref="0x4127b8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x417eea70" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x417eea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
            <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x417edb50"/>
        <function-ref name="maxSize" scoped="" ref="0x417ed568"/>
        <function-ref name="empty" scoped="" ref="0x417ed0b8"/>
        <function-ref name="put" scoped="" ref="0x417ed7c0"/>
        <function-ref name="size" scoped="" ref="0x417ed310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417ee6c8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417ee6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417ee8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x412783d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x412783d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
              <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x41277130"/>
        <function-ref name="enqueue" scoped="" ref="0x41277810"/>
        <function-ref name="element" scoped="" ref="0x41277b60"/>
        <function-ref name="maxSize" scoped="" ref="0x41278ea8"/>
        <function-ref name="dequeue" scoped="" ref="0x412774a0"/>
        <function-ref name="empty" scoped="" ref="0x412789f8"/>
        <function-ref name="size" scoped="" ref="0x41278c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41275408" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugMessagePool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41275408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
            <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x412b74e0"/>
        <function-ref name="maxSize" scoped="" ref="0x41275ee0"/>
        <function-ref name="empty" scoped="" ref="0x41275a30"/>
        <function-ref name="put" scoped="" ref="0x412b7150"/>
        <function-ref name="size" scoped="" ref="0x41275c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x417df960" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x417df960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
            <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x417ddaa8"/>
        <function-ref name="maxSize" scoped="" ref="0x417dd4c0"/>
        <function-ref name="empty" scoped="" ref="0x417dd010"/>
        <function-ref name="put" scoped="" ref="0x417dd718"/>
        <function-ref name="size" scoped="" ref="0x417dd268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417df5b8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417df5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417df790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x412b6748" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSendQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x412b6748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
              <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x412b54c0"/>
        <function-ref name="enqueue" scoped="" ref="0x412b5ba0"/>
        <function-ref name="element" scoped="" ref="0x412b5ef0"/>
        <function-ref name="maxSize" scoped="" ref="0x412b5268"/>
        <function-ref name="dequeue" scoped="" ref="0x412b5830"/>
        <function-ref name="empty" scoped="" ref="0x412b6d70"/>
        <function-ref name="size" scoped="" ref="0x412b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x412b2010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x412b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412b21e8"/>
        <function-ref name="getPayload" scoped="" ref="0x412b22c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412b23a8"/>
        <function-ref name="cancel" scoped="" ref="0x412b2488"/>
        <function-ref name="sendDone" scoped="" ref="0x412b2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x412b26a8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x412b26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412b2880"/>
        <function-ref name="payloadLength" scoped="" ref="0x412b2960"/>
        <function-ref name="getPayload" scoped="" ref="0x412b2a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412b2b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412b2c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x412b2d40" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412b2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x412b2f18"/>
        <function-ref name="source" scoped="" ref="0x412b1010"/>
        <function-ref name="address" scoped="" ref="0x412b10f0"/>
        <function-ref name="destination" scoped="" ref="0x412b11d0"/>
        <function-ref name="setSource" scoped="" ref="0x412b12b0"/>
        <function-ref name="setDestination" scoped="" ref="0x412b1390"/>
        <function-ref name="type" scoped="" ref="0x412b1470"/>
        <function-ref name="setType" scoped="" ref="0x412b1550"/>
        <function-ref name="isForMe" scoped="" ref="0x412b1630"/>
        <function-ref name="setGroup" scoped="" ref="0x412b1710"/>
        <function-ref name="localGroup" scoped="" ref="0x412b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x412b1950" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x412b1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x412b1b28"/>
        <function-ref name="noAck" scoped="" ref="0x412b1c08"/>
        <function-ref name="wasAcked" scoped="" ref="0x412b1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x417cd5b8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x417cd5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417cd790"/>
        <function-ref name="getPayload" scoped="" ref="0x417cd870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417cd950"/>
        <function-ref name="cancel" scoped="" ref="0x417cda30"/>
        <function-ref name="sendDone" scoped="" ref="0x417cdb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x417cdc80" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x417cdc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417cde58"/>
        <function-ref name="getPayload" scoped="" ref="0x41826010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418260f0"/>
        <function-ref name="cancel" scoped="" ref="0x418261d0"/>
        <function-ref name="sendDone" scoped="" ref="0x418262b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x418263f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x418263f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x418265c8"/>
        <function-ref name="source" scoped="" ref="0x418266a8"/>
        <function-ref name="address" scoped="" ref="0x41826788"/>
        <function-ref name="destination" scoped="" ref="0x41826868"/>
        <function-ref name="setSource" scoped="" ref="0x41826948"/>
        <function-ref name="setDestination" scoped="" ref="0x41826a28"/>
        <function-ref name="type" scoped="" ref="0x41826b08"/>
        <function-ref name="setType" scoped="" ref="0x41826be8"/>
        <function-ref name="isForMe" scoped="" ref="0x41826cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41826da8"/>
        <function-ref name="localGroup" scoped="" ref="0x41826e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionDebug" ref="0x412b0c50" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x412b0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x412b0e28"/>
        <function-ref name="logEventMsg" scoped="" ref="0x412b0f08"/>
        <function-ref name="logEventSimple" scoped="" ref="0x412ad010"/>
        <function-ref name="logEventRoute" scoped="" ref="0x412ad0f0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x412ad1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x412ad380" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x412ad380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x412ad558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTSend" ref="0x412a9ad8" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTSend" scoped="" ref="0x412a9ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412a9cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x412a9d90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412a9e70"/>
        <function-ref name="cancel" scoped="" ref="0x412a8010"/>
        <function-ref name="sendDone" scoped="" ref="0x412a80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x412ace80" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x412ace80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
              <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x412aabc0"/>
        <function-ref name="enqueue" scoped="" ref="0x412a9380"/>
        <function-ref name="element" scoped="" ref="0x412a96d0"/>
        <function-ref name="maxSize" scoped="" ref="0x412aa968"/>
        <function-ref name="dequeue" scoped="" ref="0x412a9010"/>
        <function-ref name="empty" scoped="" ref="0x412aa4b8"/>
        <function-ref name="size" scoped="" ref="0x412aa710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x412a49a0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x412a49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412a4b78"/>
        <function-ref name="runTask" scoped="" ref="0x412a4c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x412ad848" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x412ad848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
            <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x412ac930"/>
        <function-ref name="maxSize" scoped="" ref="0x412ac348"/>
        <function-ref name="empty" scoped="" ref="0x412ade70"/>
        <function-ref name="put" scoped="" ref="0x412ac5a0"/>
        <function-ref name="size" scoped="" ref="0x412ac0f0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40381a70" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4037de18" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40382508" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403823b0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4037fb50" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403841c0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40384068" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40384888" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40384730" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40384de0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403953e0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403957c8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40390b70" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40394010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40395010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40395ba0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40390430" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403907c0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402e88b0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402eb1c8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402e8cf0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402f2138" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402f2650" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x4035d418" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4036a010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40321798"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40366a50" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006/12/12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x404c94b8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x4047ece8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x404c90f8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x404beda8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404bea50" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x404bec48" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x404bf298" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c0f10" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404bf138" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x404be010" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404bfc58" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x404bfe80" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x404c0b10" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c09b8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x404be600" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404be4a8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x404bf870" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404bf718" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40477d58" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40477c00" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40482ae0" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40482988" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40477518" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404822a8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x404af7a8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
              <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404af260" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404af440" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404af620" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x404b2010" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b4c60" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404b4e40" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404b1b78" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b1818" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404b19f8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404b12b8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404b2c50" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b2af8" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404b0900" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b05a8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404b07a0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x404d0010" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404d0010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x404cec98" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404d0010"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x404d0ef8" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x404d04b0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x404ce538" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404d0010"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x404ce3e0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404d0010"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x404d09c0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x404cb950" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x404cb950"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x404cbe00" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x404de5d0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x404cb950"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x404de2a0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x404de470" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x404cb950"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x404e2070" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x404eb670" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404eb518" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x404ec878" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x404ec720" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x404e2cd8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x404e1570" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e11a8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x404e1410" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x404e2680" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x404e2528" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x404e0b60" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e07d0" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x404e0a00" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x404ec088" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x404ebf18" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x404e0018" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e1ea8" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x404dda10" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x404dd8b8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404ba908" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404ba3a8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404ba5c0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404ba7a0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404b5558" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b51f8" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404b53d8" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404b8c70" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404b65e0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b6488" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404b8368" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b8010" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404b8208" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x404804d0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40480998" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x404da678" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x404daac0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x404d9010" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x404d9880" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x404d8580" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404d8a28" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x404d9438" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404e5188" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x404e5030" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x404da250" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x404d9d00" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x404d8138" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x404c9e78" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404c9e78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x404c7090" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404c9e78"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x404c6010" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404c9e78"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x404c7df0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404c9e78"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40031740"/>
              <value-structured>
                <type-tag size="I:0" alignment="I:1"><attribute-ref name="one" ref="0x40031740"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x404c6908" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404c9e78"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x404c67b0" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x404c8c38" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x404c7738" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404c9e78"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x404c8338" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x404c8780" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404c4d10" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404c4d10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x404d5520" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404d72c8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x404d6460" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404d6118" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404d6300" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404d7c18" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x404d5e98" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x404d5968" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404d7758" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x404ca388" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404ca230" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x404d6e48" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404d6b00" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404d6ce8" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404caa20" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404ca8c8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404caef0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40536f20" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40536f20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40543418" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4054a610" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4054a610"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4054a778" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054a778"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4054ac60" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054a778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x405476a8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x405471a8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40547ad0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405407d0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405407d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40540938" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40540938"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4054cc78" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40540938"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4053d950" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4054c630" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40540938"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40540938"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4054c2e0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40540938"/></type-var>
          </variable>
          <variable name="dt" ref="0x4054c4d0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40540938"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4053ddc0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4054b138" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40540938"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4053d010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40540938"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40540e10" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40540938"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4053d4f0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x40556f28" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033dc78"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4033dea0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x4056c508" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033fcd0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4033fef8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x4055da10" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40341590"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403417b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x4056c058" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40341590"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403417b8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x4055dec0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40341590"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403417b8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x4056cb10" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033fcd0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4033fef8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x4056c9b8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033fcd0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4033fef8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x4055d558" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033dc78"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4033dea0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4055d400" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033dc78"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4033dea0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x40573010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x405734e0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x40565bc8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x405739a0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x405650f8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033be08"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x4033a048"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x405656e8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033be08"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4033a048"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40565590" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033be08"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4033a048"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x4055f938" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055f938"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40568858" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4056a808" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4055fe30" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055f938"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4056ac10" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40568cb8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4056a3c8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055f938"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4056a270" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055f938"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40568038" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40568430" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40555010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40555010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x405627c8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40564f20" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40555500" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40555010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40562d58" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40562c00" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40561210" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405642f8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40555ea8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405623a0" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40555a78" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40555010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40555920" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40555010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40564700" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40564af8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x4063c980" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x4063c4c0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40640e70" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40640978" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x4063d378" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4063aa40" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4063aa40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4063af10" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4064a700" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4063aa40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4064a3d0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4064a5a0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4063aa40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40647958" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40647038" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40638a08" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x406474e8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40646070" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40652848" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40652068" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40652290" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x406524b8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x406526d8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40651bc0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40651190" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40651380" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x40651588" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x406517e0" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x40651a48" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40641bd8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x406413f8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40641620" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40641848" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40641a68" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40654c20" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40654698" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40654348" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40654538" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x406598d8" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x4065d010" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4032fb08"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x4032fd90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x40658dc0" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40658c68" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40659d98" loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x4065ca78" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x4065d628" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4032fb08"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4032fd90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x4065d4d0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4032fb08"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4032fd90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x4065a2e8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x40658718" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406572a0" loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x4065ce78" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x4065ab70" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x4065a740" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x40659010" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x40658270" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x4065c168" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40335df0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403341e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x4065c010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40335df0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403341e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x406594d8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x4065db10" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40335df0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403341e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x4065c618" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x406579f0" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40657898" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4064b070" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4064b558" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x406a0a90" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4069d090" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4069b740" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x406af138" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4069b210" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4069bc50" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x406af710" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x4069e998" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x4069ee98" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x406a8e20" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4069c768"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406a8cc8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4069c768"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x406aba98" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x406a8188" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4069c768"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406a8030" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4069c768"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x406a8738" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x4069c768"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x406ee4d8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x40745ae0" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40745988" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x407479d8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40747880" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x40748ac0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x40748968" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x407483e0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x40748288" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x40747168" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x40747010" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x407452b8" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40745160" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40755010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40744bc8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40744de0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40733738" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407335e0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4073d168" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073d010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4073b208" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073ce88" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4073b088" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4073c8a0" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4073ddc8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073da88" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4073dc68" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x40738438" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407380e0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x407382d8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x40738ac0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40738968" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x40732bf0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40732a98" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x407371c0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40737068" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40736380" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40736228" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40736e78" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40736d20" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40735950" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407357f8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40758ab8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40758960" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x4074ae38" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4074aaa0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x4074acd8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x40758168" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40758010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x40742ab8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40742720" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40742958" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40757438" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407572e0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4072cc50" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404a24a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4072caf8" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4072f5d0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4072f478" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40731518" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40731bb0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40731a58" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40730ed0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40730b68" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40730d70" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x407301e8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4072fe50" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40730088" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4072b5f0" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4072b498" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4072c170" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4072bdf8" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4072c010" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404a2248"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4072da90" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4072d938" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x407408e8" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404a24a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40740588" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40740788" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404a24a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x407291a8" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404a24a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x4073fdc8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073fc70" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x4075cb20" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x4075c7b8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x4075c9c0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x4075dd90" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x4075d7b0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x4075d3c0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x4075d650" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x40760010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4074de78" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x4075c338" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x4075f438" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x4075f2e0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x407609a8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40760850" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x4075b640" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x4075fe28" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x4075fcd0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x4075b0f8" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x40760e00" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x4074d9c8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40760420" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x4075f878" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40759660" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40759ed0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40759ad0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404a24a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40759170" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404a24a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40764de0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404a24a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40759010" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x407631a8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x40478868"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x4047d880"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40763010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x40763c38" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x4047df40"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x40488e90"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40763aa0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x407b5358" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407b5010" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x407b51f8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x407b5e80" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x407b3598" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x407b4d98" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x407b3250" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407b3430" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x407b48a8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407b4550" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x407b4748" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x407b59a8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x407b5850" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x407b02c8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x407a2dd0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x407b9310" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x407b7610" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x407b71a8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x407a1490" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x407a1e28" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x407b9828" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x407b9ce8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x407a1998" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x407c6310" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x407ad498" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x407ade80" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x407add28" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x407ad8b0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x407b18e0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x407b1788" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x407ad010" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x407b1df0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x408076d8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40478508"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40807580" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40807d70" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40478508"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40807c18" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x40806ba8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40478508"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x407ef778" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40478508"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x407f5f20" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x407ef410" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x407ef610" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x407ee578" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40478508"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x407efd20" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x407ee210" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x407ee410" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x407f38e0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407f3480" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x407f3070" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x407f6af0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x408603a8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403558e0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40355b08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x40863dc8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40347c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40347e58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40863c70" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40347c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40347e58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x408628b8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034e398"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4034e5c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x40866738" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40343aa8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40343cd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40862ec8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034e398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4034e5c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40862d70" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034e398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4034e5c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x408609b8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403558e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40355b08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40860860" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403558e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40355b08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x40863138" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034d2c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4034d4e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x40866c58" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40347c30"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40347e58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x40863780" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40343aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40343cd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40863628" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40343aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40343cd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x408623f8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034d2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4034d4e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x408622a0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034d2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4034d4e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40865be0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40865be0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x4085c6e0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x4085c588" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4085dce8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4085e0f8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40865be0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x4085ec48" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40865be0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4085eaf0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40865be0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4085d0c8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4085c158" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4085e670" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40865be0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4085e518" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40865be0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4085d4d0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4085d8c8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40950e30" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4094b840" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x4094b3f8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x4094b2a0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40950928" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4095ad28" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40957c80" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4095a930" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x409577b8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x40957660" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x4095a528" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x409571a8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x409663d8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x409b9010" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409bac00" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x409bae00" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x409d8730" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409d81d0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x409d83d0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x409d85c8" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x409b8970" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40478508"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409b8610" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x409b8810" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x409ba370" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40478508"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409ba010" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x409ba210" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x409b9db8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409b9858" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x409b9a58" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x409b9c50" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x409a8580" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x409a8a70" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x409a6010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x409e93e0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x409c9e58" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x409e9088" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x409e9278" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x409e8a38" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x409e82b8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x409e84d0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x409e86c0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x409e88c8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x409c9020" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x409cceb8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40a371a8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40a318d8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40a34a00" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40a31ec0" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40a31d68" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40a38d28" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40a339d8" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40a33880" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40a35c20" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40a35ac8" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40a37a38" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40a2e010" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a2fe38" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40a34090" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40a30868" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40a30710" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40a2f138" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40a31490" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40a31338" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40a2fa00" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40a33010" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40a34e38" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a35010" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a37e78" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40a345e0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40a34488" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40a33e88" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40a30308" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40a30c78" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40a2f590" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40a33448" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40a375d0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40a355d8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a35480" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x40b431d8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40b543e8" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b543e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40b54550" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b54550"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40b50748" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b54550"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b505f0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40b51200" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b510a8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40b54bd8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b54a80" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b51cc0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b54550"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b51950" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40b51b60" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b54550"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40b68b50" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40b685d0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x40b689f0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x40b68138" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x40b6bc68" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40b6bb10" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x40b4cba8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b4ca50" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40b4c2a0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b4c148" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40b49d80" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b49c28" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b49498" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b49340" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40c5a010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40c5a010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40c5a660" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40c5a010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40c5a508" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40c5a010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerCycle" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PowerCycle.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PowerCycle.nc">
        <short>&#10; Manage the CC2420's duty cycle and power management&#10; </short>
        <long>&#10; Manage the CC2420's duty cycle and power management&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSleepInterval" ref="0x40cb5a98" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; </short>
          <long>&#10; @return the sleep interval in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="detected" ref="0x40cb5e80" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; </short>
          <long>&#10; @deprecated Should be removed in the future when the PowerCycle&#10;     component does packet-level detects and is in full control of radio&#10;     power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSleepInterval" ref="0x40cb5598" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; Set the sleep interval, in binary milliseconds&#10; </short>
          <long>&#10; Set the sleep interval, in binary milliseconds&#10; @param sleepIntervalMs the sleep interval in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x40cb5440" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PowerCycle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x40d8a800" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40d8a6a8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x40d877b0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40d87030" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40d87220" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x40d87438" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x40d87640" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x40d88010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40d8ac60" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x40d8ae50" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x40d863e8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40d87c08" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x40d87e20" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x40d86068" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x40d86278" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x40d88bc0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40d88450" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x40d88650" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x40d88850" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x40d88a50" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x40d6d0a0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d70b68" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40d70d48" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d70f28" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x40d8fd48" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40d8fbf0" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x40d91448" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x40d8f718" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x40d929b0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40d923f0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the path quality metric for the current path to the root&#10; through the current parent.</short>
          <long>&#10; Get the path quality metric for the current path to the root&#10; through the current parent.  The pointer is allocated by the&#10; caller.  If the parent is invalid, return FAIL (no info).  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x40d92298" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x40d92f00" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x40d91c90" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40d91928" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x40d91b30" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x40d8e988" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40d8e830" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40d6cd50" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x40d6cbf8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x40d8e398" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40d8e240" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x40d8f2b0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40d8f158" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x40d6ad18" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x40d8c2f0" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x40d8c198" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007/11/28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x40d977b8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d97460" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40d97658" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x40d682b0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40d75388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d69eb0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40d68150" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40d75388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40d67cd0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d67980" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40d67b70" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x40d65a08" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d656a0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40d658a8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40d69a90" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40d75388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d696f0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40d69930" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40d75388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40d675a0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d67448" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x40d652a0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d65148" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40d96480" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d96148" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40d96320" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40d692d0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40d75388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d6eeb8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40d69170" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40d75388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x40d944b0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40d94140" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x40d94350" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x40d68830" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d686d8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40d97010" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d65ea0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x40d96cc0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40d96950" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x40d96b60" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40d97d40" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d97be8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x40d67010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d68c10" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x40d68df0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x40d8b500" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404c01b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2007/11/16 23:14:49 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x40daa2f8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40daa1a0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x40dab740" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40dab5e8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x40daa8a8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40daa750" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x40dab168" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40dab010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40da9418" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40da92c0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x40daae68" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40daad10" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x40dabd30" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40dabbd8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x40dafb30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40daf9d8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40db15a0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40db15a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x40db1b60" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40db15a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40db1a08" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40db15a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40de05b8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x40de0168" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40db15a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40de0010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40db15a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006/12/12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x40dbd138" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x40dbd4f0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x40dc0c10" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x40dbd888" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table given the&#10; white bit.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table given the&#10; white bit. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2008/06/04 04:30:41 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x40ed5388" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ed8920" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40ed8da8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ed5010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="white_bit" ref="0x40ed5218" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 04:30:41 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x40f8bad0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f8b978" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40fc2bf0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fc28b0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40fc2a90" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40f8b390" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40d75388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f8b010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40f8b230" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40d75388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40fc2318" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fc21c0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40f8d998" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40d75388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f8d618" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40f8d838" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40d75388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x40f8aba8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f8a840" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40f8aa48" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40f8a288" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404a2700"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f8a130" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x40f8d060" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40d75388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f90cb0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40f90ed0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40d75388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x410951c8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41097e10" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x41095068" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x4109af10" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x41097800" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41097488" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404a7a28"/>
                <typename><typedef-ref name="message_t" ref="0x404b47d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x410976a0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x410c3168" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x410c8d18" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x410ce7f0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x410c7468" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x410c6588" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410c6430" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x410c7990" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x410cef20" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410cedc8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x410c6a90" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x410c7ef0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x410cd878" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x410cde40" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x410cd268" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x410cd110" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x410cc628" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x410cc4d0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x410cf7b0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x410ca010" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410cfe40" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x410ca6a8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x410ca550" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x41156480" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x41156130" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41156320" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x41154908" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x411547b0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x41152170" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x41154dc0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41152010" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x41155cc0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x41151010" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x41152a98" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41152c88" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x41152e80" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x411542f8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x41155370" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x41156d90" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41155010" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x41155208" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4117f010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x41182e78" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x4117f8a8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4117f540" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x4117f748" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x41171010" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x41172738" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x411705f8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x411704a0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x41171cc8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x41175e70" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x41172300" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x41172b78" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x41171410" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x41171918" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x411717c0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x411700c8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
