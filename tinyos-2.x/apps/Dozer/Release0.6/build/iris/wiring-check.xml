<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="30:uAgriC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40f11ec0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4038c188"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4038c188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4038d548"/></to>
    </wire>
    <wire loc="31:uAgriC.nc">
      <from><interface-ref name="RoutingInit" scoped="" ref="0x40f0eb50"/></from>
      <to><interface-ref name="RoutingInit" scoped="" ref="0x404b3210"/></to>
    </wire>
    <wire loc="34:DozerC.nc">
      <from><interface-ref name="RoutingInit" scoped="" ref="0x404b3210"/></from>
      <to><interface-ref name="RoutingInit" scoped="" ref="0x404fe860"/></to>
    </wire>
    <wire loc="32:uAgriC.nc">
      <from><interface-ref name="DataQueueManage" scoped="" ref="0x40f0ef00"/></from>
      <to><interface-ref name="DataQueueManage" scoped="" ref="0x404b0330"/></to>
    </wire>
    <wire loc="102:DozerC.nc">
      <from><interface-ref name="DataQueueManage" scoped="" ref="0x404b0330"/></from>
      <to><interface-ref name="DataQueueManage" scoped="" ref="0x40e6e3d0"/></to>
    </wire>
    <wire loc="33:uAgriC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f0d350"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ee8b10"/></to>
    </wire>
    <wire loc="36:uAgriC.nc">
      <from><interface-ref name="SamplerInit" scoped="" ref="0x40f102d0"/></from>
      <to><interface-ref name="SamplerInit" scoped="" ref="0x40ee7dc0"/></to>
    </wire>
    <wire loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerInit" scoped="" ref="0x40ee7dc0"/></from>
      <to><interface-ref name="SamplerInit" scoped="" ref="0x40f5ed80"/></to>
    </wire>
    <wire loc="37:uAgriC.nc">
      <from><interface-ref name="SamplerControl" scoped="" ref="0x40f10718"/></from>
      <to><interface-ref name="SamplerControl" scoped="" ref="0x40f5f280"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerControl" scoped="" ref="0x40f5f280"/></from>
      <to><interface-ref name="SamplerControl" scoped="" ref="0x40f5b2a0"/></to>
    </wire>
    <wire loc="38:uAgriC.nc">
      <from><interface-ref name="Sample" scoped="" ref="0x40f0ad68"/></from>
      <to><interface-ref name="Sample" scoped="" ref="0x40f5f878"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Sample" scoped="" ref="0x40f5f878"/></from>
      <to><interface-ref name="Sample" scoped="" ref="0x40f5b8b8"/></to>
    </wire>
    <wire loc="41:uAgriC.nc">
      <from><function-ref name="PlugPlay" scoped="" ref="0x40f0e920"/></from>
      <to><function-ref name="PlugPlay" scoped="" ref="0x40f5e400"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><function-ref name="PlugPlay" scoped="" ref="0x40f5e400"/></from>
      <to><function-ref name="PlugPlay" scoped="" ref="0x40f5a400"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417ea798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417b3120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41731630"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416e0860"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40d24920"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40d204c0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d04398"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c07558"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41606d88"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x409bc670"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40989f08"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4077c970"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40920a08"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408fbcb0"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x408d2010"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4038d8e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402eb408"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402eb408"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403634f8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4038dea8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a43ec0"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4038dea8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x409bc010"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4038dea8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40386ef0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40386ef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40394168"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047f2f0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4038eec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410173b8"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4038eec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ddb440"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4038eec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4073a860"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4038e760"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4046da60"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40394950"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4046d6b0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40394548"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b5fe48"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40394548"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40398c18"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40398c18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40397ba0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40397010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4038eec0"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x4039f218"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403a34b0"/></to>
    </wire>
    <wire loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403a34b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403eff28"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4039fc08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40397010"/></to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403c2750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40447e98"/></to>
    </wire>
    <wire loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403b4d08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4040ad30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4040ad30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41490010"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403b72f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40414ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40414ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414a0228"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403bb4b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40415410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40415410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41503c08"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403a28e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403ed250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403ed250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413b4010"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403bc0a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40416090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40416090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415077f8"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403abce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403f2228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403f2228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41423de8"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403ae4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403fee48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403fee48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4142fd70"/></to>
    </wire>
    <wire loc="159:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403b2c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40408988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40408988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4148a010"/></to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403bf210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404127d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404127d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4149b0b0"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403a5670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403f0250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403f0250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413bdc78"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403a9c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403fbe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403fbe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4141bc08"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403ac2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40405ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40405ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4142ac08"/></to>
    </wire>
    <wire loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403baa98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404066b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404066b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41485010"/></to>
    </wire>
    <wire loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403c32f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4041d170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4041d170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414fea88"/></to>
    </wire>
    <wire loc="185:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403c0830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4044a6c0"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403b9ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4040b790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4040b790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414a4de0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403eff28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413b8ac8"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403a7b18"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403f9ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403f9ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41415a88"/></to>
    </wire>
    <wire loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403c13d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404446c0"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403af010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403ffb00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403ffb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41432938"/></to>
    </wire>
    <wire loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403b3750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404096b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404096b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4148f9e8"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403b7ce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404134f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404134f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4149fc08"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403bbea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40415d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40415d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415016c0"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403ab2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403edba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403edba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414029e8"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403aa750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403f2b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403f2b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4141e7f8"/></to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403aeea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403fd7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403fd7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4142d7f8"/></to>
    </wire>
    <wire loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403b1670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40407330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40407330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414899e8"/></to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403bfc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40411170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40411170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4149aa88"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403a40a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403f0ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403f0ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413bb718"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403a8670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403fa7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403fa7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414196c0"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403acce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404044f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404044f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414286c0"/></to>
    </wire>
    <wire loc="180:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403c3ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4041dac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4041dac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414fc538"/></to>
    </wire>
    <wire loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403b4210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4040a3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4040a3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41492538"/></to>
    </wire>
    <wire loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403b88e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40414170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40414170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414a27f8"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403bca98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404169e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404169e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41504228"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403c92f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40453e98"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403a3ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403ee890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403ee890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413b6570"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403b0590"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403f84f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403f84f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41413538"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403bd670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404176f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404176f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4150cde8"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403afa08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403fe4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403fe4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414303b0"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403b2210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40408030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40408030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4148d538"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403b6750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40413e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40413e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4149d6c0"/></to>
    </wire>
    <wire loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403c48e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4041e790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4041e790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414ff0b0"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x40396c20"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403f18e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403f18e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413be2b0"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403a9210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403fb4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403fb4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4141c228"/></to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403ad8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40405170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40405170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4142b228"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403ba0a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40407c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40407c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41487538"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403c1dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4044de98"/></to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403b94b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4040cdc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4040cdc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414a5418"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403b5750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40404e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40404e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414720b0"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403a4a98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403ef5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403ef5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x413b90f8"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403a7120"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403f9170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403f9170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414160b0"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40363d30"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403629c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40359278"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403765e0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407dea30"/></to>
    </wire>
    <wire loc="35:DataManagerC.nc">
      <from><interface-ref name="DataQueueManage" scoped="" ref="0x40e6e3d0"/></from>
      <to><interface-ref name="DataQueueManage" scoped="" ref="0x40e91d00"/></to>
    </wire>
    <wire loc="35:DozerC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x404bade0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405741d0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405741d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405a48c0"/></to>
    </wire>
    <wire loc="36:DozerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x404d6df8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40572288"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40572288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405a2c80"/></to>
    </wire>
    <wire loc="45:DozerC.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x404e2c38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b5c8b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40b5c8b8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:DozerC.nc">
      <from><interface-ref name="BeaconWaitTimer" scoped="" ref="0x404e0010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b816c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40b816c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:DozerC.nc">
      <from><interface-ref name="ConnReqListenTimer" scoped="" ref="0x404eb400"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b7d5a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40b7d5a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:DozerC.nc">
      <from><interface-ref name="ConnRepWaitTimer" scoped="" ref="0x404e9798"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b7a3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40b7a3d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:DozerC.nc">
      <from><interface-ref name="NeighbourUpdateTimer" scoped="" ref="0x404e6bf8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b76238"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40b76238"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:DozerC.nc">
      <from><interface-ref name="NeighbourUpdateStopTimer" scoped="" ref="0x404f0030"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b72188"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40b72188"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:DozerC.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x404dcb80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40bcd9d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40bcd9d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41622c28"/></to>
    </wire>
    <wire loc="55:DozerC.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x404dae08"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bc9f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40bc9f28"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40573480"/>
      <arguments>
        <value cst="I:50">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:DozerC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x404af518"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40bc4760"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40bc4760"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c078f0"/></to>
    </wire>
    <wire loc="61:DozerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x404ed090"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40777470"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40777470"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40852970"/></to>
    </wire>
    <wire loc="63:DozerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x404f8ef0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409892a8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x409892a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409a5cf8"/></to>
    </wire>
    <wire loc="64:DozerC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x404fc208"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40981990"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40981990"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x409a5438"/></to>
    </wire>
    <wire loc="65:DozerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40504b18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b4e4f0"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40b4e4f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b4bbe0"/></to>
    </wire>
    <wire loc="69:DozerC.nc">
      <from><interface-ref name="TDMASchedule" scoped="" ref="0x404ff6f8"/></from>
      <to><interface-ref name="TDMASchedule" scoped="" ref="0x40df6ac8"/></to>
    </wire>
    <wire loc="77:DozerC.nc">
      <from><interface-ref name="PPBListenTimer0" scoped="" ref="0x40df2030"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40df4760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40df4760"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:DozerC.nc">
      <from><interface-ref name="PPBListenTimer1" scoped="" ref="0x40def3f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e53670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e53670"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:DozerC.nc">
      <from><interface-ref name="PPBListenTimer2" scoped="" ref="0x40ded778"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e50458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e50458"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:DozerC.nc">
      <from><interface-ref name="PPBListenTimer3" scoped="" ref="0x40deabb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e4c330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e4c330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:DozerC.nc">
      <from><interface-ref name="TDMAScheduleTimer" scoped="" ref="0x40de6010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e49168"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e49168"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:DozerC.nc">
      <from><interface-ref name="TDMASlotTimer" scoped="" ref="0x40de43d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e79010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e79010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:DozerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40e13768"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40777470"/></to>
    </wire>
    <wire loc="86:DozerC.nc">
      <from><function-ref name="chooseParent" scoped="" ref="0x40df3ce0"/></from>
      <to><function-ref name="chooseParent" scoped="" ref="0x404fee50"/></to>
    </wire>
    <wire loc="87:DozerC.nc">
      <from><interface-ref name="SchedulerInit" scoped="" ref="0x404ed9c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40df36e0"/></to>
    </wire>
    <wire loc="89:DozerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40e12040"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409892a8"/></to>
    </wire>
    <wire loc="90:DozerC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40e12620"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40981990"/></to>
    </wire>
    <wire loc="91:DozerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e12eb0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b4e4f0"/></to>
    </wire>
    <wire loc="104:DozerC.nc">
      <from><interface-ref name="TDMASchedule" scoped="" ref="0x40e6f3a8"/></from>
      <to><interface-ref name="TDMASchedule" scoped="" ref="0x40df6ac8"/></to>
    </wire>
    <wire loc="105:DozerC.nc">
      <from><function-ref name="chooseParent" scoped="" ref="0x40e6e1a8"/></from>
      <to><function-ref name="chooseParent" scoped="" ref="0x404fee50"/></to>
    </wire>
    <wire loc="107:DozerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e71448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40572288"/></to>
    </wire>
    <wire loc="108:DozerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e74cf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4056daf0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4056daf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405a2590"/></to>
    </wire>
    <wire loc="111:DozerC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40e70878"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40efa288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40efa288"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416cf768"/></to>
    </wire>
    <wire loc="115:DozerC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x40e70118"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ef75c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40ef75c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416fb6e0"/></to>
    </wire>
    <wire loc="116:DozerC.nc">
      <from><interface-ref name="DataReceive" scoped="" ref="0x40e6f010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ef4540"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40ef4540"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40573480"/>
      <arguments>
        <value cst="I:51">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:TreeP.nc">
      <from><interface-ref name="send_beacon" scoped="" ref="0x4050ed78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="378:TreeP.nc">
      <from><interface-ref name="sendReply" scoped="" ref="0x405359b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="366:TreeP.nc">
      <from><interface-ref name="sendRequest" scoped="" ref="0x40538400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405a48c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408a5600"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40579ea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405a63a0"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405a63a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4062bb30"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40574aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405a31b0"/></to>
    </wire>
    <wire loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405a31b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4086d6b0"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40573b18"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x405a2238"/></to>
    </wire>
    <wire loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405a2238"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4087f798"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405a2590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405b41f0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4057f500"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4059f010"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4059f010"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408b0628"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40573480"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405a3b70"/></to>
    </wire>
    <wire loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405a3b70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4087f100"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40577518"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a1a10"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a1a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406115b0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405a2c80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405b48e0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x405894a0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405a99b0"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405a99b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4062c178"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x408a5600"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x408c0db8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x405aa4d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x4061f4d8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4061f4d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40635390"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405b41f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40625350"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x405ab0f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x406210f0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x406210f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40623010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408b0628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408b2dd8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4062c178"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4062f100"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x405acce0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40611ca0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40611ca0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40625c00"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406115b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40628de0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405b48e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4067c288"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4062bb30"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4062eaf8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x405de978"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x40626470"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x40626470"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x4067b480"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405cb7d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405b41f0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x405ec978"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4084ce68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40877510"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x405cd418"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4087e750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4067c288"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4067c288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40677288"/></to>
    </wire>
    <wire loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40878b98"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4089d460"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4089d460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4089b720"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4087e3e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4089db40"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4089db40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4089be00"/></to>
    </wire>
    <wire loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4089c660"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408d8cd8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408d8cd8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408fb170"/></to>
    </wire>
    <wire loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4089cdc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408b0310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x408b0310"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408beac8"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408fe640"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x405b7de0"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408ff950"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408a5bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x408a5bb8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408be410"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x408c0db8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408daa70"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408daa70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408d5930"/></to>
    </wire>
    <wire loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408be410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408d7090"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408d7090"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408d2358"/></to>
    </wire>
    <wire loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408beac8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408d7770"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408d7770"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408d2a38"/></to>
    </wire>
    <wire loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408d6c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405b41f0"/></to>
    </wire>
    <wire loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408d6290"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409421f0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409421f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4093f770"/></to>
    </wire>
    <wire loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408d67e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408ff470"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408ff470"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408fb888"/></to>
    </wire>
    <wire loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408d7b40"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40942ba8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40942ba8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x4093c1b8"/></to>
    </wire>
    <wire loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408fe168"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40942748"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40942748"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4093fcc8"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409406d0"/></from>
      <to><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x405c3978"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40941428"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409851f8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409851f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409833d8"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40941a08"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40985750"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40985750"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40983930"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40941ee0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409c3890"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409c3890"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409bc9f0"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40984788"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405d1278"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40985c60"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409664a8"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409664a8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4099b9c8"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40984258"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40966a00"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40966a00"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4099bf20"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4099ca18"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x405b96e0"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40966f10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409a7708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x409a7708"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x409a6e48"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4099c510"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409c0568"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409c0568"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409bb708"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409c5c40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x405cde40"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x409a6e48"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409c0010"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409c0010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409bb1b0"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x409c7788"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409c09b8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409c09b8"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409bbb58"/></to>
    </wire>
    <wire loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0x409c0e50"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0x405bf1a8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketSleepInterval" scoped="" ref="0x4061e8a8"/></from>
      <to><interface-ref name="PacketSleepInterval" scoped="" ref="0x40634800"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4061cc90"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40632bc8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x4063f310"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x40626470"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4063d330"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4066ad30"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4066ad30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4076e3d0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x4063dd68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406c5a68"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x406c5a68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40777470"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40673860"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406c4060"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4076ed68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406ce490"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407506f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406c9d08"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406c9d08"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40747470"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40746630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d51b8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406d51b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406efad0"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406e5c40"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406ebdb0"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x406e0a28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406e9b28"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406f0628"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x406e7a80"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406f0628"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x406fa6a0"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406f0628"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x406f8340"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4073ac48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d51b8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40779158"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4082aea8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4077c970"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40775b10"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40775b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40781d88"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40856220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408150a0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4082e398"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40785390"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40785390"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40814270"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40851360"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40784010"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40784010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40813cd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40813cd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x415b3cd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40781d88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4155fd78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40814270"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4155e270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x415b2e90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407d3128"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407d3128"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407c90e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x415ae090"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407d0408"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x407d0408"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407c73b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x415aea78"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407d0f28"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407d0f28"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407c7ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x415ac4b8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407cead0"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x407cead0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407dee90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x4082cd08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x408534b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4084ce68"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40862b60"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x408659c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a38810"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4085f470"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x408659c8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40875740"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40861b18"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40881e28"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4089c010"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40898970"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4089c660"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40897130"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4089cdc8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x408974d0"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x40626470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x408c1150"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x408c0920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x408c2150"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x408c18d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x408c1568"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408bee00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408c2cc0"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x408c0508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x408c27e8"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x408c0010"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408d2e08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x408d7b40"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x408d1518"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40861b18"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408d1b30"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408d6290"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408d00e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408d67e8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408d0518"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408d6c20"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x408e8430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x408e3ae0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x408eee08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x409129c8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408fdde8"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x408fdde8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40920da0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40910a00"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4091f848"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4091f848"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4091d860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408f90c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408ff950"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408f9868"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408fe168"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x408f9ce0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408fe640"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4093b4b8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40941428"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4093ba98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40941a08"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x4093a010"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40941ee0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4093c970"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409406d0"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4093a808"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40959918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40959918"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40937a70"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408fdde8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x409361f8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4096b850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4096b850"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4091d860"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x409367f8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40861b18"/></to>
    </wire>
    <wire loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <from><interface-ref name="startStopTimer" scoped="" ref="0x4095ca50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40779158"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40983e40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40985c60"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4097f540"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40984788"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40980458"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40984258"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409808b8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4084ce68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4097f010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409892a8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x4097b508"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40981470"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40989f08"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40998448"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40966f10"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40998a28"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4099c510"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0x409975e0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4099ca18"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40998e88"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4084ce68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x409875b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409c7c20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409a6010"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409c7788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x409a7070"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x409a6790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40987b68"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409c5250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x409a8548"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408b2dd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409a6428"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409c5c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409a7be0"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x409c7370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x409a8230"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409c5908"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0x409e7c98"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0x409c0e50"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x409d5bb0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40611ca0"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409cc010"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x406210f0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x409cb390"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x4061f4d8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409ca800"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4061cc90"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409c8be0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4062c178"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409e73d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4066ad30"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409e6c18"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4084ce68"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a38810"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b1ac88"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x409ba090"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x409bd540"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x409bd540"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403abce8"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409d8b30"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40a3b010"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a3b010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a74190"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x409b9b68"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a3b6f0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a3b6f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a755e8"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0x409d32f0"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0x40a36278"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0x40a36278"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0x40a41258"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x409d3a48"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40a3bac8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a3bac8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403b0590"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x409d64a0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40a39580"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a39580"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403a28e0"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x409d0650"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a38010"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a38010"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a43838"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x409e65f8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40861b18"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x409d5010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b43e48"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a755e8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a6d628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40b1ac88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x415edc18"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40a63950"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403ba0a0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40a623d8"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403b2c08"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40a41b38"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406e0a28"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a6fa28"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a6d9a0"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a75268"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a6d2c8"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a74190"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a6c100"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40a6a010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ae28c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ae28c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41603180"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a80678"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40afa438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40afa438"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41603cc8"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40a84320"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40aa30c0"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40aa30c0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40a9f4a0"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a80af8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40379010"/></to>
    </wire>
    <wire loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40a98860"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40a9ac00"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40379010"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40a9d338"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403abce8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40a9dd10"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403aa750"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40a9c740"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403a9210"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40a9a200"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x403a9c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40afa030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x416038c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41601218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40afa8e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41601640"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41604170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41601c38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x415eb630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d51b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x415e9880"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406f0628"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b5fe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b4b898"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40b47940"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40b60010"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40b60010"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403a40a0"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40b463c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40b60a18"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40b60a18"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403a5670"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40b46da8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40b5f4c0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40b5f4c0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x40396c20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40bcc150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4056daf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40bcc7e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40572288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40bcb410"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40577518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4161e340"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ba9100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4161e9d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40572288"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40ba9100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bd3010"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40bd3780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40574aa8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40bd3e28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40572288"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40bd2a50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4056daf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40bd0190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40bd05c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40bc8250"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4056daf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40bc88e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40572288"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c078f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c17898"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40bc1100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40be6738"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40bc1e18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40be5d88"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bc1ac0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40be6e78"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40be8230"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c094d0"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40be9528"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40be51b0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40c07558"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c17500"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c013f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40be8768"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c099f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c047e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c08170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c041d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40bffea8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40dcd730"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c047e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40cac988"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c041d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cac5c8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40cce138"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40bffea8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c37d78"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c013f0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ccc150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c013f0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40cc6260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c013f0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40cce620"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40c3b2a8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40cceaf8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40c3d068"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40c374f0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40cca678"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40c35ad0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40cdf010"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40cdf010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d08cb8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40cee990"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40cdf490"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40cdf490"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d07648"/></to>
    </wire>
    <wire loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40c5f4e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40c52f00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40c60300"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40c5c1e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x40cccd68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40ccb270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40d082b0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40d071c8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40d071c8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40d04ae8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40d07648"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40d04f00"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40d08cb8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d046d0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d060d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d7d628"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d7d628"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d77a10"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d0ac88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d060d0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40d037b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40d27560"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40d27560"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40d24d70"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40d03be8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40d27a70"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40d27a70"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40d21368"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40d0a050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40d26010"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40d26010"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40d21880"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40d25670"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40d51390"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40d26c20"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40d20910"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40d25178"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40d20e40"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40d50010"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4038e760"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40d50750"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40379010"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40dd1cd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40d76088"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d76088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ddda68"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40dd6c48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d75aa8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d75aa8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d97230"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40d71db0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40d94530"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40d6fb28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40d93258"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40d6dd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40d91128"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40d6dd50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40d8fd20"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40d6dd50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40d8d950"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ddb828"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d75aa8"/></to>
    </wire>
    <wire loc="37:DataManagerC.nc">
      <from><interface-ref name="TDMASchedule" scoped="" ref="0x40e6ecd0"/></from>
      <to><interface-ref name="TDMASchedule" scoped="" ref="0x40e6f3a8"/></to>
    </wire>
    <wire loc="38:DataManagerC.nc">
      <from><function-ref name="chooseParent" scoped="" ref="0x40e6bb08"/></from>
      <to><function-ref name="chooseParent" scoped="" ref="0x40e6e1a8"/></to>
    </wire>
    <wire loc="40:DataManagerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e6bcb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40e74cf8"/></to>
    </wire>
    <wire loc="41:DataManagerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e6a448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40e71448"/></to>
    </wire>
    <wire loc="42:DataManagerC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x40e69118"/></from>
      <to><interface-ref name="DataSend" scoped="" ref="0x40e70118"/></to>
    </wire>
    <wire loc="43:DataManagerC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40e69878"/></from>
      <to><interface-ref name="SerialSend" scoped="" ref="0x40e70878"/></to>
    </wire>
    <wire loc="44:DataManagerC.nc">
      <from><interface-ref name="DataReceive" scoped="" ref="0x40e68010"/></from>
      <to><interface-ref name="DataReceive" scoped="" ref="0x40e6f010"/></to>
    </wire>
    <wire loc="46:DataManagerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e91060"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b4e4f0"/></to>
    </wire>
    <wire loc="51:DataManagerC.nc">
      <from><interface-ref name="DataMessagePool" scoped="" ref="0x40e90af0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40ecb5b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40ecb5b0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416e0c08"/></to>
    </wire>
    <wire loc="52:DataManagerC.nc">
      <from><interface-ref name="DataQueue" scoped="" ref="0x40e96858"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40eb30f0"/></to>
    </wire>
    <wire loc="156:DataManagerP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x40eb02a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:DataManagerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40e7f658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:DataManagerP.nc">
      <from><interface-ref name="sendAvailableData" scoped="" ref="0x40e8f690"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40efa920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40bc1e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ef9010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40be9528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40ef9c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40be8230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x416cfe30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f01100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x416ce510"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40be9528"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40f01100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f00818"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40eff010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40bc1100"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40eff6b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40be9528"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40efe310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40bc1e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40efe9e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40efee20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ef7c58"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4056daf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ef6310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40572288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40ef6f08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40577518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x416fbda8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ba9100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x416fa4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40572288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ef4858"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4056daf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ef4ef0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40572288"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerTimer" scoped="" ref="0x40f593d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41000448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41000448"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f5a5c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b4e4f0"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Battery" scoped="" ref="0x40f80a30"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40ffba60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40ffba60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x416e5a50"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="TempHumControl" scoped="" ref="0x40f826d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x410f0c38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x410f0c38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41106d50"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x40f82df8"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x411bb300"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x411bb300"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x4175e2d0"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Hum" scoped="" ref="0x40f7fad0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x411bbf28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x411bbf28"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x4175d260"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="DioInit" scoped="" ref="0x40f7e6e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411b8ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x411b8ed8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411b5980"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="DioControl" scoped="" ref="0x40f7eb00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411b7220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x411b7220"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411b5d38"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio0" scoped="" ref="0x40f7c010"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411b7890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio1" scoped="" ref="0x40f7c7f8"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411b7890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio2" scoped="" ref="0x40f7b010"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411b7890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio3" scoped="" ref="0x40f7b7f8"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411b7890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio4" scoped="" ref="0x40f78010"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411b7890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio5" scoped="" ref="0x40f787f8"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411b7890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="IBADCinit" scoped="" ref="0x40f56678"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412c1600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x412c1600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412bd6b0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="IBADCcontrol" scoped="" ref="0x40f56ab0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412c1918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x412c1918"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412bda48"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x40f8c010"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x40f8c4b8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x40f8c960"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x40f8ce08"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x40f8b2e0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x40f8b808"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x40f8bcb0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x40f8a200"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC8" scoped="" ref="0x40f8a6a8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC9" scoped="" ref="0x40f8ab50"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC10" scoped="" ref="0x40f88030"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC11" scoped="" ref="0x40f884e0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC12" scoped="" ref="0x40f88990"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC13" scoped="" ref="0x40f88e40"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41383010"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam0" scoped="" ref="0x40f87c68"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam1" scoped="" ref="0x40f86090"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam2" scoped="" ref="0x40f86480"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam3" scoped="" ref="0x40f86970"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam4" scoped="" ref="0x40f86d60"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam5" scoped="" ref="0x40f85228"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam6" scoped="" ref="0x40f85618"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam7" scoped="" ref="0x40f85a08"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam8" scoped="" ref="0x40f85df8"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam9" scoped="" ref="0x40f84228"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam10" scoped="" ref="0x40f84620"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam11" scoped="" ref="0x40f84a18"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam12" scoped="" ref="0x40f84e10"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam13" scoped="" ref="0x40f83230"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413834b0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="CounterInit" scoped="" ref="0x40f770a0"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x4137b988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CounterInit" scoped="" ref="0x4137b988"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x41378e10"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="CounterControl" scoped="" ref="0x40f776e8"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x4137bce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CounterControl" scoped="" ref="0x4137bce0"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x413742a0"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40f77d28"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4137a350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x4137a350"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41374900"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><function-ref name="Plugged" scoped="" ref="0x40f76750"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x4137ab30"/></to>
    </wire>
    <wire>
      <from><function-ref name="Plugged" scoped="" ref="0x4137ab30"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x413733f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x416e5a50"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40ff36f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x416e45f8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x410b4ea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40feeb30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x416e45f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40feb3c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fe83c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4101d6c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x416e4ad0"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40ff36f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x410b9e78"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x40fecb90"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x410a0978"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410b87d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40feb3c0"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4109eeb0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40feeb30"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x410c6ba0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x410a3970"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4109e638"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40fe4d38"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40fe4d38"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41017bf8"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41019ec0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41016200"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40fe83c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410420c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410420c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41730bc0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410797c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4101d6c8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x4100ca78"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x41029010"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x41029010"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x41028ce8"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x41015ea8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4038e760"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x41077118"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x41017768"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41077828"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41042c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41042c10"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4172e7b0"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x410241f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40379010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41042808"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4172e3a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41079310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4172ee48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4172d338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x410797c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x4172d760"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x41731968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4172c970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x41713de0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x41077118"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41711230"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x41077510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41711548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41077828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41711be0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41077ec0"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x410d1538"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41106d50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4113fa80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x4175ddf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41103698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht15Temp" scoped="" ref="0x4175cbe8"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x41101100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x4175c510"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41103698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht15Hum" scoped="" ref="0x4175b430"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x41101100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4113fa80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411964a8"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="SensirionSht15" scoped="" ref="0x41101100"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x410ffe70"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41103698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4113c3a8"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4113c3a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411c8ce8"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x41146650"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x4113cb10"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x4113cb10"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x41130be8"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x41144010"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x4113a590"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x4113a590"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x41139c50"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x41144988"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x41139030"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x41139030"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x4115c408"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41143010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x411c3e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x411c3e30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41141240"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ee8b10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="readSensor" scoped="" ref="0x41141e58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x41139c50"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x403af010"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x41130be8"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x403bfc08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x411c8ce8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x417b1448"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x4115ca00"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x4118cbb8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x4118cbb8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4119b228"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41196b88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x411942c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x411942c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x41192e38"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x403bfc08"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x41190870"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x403af010"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x4112fec8"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x4116c5c0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x41135a28"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x403aeea8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x41133850"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x403acce8"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x4116eb20"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x41169208"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x4116d2d8"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x411699a8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x41131740"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x403b6750"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x41136650"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x403afa08"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x41134490"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x403ad8e0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x4116e380"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x4116c990"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x411322d0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x403b5750"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x4116d6a8"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x41169d78"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x41130200"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x403bf210"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x41135050"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x403ae4b0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x41134e68"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x403ac2f0"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x4116e750"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x4116cd60"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x41132cb8"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x403b7ce8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x4116eef0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x411695d8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x4116da78"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x41168208"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x4118c338"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4119e010"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x4114f6b8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411aa7f8"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x4118d168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411a3c70"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x4118e010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411a7920"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x4118d9e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411a1d60"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x4115bdd8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411896f8"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x4118e890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x411a5b68"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x41189eb0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x411867a0"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411a9010"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x41186c18"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411a6190"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x411880a8"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411a4350"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x41188520"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411a2438"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x41188998"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x411a05f0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x41188e10"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4119e7c8"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x411872b0"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4119b9e0"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x41187728"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x4118f710"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x411c7488"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x417b1b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x411c7890"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x417b0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x417b04d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x411c7d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x417b08f8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x417b3458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x417b0ef0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x411b5d38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411b08d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Dio" scoped="" ref="0x411b7890"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411b1660"/></to>
    </wire>
    <wire loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Dio" scoped="" ref="0x411b1660"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x411ef1e0"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x411b5980"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411b0538"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x411e4608"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x41227198"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x41227198"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x4118d168"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x411e33f0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x41227a88"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x41227a88"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x41221200"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x411ec360"/></from>
      <to><interface-ref name="I2CResource" scoped="" ref="0x41224a08"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x41224a08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41222a38"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x411ecab8"/></from>
      <to><interface-ref name="IntPin" scoped="" ref="0x4122a6b0"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x4122a6b0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x403b7ce8"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x411efba8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b43e48"/></to>
    </wire>
    <wire loc="233:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="read_io" scoped="" ref="0x411ff408"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="init_io" scoped="" ref="0x411df978"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_low" scoped="" ref="0x411d1c58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_toggle" scoped="" ref="0x4120ef20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_high" scoped="" ref="0x411d6930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41222a38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4121a658"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x41221200"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412161b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4121a658"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41243010"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x412161b8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x41243800"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x412677a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41249418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41249418"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x417e9ce8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41267f20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x41263e90"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x41265dd8"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x412b3d50"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x41247d90"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x412639e8"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41246548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41248010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41248010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x417e7890"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x412b20b8"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x412ae9b8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x412ae9b8"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x412aaa88"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x412b17b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ee8b10"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x412b0430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ee8b10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41249b58"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x417e7488"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x412486a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x417e7f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x417e63f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41248b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x417e6820"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x417eaad0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x417e5a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x412a6240"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x403b4210"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x412a6c40"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x403b4d08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x412c9c60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x412bda48"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x413346c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION33" scoped="" ref="0x41383c10"/></from>
      <to><interface-ref name="EXITATION33" scoped="" ref="0x412fe3c8"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION33" scoped="" ref="0x412fe3c8"/></from>
      <to><interface-ref name="EXITATION33" scoped="" ref="0x412fa718"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x412bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41334330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ADConvert" scoped="" ref="0x41383010"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x412ff3b8"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="ADConvert" scoped="" ref="0x412ff3b8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x412fd708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SetParam" scoped="" ref="0x413834b0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x412ffb00"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SetParam" scoped="" ref="0x412ffb00"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x412fde50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION50" scoped="" ref="0x41382050"/></from>
      <to><interface-ref name="EXITATION50" scoped="" ref="0x412fe888"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION50" scoped="" ref="0x412fe888"/></from>
      <to><interface-ref name="EXITATION50" scoped="" ref="0x412fabd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION25" scoped="" ref="0x413837f8"/></from>
      <to><interface-ref name="EXITATION25" scoped="" ref="0x412ffee0"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION25" scoped="" ref="0x412ffee0"/></from>
      <to><interface-ref name="EXITATION25" scoped="" ref="0x412fa258"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x413346c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x413503c8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x41334330"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41350010"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x412eb6a8"/></from>
      <to><interface-ref name="Switch" scoped="" ref="0x4133a608"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x4133a608"/></from>
      <to><interface-ref name="Switch" scoped="" ref="0x41336cf0"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x412ebe70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b4e4f0"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x412f9150"/></from>
      <to><interface-ref name="Exitation50" scoped="" ref="0x41334d70"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x41334d70"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x41134e68"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x412f9b98"/></from>
      <to><interface-ref name="Exitation33" scoped="" ref="0x41365860"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x41365860"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x41135a28"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x412f86d8"/></from>
      <to><interface-ref name="VoltageBuffer" scoped="" ref="0x41364338"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x41364338"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x41135050"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x412f7170"/></from>
      <to><interface-ref name="VoltageBooster" scoped="" ref="0x41364d80"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x41364d80"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x41136650"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x412f7ba8"/></from>
      <to><interface-ref name="Amplifier" scoped="" ref="0x41363850"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x41363850"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x41133850"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x412f6748"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x413623a8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x413623a8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x4135b778"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x412f3708"/></from>
      <to><interface-ref name="I2CResource" scoped="" ref="0x4135f340"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x4135f340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4135b030"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x412f2010"/></from>
      <to><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x4135fbd8"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x4135fbd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x413571e8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x4135def0"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x4133a010"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x4133a010"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x413366f8"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <from><interface-ref name="adc_get_data" scoped="" ref="0x4131bbd8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x41333e18"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x41339c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x41339c68"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412161b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x413335e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41339520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41339520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4121a658"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x413571e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4135b030"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4121a658"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x4135b778"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412161b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x4134c998"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x4135def0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x41350a90"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x41134e68"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x4134f500"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x41135a28"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x4134e010"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x41135050"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x4134ea78"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x41136650"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x4134d4f0"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x41133850"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x4134df00"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x41134490"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="CounterInit" scoped="" ref="0x41378e10"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x41373c78"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41374900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41370730"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="CounterControl" scoped="" ref="0x413742a0"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x413700f0"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><function-ref name="Plugged" scoped="" ref="0x413733f0"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x4136f138"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4136f308"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b4e4f0"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x4136c010"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x4139c528"/></to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x4139c528"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x4118d9e8"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x4136eb70"/></from>
      <to><interface-ref name="IntPin" scoped="" ref="0x4139d010"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x4139d010"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x403b6750"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x4136d588"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x4139da00"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x4139da00"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x41134490"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x4136e128"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b43e48"/></to>
    </wire>
    <wire loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <from><interface-ref name="count_ready" scoped="" ref="0x413a6c28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4139bb10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4121a658"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x413992e0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412161b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2008/07/07 19:52:52 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DozerC" loc="19:DozerC.nc">
      <configuration/>
    </component>
    <component qname="TreeP" loc="13:TreeP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.h">
        <short>&#10; The number of alarm ticks per one microsecond (0.9216)&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <module/>
    </component>
    <component qname="RF230PacketC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <configuration/>
    </component>
    <component qname="RF230PacketP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <module/>
    </component>
    <component qname="IEEE154PacketC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154PacketP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TOne" ref="0x4035edb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40783b70"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <value cst="I:18">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <module/>
    </component>
    <component qname="IEEE154NetworkLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154NetworkLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.LowPowerListeningLayerC" loc="24(RF230ActiveMessageC.LowPowerListeningLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <module/>
    </component>
    <component qname="TrafficMonitorLayerC.UpdateTimerC" loc="36(TrafficMonitorLayerC.UpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC.NeighborhoodFlagC" loc="24(TrafficMonitorLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="1">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.CsmaLayerC" loc="24(RF230ActiveMessageC.CsmaLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230LayerC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230LayerP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TOne" ref="0x4035edb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconTimerC" loc="36(DozerC.BeaconTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconWaitTimerC" loc="36(DozerC.BeaconWaitTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.ConnReqListenTimerC" loc="36(DozerC.ConnReqListenTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.ConnRepWaitTimerC" loc="36(DozerC.ConnRepWaitTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.NeighbourUpdateTimerC" loc="36(DozerC.NeighbourUpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.NeighbourUpdateStopTimerC" loc="36(DozerC.NeighbourUpdateStopTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconSenderC" loc="39(DozerC.BeaconSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconSenderC.AMQueueEntryP" loc="35(DozerC.BeaconSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.BeaconReceiverC" loc="35(DozerC.BeaconReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TThree" ref="0x40365010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TThree" ref="0x40365010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403655e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SchedulerP" loc="14:SchedulerP.nc">
      <module/>
    </component>
    <component qname="DozerC.PPBListenTimer0C" loc="36(DozerC.PPBListenTimer0C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.PPBListenTimer1C" loc="36(DozerC.PPBListenTimer1C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.PPBListenTimer2C" loc="36(DozerC.PPBListenTimer2C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.PPBListenTimer3C" loc="36(DozerC.PPBListenTimer3C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.TDMAScheduleTimerC" loc="36(DozerC.TDMAScheduleTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.TDMASlotTimerC" loc="36(DozerC.TDMASlotTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DataManagerC" loc="12:DataManagerC.nc">
      <configuration/>
    </component>
    <component qname="DataManagerP" loc="10:DataManagerP.nc">
      <module/>
    </component>
    <component qname="DataManagerC.DataMessagePoolP" loc="41(DataManagerC.DataMessagePoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
            <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
          </type-tag>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DataManagerC.DataMessagePoolP.PoolP" loc="53(DataManagerC.DataMessagePoolP.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ec8010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DataManagerC.DataQueueP" loc="42(DataManagerC.DataQueueP):/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
              <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.SerialAMSenderC" loc="39(DozerC.SerialAMSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.SerialAMSenderC.AMQueueEntryP" loc="35(DozerC.SerialAMSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="37(SerialAMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.DataSenderC" loc="39(DozerC.DataSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.DataSenderC.AMQueueEntryP" loc="35(DozerC.DataSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.DataReceiverC" loc="35(DozerC.DataReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="uAgriP" loc="39:uAgriP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/sensorboard.h">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <configuration/>
    </component>
    <component qname="SamplerM" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/sensorboard.h">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.TimerMilliC" loc="36(SamplerC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.VoltageC" loc="29(SamplerC.VoltageC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.VoltageC.AdcReadClientC" loc="21(SamplerC.VoltageC.AdcReadClientC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.TempHumC" loc="15(SamplerC.TempHumC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
        <short>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard.</short>
        <long>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @author Gilman Tolles &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht15C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.TempHumC.SensirionSht15ReaderP" loc="16(SamplerC.TempHumC.SensirionSht15ReaderP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht15ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht15C" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
        <short>&#10; HalSensirionSht15C is an advanced access component for the&#10; Sensirion SHT15 model humidity and temperature sensor, available on&#10; the mda300CA sensor board.</short>
        <long>&#10; HalSensirionSht15C is an advanced access component for the&#10; Sensirion SHT15 model humidity and temperature sensor, available on&#10; the mda300CA sensor board. This component provides the SensirionSht15&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht15C.SensirionSht15LogicP" loc="24(HalSensirionSht15C.SensirionSht15LogicP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
        <short>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht15 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT15 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht15LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15C" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/mda300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; Revision: $Revision: 1.0 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.Int" loc="6(HplSensirionSht15C.Int):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15P" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <documentation loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
        <short>&#10; HplSensirionSht15P is a low-level component that controls power for&#10; the Sensirion SHT15 sensor on the mda300CA sensor board&#10;&#10; </short>
        <long>&#10; HplSensirionSht15P is a low-level component that controls power for&#10; the Sensirion SHT15 sensor on the mda300CA sensor board&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.TimerMilliC" loc="36(HplSensirionSht15C.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter" loc="73(HplSensirionSht15C.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht15.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter.Queue" loc="32(HplSensirionSht15C.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter.Arbiter" loc="49(HplSensirionSht15C.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht15C.TimerMilliC" loc="36(HalSensirionSht15C.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.DioC" loc="10(SamplerC.DioC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300DigitalC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300DigitalLogicP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300DigitalC.I2C" loc="43(HplMDA300DigitalC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="79(Atm128I2CMasterP.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="32(Atm128I2CMasterP.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="48(Atm128I2CMasterP.Power):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="44(Atm128I2CMasterP.Master):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300DigitalC.WarmupTimer" loc="36(HplMDA300DigitalC.WarmupTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.IBADC" loc="10(SamplerC.IBADC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300IBADCC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300IBADCLogicP" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MDA300IBADCSwitchC" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300IBADCSwitchC.I2C" loc="43(MDA300IBADCSwitchC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MDA300IBADCSwitchP" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCC.I2C" loc="43(HplMDA300IBADCC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCC.WarmupTimer" loc="36(HplMDA300IBADCC.WarmupTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.CounterC" loc="10(SamplerC.CounterC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300CounterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300CounterLogicP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300CounterC.I2C" loc="43(HplMDA300CounterC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403c50e8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403c5300" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403c5518" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403d34f0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403d3718" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403d3940" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403d3b30" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4041ad90" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40421010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40421238" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40421428" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40738010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40738010"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40738230" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4073ca68" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4073ca68"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x4073ceb0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4073ceb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x406cfba8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x406cfba8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4074f038" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4074f038"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4074f2a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4074f2a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4074f710" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4074f710"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4074f978" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x4074fe00" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x4074fe00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4076c3c8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4076c3c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40783b70" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40783b70"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40783d30" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40794ec8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40794ec8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x407900d0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40774c00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40774c00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408280b0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408280b0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40828290" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40abfe50" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40adfd90" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40b17b48" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40b17b48"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40b14010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b14010"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40b141d0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40b963e0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40b91e40" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40ba8600" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40bca7d0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40ec8010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ec8010"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40ec8230" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40ec6510" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ec6510"/></type-var>
        </typedef>
        <constant name="size" ref="0x40ec6700" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40eb4530" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40eb4530"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40eb4758" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40ed79f8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4102ad90" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x41075010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x41076988" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x410c52b8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x410c52b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht15C" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
        <short>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard.</short>
        <long>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @author Gilman Tolles &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht15ReaderP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht15LogicP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
        <short>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht15 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT15 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x4118a6d8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x4118a900" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x4118ab28" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4118ad18" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="MDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x412544e8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x4038cdb8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4038cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40386010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4038c188" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4038c188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4038c360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4038eec0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4038eec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403910c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40386ef0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40386ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038a0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4038e760" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4038e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4038e938"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4038ea18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4038eaf8"/>
        <function-ref name="actualMicro" scoped="" ref="0x4038ebd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4038ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40394548" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40394548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40394720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40394168" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40394168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40394340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40394950" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40394950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40394b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40397010" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40397010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403971e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40398c18" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40398c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40398df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4039fc08" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4039fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4039fde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x4039f218" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x4039f218"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039f3f0"/>
        <function-ref name="isInput" scoped="" ref="0x4039f4d0"/>
        <function-ref name="toggle" scoped="" ref="0x4039f5b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4039f690"/>
        <function-ref name="get" scoped="" ref="0x4039f770"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039f850"/>
        <function-ref name="set" scoped="" ref="0x4039f930"/>
        <function-ref name="clr" scoped="" ref="0x4039fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40397ba0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40397ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40397d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403c2750" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403c2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c2b28"/>
        <function-ref name="isInput" scoped="" ref="0x403c2c08"/>
        <function-ref name="toggle" scoped="" ref="0x403c2ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c2dc8"/>
        <function-ref name="get" scoped="" ref="0x403c2ea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1010"/>
        <function-ref name="set" scoped="" ref="0x403c10f0"/>
        <function-ref name="clr" scoped="" ref="0x403c11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403b4d08" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403b4d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b4ee0"/>
        <function-ref name="isInput" scoped="" ref="0x403b3010"/>
        <function-ref name="toggle" scoped="" ref="0x403b30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b31d0"/>
        <function-ref name="get" scoped="" ref="0x403b32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b3390"/>
        <function-ref name="set" scoped="" ref="0x403b3470"/>
        <function-ref name="clr" scoped="" ref="0x403b3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403b72f0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403b72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b74c8"/>
        <function-ref name="isInput" scoped="" ref="0x403b75a8"/>
        <function-ref name="toggle" scoped="" ref="0x403b7688"/>
        <function-ref name="isOutput" scoped="" ref="0x403b7768"/>
        <function-ref name="get" scoped="" ref="0x403b7848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b7928"/>
        <function-ref name="set" scoped="" ref="0x403b7a08"/>
        <function-ref name="clr" scoped="" ref="0x403b7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403bb4b0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403bb4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bb688"/>
        <function-ref name="isInput" scoped="" ref="0x403bb768"/>
        <function-ref name="toggle" scoped="" ref="0x403bb848"/>
        <function-ref name="isOutput" scoped="" ref="0x403bb928"/>
        <function-ref name="get" scoped="" ref="0x403bba08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bbae8"/>
        <function-ref name="set" scoped="" ref="0x403bbbc8"/>
        <function-ref name="clr" scoped="" ref="0x403bbca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403a28e0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403a28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a2ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403a2b98"/>
        <function-ref name="toggle" scoped="" ref="0x403a2c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403a2d58"/>
        <function-ref name="get" scoped="" ref="0x403a2e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a2f18"/>
        <function-ref name="set" scoped="" ref="0x403ab010"/>
        <function-ref name="clr" scoped="" ref="0x403ab0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403bc0a0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403bc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bc278"/>
        <function-ref name="isInput" scoped="" ref="0x403bc358"/>
        <function-ref name="toggle" scoped="" ref="0x403bc438"/>
        <function-ref name="isOutput" scoped="" ref="0x403bc518"/>
        <function-ref name="get" scoped="" ref="0x403bc5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bc6d8"/>
        <function-ref name="set" scoped="" ref="0x403bc7b8"/>
        <function-ref name="clr" scoped="" ref="0x403bc898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403abce8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403abce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403abec0"/>
        <function-ref name="isInput" scoped="" ref="0x403aa010"/>
        <function-ref name="toggle" scoped="" ref="0x403aa0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403aa1d0"/>
        <function-ref name="get" scoped="" ref="0x403aa2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403aa390"/>
        <function-ref name="set" scoped="" ref="0x403aa470"/>
        <function-ref name="clr" scoped="" ref="0x403aa550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403ae4b0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403ae4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ae688"/>
        <function-ref name="isInput" scoped="" ref="0x403ae768"/>
        <function-ref name="toggle" scoped="" ref="0x403ae848"/>
        <function-ref name="isOutput" scoped="" ref="0x403ae928"/>
        <function-ref name="get" scoped="" ref="0x403aea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403aeae8"/>
        <function-ref name="set" scoped="" ref="0x403aebc8"/>
        <function-ref name="clr" scoped="" ref="0x403aeca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403b2c08" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403b2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b2de0"/>
        <function-ref name="isInput" scoped="" ref="0x403b2ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403b1010"/>
        <function-ref name="isOutput" scoped="" ref="0x403b10f0"/>
        <function-ref name="get" scoped="" ref="0x403b11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b12b0"/>
        <function-ref name="set" scoped="" ref="0x403b1390"/>
        <function-ref name="clr" scoped="" ref="0x403b1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403bf210" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403bf210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bf3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403bf4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403bf5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403bf688"/>
        <function-ref name="get" scoped="" ref="0x403bf768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bf848"/>
        <function-ref name="set" scoped="" ref="0x403bf928"/>
        <function-ref name="clr" scoped="" ref="0x403bfa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403a5670" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403a5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a5848"/>
        <function-ref name="isInput" scoped="" ref="0x403a5928"/>
        <function-ref name="toggle" scoped="" ref="0x403a5a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403a5ae8"/>
        <function-ref name="get" scoped="" ref="0x403a5bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a5ca8"/>
        <function-ref name="set" scoped="" ref="0x403a5d88"/>
        <function-ref name="clr" scoped="" ref="0x403a5e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403a9c08" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403a9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a9de0"/>
        <function-ref name="isInput" scoped="" ref="0x403a9ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403a8010"/>
        <function-ref name="isOutput" scoped="" ref="0x403a80f0"/>
        <function-ref name="get" scoped="" ref="0x403a81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a82b0"/>
        <function-ref name="set" scoped="" ref="0x403a8390"/>
        <function-ref name="clr" scoped="" ref="0x403a8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403ac2f0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403ac2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ac4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ac5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ac688"/>
        <function-ref name="isOutput" scoped="" ref="0x403ac768"/>
        <function-ref name="get" scoped="" ref="0x403ac848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ac928"/>
        <function-ref name="set" scoped="" ref="0x403aca08"/>
        <function-ref name="clr" scoped="" ref="0x403acae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403baa98" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403baa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bac70"/>
        <function-ref name="isInput" scoped="" ref="0x403bad50"/>
        <function-ref name="toggle" scoped="" ref="0x403bae30"/>
        <function-ref name="isOutput" scoped="" ref="0x403baf10"/>
        <function-ref name="get" scoped="" ref="0x403b9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b90f0"/>
        <function-ref name="set" scoped="" ref="0x403b91d0"/>
        <function-ref name="clr" scoped="" ref="0x403b92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403c32f0" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403c32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c34c8"/>
        <function-ref name="isInput" scoped="" ref="0x403c35a8"/>
        <function-ref name="toggle" scoped="" ref="0x403c3688"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3768"/>
        <function-ref name="get" scoped="" ref="0x403c3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c3928"/>
        <function-ref name="set" scoped="" ref="0x403c3a08"/>
        <function-ref name="clr" scoped="" ref="0x403c3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403c0830" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403c0830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c0a08"/>
        <function-ref name="isInput" scoped="" ref="0x403c0ae8"/>
        <function-ref name="toggle" scoped="" ref="0x403c0bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c0ca8"/>
        <function-ref name="get" scoped="" ref="0x403c0d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c0e68"/>
        <function-ref name="set" scoped="" ref="0x403c9010"/>
        <function-ref name="clr" scoped="" ref="0x403c90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403b9ea8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403b9ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b80c0"/>
        <function-ref name="isInput" scoped="" ref="0x403b81a0"/>
        <function-ref name="toggle" scoped="" ref="0x403b8280"/>
        <function-ref name="isOutput" scoped="" ref="0x403b8360"/>
        <function-ref name="get" scoped="" ref="0x403b8440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b8520"/>
        <function-ref name="set" scoped="" ref="0x403b8600"/>
        <function-ref name="clr" scoped="" ref="0x403b86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403a34b0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403a34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a3688"/>
        <function-ref name="isInput" scoped="" ref="0x403a3768"/>
        <function-ref name="toggle" scoped="" ref="0x403a3848"/>
        <function-ref name="isOutput" scoped="" ref="0x403a3928"/>
        <function-ref name="get" scoped="" ref="0x403a3a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a3ae8"/>
        <function-ref name="set" scoped="" ref="0x403a3bc8"/>
        <function-ref name="clr" scoped="" ref="0x403a3ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403a7b18" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403a7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a7cf0"/>
        <function-ref name="isInput" scoped="" ref="0x403a7dd0"/>
        <function-ref name="toggle" scoped="" ref="0x403a7eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b0010"/>
        <function-ref name="get" scoped="" ref="0x403b00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b01d0"/>
        <function-ref name="set" scoped="" ref="0x403b02b0"/>
        <function-ref name="clr" scoped="" ref="0x403b0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403c13d0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403c13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c15a8"/>
        <function-ref name="isInput" scoped="" ref="0x403c1688"/>
        <function-ref name="toggle" scoped="" ref="0x403c1768"/>
        <function-ref name="isOutput" scoped="" ref="0x403c1848"/>
        <function-ref name="get" scoped="" ref="0x403c1928"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1a08"/>
        <function-ref name="set" scoped="" ref="0x403c1ae8"/>
        <function-ref name="clr" scoped="" ref="0x403c1bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403af010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403af1e8"/>
        <function-ref name="isInput" scoped="" ref="0x403af2c8"/>
        <function-ref name="toggle" scoped="" ref="0x403af3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403af488"/>
        <function-ref name="get" scoped="" ref="0x403af568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403af648"/>
        <function-ref name="set" scoped="" ref="0x403af728"/>
        <function-ref name="clr" scoped="" ref="0x403af808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403b3750" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403b3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b3928"/>
        <function-ref name="isInput" scoped="" ref="0x403b3a08"/>
        <function-ref name="toggle" scoped="" ref="0x403b3ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b3bc8"/>
        <function-ref name="get" scoped="" ref="0x403b3ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b3d88"/>
        <function-ref name="set" scoped="" ref="0x403b3e68"/>
        <function-ref name="clr" scoped="" ref="0x403b2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403b7ce8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403b7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b7ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403b6010"/>
        <function-ref name="toggle" scoped="" ref="0x403b60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b61d0"/>
        <function-ref name="get" scoped="" ref="0x403b62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b6390"/>
        <function-ref name="set" scoped="" ref="0x403b6470"/>
        <function-ref name="clr" scoped="" ref="0x403b6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403bbea8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403bbea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c40c0"/>
        <function-ref name="isInput" scoped="" ref="0x403c41a0"/>
        <function-ref name="toggle" scoped="" ref="0x403c4280"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4360"/>
        <function-ref name="get" scoped="" ref="0x403c4440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c4520"/>
        <function-ref name="set" scoped="" ref="0x403c4600"/>
        <function-ref name="clr" scoped="" ref="0x403c46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403ab2f0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403ab2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ab4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ab5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ab688"/>
        <function-ref name="isOutput" scoped="" ref="0x403ab768"/>
        <function-ref name="get" scoped="" ref="0x403ab848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ab928"/>
        <function-ref name="set" scoped="" ref="0x403aba08"/>
        <function-ref name="clr" scoped="" ref="0x403abae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403aa750" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403aa750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403aa928"/>
        <function-ref name="isInput" scoped="" ref="0x403aaa08"/>
        <function-ref name="toggle" scoped="" ref="0x403aaae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403aabc8"/>
        <function-ref name="get" scoped="" ref="0x403aaca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403aad88"/>
        <function-ref name="set" scoped="" ref="0x403aae68"/>
        <function-ref name="clr" scoped="" ref="0x403a9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403aeea8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403aeea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ad0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403ad1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403ad280"/>
        <function-ref name="isOutput" scoped="" ref="0x403ad360"/>
        <function-ref name="get" scoped="" ref="0x403ad440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ad520"/>
        <function-ref name="set" scoped="" ref="0x403ad600"/>
        <function-ref name="clr" scoped="" ref="0x403ad6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403b1670" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403b1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b1848"/>
        <function-ref name="isInput" scoped="" ref="0x403b1928"/>
        <function-ref name="toggle" scoped="" ref="0x403b1a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403b1ae8"/>
        <function-ref name="get" scoped="" ref="0x403b1bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b1ca8"/>
        <function-ref name="set" scoped="" ref="0x403b1d88"/>
        <function-ref name="clr" scoped="" ref="0x403b1e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403bfc08" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403bfc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bfde0"/>
        <function-ref name="isInput" scoped="" ref="0x403bfec0"/>
        <function-ref name="toggle" scoped="" ref="0x403bd010"/>
        <function-ref name="isOutput" scoped="" ref="0x403bd0f0"/>
        <function-ref name="get" scoped="" ref="0x403bd1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bd2b0"/>
        <function-ref name="set" scoped="" ref="0x403bd390"/>
        <function-ref name="clr" scoped="" ref="0x403bd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403a40a0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403a40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a4278"/>
        <function-ref name="isInput" scoped="" ref="0x403a4358"/>
        <function-ref name="toggle" scoped="" ref="0x403a4438"/>
        <function-ref name="isOutput" scoped="" ref="0x403a4518"/>
        <function-ref name="get" scoped="" ref="0x403a45f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a46d8"/>
        <function-ref name="set" scoped="" ref="0x403a47b8"/>
        <function-ref name="clr" scoped="" ref="0x403a4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403a8670" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a88c8"/>
        <function-ref name="isInput" scoped="" ref="0x403a89a8"/>
        <function-ref name="toggle" scoped="" ref="0x403a8a88"/>
        <function-ref name="isOutput" scoped="" ref="0x403a8b68"/>
        <function-ref name="get" scoped="" ref="0x403a8c48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a8d28"/>
        <function-ref name="set" scoped="" ref="0x403a8e08"/>
        <function-ref name="clr" scoped="" ref="0x403a8ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403acce8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403acce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403acec0"/>
        <function-ref name="isInput" scoped="" ref="0x403b5010"/>
        <function-ref name="toggle" scoped="" ref="0x403b50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b51d0"/>
        <function-ref name="get" scoped="" ref="0x403b52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b5390"/>
        <function-ref name="set" scoped="" ref="0x403b5470"/>
        <function-ref name="clr" scoped="" ref="0x403b5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403c3ce8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403c3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c3ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403c2010"/>
        <function-ref name="toggle" scoped="" ref="0x403c20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c21d0"/>
        <function-ref name="get" scoped="" ref="0x403c22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c2390"/>
        <function-ref name="set" scoped="" ref="0x403c2470"/>
        <function-ref name="clr" scoped="" ref="0x403c2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403b4210" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403b4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b44e8"/>
        <function-ref name="isInput" scoped="" ref="0x403b45c8"/>
        <function-ref name="toggle" scoped="" ref="0x403b46a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b4788"/>
        <function-ref name="get" scoped="" ref="0x403b4868"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b4948"/>
        <function-ref name="set" scoped="" ref="0x403b4a28"/>
        <function-ref name="clr" scoped="" ref="0x403b4b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403b88e0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403b88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b8ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403b8b98"/>
        <function-ref name="toggle" scoped="" ref="0x403b8c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403b8d58"/>
        <function-ref name="get" scoped="" ref="0x403b8e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b8f18"/>
        <function-ref name="set" scoped="" ref="0x403b7010"/>
        <function-ref name="clr" scoped="" ref="0x403b70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403bca98" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403bca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bcc70"/>
        <function-ref name="isInput" scoped="" ref="0x403bcd50"/>
        <function-ref name="toggle" scoped="" ref="0x403bce30"/>
        <function-ref name="isOutput" scoped="" ref="0x403bcf10"/>
        <function-ref name="get" scoped="" ref="0x403bb010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bb0f0"/>
        <function-ref name="set" scoped="" ref="0x403bb1d0"/>
        <function-ref name="clr" scoped="" ref="0x403bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403c92f0" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c94c8"/>
        <function-ref name="isInput" scoped="" ref="0x403c95a8"/>
        <function-ref name="toggle" scoped="" ref="0x403c9688"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9768"/>
        <function-ref name="get" scoped="" ref="0x403c9848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9928"/>
        <function-ref name="set" scoped="" ref="0x403c9a08"/>
        <function-ref name="clr" scoped="" ref="0x403c9ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403a3ea8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403a3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a20c0"/>
        <function-ref name="isInput" scoped="" ref="0x403a21a0"/>
        <function-ref name="toggle" scoped="" ref="0x403a2280"/>
        <function-ref name="isOutput" scoped="" ref="0x403a2360"/>
        <function-ref name="get" scoped="" ref="0x403a2440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a2520"/>
        <function-ref name="set" scoped="" ref="0x403a2600"/>
        <function-ref name="clr" scoped="" ref="0x403a26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403b0590" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403b0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b0768"/>
        <function-ref name="isInput" scoped="" ref="0x403b0848"/>
        <function-ref name="toggle" scoped="" ref="0x403b0928"/>
        <function-ref name="isOutput" scoped="" ref="0x403b0a08"/>
        <function-ref name="get" scoped="" ref="0x403b0ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b0bc8"/>
        <function-ref name="set" scoped="" ref="0x403b0ca8"/>
        <function-ref name="clr" scoped="" ref="0x403b0d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403bd670" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403bd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bd848"/>
        <function-ref name="isInput" scoped="" ref="0x403bd928"/>
        <function-ref name="toggle" scoped="" ref="0x403bda08"/>
        <function-ref name="isOutput" scoped="" ref="0x403bdae8"/>
        <function-ref name="get" scoped="" ref="0x403bdbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bdca8"/>
        <function-ref name="set" scoped="" ref="0x403bdd88"/>
        <function-ref name="clr" scoped="" ref="0x403bde68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403afa08" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403afa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403afbe0"/>
        <function-ref name="isInput" scoped="" ref="0x403afcc0"/>
        <function-ref name="toggle" scoped="" ref="0x403afda0"/>
        <function-ref name="isOutput" scoped="" ref="0x403afe80"/>
        <function-ref name="get" scoped="" ref="0x403ae010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ae0f0"/>
        <function-ref name="set" scoped="" ref="0x403ae1d0"/>
        <function-ref name="clr" scoped="" ref="0x403ae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403b2210" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403b2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b23e8"/>
        <function-ref name="isInput" scoped="" ref="0x403b24c8"/>
        <function-ref name="toggle" scoped="" ref="0x403b25a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b2688"/>
        <function-ref name="get" scoped="" ref="0x403b2768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b2848"/>
        <function-ref name="set" scoped="" ref="0x403b2928"/>
        <function-ref name="clr" scoped="" ref="0x403b2a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403b6750" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403b6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b6928"/>
        <function-ref name="isInput" scoped="" ref="0x403b6a08"/>
        <function-ref name="toggle" scoped="" ref="0x403b6ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b6bc8"/>
        <function-ref name="get" scoped="" ref="0x403b6ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b6d88"/>
        <function-ref name="set" scoped="" ref="0x403b6e68"/>
        <function-ref name="clr" scoped="" ref="0x403bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403c48e0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403c48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c4ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403c4b98"/>
        <function-ref name="toggle" scoped="" ref="0x403c4c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4d58"/>
        <function-ref name="get" scoped="" ref="0x403c4e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c4f18"/>
        <function-ref name="set" scoped="" ref="0x403c3010"/>
        <function-ref name="clr" scoped="" ref="0x403c30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x40396c20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x40396c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40396df8"/>
        <function-ref name="isInput" scoped="" ref="0x40396ed8"/>
        <function-ref name="toggle" scoped="" ref="0x403a5010"/>
        <function-ref name="isOutput" scoped="" ref="0x403a50f0"/>
        <function-ref name="get" scoped="" ref="0x403a51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a52b0"/>
        <function-ref name="set" scoped="" ref="0x403a5390"/>
        <function-ref name="clr" scoped="" ref="0x403a5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403a9210" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403a9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a93e8"/>
        <function-ref name="isInput" scoped="" ref="0x403a94c8"/>
        <function-ref name="toggle" scoped="" ref="0x403a95a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a9688"/>
        <function-ref name="get" scoped="" ref="0x403a9768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a9848"/>
        <function-ref name="set" scoped="" ref="0x403a9928"/>
        <function-ref name="clr" scoped="" ref="0x403a9a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403ad8e0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403ad8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403adab8"/>
        <function-ref name="isInput" scoped="" ref="0x403adb98"/>
        <function-ref name="toggle" scoped="" ref="0x403adc78"/>
        <function-ref name="isOutput" scoped="" ref="0x403add58"/>
        <function-ref name="get" scoped="" ref="0x403ade38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403adf18"/>
        <function-ref name="set" scoped="" ref="0x403ac010"/>
        <function-ref name="clr" scoped="" ref="0x403ac0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403ba0a0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403ba0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ba278"/>
        <function-ref name="isInput" scoped="" ref="0x403ba358"/>
        <function-ref name="toggle" scoped="" ref="0x403ba438"/>
        <function-ref name="isOutput" scoped="" ref="0x403ba518"/>
        <function-ref name="get" scoped="" ref="0x403ba5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ba6d8"/>
        <function-ref name="set" scoped="" ref="0x403ba7b8"/>
        <function-ref name="clr" scoped="" ref="0x403ba898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403c1dc8" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403c1dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c0010"/>
        <function-ref name="isInput" scoped="" ref="0x403c00f0"/>
        <function-ref name="toggle" scoped="" ref="0x403c01d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c02b0"/>
        <function-ref name="get" scoped="" ref="0x403c0390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c0470"/>
        <function-ref name="set" scoped="" ref="0x403c0550"/>
        <function-ref name="clr" scoped="" ref="0x403c0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403b94b0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403b94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9688"/>
        <function-ref name="isInput" scoped="" ref="0x403b9768"/>
        <function-ref name="toggle" scoped="" ref="0x403b9848"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9928"/>
        <function-ref name="get" scoped="" ref="0x403b9a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b9ae8"/>
        <function-ref name="set" scoped="" ref="0x403b9bc8"/>
        <function-ref name="clr" scoped="" ref="0x403b9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403b5750" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403b5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b5928"/>
        <function-ref name="isInput" scoped="" ref="0x403b5a08"/>
        <function-ref name="toggle" scoped="" ref="0x403b5ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b5bc8"/>
        <function-ref name="get" scoped="" ref="0x403b5ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b5d88"/>
        <function-ref name="set" scoped="" ref="0x403b5e68"/>
        <function-ref name="clr" scoped="" ref="0x403b4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403a4a98" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403a4a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a4c70"/>
        <function-ref name="isInput" scoped="" ref="0x403a4d50"/>
        <function-ref name="toggle" scoped="" ref="0x403a4e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403a4f10"/>
        <function-ref name="get" scoped="" ref="0x403a3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a30f0"/>
        <function-ref name="set" scoped="" ref="0x403a31d0"/>
        <function-ref name="clr" scoped="" ref="0x403a32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403a7120" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403a7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a72f8"/>
        <function-ref name="isInput" scoped="" ref="0x403a73d8"/>
        <function-ref name="toggle" scoped="" ref="0x403a74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a7598"/>
        <function-ref name="get" scoped="" ref="0x403a7678"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a7758"/>
        <function-ref name="set" scoped="" ref="0x403a7838"/>
        <function-ref name="clr" scoped="" ref="0x403a7918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403f0ba8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403f0ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f0d80"/>
        <function-ref name="isInput" scoped="" ref="0x403f0e60"/>
        <function-ref name="toggle" scoped="" ref="0x403ef010"/>
        <function-ref name="isOutput" scoped="" ref="0x403ef0f0"/>
        <function-ref name="get" scoped="" ref="0x403ef1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ef2b0"/>
        <function-ref name="set" scoped="" ref="0x403ef390"/>
        <function-ref name="clr" scoped="" ref="0x403ef470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403ee890" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403ee890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eea68"/>
        <function-ref name="isInput" scoped="" ref="0x403eeb48"/>
        <function-ref name="toggle" scoped="" ref="0x403eec28"/>
        <function-ref name="isOutput" scoped="" ref="0x403eed08"/>
        <function-ref name="get" scoped="" ref="0x403eede8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eeec8"/>
        <function-ref name="set" scoped="" ref="0x403ed010"/>
        <function-ref name="clr" scoped="" ref="0x403ed0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403f18e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403f18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f1ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403f1b98"/>
        <function-ref name="toggle" scoped="" ref="0x403f1c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1d58"/>
        <function-ref name="get" scoped="" ref="0x403f1e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f1f18"/>
        <function-ref name="set" scoped="" ref="0x403f0010"/>
        <function-ref name="clr" scoped="" ref="0x403f00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403ef5d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403ef5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ef7a8"/>
        <function-ref name="isInput" scoped="" ref="0x403ef888"/>
        <function-ref name="toggle" scoped="" ref="0x403ef968"/>
        <function-ref name="isOutput" scoped="" ref="0x403efa48"/>
        <function-ref name="get" scoped="" ref="0x403efb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403efc08"/>
        <function-ref name="set" scoped="" ref="0x403efce8"/>
        <function-ref name="clr" scoped="" ref="0x403efdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403ed250" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403ed250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ed428"/>
        <function-ref name="isInput" scoped="" ref="0x403ed508"/>
        <function-ref name="toggle" scoped="" ref="0x403ed5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ed6c8"/>
        <function-ref name="get" scoped="" ref="0x403ed7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ed888"/>
        <function-ref name="set" scoped="" ref="0x403ed968"/>
        <function-ref name="clr" scoped="" ref="0x403eda48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403f0250" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403f0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f0428"/>
        <function-ref name="isInput" scoped="" ref="0x403f0508"/>
        <function-ref name="toggle" scoped="" ref="0x403f05e8"/>
        <function-ref name="isOutput" scoped="" ref="0x403f06c8"/>
        <function-ref name="get" scoped="" ref="0x403f07a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f0888"/>
        <function-ref name="set" scoped="" ref="0x403f0968"/>
        <function-ref name="clr" scoped="" ref="0x403f0a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403eff28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403eff28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ee110"/>
        <function-ref name="isInput" scoped="" ref="0x403ee1f0"/>
        <function-ref name="toggle" scoped="" ref="0x403ee2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ee3b0"/>
        <function-ref name="get" scoped="" ref="0x403ee490"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ee570"/>
        <function-ref name="set" scoped="" ref="0x403ee650"/>
        <function-ref name="clr" scoped="" ref="0x403ee730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403edba8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403edba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403edd80"/>
        <function-ref name="isInput" scoped="" ref="0x403ede60"/>
        <function-ref name="toggle" scoped="" ref="0x403f6010"/>
        <function-ref name="isOutput" scoped="" ref="0x403f60f0"/>
        <function-ref name="get" scoped="" ref="0x403f61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f62b0"/>
        <function-ref name="set" scoped="" ref="0x403f6390"/>
        <function-ref name="clr" scoped="" ref="0x403f6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413be2b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413be2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413be488"/>
        <function-ref name="isInput" scoped="" ref="0x413be568"/>
        <function-ref name="toggle" scoped="" ref="0x413be648"/>
        <function-ref name="isOutput" scoped="" ref="0x413be728"/>
        <function-ref name="get" scoped="" ref="0x413be808"/>
        <function-ref name="makeOutput" scoped="" ref="0x413be8e8"/>
        <function-ref name="set" scoped="" ref="0x413be9c8"/>
        <function-ref name="clr" scoped="" ref="0x413beaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413bdc78" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413bdc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413bde50"/>
        <function-ref name="isInput" scoped="" ref="0x413bc010"/>
        <function-ref name="toggle" scoped="" ref="0x413bc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x413bc1d0"/>
        <function-ref name="get" scoped="" ref="0x413bc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bc390"/>
        <function-ref name="set" scoped="" ref="0x413bc470"/>
        <function-ref name="clr" scoped="" ref="0x413bc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413bb718" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413bb718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413bb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x413bb9d0"/>
        <function-ref name="toggle" scoped="" ref="0x413bbab0"/>
        <function-ref name="isOutput" scoped="" ref="0x413bbb90"/>
        <function-ref name="get" scoped="" ref="0x413bbc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bbd50"/>
        <function-ref name="set" scoped="" ref="0x413bbe30"/>
        <function-ref name="clr" scoped="" ref="0x413bbf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413b90f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413b90f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413b92d0"/>
        <function-ref name="isInput" scoped="" ref="0x413b93b0"/>
        <function-ref name="toggle" scoped="" ref="0x413b9490"/>
        <function-ref name="isOutput" scoped="" ref="0x413b9570"/>
        <function-ref name="get" scoped="" ref="0x413b9650"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b9730"/>
        <function-ref name="set" scoped="" ref="0x413b9810"/>
        <function-ref name="clr" scoped="" ref="0x413b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413b8ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413b8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413b8ca0"/>
        <function-ref name="isInput" scoped="" ref="0x413b8d80"/>
        <function-ref name="toggle" scoped="" ref="0x413b8e60"/>
        <function-ref name="isOutput" scoped="" ref="0x413b7010"/>
        <function-ref name="get" scoped="" ref="0x413b70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b71d0"/>
        <function-ref name="set" scoped="" ref="0x413b72b0"/>
        <function-ref name="clr" scoped="" ref="0x413b7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413b6570" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413b6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413b6748"/>
        <function-ref name="isInput" scoped="" ref="0x413b6828"/>
        <function-ref name="toggle" scoped="" ref="0x413b6908"/>
        <function-ref name="isOutput" scoped="" ref="0x413b69e8"/>
        <function-ref name="get" scoped="" ref="0x413b6ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b6ba8"/>
        <function-ref name="set" scoped="" ref="0x413b6c88"/>
        <function-ref name="clr" scoped="" ref="0x413b6d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x413b4010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x413b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413b41e8"/>
        <function-ref name="isInput" scoped="" ref="0x413b42c8"/>
        <function-ref name="toggle" scoped="" ref="0x413b43a8"/>
        <function-ref name="isOutput" scoped="" ref="0x413b4488"/>
        <function-ref name="get" scoped="" ref="0x413b4568"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b4648"/>
        <function-ref name="set" scoped="" ref="0x413b4728"/>
        <function-ref name="clr" scoped="" ref="0x413b4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414029e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414029e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41402bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41402ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41402d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41402e60"/>
        <function-ref name="get" scoped="" ref="0x41401010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414010f0"/>
        <function-ref name="set" scoped="" ref="0x414011d0"/>
        <function-ref name="clr" scoped="" ref="0x414012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403fb4f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403fb4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fb6c8"/>
        <function-ref name="isInput" scoped="" ref="0x403fb7a8"/>
        <function-ref name="toggle" scoped="" ref="0x403fb888"/>
        <function-ref name="isOutput" scoped="" ref="0x403fb968"/>
        <function-ref name="get" scoped="" ref="0x403fba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fbb28"/>
        <function-ref name="set" scoped="" ref="0x403fbc08"/>
        <function-ref name="clr" scoped="" ref="0x403fbce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403f9170" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403f9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f9348"/>
        <function-ref name="isInput" scoped="" ref="0x403f9428"/>
        <function-ref name="toggle" scoped="" ref="0x403f9508"/>
        <function-ref name="isOutput" scoped="" ref="0x403f95e8"/>
        <function-ref name="get" scoped="" ref="0x403f96c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f97a8"/>
        <function-ref name="set" scoped="" ref="0x403f9888"/>
        <function-ref name="clr" scoped="" ref="0x403f9968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403f2228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403f2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f2400"/>
        <function-ref name="isInput" scoped="" ref="0x403f24e0"/>
        <function-ref name="toggle" scoped="" ref="0x403f25c0"/>
        <function-ref name="isOutput" scoped="" ref="0x403f26a0"/>
        <function-ref name="get" scoped="" ref="0x403f2780"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f2860"/>
        <function-ref name="set" scoped="" ref="0x403f2940"/>
        <function-ref name="clr" scoped="" ref="0x403f2a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403fbe48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403fbe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fa050"/>
        <function-ref name="isInput" scoped="" ref="0x403fa130"/>
        <function-ref name="toggle" scoped="" ref="0x403fa210"/>
        <function-ref name="isOutput" scoped="" ref="0x403fa2f0"/>
        <function-ref name="get" scoped="" ref="0x403fa3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fa4b0"/>
        <function-ref name="set" scoped="" ref="0x403fa590"/>
        <function-ref name="clr" scoped="" ref="0x403fa670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403f9ac8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403f9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f9ca0"/>
        <function-ref name="isInput" scoped="" ref="0x403f9d80"/>
        <function-ref name="toggle" scoped="" ref="0x403f9e60"/>
        <function-ref name="isOutput" scoped="" ref="0x403f8010"/>
        <function-ref name="get" scoped="" ref="0x403f80f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f81d0"/>
        <function-ref name="set" scoped="" ref="0x403f82b0"/>
        <function-ref name="clr" scoped="" ref="0x403f8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403f2b80" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403f2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f2d58"/>
        <function-ref name="isInput" scoped="" ref="0x403f2e38"/>
        <function-ref name="toggle" scoped="" ref="0x403f2f18"/>
        <function-ref name="isOutput" scoped="" ref="0x403fb010"/>
        <function-ref name="get" scoped="" ref="0x403fb0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fb1d0"/>
        <function-ref name="set" scoped="" ref="0x403fb2b0"/>
        <function-ref name="clr" scoped="" ref="0x403fb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403fa7d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403fa7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fa9a8"/>
        <function-ref name="isInput" scoped="" ref="0x403faa88"/>
        <function-ref name="toggle" scoped="" ref="0x403fab68"/>
        <function-ref name="isOutput" scoped="" ref="0x403fac48"/>
        <function-ref name="get" scoped="" ref="0x403fad28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fae08"/>
        <function-ref name="set" scoped="" ref="0x403faee8"/>
        <function-ref name="clr" scoped="" ref="0x403f9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403f84f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403f84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f86c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f87a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f8888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f8968"/>
        <function-ref name="get" scoped="" ref="0x403f8a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f8b28"/>
        <function-ref name="set" scoped="" ref="0x403f8c08"/>
        <function-ref name="clr" scoped="" ref="0x403f8ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41423de8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41423de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4141f010"/>
        <function-ref name="isInput" scoped="" ref="0x4141f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4141f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4141f2b0"/>
        <function-ref name="get" scoped="" ref="0x4141f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4141f470"/>
        <function-ref name="set" scoped="" ref="0x4141f550"/>
        <function-ref name="clr" scoped="" ref="0x4141f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4141e7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4141e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4141e9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4141eab0"/>
        <function-ref name="toggle" scoped="" ref="0x4141eb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4141ec70"/>
        <function-ref name="get" scoped="" ref="0x4141ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4141ee30"/>
        <function-ref name="set" scoped="" ref="0x4141ef10"/>
        <function-ref name="clr" scoped="" ref="0x4141d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4141c228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4141c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4141c400"/>
        <function-ref name="isInput" scoped="" ref="0x4141c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4141c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4141c6a0"/>
        <function-ref name="get" scoped="" ref="0x4141c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4141c860"/>
        <function-ref name="set" scoped="" ref="0x4141c940"/>
        <function-ref name="clr" scoped="" ref="0x4141ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4141bc08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4141bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4141bde0"/>
        <function-ref name="isInput" scoped="" ref="0x4141bec0"/>
        <function-ref name="toggle" scoped="" ref="0x4141a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4141a0f0"/>
        <function-ref name="get" scoped="" ref="0x4141a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4141a2b0"/>
        <function-ref name="set" scoped="" ref="0x4141a390"/>
        <function-ref name="clr" scoped="" ref="0x4141a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414196c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414196c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41419898"/>
        <function-ref name="isInput" scoped="" ref="0x41419978"/>
        <function-ref name="toggle" scoped="" ref="0x41419a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41419b38"/>
        <function-ref name="get" scoped="" ref="0x41419c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41419cf8"/>
        <function-ref name="set" scoped="" ref="0x41419dd8"/>
        <function-ref name="clr" scoped="" ref="0x41419eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414160b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414160b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41416288"/>
        <function-ref name="isInput" scoped="" ref="0x41416368"/>
        <function-ref name="toggle" scoped="" ref="0x41416448"/>
        <function-ref name="isOutput" scoped="" ref="0x41416528"/>
        <function-ref name="get" scoped="" ref="0x41416608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414166e8"/>
        <function-ref name="set" scoped="" ref="0x414167c8"/>
        <function-ref name="clr" scoped="" ref="0x414168a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41415a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41415a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41415c60"/>
        <function-ref name="isInput" scoped="" ref="0x41415d40"/>
        <function-ref name="toggle" scoped="" ref="0x41415e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41415f00"/>
        <function-ref name="get" scoped="" ref="0x41414010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414140f0"/>
        <function-ref name="set" scoped="" ref="0x414141d0"/>
        <function-ref name="clr" scoped="" ref="0x414142b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41413538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41413538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41413710"/>
        <function-ref name="isInput" scoped="" ref="0x414137f0"/>
        <function-ref name="toggle" scoped="" ref="0x414138d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414139b0"/>
        <function-ref name="get" scoped="" ref="0x41413a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41413b70"/>
        <function-ref name="set" scoped="" ref="0x41413c50"/>
        <function-ref name="clr" scoped="" ref="0x41413d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403fee48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403fee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fd050"/>
        <function-ref name="isInput" scoped="" ref="0x403fd130"/>
        <function-ref name="toggle" scoped="" ref="0x403fd210"/>
        <function-ref name="isOutput" scoped="" ref="0x403fd2f0"/>
        <function-ref name="get" scoped="" ref="0x403fd3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fd4b0"/>
        <function-ref name="set" scoped="" ref="0x403fd590"/>
        <function-ref name="clr" scoped="" ref="0x403fd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40405ac8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40405ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40405ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40405d80"/>
        <function-ref name="toggle" scoped="" ref="0x40405e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40404010"/>
        <function-ref name="get" scoped="" ref="0x404040f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404041d0"/>
        <function-ref name="set" scoped="" ref="0x404042b0"/>
        <function-ref name="clr" scoped="" ref="0x40404390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403ffb00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403ffb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ffcd8"/>
        <function-ref name="isInput" scoped="" ref="0x403ffdb8"/>
        <function-ref name="toggle" scoped="" ref="0x403ffe98"/>
        <function-ref name="isOutput" scoped="" ref="0x403fe010"/>
        <function-ref name="get" scoped="" ref="0x403fe0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fe1d0"/>
        <function-ref name="set" scoped="" ref="0x403fe2b0"/>
        <function-ref name="clr" scoped="" ref="0x403fe390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403fd7d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403fd7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fd9a8"/>
        <function-ref name="isInput" scoped="" ref="0x403fda88"/>
        <function-ref name="toggle" scoped="" ref="0x403fdb68"/>
        <function-ref name="isOutput" scoped="" ref="0x403fdc48"/>
        <function-ref name="get" scoped="" ref="0x403fdd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fde08"/>
        <function-ref name="set" scoped="" ref="0x403fdee8"/>
        <function-ref name="clr" scoped="" ref="0x40405010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404044f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404044f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404046c8"/>
        <function-ref name="isInput" scoped="" ref="0x404047a8"/>
        <function-ref name="toggle" scoped="" ref="0x40404888"/>
        <function-ref name="isOutput" scoped="" ref="0x40404968"/>
        <function-ref name="get" scoped="" ref="0x40404a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404b28"/>
        <function-ref name="set" scoped="" ref="0x40404c08"/>
        <function-ref name="clr" scoped="" ref="0x40404ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403fe4f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403fe4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fe6c8"/>
        <function-ref name="isInput" scoped="" ref="0x403fe7a8"/>
        <function-ref name="toggle" scoped="" ref="0x403fe888"/>
        <function-ref name="isOutput" scoped="" ref="0x403fe968"/>
        <function-ref name="get" scoped="" ref="0x403fea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403feb28"/>
        <function-ref name="set" scoped="" ref="0x403fec08"/>
        <function-ref name="clr" scoped="" ref="0x403fece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40405170" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40405170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40405348"/>
        <function-ref name="isInput" scoped="" ref="0x40405428"/>
        <function-ref name="toggle" scoped="" ref="0x40405508"/>
        <function-ref name="isOutput" scoped="" ref="0x404055e8"/>
        <function-ref name="get" scoped="" ref="0x404056c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404057a8"/>
        <function-ref name="set" scoped="" ref="0x40405888"/>
        <function-ref name="clr" scoped="" ref="0x40405968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40404e48" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40404e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403050"/>
        <function-ref name="isInput" scoped="" ref="0x40403130"/>
        <function-ref name="toggle" scoped="" ref="0x40403210"/>
        <function-ref name="isOutput" scoped="" ref="0x404032f0"/>
        <function-ref name="get" scoped="" ref="0x404033d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404034b0"/>
        <function-ref name="set" scoped="" ref="0x40403590"/>
        <function-ref name="clr" scoped="" ref="0x40403670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41432938" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41432938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41432b10"/>
        <function-ref name="isInput" scoped="" ref="0x41432bf0"/>
        <function-ref name="toggle" scoped="" ref="0x41432cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x41432db0"/>
        <function-ref name="get" scoped="" ref="0x41432e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41431010"/>
        <function-ref name="set" scoped="" ref="0x414310f0"/>
        <function-ref name="clr" scoped="" ref="0x414311d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414303b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414303b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41430588"/>
        <function-ref name="isInput" scoped="" ref="0x41430668"/>
        <function-ref name="toggle" scoped="" ref="0x41430748"/>
        <function-ref name="isOutput" scoped="" ref="0x41430828"/>
        <function-ref name="get" scoped="" ref="0x41430908"/>
        <function-ref name="makeOutput" scoped="" ref="0x414309e8"/>
        <function-ref name="set" scoped="" ref="0x41430ac8"/>
        <function-ref name="clr" scoped="" ref="0x41430ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4142fd70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4142fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4142e010"/>
        <function-ref name="isInput" scoped="" ref="0x4142e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4142e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4142e2b0"/>
        <function-ref name="get" scoped="" ref="0x4142e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4142e470"/>
        <function-ref name="set" scoped="" ref="0x4142e550"/>
        <function-ref name="clr" scoped="" ref="0x4142e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4142d7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4142d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4142d9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4142dab0"/>
        <function-ref name="toggle" scoped="" ref="0x4142db90"/>
        <function-ref name="isOutput" scoped="" ref="0x4142dc70"/>
        <function-ref name="get" scoped="" ref="0x4142dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4142de30"/>
        <function-ref name="set" scoped="" ref="0x4142df10"/>
        <function-ref name="clr" scoped="" ref="0x4142c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4142b228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4142b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4142b400"/>
        <function-ref name="isInput" scoped="" ref="0x4142b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4142b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4142b6a0"/>
        <function-ref name="get" scoped="" ref="0x4142b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4142b860"/>
        <function-ref name="set" scoped="" ref="0x4142b940"/>
        <function-ref name="clr" scoped="" ref="0x4142ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4142ac08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4142ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4142ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4142aec0"/>
        <function-ref name="toggle" scoped="" ref="0x41429010"/>
        <function-ref name="isOutput" scoped="" ref="0x414290f0"/>
        <function-ref name="get" scoped="" ref="0x414291d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x414292b0"/>
        <function-ref name="set" scoped="" ref="0x41429390"/>
        <function-ref name="clr" scoped="" ref="0x41429470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414286c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414286c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41428898"/>
        <function-ref name="isInput" scoped="" ref="0x41428978"/>
        <function-ref name="toggle" scoped="" ref="0x41428a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41428b38"/>
        <function-ref name="get" scoped="" ref="0x41428c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41428cf8"/>
        <function-ref name="set" scoped="" ref="0x41428dd8"/>
        <function-ref name="clr" scoped="" ref="0x41428eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414720b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414720b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41472288"/>
        <function-ref name="isInput" scoped="" ref="0x41472368"/>
        <function-ref name="toggle" scoped="" ref="0x41472448"/>
        <function-ref name="isOutput" scoped="" ref="0x41472528"/>
        <function-ref name="get" scoped="" ref="0x41472608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414726e8"/>
        <function-ref name="set" scoped="" ref="0x414727c8"/>
        <function-ref name="clr" scoped="" ref="0x414728a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404096b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404096b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409888"/>
        <function-ref name="isInput" scoped="" ref="0x40409968"/>
        <function-ref name="toggle" scoped="" ref="0x40409a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40409b28"/>
        <function-ref name="get" scoped="" ref="0x40409c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40409ce8"/>
        <function-ref name="set" scoped="" ref="0x40409dc8"/>
        <function-ref name="clr" scoped="" ref="0x40409ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40407330" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40407330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407508"/>
        <function-ref name="isInput" scoped="" ref="0x404075e8"/>
        <function-ref name="toggle" scoped="" ref="0x404076c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404077a8"/>
        <function-ref name="get" scoped="" ref="0x40407888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407968"/>
        <function-ref name="set" scoped="" ref="0x40407a48"/>
        <function-ref name="clr" scoped="" ref="0x40407b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4040a3d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4040a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4040a690"/>
        <function-ref name="toggle" scoped="" ref="0x4040a770"/>
        <function-ref name="isOutput" scoped="" ref="0x4040a850"/>
        <function-ref name="get" scoped="" ref="0x4040a930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040aa10"/>
        <function-ref name="set" scoped="" ref="0x4040aaf0"/>
        <function-ref name="clr" scoped="" ref="0x4040abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40408030" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40408030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40408208"/>
        <function-ref name="isInput" scoped="" ref="0x404082e8"/>
        <function-ref name="toggle" scoped="" ref="0x404083c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404084a8"/>
        <function-ref name="get" scoped="" ref="0x40408588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40408668"/>
        <function-ref name="set" scoped="" ref="0x40408748"/>
        <function-ref name="clr" scoped="" ref="0x40408828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40407c88" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40407c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407e60"/>
        <function-ref name="isInput" scoped="" ref="0x40406010"/>
        <function-ref name="toggle" scoped="" ref="0x404060f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404061d0"/>
        <function-ref name="get" scoped="" ref="0x404062b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406390"/>
        <function-ref name="set" scoped="" ref="0x40406470"/>
        <function-ref name="clr" scoped="" ref="0x40406550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4040ad30" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4040ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040af08"/>
        <function-ref name="isInput" scoped="" ref="0x40409010"/>
        <function-ref name="toggle" scoped="" ref="0x404090f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404091d0"/>
        <function-ref name="get" scoped="" ref="0x404092b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40409390"/>
        <function-ref name="set" scoped="" ref="0x40409470"/>
        <function-ref name="clr" scoped="" ref="0x40409550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40408988" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40408988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40408b60"/>
        <function-ref name="isInput" scoped="" ref="0x40408c40"/>
        <function-ref name="toggle" scoped="" ref="0x40408d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40408e00"/>
        <function-ref name="get" scoped="" ref="0x40408ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407010"/>
        <function-ref name="set" scoped="" ref="0x404070f0"/>
        <function-ref name="clr" scoped="" ref="0x404071d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404066b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404066b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40406888"/>
        <function-ref name="isInput" scoped="" ref="0x40406968"/>
        <function-ref name="toggle" scoped="" ref="0x40406a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40406b28"/>
        <function-ref name="get" scoped="" ref="0x40406c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406ce8"/>
        <function-ref name="set" scoped="" ref="0x40406dc8"/>
        <function-ref name="clr" scoped="" ref="0x40406ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41492538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41492538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41492710"/>
        <function-ref name="isInput" scoped="" ref="0x414927f0"/>
        <function-ref name="toggle" scoped="" ref="0x414928d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414929b0"/>
        <function-ref name="get" scoped="" ref="0x41492a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41492b70"/>
        <function-ref name="set" scoped="" ref="0x41492c50"/>
        <function-ref name="clr" scoped="" ref="0x41492d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41490010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41490010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414901e8"/>
        <function-ref name="isInput" scoped="" ref="0x414902c8"/>
        <function-ref name="toggle" scoped="" ref="0x414903a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41490488"/>
        <function-ref name="get" scoped="" ref="0x41490568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41490648"/>
        <function-ref name="set" scoped="" ref="0x41490728"/>
        <function-ref name="clr" scoped="" ref="0x41490808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4148f9e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4148f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4148fbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4148fca0"/>
        <function-ref name="toggle" scoped="" ref="0x4148fd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4148fe60"/>
        <function-ref name="get" scoped="" ref="0x4148e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4148e0f0"/>
        <function-ref name="set" scoped="" ref="0x4148e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4148e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4148d538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4148d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4148d710"/>
        <function-ref name="isInput" scoped="" ref="0x4148d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4148d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4148d9b0"/>
        <function-ref name="get" scoped="" ref="0x4148da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4148db70"/>
        <function-ref name="set" scoped="" ref="0x4148dc50"/>
        <function-ref name="clr" scoped="" ref="0x4148dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4148a010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4148a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4148a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4148a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4148a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4148a488"/>
        <function-ref name="get" scoped="" ref="0x4148a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4148a648"/>
        <function-ref name="set" scoped="" ref="0x4148a728"/>
        <function-ref name="clr" scoped="" ref="0x4148a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414899e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414899e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41489bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41489ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41489d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41489e60"/>
        <function-ref name="get" scoped="" ref="0x41488010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414880f0"/>
        <function-ref name="set" scoped="" ref="0x414881d0"/>
        <function-ref name="clr" scoped="" ref="0x414882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41487538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41487538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41487710"/>
        <function-ref name="isInput" scoped="" ref="0x414877f0"/>
        <function-ref name="toggle" scoped="" ref="0x414878d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414879b0"/>
        <function-ref name="get" scoped="" ref="0x41487a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41487b70"/>
        <function-ref name="set" scoped="" ref="0x41487c50"/>
        <function-ref name="clr" scoped="" ref="0x41487d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41485010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41485010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414851e8"/>
        <function-ref name="isInput" scoped="" ref="0x414852c8"/>
        <function-ref name="toggle" scoped="" ref="0x414853a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41485488"/>
        <function-ref name="get" scoped="" ref="0x41485568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41485648"/>
        <function-ref name="set" scoped="" ref="0x41485728"/>
        <function-ref name="clr" scoped="" ref="0x41485808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40414170" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40414170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40414348"/>
        <function-ref name="isInput" scoped="" ref="0x40414428"/>
        <function-ref name="toggle" scoped="" ref="0x40414508"/>
        <function-ref name="isOutput" scoped="" ref="0x404145e8"/>
        <function-ref name="get" scoped="" ref="0x404146c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404147a8"/>
        <function-ref name="set" scoped="" ref="0x40414888"/>
        <function-ref name="clr" scoped="" ref="0x40414968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40413e48" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40413e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412050"/>
        <function-ref name="isInput" scoped="" ref="0x40412130"/>
        <function-ref name="toggle" scoped="" ref="0x40412210"/>
        <function-ref name="isOutput" scoped="" ref="0x404122f0"/>
        <function-ref name="get" scoped="" ref="0x404123d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404124b0"/>
        <function-ref name="set" scoped="" ref="0x40412590"/>
        <function-ref name="clr" scoped="" ref="0x40412670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4040cdc8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4040cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040b010"/>
        <function-ref name="isInput" scoped="" ref="0x4040b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4040b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4040b2b0"/>
        <function-ref name="get" scoped="" ref="0x4040b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040b470"/>
        <function-ref name="set" scoped="" ref="0x4040b550"/>
        <function-ref name="clr" scoped="" ref="0x4040b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40414ac8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40414ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40414ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40414d80"/>
        <function-ref name="toggle" scoped="" ref="0x40414e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40413010"/>
        <function-ref name="get" scoped="" ref="0x404130f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404131d0"/>
        <function-ref name="set" scoped="" ref="0x404132b0"/>
        <function-ref name="clr" scoped="" ref="0x40413390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404127d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404127d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404129a8"/>
        <function-ref name="isInput" scoped="" ref="0x40412a88"/>
        <function-ref name="toggle" scoped="" ref="0x40412b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40412c48"/>
        <function-ref name="get" scoped="" ref="0x40412d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412e08"/>
        <function-ref name="set" scoped="" ref="0x40412ee8"/>
        <function-ref name="clr" scoped="" ref="0x40411010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4040b790" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4040b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040b968"/>
        <function-ref name="isInput" scoped="" ref="0x4040ba48"/>
        <function-ref name="toggle" scoped="" ref="0x4040bb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4040bc08"/>
        <function-ref name="get" scoped="" ref="0x4040bce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040bdc8"/>
        <function-ref name="set" scoped="" ref="0x4040bea8"/>
        <function-ref name="clr" scoped="" ref="0x40414010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404134f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404134f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404136c8"/>
        <function-ref name="isInput" scoped="" ref="0x404137a8"/>
        <function-ref name="toggle" scoped="" ref="0x40413888"/>
        <function-ref name="isOutput" scoped="" ref="0x40413968"/>
        <function-ref name="get" scoped="" ref="0x40413a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413b28"/>
        <function-ref name="set" scoped="" ref="0x40413c08"/>
        <function-ref name="clr" scoped="" ref="0x40413ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40411170" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40411170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40411348"/>
        <function-ref name="isInput" scoped="" ref="0x40411428"/>
        <function-ref name="toggle" scoped="" ref="0x40411508"/>
        <function-ref name="isOutput" scoped="" ref="0x404115e8"/>
        <function-ref name="get" scoped="" ref="0x404116c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404117a8"/>
        <function-ref name="set" scoped="" ref="0x40411888"/>
        <function-ref name="clr" scoped="" ref="0x40411968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414a5418" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414a5418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414a55f0"/>
        <function-ref name="isInput" scoped="" ref="0x414a56d0"/>
        <function-ref name="toggle" scoped="" ref="0x414a57b0"/>
        <function-ref name="isOutput" scoped="" ref="0x414a5890"/>
        <function-ref name="get" scoped="" ref="0x414a5970"/>
        <function-ref name="makeOutput" scoped="" ref="0x414a5a50"/>
        <function-ref name="set" scoped="" ref="0x414a5b30"/>
        <function-ref name="clr" scoped="" ref="0x414a5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414a4de0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414a4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414a3010"/>
        <function-ref name="isInput" scoped="" ref="0x414a30f0"/>
        <function-ref name="toggle" scoped="" ref="0x414a31d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414a32b0"/>
        <function-ref name="get" scoped="" ref="0x414a3390"/>
        <function-ref name="makeOutput" scoped="" ref="0x414a3470"/>
        <function-ref name="set" scoped="" ref="0x414a3550"/>
        <function-ref name="clr" scoped="" ref="0x414a3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414a27f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414a27f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414a29d0"/>
        <function-ref name="isInput" scoped="" ref="0x414a2ab0"/>
        <function-ref name="toggle" scoped="" ref="0x414a2b90"/>
        <function-ref name="isOutput" scoped="" ref="0x414a2c70"/>
        <function-ref name="get" scoped="" ref="0x414a2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x414a2e30"/>
        <function-ref name="set" scoped="" ref="0x414a2f10"/>
        <function-ref name="clr" scoped="" ref="0x414a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414a0228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414a0228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414a0400"/>
        <function-ref name="isInput" scoped="" ref="0x414a04e0"/>
        <function-ref name="toggle" scoped="" ref="0x414a05c0"/>
        <function-ref name="isOutput" scoped="" ref="0x414a06a0"/>
        <function-ref name="get" scoped="" ref="0x414a0780"/>
        <function-ref name="makeOutput" scoped="" ref="0x414a0860"/>
        <function-ref name="set" scoped="" ref="0x414a0940"/>
        <function-ref name="clr" scoped="" ref="0x414a0a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4149fc08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4149fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4149fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4149fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4149e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4149e0f0"/>
        <function-ref name="get" scoped="" ref="0x4149e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4149e2b0"/>
        <function-ref name="set" scoped="" ref="0x4149e390"/>
        <function-ref name="clr" scoped="" ref="0x4149e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4149d6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4149d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4149d898"/>
        <function-ref name="isInput" scoped="" ref="0x4149d978"/>
        <function-ref name="toggle" scoped="" ref="0x4149da58"/>
        <function-ref name="isOutput" scoped="" ref="0x4149db38"/>
        <function-ref name="get" scoped="" ref="0x4149dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4149dcf8"/>
        <function-ref name="set" scoped="" ref="0x4149ddd8"/>
        <function-ref name="clr" scoped="" ref="0x4149deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4149b0b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4149b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4149b288"/>
        <function-ref name="isInput" scoped="" ref="0x4149b368"/>
        <function-ref name="toggle" scoped="" ref="0x4149b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4149b528"/>
        <function-ref name="get" scoped="" ref="0x4149b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4149b6e8"/>
        <function-ref name="set" scoped="" ref="0x4149b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4149b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4149aa88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4149aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4149ac60"/>
        <function-ref name="isInput" scoped="" ref="0x4149ad40"/>
        <function-ref name="toggle" scoped="" ref="0x4149ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x4149af00"/>
        <function-ref name="get" scoped="" ref="0x414e6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414e60f0"/>
        <function-ref name="set" scoped="" ref="0x414e61d0"/>
        <function-ref name="clr" scoped="" ref="0x414e62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404169e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404169e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40416ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40416d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40416e60"/>
        <function-ref name="get" scoped="" ref="0x40415010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404150f0"/>
        <function-ref name="set" scoped="" ref="0x404151d0"/>
        <function-ref name="clr" scoped="" ref="0x404152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4041e790" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4041e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e968"/>
        <function-ref name="isInput" scoped="" ref="0x4041ea48"/>
        <function-ref name="toggle" scoped="" ref="0x4041eb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4041ec08"/>
        <function-ref name="get" scoped="" ref="0x4041ece8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041edc8"/>
        <function-ref name="set" scoped="" ref="0x4041eea8"/>
        <function-ref name="clr" scoped="" ref="0x4041d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404176f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404176f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404178d0"/>
        <function-ref name="isInput" scoped="" ref="0x404179b0"/>
        <function-ref name="toggle" scoped="" ref="0x40417a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40417b70"/>
        <function-ref name="get" scoped="" ref="0x40417c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40417d30"/>
        <function-ref name="set" scoped="" ref="0x40417e10"/>
        <function-ref name="clr" scoped="" ref="0x40417ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40415410" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40415410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404155e8"/>
        <function-ref name="isInput" scoped="" ref="0x404156c8"/>
        <function-ref name="toggle" scoped="" ref="0x404157a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40415888"/>
        <function-ref name="get" scoped="" ref="0x40415968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415a48"/>
        <function-ref name="set" scoped="" ref="0x40415b28"/>
        <function-ref name="clr" scoped="" ref="0x40415c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4041d170" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4041d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d348"/>
        <function-ref name="isInput" scoped="" ref="0x4041d428"/>
        <function-ref name="toggle" scoped="" ref="0x4041d508"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d5e8"/>
        <function-ref name="get" scoped="" ref="0x4041d6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d7a8"/>
        <function-ref name="set" scoped="" ref="0x4041d888"/>
        <function-ref name="clr" scoped="" ref="0x4041d968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40416090" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40416090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416268"/>
        <function-ref name="isInput" scoped="" ref="0x40416348"/>
        <function-ref name="toggle" scoped="" ref="0x40416428"/>
        <function-ref name="isOutput" scoped="" ref="0x40416508"/>
        <function-ref name="get" scoped="" ref="0x404165e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404166c8"/>
        <function-ref name="set" scoped="" ref="0x404167a8"/>
        <function-ref name="clr" scoped="" ref="0x40416888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40415d68" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40415d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e010"/>
        <function-ref name="isInput" scoped="" ref="0x4041e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4041e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e2b0"/>
        <function-ref name="get" scoped="" ref="0x4041e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e470"/>
        <function-ref name="set" scoped="" ref="0x4041e550"/>
        <function-ref name="clr" scoped="" ref="0x4041e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4041dac8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4041dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041dca0"/>
        <function-ref name="isInput" scoped="" ref="0x4041dd80"/>
        <function-ref name="toggle" scoped="" ref="0x4041de60"/>
        <function-ref name="isOutput" scoped="" ref="0x4041c010"/>
        <function-ref name="get" scoped="" ref="0x4041c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041c1d0"/>
        <function-ref name="set" scoped="" ref="0x4041c2b0"/>
        <function-ref name="clr" scoped="" ref="0x4041c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4150cde8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4150cde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41508010"/>
        <function-ref name="isInput" scoped="" ref="0x415080f0"/>
        <function-ref name="toggle" scoped="" ref="0x415081d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415082b0"/>
        <function-ref name="get" scoped="" ref="0x41508390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41508470"/>
        <function-ref name="set" scoped="" ref="0x41508550"/>
        <function-ref name="clr" scoped="" ref="0x41508630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415077f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415077f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415079d0"/>
        <function-ref name="isInput" scoped="" ref="0x41507ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41507b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41507c70"/>
        <function-ref name="get" scoped="" ref="0x41507d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41507e30"/>
        <function-ref name="set" scoped="" ref="0x41507f10"/>
        <function-ref name="clr" scoped="" ref="0x41505010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41504228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41504228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41504400"/>
        <function-ref name="isInput" scoped="" ref="0x415044e0"/>
        <function-ref name="toggle" scoped="" ref="0x415045c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415046a0"/>
        <function-ref name="get" scoped="" ref="0x41504780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41504860"/>
        <function-ref name="set" scoped="" ref="0x41504940"/>
        <function-ref name="clr" scoped="" ref="0x41504a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41503c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41503c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41503de0"/>
        <function-ref name="isInput" scoped="" ref="0x41503ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41502010"/>
        <function-ref name="isOutput" scoped="" ref="0x415020f0"/>
        <function-ref name="get" scoped="" ref="0x415021d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x415022b0"/>
        <function-ref name="set" scoped="" ref="0x41502390"/>
        <function-ref name="clr" scoped="" ref="0x41502470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415016c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415016c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41501898"/>
        <function-ref name="isInput" scoped="" ref="0x41501978"/>
        <function-ref name="toggle" scoped="" ref="0x41501a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41501b38"/>
        <function-ref name="get" scoped="" ref="0x41501c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41501cf8"/>
        <function-ref name="set" scoped="" ref="0x41501dd8"/>
        <function-ref name="clr" scoped="" ref="0x41501eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414ff0b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414ff0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414ff288"/>
        <function-ref name="isInput" scoped="" ref="0x414ff368"/>
        <function-ref name="toggle" scoped="" ref="0x414ff448"/>
        <function-ref name="isOutput" scoped="" ref="0x414ff528"/>
        <function-ref name="get" scoped="" ref="0x414ff608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414ff6e8"/>
        <function-ref name="set" scoped="" ref="0x414ff7c8"/>
        <function-ref name="clr" scoped="" ref="0x414ff8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414fea88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414fea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414fec60"/>
        <function-ref name="isInput" scoped="" ref="0x414fed40"/>
        <function-ref name="toggle" scoped="" ref="0x414fee20"/>
        <function-ref name="isOutput" scoped="" ref="0x414fef00"/>
        <function-ref name="get" scoped="" ref="0x414fd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414fd0f0"/>
        <function-ref name="set" scoped="" ref="0x414fd1d0"/>
        <function-ref name="clr" scoped="" ref="0x414fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414fc538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414fc538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414fc710"/>
        <function-ref name="isInput" scoped="" ref="0x414fc7f0"/>
        <function-ref name="toggle" scoped="" ref="0x414fc8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414fc9b0"/>
        <function-ref name="get" scoped="" ref="0x414fca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414fcb70"/>
        <function-ref name="set" scoped="" ref="0x414fcc50"/>
        <function-ref name="clr" scoped="" ref="0x414fcd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40423ca0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40423ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423e78"/>
        <function-ref name="isInput" scoped="" ref="0x40422010"/>
        <function-ref name="toggle" scoped="" ref="0x404220f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404221d0"/>
        <function-ref name="get" scoped="" ref="0x404222b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422390"/>
        <function-ref name="set" scoped="" ref="0x40422470"/>
        <function-ref name="clr" scoped="" ref="0x40422550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4042b538" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4042b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b710"/>
        <function-ref name="isInput" scoped="" ref="0x4042b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4042b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b9b0"/>
        <function-ref name="get" scoped="" ref="0x4042ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042bb70"/>
        <function-ref name="set" scoped="" ref="0x4042bc50"/>
        <function-ref name="clr" scoped="" ref="0x4042bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40434d48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40434d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434f20"/>
        <function-ref name="isInput" scoped="" ref="0x40433018"/>
        <function-ref name="toggle" scoped="" ref="0x404330f8"/>
        <function-ref name="isOutput" scoped="" ref="0x404331d8"/>
        <function-ref name="get" scoped="" ref="0x404332b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433398"/>
        <function-ref name="set" scoped="" ref="0x40433478"/>
        <function-ref name="clr" scoped="" ref="0x40433558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40431538" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40431538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431710"/>
        <function-ref name="isInput" scoped="" ref="0x404317f0"/>
        <function-ref name="toggle" scoped="" ref="0x404318d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404319b0"/>
        <function-ref name="get" scoped="" ref="0x40431a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431b70"/>
        <function-ref name="set" scoped="" ref="0x40431c50"/>
        <function-ref name="clr" scoped="" ref="0x40431d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4043ad48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4043ad48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043af20"/>
        <function-ref name="isInput" scoped="" ref="0x40439018"/>
        <function-ref name="toggle" scoped="" ref="0x404390f8"/>
        <function-ref name="isOutput" scoped="" ref="0x404391d8"/>
        <function-ref name="get" scoped="" ref="0x404392b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439398"/>
        <function-ref name="set" scoped="" ref="0x40439478"/>
        <function-ref name="clr" scoped="" ref="0x40439558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40437538" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40437538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437710"/>
        <function-ref name="isInput" scoped="" ref="0x404377f0"/>
        <function-ref name="toggle" scoped="" ref="0x404378d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404379b0"/>
        <function-ref name="get" scoped="" ref="0x40437a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40437b70"/>
        <function-ref name="set" scoped="" ref="0x40437c50"/>
        <function-ref name="clr" scoped="" ref="0x40437d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40441dc8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40441dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40440010"/>
        <function-ref name="isInput" scoped="" ref="0x404400f0"/>
        <function-ref name="toggle" scoped="" ref="0x404401d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404402b0"/>
        <function-ref name="get" scoped="" ref="0x40440390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40440470"/>
        <function-ref name="set" scoped="" ref="0x40440550"/>
        <function-ref name="clr" scoped="" ref="0x40440630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4043d5e0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4043d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043d7b8"/>
        <function-ref name="isInput" scoped="" ref="0x4043d898"/>
        <function-ref name="toggle" scoped="" ref="0x4043d978"/>
        <function-ref name="isOutput" scoped="" ref="0x4043da58"/>
        <function-ref name="get" scoped="" ref="0x4043db38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043dc18"/>
        <function-ref name="set" scoped="" ref="0x4043dcf8"/>
        <function-ref name="clr" scoped="" ref="0x4043ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40447e98" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40447e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404460c0"/>
        <function-ref name="isInput" scoped="" ref="0x404461a0"/>
        <function-ref name="toggle" scoped="" ref="0x40446280"/>
        <function-ref name="isOutput" scoped="" ref="0x40446360"/>
        <function-ref name="get" scoped="" ref="0x40446440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40446520"/>
        <function-ref name="set" scoped="" ref="0x40446600"/>
        <function-ref name="clr" scoped="" ref="0x404466e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404446c0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404446c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40444898"/>
        <function-ref name="isInput" scoped="" ref="0x40444978"/>
        <function-ref name="toggle" scoped="" ref="0x40444a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40444b38"/>
        <function-ref name="get" scoped="" ref="0x40444c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40444cf8"/>
        <function-ref name="set" scoped="" ref="0x40444dd8"/>
        <function-ref name="clr" scoped="" ref="0x40444eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4044de98" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4044de98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044c0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4044c1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4044c280"/>
        <function-ref name="isOutput" scoped="" ref="0x4044c360"/>
        <function-ref name="get" scoped="" ref="0x4044c440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044c520"/>
        <function-ref name="set" scoped="" ref="0x4044c600"/>
        <function-ref name="clr" scoped="" ref="0x4044c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4044a6c0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4044a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044a898"/>
        <function-ref name="isInput" scoped="" ref="0x4044a978"/>
        <function-ref name="toggle" scoped="" ref="0x4044aa58"/>
        <function-ref name="isOutput" scoped="" ref="0x4044ab38"/>
        <function-ref name="get" scoped="" ref="0x4044ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044acf8"/>
        <function-ref name="set" scoped="" ref="0x4044add8"/>
        <function-ref name="clr" scoped="" ref="0x4044aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40453e98" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40453e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404520c0"/>
        <function-ref name="isInput" scoped="" ref="0x404521a0"/>
        <function-ref name="toggle" scoped="" ref="0x40452280"/>
        <function-ref name="isOutput" scoped="" ref="0x40452360"/>
        <function-ref name="get" scoped="" ref="0x40452440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452520"/>
        <function-ref name="set" scoped="" ref="0x40452600"/>
        <function-ref name="clr" scoped="" ref="0x404526e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4046d6b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4046d6b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402e4ce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402e4ce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046d888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4046da60" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4046da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4046dc38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4046dd18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4046ddf8"/>
        <function-ref name="actualMicro" scoped="" ref="0x4046ded8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4046c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4047f2f0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4047f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047f4c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4038d548" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4038d548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4038d720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4038dea8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4038dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047f0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4038d8e0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4038d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038dab8"/>
        <function-ref name="taskLoop" scoped="" ref="0x4038db98"/>
        <function-ref name="runNextTask" scoped="" ref="0x4038dc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402f2bc0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402f2d98"/>
        <function-ref name="runTask" scoped="" ref="0x402f2e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402eb408" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402eb408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402eb5e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402eb6c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402eb7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40363d30" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40363d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40363f08"/>
        <function-ref name="runTask" scoped="" ref="0x40362010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403629c0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403629c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40362b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403634f8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403634f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403636d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403637b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40363890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403765e0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403765e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403767b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40359278" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40359278"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40359450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40379010" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40379010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403791e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataQueueManage" ref="0x404b0330" loc="21:DozerC.nc">
      <component-ref qname="DozerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x404b0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x404b0508"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x404b05e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoutingInit" ref="0x404b3210" loc="20:DozerC.nc">
      <component-ref qname="DozerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingInit" scoped="" ref="0x404b3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b33e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x404af518" loc="16:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x404af518"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404af6f0"/>
        <function-ref name="stopDone" scoped="" ref="0x404af7d0"/>
        <function-ref name="start" scoped="" ref="0x404af8b0"/>
        <function-ref name="stop" scoped="" ref="0x404af990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_beacon" ref="0x4050ed78" loc="75:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send_beacon" scoped="" ref="0x4050ed78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4050d010"/>
        <function-ref name="runTask" scoped="" ref="0x4050d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x404ed090" loc="29:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x404ed090"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404ed6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x404bade0" loc="15:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x404bade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404af010"/>
        <function-ref name="stopDone" scoped="" ref="0x404af0f0"/>
        <function-ref name="start" scoped="" ref="0x404af1d0"/>
        <function-ref name="stop" scoped="" ref="0x404af2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConnReqListenTimer" ref="0x404eb400" loc="24:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConnReqListenTimer" scoped="" ref="0x404eb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404eaed8"/>
        <function-ref name="fired" scoped="" ref="0x404ea190"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404ea898"/>
        <function-ref name="isOneShot" scoped="" ref="0x404ea640"/>
        <function-ref name="getdt" scoped="" ref="0x404e93a8"/>
        <function-ref name="gett0" scoped="" ref="0x404e9150"/>
        <function-ref name="isRunning" scoped="" ref="0x404ea3e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404eba28"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404eabb8"/>
        <function-ref name="startOneShot" scoped="" ref="0x404ebca8"/>
        <function-ref name="stop" scoped="" ref="0x404ebf28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SchedulerInit" ref="0x404ed9c0" loc="31:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SchedulerInit" scoped="" ref="0x404ed9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404edc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconWaitTimer" ref="0x404e0010" loc="23:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconWaitTimer" scoped="" ref="0x404e0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404dfb00"/>
        <function-ref name="fired" scoped="" ref="0x404e0d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404df4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x404df268"/>
        <function-ref name="getdt" scoped="" ref="0x404eb010"/>
        <function-ref name="gett0" scoped="" ref="0x404dfd58"/>
        <function-ref name="isRunning" scoped="" ref="0x404df010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404e0638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404df7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x404e08b8"/>
        <function-ref name="stop" scoped="" ref="0x404e0b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConnRepWaitTimer" ref="0x404e9798" loc="25:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConnRepWaitTimer" scoped="" ref="0x404e9798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404e6330"/>
        <function-ref name="fired" scoped="" ref="0x404e7540"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404e7c48"/>
        <function-ref name="isOneShot" scoped="" ref="0x404e79f0"/>
        <function-ref name="getdt" scoped="" ref="0x404e67e0"/>
        <function-ref name="gett0" scoped="" ref="0x404e6588"/>
        <function-ref name="isRunning" scoped="" ref="0x404e7798"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404e9dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404e6010"/>
        <function-ref name="startOneShot" scoped="" ref="0x404e7068"/>
        <function-ref name="stop" scoped="" ref="0x404e72e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x404f8ef0" loc="36:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x404f8ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x404f70e0"/>
        <function-ref name="rand32" scoped="" ref="0x404f71c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x404dcb80" loc="19:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x404dcb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404dcd58"/>
        <function-ref name="getPayload" scoped="" ref="0x404dce38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404dcf18"/>
        <function-ref name="cancel" scoped="" ref="0x404b8010"/>
        <function-ref name="sendDone" scoped="" ref="0x404b80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SeedInit" ref="0x404fc208" loc="37:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x404fc208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404fc830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoutingInit" ref="0x404fe860" loc="41:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingInit" scoped="" ref="0x404fe860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404fea38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x404e2c38" loc="22:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x404e2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404e1730"/>
        <function-ref name="fired" scoped="" ref="0x404d99d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404e10f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x404d9e80"/>
        <function-ref name="getdt" scoped="" ref="0x404e1be0"/>
        <function-ref name="gett0" scoped="" ref="0x404e1988"/>
        <function-ref name="isRunning" scoped="" ref="0x404d9c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404d9278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404e1410"/>
        <function-ref name="startOneShot" scoped="" ref="0x404d94f8"/>
        <function-ref name="stop" scoped="" ref="0x404d9778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighbourUpdateStopTimer" ref="0x404f0030" loc="27:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighbourUpdateStopTimer" scoped="" ref="0x404f0030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404efb38"/>
        <function-ref name="fired" scoped="" ref="0x404f0db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404ef4f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x404ef2a0"/>
        <function-ref name="getdt" scoped="" ref="0x404ee010"/>
        <function-ref name="gett0" scoped="" ref="0x404efd90"/>
        <function-ref name="isRunning" scoped="" ref="0x404ef048"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404f0658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404ef818"/>
        <function-ref name="startOneShot" scoped="" ref="0x404f08d8"/>
        <function-ref name="stop" scoped="" ref="0x404f0b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASchedule" ref="0x404ff6f8" loc="32:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x404ff6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x404f80f0"/>
        <function-ref name="getPPB" scoped="" ref="0x404ff9b0"/>
        <function-ref name="radioWakeup" scoped="" ref="0x404ffa90"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x404ffb70"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x404ffc50"/>
        <function-ref name="setPPB" scoped="" ref="0x404ffd30"/>
        <function-ref name="stopTimers" scoped="" ref="0x404ffe10"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x404ffef0"/>
        <function-ref name="startTimers" scoped="" ref="0x404f8010"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x404ff8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40504b18" loc="38:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40504b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40504cf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40504dd0"/>
        <function-ref name="led1On" scoped="" ref="0x40504eb0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404fe010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404fe0f0"/>
        <function-ref name="get" scoped="" ref="0x404fe1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x404fe2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x404fe630"/>
        <function-ref name="set" scoped="" ref="0x404fe390"/>
        <function-ref name="led0On" scoped="" ref="0x404fe470"/>
        <function-ref name="led2On" scoped="" ref="0x404fe550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendReply" ref="0x405359b8" loc="378:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendReply" scoped="" ref="0x405359b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40535b90"/>
        <function-ref name="runTask" scoped="" ref="0x40535c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x404dae08" loc="20:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x404dae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404d4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x404d6df8" loc="18:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x404d6df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404ae010"/>
        <function-ref name="source" scoped="" ref="0x404ae0f0"/>
        <function-ref name="address" scoped="" ref="0x404ae1d0"/>
        <function-ref name="destination" scoped="" ref="0x404ae2b0"/>
        <function-ref name="setSource" scoped="" ref="0x404ae390"/>
        <function-ref name="setDestination" scoped="" ref="0x404ae470"/>
        <function-ref name="type" scoped="" ref="0x404ae550"/>
        <function-ref name="setType" scoped="" ref="0x404ae630"/>
        <function-ref name="isForMe" scoped="" ref="0x404ae710"/>
        <function-ref name="setGroup" scoped="" ref="0x404ae7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x404ae8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighbourUpdateTimer" ref="0x404e6bf8" loc="26:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighbourUpdateTimer" scoped="" ref="0x404e6bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404f2730"/>
        <function-ref name="fired" scoped="" ref="0x404f39b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404f20f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x404f3e60"/>
        <function-ref name="getdt" scoped="" ref="0x404f2be0"/>
        <function-ref name="gett0" scoped="" ref="0x404f2988"/>
        <function-ref name="isRunning" scoped="" ref="0x404f3c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404f3258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404f2410"/>
        <function-ref name="startOneShot" scoped="" ref="0x404f34d8"/>
        <function-ref name="stop" scoped="" ref="0x404f3758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendRequest" ref="0x40538400" loc="366:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendRequest" scoped="" ref="0x40538400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405385d8"/>
        <function-ref name="runTask" scoped="" ref="0x405386b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405741d0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405741d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405743a8"/>
        <function-ref name="stopDone" scoped="" ref="0x40574488"/>
        <function-ref name="start" scoped="" ref="0x40574568"/>
        <function-ref name="stop" scoped="" ref="0x40574648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40579ea8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40579ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4058a9c0"/>
        <function-ref name="clear" scoped="" ref="0x4058ad70"/>
        <function-ref name="isValid" scoped="" ref="0x4058a610"/>
        <function-ref name="set" scoped="" ref="0x40588150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40574aa8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40574aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40574c80"/>
        <function-ref name="getPayload" scoped="" ref="0x40574d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40574e40"/>
        <function-ref name="cancel" scoped="" ref="0x40574f20"/>
        <function-ref name="sendDone" scoped="" ref="0x40573018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40573b18" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40573b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40573cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4056daf0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4056daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4056dcc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4056dda8"/>
        <function-ref name="getPayload" scoped="" ref="0x4056de88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40572010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405720f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4057f500" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4057f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x4057f6d8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x4057f7b8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x4057f898"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x4057f978"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x4057fa58"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x4057fb38"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x4057fc18"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x4057fcf8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x4057fdd8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x4057feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40573480" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40573480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40573658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40577518" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40577518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405776f0"/>
        <function-ref name="noAck" scoped="" ref="0x405777d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x405778b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40572288" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40572288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40572460"/>
        <function-ref name="source" scoped="" ref="0x40572540"/>
        <function-ref name="address" scoped="" ref="0x40572620"/>
        <function-ref name="destination" scoped="" ref="0x40572700"/>
        <function-ref name="setSource" scoped="" ref="0x405727e0"/>
        <function-ref name="setDestination" scoped="" ref="0x405728c0"/>
        <function-ref name="type" scoped="" ref="0x405729a0"/>
        <function-ref name="setType" scoped="" ref="0x40572a80"/>
        <function-ref name="isForMe" scoped="" ref="0x40572b60"/>
        <function-ref name="setGroup" scoped="" ref="0x40572c40"/>
        <function-ref name="localGroup" scoped="" ref="0x40572d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x405894a0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x405894a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40579010"/>
        <function-ref name="clear" scoped="" ref="0x405793c0"/>
        <function-ref name="isValid" scoped="" ref="0x40589bf0"/>
        <function-ref name="set" scoped="" ref="0x40579770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405a48c0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405a48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405a4a98"/>
        <function-ref name="stopDone" scoped="" ref="0x405a4b78"/>
        <function-ref name="start" scoped="" ref="0x405a4c58"/>
        <function-ref name="stop" scoped="" ref="0x405a4d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x405aa4d8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405aa4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a90b8"/>
        <function-ref name="get" scoped="" ref="0x405aade0"/>
        <function-ref name="isSet" scoped="" ref="0x405aab20"/>
        <function-ref name="set" scoped="" ref="0x405a9378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405a2590" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405a2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a2768"/>
        <function-ref name="payloadLength" scoped="" ref="0x405a2848"/>
        <function-ref name="getPayload" scoped="" ref="0x405a2928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405a2a08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405a2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405a31b0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405a31b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405a3388"/>
        <function-ref name="getPayload" scoped="" ref="0x405a3468"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405a3548"/>
        <function-ref name="cancel" scoped="" ref="0x405a3628"/>
        <function-ref name="sendDone" scoped="" ref="0x405a3708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405a2238" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405a2238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405a2410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x405ab0f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x405ab0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405abcb8"/>
        <function-ref name="get" scoped="" ref="0x405ab9f8"/>
        <function-ref name="isSet" scoped="" ref="0x405ab738"/>
        <function-ref name="set" scoped="" ref="0x405aa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4059f010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4059f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x4059f1e8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x4059f2c8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x4059f3a8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x4059f488"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x4059f568"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x4059f648"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x4059f728"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x4059f808"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x4059f8e8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x4059f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405a3b70" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405a3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405a3d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x405a99b0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405a99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TRF230" ref="0x405a4508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405a74d0"/>
        <function-ref name="clear" scoped="" ref="0x405a7880"/>
        <function-ref name="isValid" scoped="" ref="0x405a7120"/>
        <function-ref name="set" scoped="" ref="0x405a7c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x405acce0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x405acce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4059e8f0"/>
        <function-ref name="get" scoped="" ref="0x4059e630"/>
        <function-ref name="isSet" scoped="" ref="0x4059e370"/>
        <function-ref name="set" scoped="" ref="0x4059ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405a1a10" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405a1be8"/>
        <function-ref name="noAck" scoped="" ref="0x405a1cc8"/>
        <function-ref name="wasAcked" scoped="" ref="0x405a1da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405a2c80" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405a2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405a2e58"/>
        <function-ref name="source" scoped="" ref="0x405a1010"/>
        <function-ref name="address" scoped="" ref="0x405a10f0"/>
        <function-ref name="destination" scoped="" ref="0x405a11d0"/>
        <function-ref name="setSource" scoped="" ref="0x405a12b0"/>
        <function-ref name="setDestination" scoped="" ref="0x405a1390"/>
        <function-ref name="type" scoped="" ref="0x405a1470"/>
        <function-ref name="setType" scoped="" ref="0x405a1550"/>
        <function-ref name="isForMe" scoped="" ref="0x405a1630"/>
        <function-ref name="setGroup" scoped="" ref="0x405a1710"/>
        <function-ref name="localGroup" scoped="" ref="0x405a17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405a63a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405a63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405a6f20"/>
        <function-ref name="clear" scoped="" ref="0x405b62e8"/>
        <function-ref name="isValid" scoped="" ref="0x405a6b70"/>
        <function-ref name="set" scoped="" ref="0x405b6698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x405c3978" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x405c3978"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x405c82b0"/>
        <function-ref name="channelError" scoped="" ref="0x405c3c30"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x405c3d10"/>
        <function-ref name="getChannelTime" scoped="" ref="0x405c3df0"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x405c3ed0"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x405c8010"/>
        <function-ref name="timerTick" scoped="" ref="0x405c80f0"/>
        <function-ref name="getSender" scoped="" ref="0x405c81d0"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x405c3b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x405ce1e8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x405ce1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x405ce3c0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x405ce4a0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x405ce580"/>
        <function-ref name="timerTick" scoped="" ref="0x405ce660"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x405ce740"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x405ce820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x405cd418" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x405cd418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0x405cd5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x405cde40" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x405cde40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x405c7050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x405b8010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x405b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x405b81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x405b96e0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x405b96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x405b98b8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x405b9998"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405b9a78"/>
        <function-ref name="isAckPacket" scoped="" ref="0x405b9b58"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x405b9c38"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x405b9d18"/>
        <function-ref name="setAckReceived" scoped="" ref="0x405b9df8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405b9ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x405de978" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x405de978"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x405deb50"/>
        <function-ref name="getDSN" scoped="" ref="0x405dec30"/>
        <function-ref name="setFCF" scoped="" ref="0x405ded10"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405dedf0"/>
        <function-ref name="set6LowPan" scoped="" ref="0x405deed0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x405c2010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x405c20f0"/>
        <function-ref name="setDSN" scoped="" ref="0x405c21d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x405c22b0"/>
        <function-ref name="getHeader" scoped="" ref="0x405c2390"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x405c2470"/>
        <function-ref name="isDataFrame" scoped="" ref="0x405c2550"/>
        <function-ref name="setType" scoped="" ref="0x405c2630"/>
        <function-ref name="getAckRequired" scoped="" ref="0x405c2790"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x405c2870"/>
        <function-ref name="setLength" scoped="" ref="0x405c2950"/>
        <function-ref name="get6LowPan" scoped="" ref="0x405c2a30"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405c2b10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x405c2bf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x405c2cd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x405c2db0"/>
        <function-ref name="getLength" scoped="" ref="0x405c2e90"/>
        <function-ref name="setDestPan" scoped="" ref="0x405cb010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405cb0f0"/>
        <function-ref name="getFCF" scoped="" ref="0x405cb1d0"/>
        <function-ref name="getType" scoped="" ref="0x405cb3b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405cb490"/>
        <function-ref name="getDestAddr" scoped="" ref="0x405cb570"/>
        <function-ref name="getFramePending" scoped="" ref="0x405cb650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x405cb7d0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405cb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405cb9a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405cba88"/>
        <function-ref name="getPayload" scoped="" ref="0x405cbb68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405cbc48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405cbd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x405ec978" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x405ec978"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405ecb50"/>
        <function-ref name="wait" scoped="" ref="0x405ecc30"/>
        <function-ref name="cancel" scoped="" ref="0x405ecd10"/>
        <function-ref name="isFree" scoped="" ref="0x405ecdf0"/>
        <function-ref name="getNow" scoped="" ref="0x405eced0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x405b7de0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x405b7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x405b1010"/>
        <function-ref name="reportChannelError" scoped="" ref="0x405b10f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x405b11d0"/>
        <function-ref name="getSender" scoped="" ref="0x405b12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x405d1278" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405d1278"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x405d1450"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x405d1530"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x405d1610"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x405d16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230Config" ref="0x405bf1a8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x405bf1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x405bf380"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x405bf8c0"/>
        <function-ref name="getPayload" scoped="" ref="0x405bf540"/>
        <function-ref name="setLength" scoped="" ref="0x405bf620"/>
        <function-ref name="getLength" scoped="" ref="0x405bf700"/>
        <function-ref name="getMaxLength" scoped="" ref="0x405bf7e0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x405bf460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4061f4d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4061f4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4061e0b8"/>
        <function-ref name="get" scoped="" ref="0x4061fde0"/>
        <function-ref name="isSet" scoped="" ref="0x4061fb20"/>
        <function-ref name="set" scoped="" ref="0x4061e378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405b41f0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405b41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b43c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405b44a8"/>
        <function-ref name="getPayload" scoped="" ref="0x405b4588"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b4668"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405b4748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x406210f0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x406210f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40621cb8"/>
        <function-ref name="get" scoped="" ref="0x406219f8"/>
        <function-ref name="isSet" scoped="" ref="0x40621738"/>
        <function-ref name="set" scoped="" ref="0x4061f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0x4061e8a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0x4061e8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4061c4a0"/>
        <function-ref name="get" scoped="" ref="0x4061c1e0"/>
        <function-ref name="isSet" scoped="" ref="0x4061eef0"/>
        <function-ref name="set" scoped="" ref="0x4061c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x4061cc90" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4061cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4061b868"/>
        <function-ref name="get" scoped="" ref="0x4061b5a8"/>
        <function-ref name="isSet" scoped="" ref="0x4061b2e8"/>
        <function-ref name="set" scoped="" ref="0x4061bb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4062c178" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4062c178"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TRF230" ref="0x405a4508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4062cc78"/>
        <function-ref name="clear" scoped="" ref="0x4062b048"/>
        <function-ref name="isValid" scoped="" ref="0x4062c8c8"/>
        <function-ref name="set" scoped="" ref="0x4062b3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406115b0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406115b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40611788"/>
        <function-ref name="noAck" scoped="" ref="0x40611868"/>
        <function-ref name="wasAcked" scoped="" ref="0x40611948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40611ca0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40611ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40622888"/>
        <function-ref name="get" scoped="" ref="0x406225c8"/>
        <function-ref name="isSet" scoped="" ref="0x40622308"/>
        <function-ref name="set" scoped="" ref="0x40622b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405b48e0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405b48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405b4ab8"/>
        <function-ref name="source" scoped="" ref="0x405b4b98"/>
        <function-ref name="address" scoped="" ref="0x405b4c78"/>
        <function-ref name="destination" scoped="" ref="0x405b4d58"/>
        <function-ref name="setSource" scoped="" ref="0x405b4e38"/>
        <function-ref name="setDestination" scoped="" ref="0x405b4f18"/>
        <function-ref name="type" scoped="" ref="0x40611010"/>
        <function-ref name="setType" scoped="" ref="0x406110f0"/>
        <function-ref name="isForMe" scoped="" ref="0x406111d0"/>
        <function-ref name="setGroup" scoped="" ref="0x406112b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40611390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4062bb30" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4062bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4062a6b8"/>
        <function-ref name="clear" scoped="" ref="0x4062aa68"/>
        <function-ref name="isValid" scoped="" ref="0x4062a308"/>
        <function-ref name="set" scoped="" ref="0x4062ae18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40635390" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40635390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40634010"/>
        <function-ref name="get" scoped="" ref="0x40635c98"/>
        <function-ref name="isSet" scoped="" ref="0x406359d8"/>
        <function-ref name="set" scoped="" ref="0x406342d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40625350" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40625350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40625528"/>
        <function-ref name="payloadLength" scoped="" ref="0x40625608"/>
        <function-ref name="getPayload" scoped="" ref="0x406256e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406257c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406258a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40623010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40623010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40623bd8"/>
        <function-ref name="get" scoped="" ref="0x40623918"/>
        <function-ref name="isSet" scoped="" ref="0x40623658"/>
        <function-ref name="set" scoped="" ref="0x40623e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0x40634800" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0x40634800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406323d8"/>
        <function-ref name="get" scoped="" ref="0x40632118"/>
        <function-ref name="isSet" scoped="" ref="0x40634e48"/>
        <function-ref name="set" scoped="" ref="0x40632698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x4063f310" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x4063f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4063f4e8"/>
        <function-ref name="getDSN" scoped="" ref="0x4063f5c8"/>
        <function-ref name="setFCF" scoped="" ref="0x4063f6a8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4063f788"/>
        <function-ref name="set6LowPan" scoped="" ref="0x4063f868"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4063f948"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4063fa28"/>
        <function-ref name="setDSN" scoped="" ref="0x4063fb08"/>
        <function-ref name="createAckReply" scoped="" ref="0x4063fbe8"/>
        <function-ref name="getHeader" scoped="" ref="0x4063fcc8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4063fda8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4063fe88"/>
        <function-ref name="setType" scoped="" ref="0x4063e010"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4063e170"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4063e250"/>
        <function-ref name="setLength" scoped="" ref="0x4063e330"/>
        <function-ref name="get6LowPan" scoped="" ref="0x4063e410"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4063e4f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4063e5d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4063e6b0"/>
        <function-ref name="setFramePending" scoped="" ref="0x4063e790"/>
        <function-ref name="getLength" scoped="" ref="0x4063e870"/>
        <function-ref name="setDestPan" scoped="" ref="0x4063e950"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4063ea30"/>
        <function-ref name="getFCF" scoped="" ref="0x4063eb10"/>
        <function-ref name="getType" scoped="" ref="0x4063ecf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4063edd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4063eeb0"/>
        <function-ref name="getFramePending" scoped="" ref="0x4063d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40632bc8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40632bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406317b8"/>
        <function-ref name="get" scoped="" ref="0x406314f8"/>
        <function-ref name="isSet" scoped="" ref="0x40631238"/>
        <function-ref name="set" scoped="" ref="0x40631a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4062f100" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4062f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TRF230" ref="0x405a4508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4062fc00"/>
        <function-ref name="clear" scoped="" ref="0x4062e010"/>
        <function-ref name="isValid" scoped="" ref="0x4062f850"/>
        <function-ref name="set" scoped="" ref="0x4062e3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x4063d330" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4063d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TRF230" ref="0x405a4508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4063d978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40628de0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40628de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40625010"/>
        <function-ref name="noAck" scoped="" ref="0x406250f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x406251d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40625c00" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40625c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406247f8"/>
        <function-ref name="get" scoped="" ref="0x40624538"/>
        <function-ref name="isSet" scoped="" ref="0x40624278"/>
        <function-ref name="set" scoped="" ref="0x40624ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x4063dd68" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x4063dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4063c3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4062eaf8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4062eaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4062d6b8"/>
        <function-ref name="clear" scoped="" ref="0x4062da68"/>
        <function-ref name="isValid" scoped="" ref="0x4062d308"/>
        <function-ref name="set" scoped="" ref="0x4062de18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0x40626470" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x40626470"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40626648"/>
        <function-ref name="getDSN" scoped="" ref="0x40626728"/>
        <function-ref name="setFCF" scoped="" ref="0x40626808"/>
        <function-ref name="isAckFrame" scoped="" ref="0x406268e8"/>
        <function-ref name="set6LowPan" scoped="" ref="0x406269c8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40626aa8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40626b88"/>
        <function-ref name="setDSN" scoped="" ref="0x40626c68"/>
        <function-ref name="createAckReply" scoped="" ref="0x40626d48"/>
        <function-ref name="getHeader" scoped="" ref="0x40626e28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40626f08"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40669010"/>
        <function-ref name="setType" scoped="" ref="0x406690f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40669250"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40669330"/>
        <function-ref name="setLength" scoped="" ref="0x40669410"/>
        <function-ref name="get6LowPan" scoped="" ref="0x406694f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406695d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x406696b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40669790"/>
        <function-ref name="setFramePending" scoped="" ref="0x40669870"/>
        <function-ref name="getLength" scoped="" ref="0x40669950"/>
        <function-ref name="setDestPan" scoped="" ref="0x40669a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40669b10"/>
        <function-ref name="getFCF" scoped="" ref="0x40669bf0"/>
        <function-ref name="getType" scoped="" ref="0x40669dd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40669eb0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4067c010"/>
        <function-ref name="getFramePending" scoped="" ref="0x4067c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4067c288" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4067c288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4067c460"/>
        <function-ref name="source" scoped="" ref="0x4067c540"/>
        <function-ref name="address" scoped="" ref="0x4067c620"/>
        <function-ref name="destination" scoped="" ref="0x4067c700"/>
        <function-ref name="setSource" scoped="" ref="0x4067c7e0"/>
        <function-ref name="setDestination" scoped="" ref="0x4067c8c0"/>
        <function-ref name="type" scoped="" ref="0x4067c9a0"/>
        <function-ref name="setType" scoped="" ref="0x4067ca80"/>
        <function-ref name="isForMe" scoped="" ref="0x4067cb60"/>
        <function-ref name="setGroup" scoped="" ref="0x4067cc40"/>
        <function-ref name="localGroup" scoped="" ref="0x4067cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0x4067b480" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x4067b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4067b658"/>
        <function-ref name="getDSN" scoped="" ref="0x4067b738"/>
        <function-ref name="setFCF" scoped="" ref="0x4067b818"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4067b8f8"/>
        <function-ref name="set6LowPan" scoped="" ref="0x4067b9d8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4067bab8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4067bb98"/>
        <function-ref name="setDSN" scoped="" ref="0x4067bc78"/>
        <function-ref name="createAckReply" scoped="" ref="0x4067bd58"/>
        <function-ref name="getHeader" scoped="" ref="0x4067be38"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4067bf18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40678010"/>
        <function-ref name="setType" scoped="" ref="0x406780f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40678250"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40678330"/>
        <function-ref name="setLength" scoped="" ref="0x40678410"/>
        <function-ref name="get6LowPan" scoped="" ref="0x406784f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406785d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x406786b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40678790"/>
        <function-ref name="setFramePending" scoped="" ref="0x40678870"/>
        <function-ref name="getLength" scoped="" ref="0x40678950"/>
        <function-ref name="setDestPan" scoped="" ref="0x40678a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40678b10"/>
        <function-ref name="getFCF" scoped="" ref="0x40678bf0"/>
        <function-ref name="getType" scoped="" ref="0x40678dd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40678eb0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40677010"/>
        <function-ref name="getFramePending" scoped="" ref="0x406770f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40673860" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40673860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40673a38"/>
        <function-ref name="changed" scoped="" ref="0x40673b18"/>
        <function-ref name="amGroup" scoped="" ref="0x40673bf8"/>
        <function-ref name="setAddress" scoped="" ref="0x40673cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40677288" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40677288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40677460"/>
        <function-ref name="source" scoped="" ref="0x40677540"/>
        <function-ref name="address" scoped="" ref="0x40677620"/>
        <function-ref name="destination" scoped="" ref="0x40677700"/>
        <function-ref name="setSource" scoped="" ref="0x406777e0"/>
        <function-ref name="setDestination" scoped="" ref="0x406778c0"/>
        <function-ref name="type" scoped="" ref="0x406779a0"/>
        <function-ref name="setType" scoped="" ref="0x40677a80"/>
        <function-ref name="isForMe" scoped="" ref="0x40677b60"/>
        <function-ref name="setGroup" scoped="" ref="0x40677c40"/>
        <function-ref name="localGroup" scoped="" ref="0x40677d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x406c4060" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406c4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x406c4238"/>
        <function-ref name="changed" scoped="" ref="0x406c4318"/>
        <function-ref name="amGroup" scoped="" ref="0x406c43f8"/>
        <function-ref name="setAddress" scoped="" ref="0x406c44d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4066ad30" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4066ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406d0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406c9d08" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406c9d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TOne" ref="0x4035edb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406cc478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406cc968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406cc6f0"/>
        <function-ref name="overflow" scoped="" ref="0x406ccbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406e5c40" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406e5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x406e5e18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406e5ef8"/>
        <function-ref name="getControlA" scoped="" ref="0x406d4010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406d40f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406d41d0"/>
        <function-ref name="setControlB" scoped="" ref="0x406d42b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406d4390"/>
        <function-ref name="getControlB" scoped="" ref="0x406d4470"/>
        <function-ref name="setControlC" scoped="" ref="0x406d4550"/>
        <function-ref name="setControlA" scoped="" ref="0x406d4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406e0a28" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406e0a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406e4500"/>
        <function-ref name="test" scoped="" ref="0x406e4010"/>
        <function-ref name="get" scoped="" ref="0x406d3088"/>
        <function-ref name="captured" scoped="" ref="0x406d35a0"/>
        <function-ref name="reset" scoped="" ref="0x406d3840"/>
        <function-ref name="isOn" scoped="" ref="0x406e4288"/>
        <function-ref name="set" scoped="" ref="0x406d3300"/>
        <function-ref name="start" scoped="" ref="0x406d3ab8"/>
        <function-ref name="stop" scoped="" ref="0x406d3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406f0628" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406f0628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406deba0"/>
        <function-ref name="fired" scoped="" ref="0x406de1c0"/>
        <function-ref name="get" scoped="" ref="0x406f0c70"/>
        <function-ref name="reset" scoped="" ref="0x406de438"/>
        <function-ref name="isOn" scoped="" ref="0x406dee18"/>
        <function-ref name="set" scoped="" ref="0x406f0ee8"/>
        <function-ref name="start" scoped="" ref="0x406de6b0"/>
        <function-ref name="stop" scoped="" ref="0x406de928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406d51b8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406d51b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406dbc68"/>
        <function-ref name="test" scoped="" ref="0x406db778"/>
        <function-ref name="get" scoped="" ref="0x406d5800"/>
        <function-ref name="setScale" scoped="" ref="0x406dbee0"/>
        <function-ref name="getScale" scoped="" ref="0x406da1c0"/>
        <function-ref name="reset" scoped="" ref="0x406db010"/>
        <function-ref name="overflow" scoped="" ref="0x406d5d18"/>
        <function-ref name="isOn" scoped="" ref="0x406db9f0"/>
        <function-ref name="set" scoped="" ref="0x406d5a78"/>
        <function-ref name="start" scoped="" ref="0x406db288"/>
        <function-ref name="stop" scoped="" ref="0x406db500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406ebdb0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406ebdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x406e9010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406e90f0"/>
        <function-ref name="getControlA" scoped="" ref="0x406e91d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406e92b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406e9390"/>
        <function-ref name="setControlB" scoped="" ref="0x406e9470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406e9550"/>
        <function-ref name="getControlB" scoped="" ref="0x406e9630"/>
        <function-ref name="setControlC" scoped="" ref="0x406e9710"/>
        <function-ref name="setControlA" scoped="" ref="0x406e97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x406e7a80" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x406e7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406fa010"/>
        <function-ref name="fired" scoped="" ref="0x406fc610"/>
        <function-ref name="get" scoped="" ref="0x406fc0f8"/>
        <function-ref name="reset" scoped="" ref="0x406fc888"/>
        <function-ref name="isOn" scoped="" ref="0x406fa288"/>
        <function-ref name="set" scoped="" ref="0x406fc370"/>
        <function-ref name="start" scoped="" ref="0x406fcb00"/>
        <function-ref name="stop" scoped="" ref="0x406fcd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406e9b28" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406e9b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406e7640"/>
        <function-ref name="test" scoped="" ref="0x406e7150"/>
        <function-ref name="get" scoped="" ref="0x406e8200"/>
        <function-ref name="captured" scoped="" ref="0x406e8718"/>
        <function-ref name="reset" scoped="" ref="0x406e89b8"/>
        <function-ref name="isOn" scoped="" ref="0x406e73c8"/>
        <function-ref name="set" scoped="" ref="0x406e8478"/>
        <function-ref name="start" scoped="" ref="0x406e8c30"/>
        <function-ref name="stop" scoped="" ref="0x406e8ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x406fa6a0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x406fa6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406f9c90"/>
        <function-ref name="fired" scoped="" ref="0x406f92b0"/>
        <function-ref name="get" scoped="" ref="0x406face8"/>
        <function-ref name="reset" scoped="" ref="0x406f9528"/>
        <function-ref name="isOn" scoped="" ref="0x406f9f08"/>
        <function-ref name="set" scoped="" ref="0x406f9010"/>
        <function-ref name="start" scoped="" ref="0x406f97a0"/>
        <function-ref name="stop" scoped="" ref="0x406f9a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x406f8340" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x406f8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406f6898"/>
        <function-ref name="fired" scoped="" ref="0x406f8ea0"/>
        <function-ref name="get" scoped="" ref="0x406f8988"/>
        <function-ref name="reset" scoped="" ref="0x406f6130"/>
        <function-ref name="isOn" scoped="" ref="0x406f6b10"/>
        <function-ref name="set" scoped="" ref="0x406f8c00"/>
        <function-ref name="start" scoped="" ref="0x406f63a8"/>
        <function-ref name="stop" scoped="" ref="0x406f6620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406efad0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406efad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406eb538"/>
        <function-ref name="test" scoped="" ref="0x406eb048"/>
        <function-ref name="get" scoped="" ref="0x406ec128"/>
        <function-ref name="setScale" scoped="" ref="0x406eb7b0"/>
        <function-ref name="getScale" scoped="" ref="0x406eba50"/>
        <function-ref name="reset" scoped="" ref="0x406ec8b8"/>
        <function-ref name="overflow" scoped="" ref="0x406ec640"/>
        <function-ref name="isOn" scoped="" ref="0x406eb2c0"/>
        <function-ref name="set" scoped="" ref="0x406ec3a0"/>
        <function-ref name="start" scoped="" ref="0x406ecb30"/>
        <function-ref name="stop" scoped="" ref="0x406ecda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4073a860" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4073a860"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4073aa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4073ac48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4073ac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407496a0"/>
        <function-ref name="test" scoped="" ref="0x407491b0"/>
        <function-ref name="get" scoped="" ref="0x407392a8"/>
        <function-ref name="setScale" scoped="" ref="0x40749918"/>
        <function-ref name="getScale" scoped="" ref="0x40749bb8"/>
        <function-ref name="reset" scoped="" ref="0x40739a38"/>
        <function-ref name="overflow" scoped="" ref="0x407397c0"/>
        <function-ref name="isOn" scoped="" ref="0x40749428"/>
        <function-ref name="set" scoped="" ref="0x40739520"/>
        <function-ref name="start" scoped="" ref="0x40739cb0"/>
        <function-ref name="stop" scoped="" ref="0x40739f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40747470" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40747470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TOne" ref="0x4035edb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40747bc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407460d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40747e38"/>
        <function-ref name="overflow" scoped="" ref="0x40746350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40746630" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40746630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407520a8"/>
        <function-ref name="test" scoped="" ref="0x40754ba0"/>
        <function-ref name="get" scoped="" ref="0x40746c78"/>
        <function-ref name="setScale" scoped="" ref="0x40752320"/>
        <function-ref name="getScale" scoped="" ref="0x407525c0"/>
        <function-ref name="reset" scoped="" ref="0x40754438"/>
        <function-ref name="overflow" scoped="" ref="0x407541c0"/>
        <function-ref name="isOn" scoped="" ref="0x40754e18"/>
        <function-ref name="set" scoped="" ref="0x40746ef0"/>
        <function-ref name="start" scoped="" ref="0x407546b0"/>
        <function-ref name="stop" scoped="" ref="0x40754928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407506f8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407506f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40750e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4076f350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4076f0d8"/>
        <function-ref name="overflow" scoped="" ref="0x4076f5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406ce490" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406ce490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406cebe0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40750110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406cee58"/>
        <function-ref name="overflow" scoped="" ref="0x40750388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4076e3d0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4076e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4076ea18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4076ed68" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4076ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4076d4e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4076d9d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4076d760"/>
        <function-ref name="overflow" scoped="" ref="0x4076dc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406c5a68" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406c5a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4077c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40779158" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40779158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40778c40"/>
        <function-ref name="fired" scoped="" ref="0x40779ed8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40778600"/>
        <function-ref name="isOneShot" scoped="" ref="0x407783a8"/>
        <function-ref name="getdt" scoped="" ref="0x40777110"/>
        <function-ref name="gett0" scoped="" ref="0x40778e98"/>
        <function-ref name="isRunning" scoped="" ref="0x40778150"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40779780"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40778920"/>
        <function-ref name="startOneShot" scoped="" ref="0x40779a00"/>
        <function-ref name="stop" scoped="" ref="0x40779c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40777470" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40777470"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40777ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4077c970" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4077c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4077cb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40784010" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40784010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40784760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40784c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407849d8"/>
        <function-ref name="overflow" scoped="" ref="0x40784ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40775b10" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40775b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40775ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40785390" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40785390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40771840"/>
        <function-ref name="fired" scoped="" ref="0x40771010"/>
        <function-ref name="startAt" scoped="" ref="0x40771500"/>
        <function-ref name="isRunning" scoped="" ref="0x40771288"/>
        <function-ref name="getAlarm" scoped="" ref="0x40771ab8"/>
        <function-ref name="start" scoped="" ref="0x40785ae0"/>
        <function-ref name="stop" scoped="" ref="0x40785d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40814270" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40814270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40813728"/>
        <function-ref name="fired" scoped="" ref="0x40814ed8"/>
        <function-ref name="startAt" scoped="" ref="0x408133e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40813170"/>
        <function-ref name="getAlarm" scoped="" ref="0x408139a0"/>
        <function-ref name="start" scoped="" ref="0x408149c0"/>
        <function-ref name="stop" scoped="" ref="0x40814c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40781d88" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40781d88"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40814010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40813cd0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40813cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40812438"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40812928"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408126b0"/>
        <function-ref name="overflow" scoped="" ref="0x40812ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x415ae090" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x415ae090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x415ae268"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x415ae348"/>
        <function-ref name="getControlA" scoped="" ref="0x415ae428"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x415ae508"/>
        <function-ref name="setControlB" scoped="" ref="0x415ae5e8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x415ae6c8"/>
        <function-ref name="getControlB" scoped="" ref="0x415ae7a8"/>
        <function-ref name="setControlA" scoped="" ref="0x415ae888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4155e270" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4155e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415b3728"/>
        <function-ref name="fired" scoped="" ref="0x4155eed8"/>
        <function-ref name="startAt" scoped="" ref="0x415b33e8"/>
        <function-ref name="isRunning" scoped="" ref="0x415b3170"/>
        <function-ref name="getAlarm" scoped="" ref="0x415b39a0"/>
        <function-ref name="start" scoped="" ref="0x4155e9c0"/>
        <function-ref name="stop" scoped="" ref="0x4155ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4155fd78" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4155fd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4155e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x415b3cd0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x415b3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415b2438"/>
        <function-ref name="clearOverflow" scoped="" ref="0x415b2928"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x415b26b0"/>
        <function-ref name="overflow" scoped="" ref="0x415b2ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x415ac4b8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x415ac4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x415ac690"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x415ac770"/>
        <function-ref name="controlABusy" scoped="" ref="0x415ac850"/>
        <function-ref name="controlBBusy" scoped="" ref="0x415ac930"/>
        <function-ref name="countBusy" scoped="" ref="0x415aca10"/>
        <function-ref name="compareABusy" scoped="" ref="0x415acaf0"/>
        <function-ref name="getAssr" scoped="" ref="0x415acbd0"/>
        <function-ref name="setAssr" scoped="" ref="0x415accb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x415aea78" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x415aea78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x415ac010"/>
        <function-ref name="fired" scoped="" ref="0x415ad5f0"/>
        <function-ref name="get" scoped="" ref="0x415ad0d8"/>
        <function-ref name="reset" scoped="" ref="0x415ad868"/>
        <function-ref name="isOn" scoped="" ref="0x415ac288"/>
        <function-ref name="set" scoped="" ref="0x415ad350"/>
        <function-ref name="start" scoped="" ref="0x415adae0"/>
        <function-ref name="stop" scoped="" ref="0x415add58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x415b2e90" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x415b2e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x415af908"/>
        <function-ref name="test" scoped="" ref="0x415af418"/>
        <function-ref name="get" scoped="" ref="0x415b14f8"/>
        <function-ref name="setScale" scoped="" ref="0x415afb80"/>
        <function-ref name="getScale" scoped="" ref="0x415afe20"/>
        <function-ref name="reset" scoped="" ref="0x415b1c88"/>
        <function-ref name="overflow" scoped="" ref="0x415b1a10"/>
        <function-ref name="isOn" scoped="" ref="0x415af690"/>
        <function-ref name="set" scoped="" ref="0x415b1770"/>
        <function-ref name="start" scoped="" ref="0x415b1f00"/>
        <function-ref name="stop" scoped="" ref="0x415af1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407d0408" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407d0408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407d05e0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407d06c0"/>
        <function-ref name="getControlA" scoped="" ref="0x407d07a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407d0880"/>
        <function-ref name="setControlB" scoped="" ref="0x407d0960"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407d0a40"/>
        <function-ref name="getControlB" scoped="" ref="0x407d0b20"/>
        <function-ref name="setControlA" scoped="" ref="0x407d0c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407cead0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407cead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x407ceca8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x407ced88"/>
        <function-ref name="controlABusy" scoped="" ref="0x407cee68"/>
        <function-ref name="controlBBusy" scoped="" ref="0x407cd010"/>
        <function-ref name="countBusy" scoped="" ref="0x407cd0f0"/>
        <function-ref name="compareABusy" scoped="" ref="0x407cd1d0"/>
        <function-ref name="getAssr" scoped="" ref="0x407cd2b0"/>
        <function-ref name="setAssr" scoped="" ref="0x407cd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407d0f28" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407d0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407ce500"/>
        <function-ref name="fired" scoped="" ref="0x407cfa98"/>
        <function-ref name="get" scoped="" ref="0x407cf580"/>
        <function-ref name="reset" scoped="" ref="0x407cfd10"/>
        <function-ref name="isOn" scoped="" ref="0x407ce778"/>
        <function-ref name="set" scoped="" ref="0x407cf7f8"/>
        <function-ref name="start" scoped="" ref="0x407ce010"/>
        <function-ref name="stop" scoped="" ref="0x407ce288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407d3128" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407d3128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407d1b80"/>
        <function-ref name="test" scoped="" ref="0x407d1690"/>
        <function-ref name="get" scoped="" ref="0x407d3770"/>
        <function-ref name="setScale" scoped="" ref="0x407d1df8"/>
        <function-ref name="getScale" scoped="" ref="0x407d00b8"/>
        <function-ref name="reset" scoped="" ref="0x407d3f00"/>
        <function-ref name="overflow" scoped="" ref="0x407d3c88"/>
        <function-ref name="isOn" scoped="" ref="0x407d1908"/>
        <function-ref name="set" scoped="" ref="0x407d39e8"/>
        <function-ref name="start" scoped="" ref="0x407d11a0"/>
        <function-ref name="stop" scoped="" ref="0x407d1418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407c73b8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407c73b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407c7590"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407c7670"/>
        <function-ref name="getControlA" scoped="" ref="0x407c7750"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407c7830"/>
        <function-ref name="setControlB" scoped="" ref="0x407c7910"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407c79f0"/>
        <function-ref name="getControlB" scoped="" ref="0x407c7ad0"/>
        <function-ref name="setControlA" scoped="" ref="0x407c7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407dea30" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407dea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407dec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407dee90" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407dee90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x407dd080"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x407dd160"/>
        <function-ref name="controlABusy" scoped="" ref="0x407dd240"/>
        <function-ref name="controlBBusy" scoped="" ref="0x407dd320"/>
        <function-ref name="countBusy" scoped="" ref="0x407dd400"/>
        <function-ref name="compareABusy" scoped="" ref="0x407dd4e0"/>
        <function-ref name="getAssr" scoped="" ref="0x407dd5c0"/>
        <function-ref name="setAssr" scoped="" ref="0x407dd6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407c7ed8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407c7ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407de500"/>
        <function-ref name="fired" scoped="" ref="0x407e0a90"/>
        <function-ref name="get" scoped="" ref="0x407e0578"/>
        <function-ref name="reset" scoped="" ref="0x407e0d08"/>
        <function-ref name="isOn" scoped="" ref="0x407de778"/>
        <function-ref name="set" scoped="" ref="0x407e07f0"/>
        <function-ref name="start" scoped="" ref="0x407de010"/>
        <function-ref name="stop" scoped="" ref="0x407de288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407c90e0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407c90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407c8b30"/>
        <function-ref name="test" scoped="" ref="0x407c8640"/>
        <function-ref name="get" scoped="" ref="0x407c9728"/>
        <function-ref name="setScale" scoped="" ref="0x407c8da8"/>
        <function-ref name="getScale" scoped="" ref="0x407c7068"/>
        <function-ref name="reset" scoped="" ref="0x407c9eb8"/>
        <function-ref name="overflow" scoped="" ref="0x407c9c40"/>
        <function-ref name="isOn" scoped="" ref="0x407c88b8"/>
        <function-ref name="set" scoped="" ref="0x407c99a0"/>
        <function-ref name="start" scoped="" ref="0x407c8150"/>
        <function-ref name="stop" scoped="" ref="0x407c83c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x4082cd08" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x4082cd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4082cee0"/>
        <function-ref name="runTask" scoped="" ref="0x4082b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4082e398" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4082e398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4082c840"/>
        <function-ref name="fired" scoped="" ref="0x4082c010"/>
        <function-ref name="startAt" scoped="" ref="0x4082c500"/>
        <function-ref name="isRunning" scoped="" ref="0x4082c288"/>
        <function-ref name="getAlarm" scoped="" ref="0x4082cab8"/>
        <function-ref name="start" scoped="" ref="0x4082eae8"/>
        <function-ref name="stop" scoped="" ref="0x4082ed88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408150a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408150a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4082fb88"/>
        <function-ref name="fired" scoped="" ref="0x40815e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4082f548"/>
        <function-ref name="isOneShot" scoped="" ref="0x4082f2f0"/>
        <function-ref name="getdt" scoped="" ref="0x4082e048"/>
        <function-ref name="gett0" scoped="" ref="0x4082fde0"/>
        <function-ref name="isRunning" scoped="" ref="0x4082f098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408156c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4082f868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40815948"/>
        <function-ref name="stop" scoped="" ref="0x40815bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x408534b8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x408534b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40853690"/>
        <function-ref name="runTask" scoped="" ref="0x40853770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40856220" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40856220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40854d58"/>
        <function-ref name="fired" scoped="" ref="0x40854010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40854718"/>
        <function-ref name="isOneShot" scoped="" ref="0x408544c0"/>
        <function-ref name="getdt" scoped="" ref="0x40853268"/>
        <function-ref name="gett0" scoped="" ref="0x40853010"/>
        <function-ref name="isRunning" scoped="" ref="0x40854268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40856848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40854a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40856ac8"/>
        <function-ref name="stop" scoped="" ref="0x40856d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4082aea8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4082aea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40857a48"/>
        <function-ref name="fired" scoped="" ref="0x40829c88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408573e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40857180"/>
        <function-ref name="getdt" scoped="" ref="0x40857f18"/>
        <function-ref name="gett0" scoped="" ref="0x40857cb0"/>
        <function-ref name="isRunning" scoped="" ref="0x40829ef0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40829500"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40857718"/>
        <function-ref name="startOneShot" scoped="" ref="0x40829790"/>
        <function-ref name="stop" scoped="" ref="0x40829a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40852970" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40852970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40851010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40851360" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40851360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40851ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4084f010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40851d28"/>
        <function-ref name="overflow" scoped="" ref="0x4084f288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x4084ce68" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4084ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40865050"/>
        <function-ref name="wait" scoped="" ref="0x40865130"/>
        <function-ref name="cancel" scoped="" ref="0x40865210"/>
        <function-ref name="isFree" scoped="" ref="0x408652f0"/>
        <function-ref name="getNow" scoped="" ref="0x408653d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x408659c8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408659c8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402e4ce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402e4ce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TRF230" ref="0x405a4508"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40864e70"/>
        <function-ref name="fired" scoped="" ref="0x40864640"/>
        <function-ref name="startAt" scoped="" ref="0x40864b30"/>
        <function-ref name="isRunning" scoped="" ref="0x408648b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40862110"/>
        <function-ref name="start" scoped="" ref="0x40864128"/>
        <function-ref name="stop" scoped="" ref="0x408643c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40862b60" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40862b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40862d38"/>
        <function-ref name="wait" scoped="" ref="0x40862e18"/>
        <function-ref name="cancel" scoped="" ref="0x40862ef8"/>
        <function-ref name="isFree" scoped="" ref="0x4085f010"/>
        <function-ref name="getNow" scoped="" ref="0x4085f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4085f470" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4085f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TRF230" ref="0x405a4508"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4085e940"/>
        <function-ref name="fired" scoped="" ref="0x4085e110"/>
        <function-ref name="startAt" scoped="" ref="0x4085e600"/>
        <function-ref name="isRunning" scoped="" ref="0x4085e388"/>
        <function-ref name="getAlarm" scoped="" ref="0x4085ebb8"/>
        <function-ref name="start" scoped="" ref="0x4085fbc0"/>
        <function-ref name="stop" scoped="" ref="0x4085fe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40875740" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40875740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40875918"/>
        <function-ref name="suspend" scoped="" ref="0x408759f8"/>
        <function-ref name="resume" scoped="" ref="0x40875ad8"/>
        <function-ref name="run" scoped="" ref="0x40875bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40861b18" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40861b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40861cf0"/>
        <function-ref name="suspend" scoped="" ref="0x40861dd0"/>
        <function-ref name="resume" scoped="" ref="0x40861eb0"/>
        <function-ref name="run" scoped="" ref="0x4086c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40878b98" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40878b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40878d70"/>
        <function-ref name="getPayload" scoped="" ref="0x40878e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4087e010"/>
        <function-ref name="cancel" scoped="" ref="0x4087e0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4087e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4087e3e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4087e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4087e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4086d6b0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4086d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4086d888"/>
        <function-ref name="getPayload" scoped="" ref="0x4086d968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4086da48"/>
        <function-ref name="cancel" scoped="" ref="0x4086db28"/>
        <function-ref name="sendDone" scoped="" ref="0x4086dc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4087f798" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4087f798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4087f970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40877510" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40877510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0x408776e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4087f100" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4087f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4087f2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4087e750" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4087e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4087e928"/>
        <function-ref name="source" scoped="" ref="0x4087ea08"/>
        <function-ref name="address" scoped="" ref="0x4087eae8"/>
        <function-ref name="destination" scoped="" ref="0x4087ebc8"/>
        <function-ref name="setSource" scoped="" ref="0x4087eca8"/>
        <function-ref name="setDestination" scoped="" ref="0x4087ed88"/>
        <function-ref name="type" scoped="" ref="0x4087ee68"/>
        <function-ref name="setType" scoped="" ref="0x40877010"/>
        <function-ref name="isForMe" scoped="" ref="0x408770f0"/>
        <function-ref name="setGroup" scoped="" ref="0x408771d0"/>
        <function-ref name="localGroup" scoped="" ref="0x408772b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40881e28" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40881e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4089d050"/>
        <function-ref name="stopDone" scoped="" ref="0x4089d130"/>
        <function-ref name="start" scoped="" ref="0x4089d210"/>
        <function-ref name="stop" scoped="" ref="0x4089d2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4089c660" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4089c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089c838"/>
        <function-ref name="getPayload" scoped="" ref="0x4089c918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4089c9f8"/>
        <function-ref name="cancel" scoped="" ref="0x4089cad8"/>
        <function-ref name="sendDone" scoped="" ref="0x4089cbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4089cdc8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4089cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4089b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4089d460" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4089d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089d638"/>
        <function-ref name="getPayload" scoped="" ref="0x4089d718"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4089d7f8"/>
        <function-ref name="cancel" scoped="" ref="0x4089d8d8"/>
        <function-ref name="sendDone" scoped="" ref="0x4089d9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4089c010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4089c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4089c1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x4089c2c8"/>
        <function-ref name="start" scoped="" ref="0x4089c3a8"/>
        <function-ref name="stop" scoped="" ref="0x4089c488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4089db40" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4089db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4089dd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40898970" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40898970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40898b48"/>
        <function-ref name="getPayload" scoped="" ref="0x40898c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40898d08"/>
        <function-ref name="cancel" scoped="" ref="0x40898de8"/>
        <function-ref name="sendDone" scoped="" ref="0x40898ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40897130" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40897130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40897308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4089b720" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4089b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089b8f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4089b9d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4089bab8"/>
        <function-ref name="cancel" scoped="" ref="0x4089bb98"/>
        <function-ref name="sendDone" scoped="" ref="0x4089bc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x40898570" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x40898570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40898748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x408974d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x408974d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x408976a8"/>
        <function-ref name="getDSN" scoped="" ref="0x40897788"/>
        <function-ref name="setFCF" scoped="" ref="0x40897868"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40897948"/>
        <function-ref name="set6LowPan" scoped="" ref="0x40897a28"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40897b08"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40897be8"/>
        <function-ref name="setDSN" scoped="" ref="0x40897cc8"/>
        <function-ref name="createAckReply" scoped="" ref="0x40897da8"/>
        <function-ref name="getHeader" scoped="" ref="0x40897e88"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40896010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x408960f0"/>
        <function-ref name="setType" scoped="" ref="0x408961d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40896330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40896410"/>
        <function-ref name="setLength" scoped="" ref="0x408964f0"/>
        <function-ref name="get6LowPan" scoped="" ref="0x408965d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408966b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40896790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40896870"/>
        <function-ref name="setFramePending" scoped="" ref="0x40896950"/>
        <function-ref name="getLength" scoped="" ref="0x40896a30"/>
        <function-ref name="setDestPan" scoped="" ref="0x40896b10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40896bf0"/>
        <function-ref name="getFCF" scoped="" ref="0x40896cd0"/>
        <function-ref name="getType" scoped="" ref="0x40896eb0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40895010"/>
        <function-ref name="getDestAddr" scoped="" ref="0x408950f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x408951d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4089be00" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4089be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40898010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408a5600" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408a5600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408a57d8"/>
        <function-ref name="stopDone" scoped="" ref="0x408a58b8"/>
        <function-ref name="start" scoped="" ref="0x408a5998"/>
        <function-ref name="stop" scoped="" ref="0x408a5a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x408c1150" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x408c1150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408c1328"/>
        <function-ref name="request" scoped="" ref="0x408c1408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x408c0010" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x408c0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c01e8"/>
        <function-ref name="ready" scoped="" ref="0x408c02c8"/>
        <function-ref name="sendDone" scoped="" ref="0x408c03a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408be410" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408be410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408be5e8"/>
        <function-ref name="getPayload" scoped="" ref="0x408be6c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408be7a8"/>
        <function-ref name="cancel" scoped="" ref="0x408be888"/>
        <function-ref name="sendDone" scoped="" ref="0x408be968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408beac8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408beac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408beca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x408c2150" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408c2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408c2328"/>
        <function-ref name="turnOn" scoped="" ref="0x408c2408"/>
        <function-ref name="setChannel" scoped="" ref="0x408c24e8"/>
        <function-ref name="done" scoped="" ref="0x408c25c8"/>
        <function-ref name="standby" scoped="" ref="0x408c26a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408a5bb8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408a5bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a5d90"/>
        <function-ref name="getPayload" scoped="" ref="0x408a5e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408b0010"/>
        <function-ref name="cancel" scoped="" ref="0x408b00f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408b01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408b0628" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408b0628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x408b0800"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x408b08e0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x408b09c0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x408b0aa0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x408b0b80"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x408b0c60"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x408b0d40"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x408b0e20"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x408b0f00"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x408c2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x408c1568" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x408c1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408c1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408c2cc0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408c2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408c2e98"/>
        <function-ref name="header" scoped="" ref="0x408c1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x408c18d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x408c18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408c1aa8"/>
        <function-ref name="turnOn" scoped="" ref="0x408c1b88"/>
        <function-ref name="setChannel" scoped="" ref="0x408c1c68"/>
        <function-ref name="done" scoped="" ref="0x408c1d48"/>
        <function-ref name="standby" scoped="" ref="0x408c1e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408c0db8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408c0db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408be010"/>
        <function-ref name="stopDone" scoped="" ref="0x408be0f0"/>
        <function-ref name="start" scoped="" ref="0x408be1d0"/>
        <function-ref name="stop" scoped="" ref="0x408be2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408bee00" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408bee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408bd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408b0310" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408b0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b04e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x408c0508" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x408c0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408c06e0"/>
        <function-ref name="header" scoped="" ref="0x408c07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408c27e8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408c27e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c29c0"/>
        <function-ref name="ready" scoped="" ref="0x408c2aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x408c2b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x408c0920" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x408c0920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408c0b78"/>
        <function-ref name="request" scoped="" ref="0x408c0c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408b2dd8" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <component-ref qname="DummyLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408b2dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x408af010"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x408af0f0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x408af1d0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x408af2b0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x408af390"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x408af470"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x408af550"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x408af630"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x408af710"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x408af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408daa70" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408daa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408dac48"/>
        <function-ref name="stopDone" scoped="" ref="0x408dad28"/>
        <function-ref name="start" scoped="" ref="0x408dae08"/>
        <function-ref name="stop" scoped="" ref="0x408daee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x408d7b40" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408d7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408d7d18"/>
        <function-ref name="turnOn" scoped="" ref="0x408d7df8"/>
        <function-ref name="setChannel" scoped="" ref="0x408d7ed8"/>
        <function-ref name="done" scoped="" ref="0x408d6010"/>
        <function-ref name="standby" scoped="" ref="0x408d60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408d7090" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408d7090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d7268"/>
        <function-ref name="getPayload" scoped="" ref="0x408d7348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d7428"/>
        <function-ref name="cancel" scoped="" ref="0x408d7508"/>
        <function-ref name="sendDone" scoped="" ref="0x408d75e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x408d6c20" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408d6c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d6df8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408d6ed8"/>
        <function-ref name="getPayload" scoped="" ref="0x408d5010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d50f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408d51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408d67e8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408d67e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d69c0"/>
        <function-ref name="header" scoped="" ref="0x408d6aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408d7770" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408d7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d7948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x408d6290" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408d6290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d6468"/>
        <function-ref name="ready" scoped="" ref="0x408d6548"/>
        <function-ref name="sendDone" scoped="" ref="0x408d6628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408d5930" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408d5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408d5b08"/>
        <function-ref name="stopDone" scoped="" ref="0x408d5be8"/>
        <function-ref name="start" scoped="" ref="0x408d5cc8"/>
        <function-ref name="stop" scoped="" ref="0x408d5da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x408d2010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x408d2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408d21e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x408d2e08" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408d2e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408d1010"/>
        <function-ref name="turnOn" scoped="" ref="0x408d10f0"/>
        <function-ref name="setChannel" scoped="" ref="0x408d11d0"/>
        <function-ref name="done" scoped="" ref="0x408d12b0"/>
        <function-ref name="standby" scoped="" ref="0x408d1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408d2358" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408d2358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d2530"/>
        <function-ref name="getPayload" scoped="" ref="0x408d2610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d26f0"/>
        <function-ref name="cancel" scoped="" ref="0x408d27d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408d28b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x408d0518" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408d0518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d06f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x408d07d0"/>
        <function-ref name="getPayload" scoped="" ref="0x408d08b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d0990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408d0a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408d00e0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408d00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d02b8"/>
        <function-ref name="header" scoped="" ref="0x408d0398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x408e8430" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x408e8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408e8608"/>
        <function-ref name="runTask" scoped="" ref="0x408e86e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408d2a38" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408d2a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d2c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x408e3ae0" loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x408e3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408e3cb8"/>
        <function-ref name="runTask" scoped="" ref="0x408e3d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x408eee08" loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x408eee08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408ed010"/>
        <function-ref name="runTask" scoped="" ref="0x408ed0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x408d1b30" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408d1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d1d08"/>
        <function-ref name="ready" scoped="" ref="0x408d1de8"/>
        <function-ref name="sendDone" scoped="" ref="0x408d1ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x408d1518" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x408d1518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x408d16f0"/>
        <function-ref name="suspend" scoped="" ref="0x408d17d0"/>
        <function-ref name="resume" scoped="" ref="0x408d18b0"/>
        <function-ref name="run" scoped="" ref="0x408d1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408ff950" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408ff950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ffb28"/>
        <function-ref name="getPayload" scoped="" ref="0x408ffc08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ffce8"/>
        <function-ref name="cancel" scoped="" ref="0x408ffdc8"/>
        <function-ref name="sendDone" scoped="" ref="0x408ffea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408fe168" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408fe168"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408fe340"/>
        <function-ref name="header" scoped="" ref="0x408fe420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408d8cd8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408d8cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d8eb0"/>
        <function-ref name="getPayload" scoped="" ref="0x408ff010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ff0f0"/>
        <function-ref name="cancel" scoped="" ref="0x408ff1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408ff2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408fe640" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408fe640"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x408fe818"/>
        <function-ref name="reportChannelError" scoped="" ref="0x408fe8f8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x408fe9d8"/>
        <function-ref name="getSender" scoped="" ref="0x408feab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408ff470" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408ff470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408ff648"/>
        <function-ref name="header" scoped="" ref="0x408ff728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408f90c8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408f90c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f92a0"/>
        <function-ref name="getPayload" scoped="" ref="0x408f9380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f9460"/>
        <function-ref name="cancel" scoped="" ref="0x408f9540"/>
        <function-ref name="sendDone" scoped="" ref="0x408f9620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408f9868" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408f9868"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f9a40"/>
        <function-ref name="header" scoped="" ref="0x408f9b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x40910a00" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40910a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40910bd8"/>
        <function-ref name="clearAll" scoped="" ref="0x40910cb8"/>
        <function-ref name="get" scoped="" ref="0x40910d98"/>
        <function-ref name="set" scoped="" ref="0x40910e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408fb170" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408fb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408fb348"/>
        <function-ref name="getPayload" scoped="" ref="0x408fb428"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408fb508"/>
        <function-ref name="cancel" scoped="" ref="0x408fb5e8"/>
        <function-ref name="sendDone" scoped="" ref="0x408fb6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x409129c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x409129c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40912ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x40912c80"/>
        <function-ref name="getNode" scoped="" ref="0x40912d60"/>
        <function-ref name="evicted" scoped="" ref="0x40912e40"/>
        <function-ref name="getIndex" scoped="" ref="0x40912f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408fb888" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408fb888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408fba60"/>
        <function-ref name="header" scoped="" ref="0x408fbb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408fbcb0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408fbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408fbe88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x408f9ce0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x408f9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x408f9eb8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40916010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x409160f0"/>
        <function-ref name="getSender" scoped="" ref="0x409161d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x408fdde8" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408fdde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40920010"/>
        <function-ref name="insertNode" scoped="" ref="0x409200f0"/>
        <function-ref name="getNode" scoped="" ref="0x409201d0"/>
        <function-ref name="evicted" scoped="" ref="0x409202b0"/>
        <function-ref name="getIndex" scoped="" ref="0x40920390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4091d860" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4091d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091da38"/>
        <function-ref name="clearAll" scoped="" ref="0x4091db18"/>
        <function-ref name="get" scoped="" ref="0x4091dbf8"/>
        <function-ref name="set" scoped="" ref="0x4091dcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40920da0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40920da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4091d010"/>
        <function-ref name="insertNode" scoped="" ref="0x4091d0f0"/>
        <function-ref name="getNode" scoped="" ref="0x4091d1d0"/>
        <function-ref name="evicted" scoped="" ref="0x4091d2b0"/>
        <function-ref name="getIndex" scoped="" ref="0x4091d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40920a08" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40920a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40920be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4091f848" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4091f848"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091fa20"/>
        <function-ref name="clearAll" scoped="" ref="0x4091fb00"/>
        <function-ref name="get" scoped="" ref="0x4091fbe0"/>
        <function-ref name="set" scoped="" ref="0x4091fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40941428" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40941428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40941600"/>
        <function-ref name="ready" scoped="" ref="0x409416e0"/>
        <function-ref name="sendDone" scoped="" ref="0x409417c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40941a08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40941a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40941be0"/>
        <function-ref name="header" scoped="" ref="0x40941cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40942ba8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40942ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40942d80"/>
        <function-ref name="turnOn" scoped="" ref="0x40942e60"/>
        <function-ref name="setChannel" scoped="" ref="0x40941010"/>
        <function-ref name="done" scoped="" ref="0x409410f0"/>
        <function-ref name="standby" scoped="" ref="0x409411d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40941ee0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40941ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409400e0"/>
        <function-ref name="turnOn" scoped="" ref="0x409401c0"/>
        <function-ref name="setChannel" scoped="" ref="0x409402a0"/>
        <function-ref name="done" scoped="" ref="0x40940380"/>
        <function-ref name="standby" scoped="" ref="0x40940460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409406d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409406d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x4093f010"/>
        <function-ref name="channelError" scoped="" ref="0x40940988"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x40940a68"/>
        <function-ref name="getChannelTime" scoped="" ref="0x40940b48"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x40940c28"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x40940d08"/>
        <function-ref name="timerTick" scoped="" ref="0x40940de8"/>
        <function-ref name="getSender" scoped="" ref="0x40940ec8"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x409408a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40942748" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40942748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40942920"/>
        <function-ref name="header" scoped="" ref="0x40942a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409421f0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409421f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409423c8"/>
        <function-ref name="ready" scoped="" ref="0x409424a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40942588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4093b4b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4093b4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4093b690"/>
        <function-ref name="ready" scoped="" ref="0x4093b770"/>
        <function-ref name="sendDone" scoped="" ref="0x4093b850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficMonitorConfig" ref="0x4093c970" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4093c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x4093b2b0"/>
        <function-ref name="channelError" scoped="" ref="0x4093cc28"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x4093cd08"/>
        <function-ref name="getChannelTime" scoped="" ref="0x4093cde8"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x4093cec8"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x4093b010"/>
        <function-ref name="timerTick" scoped="" ref="0x4093b0f0"/>
        <function-ref name="getSender" scoped="" ref="0x4093b1d0"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x4093cb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4093ba98" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4093ba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093bc70"/>
        <function-ref name="header" scoped="" ref="0x4093bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x4093c1b8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4093c1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4093c390"/>
        <function-ref name="turnOn" scoped="" ref="0x4093c470"/>
        <function-ref name="setChannel" scoped="" ref="0x4093c550"/>
        <function-ref name="done" scoped="" ref="0x4093c630"/>
        <function-ref name="standby" scoped="" ref="0x4093c710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x4093a010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x4093a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4093a1e8"/>
        <function-ref name="turnOn" scoped="" ref="0x4093a2c8"/>
        <function-ref name="setChannel" scoped="" ref="0x4093a3a8"/>
        <function-ref name="done" scoped="" ref="0x4093a488"/>
        <function-ref name="standby" scoped="" ref="0x4093a568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x40937a70" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40937a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40937c48"/>
        <function-ref name="insertNode" scoped="" ref="0x40937d28"/>
        <function-ref name="getNode" scoped="" ref="0x40937e08"/>
        <function-ref name="evicted" scoped="" ref="0x40937ee8"/>
        <function-ref name="getIndex" scoped="" ref="0x40936010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4093fcc8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4093fcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093fea0"/>
        <function-ref name="header" scoped="" ref="0x4093c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x409361f8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x409361f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409363d0"/>
        <function-ref name="clearAll" scoped="" ref="0x409364b0"/>
        <function-ref name="get" scoped="" ref="0x40936590"/>
        <function-ref name="set" scoped="" ref="0x40936670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x409367f8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x409367f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x409369d0"/>
        <function-ref name="suspend" scoped="" ref="0x40936ab0"/>
        <function-ref name="resume" scoped="" ref="0x40936b90"/>
        <function-ref name="run" scoped="" ref="0x40936c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4093f770" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4093f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4093f948"/>
        <function-ref name="ready" scoped="" ref="0x4093fa28"/>
        <function-ref name="sendDone" scoped="" ref="0x4093fb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopTimer" ref="0x4095ca50" loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopTimer" scoped="" ref="0x4095ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4095cc28"/>
        <function-ref name="runTask" scoped="" ref="0x4095cd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4093a808" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4093a808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40937330"/>
        <function-ref name="fired" scoped="" ref="0x409395b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40939cb8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40939a60"/>
        <function-ref name="getdt" scoped="" ref="0x409377e0"/>
        <function-ref name="gett0" scoped="" ref="0x40937588"/>
        <function-ref name="isRunning" scoped="" ref="0x40939808"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4093ae30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40937010"/>
        <function-ref name="startOneShot" scoped="" ref="0x409390d8"/>
        <function-ref name="stop" scoped="" ref="0x40939358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40959918" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TrafficMonitorLayerC.UpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40959918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4096c4c8"/>
        <function-ref name="fired" scoped="" ref="0x40958768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40958e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40958c18"/>
        <function-ref name="getdt" scoped="" ref="0x4096c978"/>
        <function-ref name="gett0" scoped="" ref="0x4096c720"/>
        <function-ref name="isRunning" scoped="" ref="0x409589c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40958010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4096c1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40958290"/>
        <function-ref name="stop" scoped="" ref="0x40958510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40974ab8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40974ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4096f650"/>
        <function-ref name="fired" scoped="" ref="0x40970858"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4096f010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40970d08"/>
        <function-ref name="getdt" scoped="" ref="0x4096fb00"/>
        <function-ref name="gett0" scoped="" ref="0x4096f8a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40970ab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40970100"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4096f330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40970380"/>
        <function-ref name="stop" scoped="" ref="0x40970600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4096b850" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="TrafficMonitorLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4096b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096ba28"/>
        <function-ref name="clearAll" scoped="" ref="0x4096bb08"/>
        <function-ref name="get" scoped="" ref="0x4096bbe8"/>
        <function-ref name="set" scoped="" ref="0x4096bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40985c60" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40985c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40985e38"/>
        <function-ref name="ready" scoped="" ref="0x40985f18"/>
        <function-ref name="sendDone" scoped="" ref="0x40984010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40984258" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40984258"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40984430"/>
        <function-ref name="header" scoped="" ref="0x40984510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40984788" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40984788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40984960"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40984a40"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40984b20"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40984c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40985750" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40985750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40985928"/>
        <function-ref name="header" scoped="" ref="0x40985a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409851f8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409851f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409853d0"/>
        <function-ref name="ready" scoped="" ref="0x409854b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40985590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40983e40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40983e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40980050"/>
        <function-ref name="ready" scoped="" ref="0x40980130"/>
        <function-ref name="sendDone" scoped="" ref="0x40980210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40980458" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40980458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40980630"/>
        <function-ref name="header" scoped="" ref="0x40980710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409808b8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409808b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40980a90"/>
        <function-ref name="wait" scoped="" ref="0x40980b70"/>
        <function-ref name="cancel" scoped="" ref="0x40980c50"/>
        <function-ref name="isFree" scoped="" ref="0x40980d30"/>
        <function-ref name="getNow" scoped="" ref="0x40980e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4097f010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4097f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4097f1e8"/>
        <function-ref name="rand32" scoped="" ref="0x4097f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4097f540" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4097f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4097f718"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4097f7f8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4097f8d8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4097f9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40983930" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40983930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40983b08"/>
        <function-ref name="header" scoped="" ref="0x40983be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409833d8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409833d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409835b0"/>
        <function-ref name="ready" scoped="" ref="0x40983690"/>
        <function-ref name="sendDone" scoped="" ref="0x40983770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x4097b508" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x4097b508"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4097b6e0"/>
        <function-ref name="runTask" scoped="" ref="0x4097b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x409892a8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409892a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40989480"/>
        <function-ref name="rand32" scoped="" ref="0x40989560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40981990" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40981990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40989010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40981470" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40981470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40981648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x409a5cf8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409a5cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409a5ed0"/>
        <function-ref name="rand32" scoped="" ref="0x409a4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x409a5438" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x409a5438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409a5a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40989f08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40989f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409a50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40966f10" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40966f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4099c108"/>
        <function-ref name="ready" scoped="" ref="0x4099c1e8"/>
        <function-ref name="sendDone" scoped="" ref="0x4099c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4099c510" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4099c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4099c6e8"/>
        <function-ref name="header" scoped="" ref="0x4099c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4099ca18" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4099ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x4099cbf0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x4099ccd0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4099cdb0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x4099ce90"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x4099b010"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4099b0f0"/>
        <function-ref name="setAckReceived" scoped="" ref="0x4099b1d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4099b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40966a00" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40966a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40966bd8"/>
        <function-ref name="header" scoped="" ref="0x40966cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409664a8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409664a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40966680"/>
        <function-ref name="ready" scoped="" ref="0x40966760"/>
        <function-ref name="sendDone" scoped="" ref="0x40966840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40998448" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40998448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40998620"/>
        <function-ref name="ready" scoped="" ref="0x40998700"/>
        <function-ref name="sendDone" scoped="" ref="0x409987e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40998a28" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40998a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40998c00"/>
        <function-ref name="header" scoped="" ref="0x40998ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40998e88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40998e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40997070"/>
        <function-ref name="wait" scoped="" ref="0x40997150"/>
        <function-ref name="cancel" scoped="" ref="0x40997230"/>
        <function-ref name="isFree" scoped="" ref="0x40997310"/>
        <function-ref name="getNow" scoped="" ref="0x409973f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4099bf20" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4099bf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40998110"/>
        <function-ref name="header" scoped="" ref="0x409981f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0x409975e0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x409975e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x409977b8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40997898"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40997978"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40997a58"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40997b38"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40997c18"/>
        <function-ref name="setAckReceived" scoped="" ref="0x40997cf8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40997dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4099b9c8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4099b9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4099bba0"/>
        <function-ref name="ready" scoped="" ref="0x4099bc80"/>
        <function-ref name="sendDone" scoped="" ref="0x4099bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409875b0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409875b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40987788"/>
        <function-ref name="stopDone" scoped="" ref="0x40987868"/>
        <function-ref name="start" scoped="" ref="0x40987948"/>
        <function-ref name="stop" scoped="" ref="0x40987a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409a6010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409a6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409a61e8"/>
        <function-ref name="request" scoped="" ref="0x409a62c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x409a6e48" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x409a6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c7050"/>
        <function-ref name="ready" scoped="" ref="0x409c7130"/>
        <function-ref name="sendDone" scoped="" ref="0x409c7210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409c5250" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409c5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c5428"/>
        <function-ref name="getPayload" scoped="" ref="0x409c5508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c55e8"/>
        <function-ref name="cancel" scoped="" ref="0x409c56c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409c57a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409c5908" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409c5908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409a7070" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409a7070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409a7248"/>
        <function-ref name="turnOn" scoped="" ref="0x409a7328"/>
        <function-ref name="setChannel" scoped="" ref="0x409a7408"/>
        <function-ref name="done" scoped="" ref="0x409a74e8"/>
        <function-ref name="standby" scoped="" ref="0x409a75c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40987b68" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40987b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40987d40"/>
        <function-ref name="getPayload" scoped="" ref="0x40987e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40987f00"/>
        <function-ref name="cancel" scoped="" ref="0x409a8010"/>
        <function-ref name="sendDone" scoped="" ref="0x409a80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x409a8548" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x409a8548"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x409a8720"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x409a8800"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x409a88e0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x409a89c0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x409a8aa0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x409a8b80"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x409a8c60"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x409a8d40"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x409a8e20"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x409a8f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409a6428" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409a6428"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409a6600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409a7be0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409a7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a7db8"/>
        <function-ref name="header" scoped="" ref="0x409a7e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x409a6790" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x409a6790"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409a6968"/>
        <function-ref name="turnOn" scoped="" ref="0x409a6a48"/>
        <function-ref name="setChannel" scoped="" ref="0x409a6b28"/>
        <function-ref name="done" scoped="" ref="0x409a6c08"/>
        <function-ref name="standby" scoped="" ref="0x409a6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409c7c20" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409c7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409c7df8"/>
        <function-ref name="stopDone" scoped="" ref="0x409c7ed8"/>
        <function-ref name="start" scoped="" ref="0x409c5010"/>
        <function-ref name="stop" scoped="" ref="0x409c50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409c5c40" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409c5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409c5e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409a8230" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409a8230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a8408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x409c7370" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x409c7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c7548"/>
        <function-ref name="header" scoped="" ref="0x409c7628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409a7708" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409a7708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a78e0"/>
        <function-ref name="ready" scoped="" ref="0x409a79c0"/>
        <function-ref name="sendDone" scoped="" ref="0x409a7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409c7788" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409c7788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409c79e0"/>
        <function-ref name="request" scoped="" ref="0x409c7ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409c09b8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409c09b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409c0b90"/>
        <function-ref name="request" scoped="" ref="0x409c0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409c3890" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409c3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409c3a68"/>
        <function-ref name="turnOn" scoped="" ref="0x409c3b48"/>
        <function-ref name="setChannel" scoped="" ref="0x409c3c28"/>
        <function-ref name="done" scoped="" ref="0x409c3d08"/>
        <function-ref name="standby" scoped="" ref="0x409c3de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409c0568" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409c0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c0740"/>
        <function-ref name="header" scoped="" ref="0x409c0820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409c0010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409c0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c01e8"/>
        <function-ref name="ready" scoped="" ref="0x409c02c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409c03a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0x409c0e50" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x409c0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x409bf050"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x409bf590"/>
        <function-ref name="getPayload" scoped="" ref="0x409bf210"/>
        <function-ref name="setLength" scoped="" ref="0x409bf2f0"/>
        <function-ref name="getLength" scoped="" ref="0x409bf3d0"/>
        <function-ref name="getMaxLength" scoped="" ref="0x409bf4b0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409bf130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409bbb58" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409bbb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409bbd30"/>
        <function-ref name="request" scoped="" ref="0x409bbe10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x409d5010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x409d5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x409d5760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x409cb390" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x409cb390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ca010"/>
        <function-ref name="get" scoped="" ref="0x409cbc98"/>
        <function-ref name="isSet" scoped="" ref="0x409cb9d8"/>
        <function-ref name="set" scoped="" ref="0x409ca2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x409bc670" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x409bc670"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402e4ce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402e4ce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409bc848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409c8be0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409c8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TRF230" ref="0x405a4508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409e9730"/>
        <function-ref name="clear" scoped="" ref="0x409e9ae0"/>
        <function-ref name="isValid" scoped="" ref="0x409e9380"/>
        <function-ref name="set" scoped="" ref="0x409e9e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplRF230" ref="0x409d32f0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x409d32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x409d34c8"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x409d35a8"/>
        <function-ref name="spiWrite" scoped="" ref="0x409d3688"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x409d3768"/>
        <function-ref name="crcByte" scoped="" ref="0x409d3848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409bc9f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409bc9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409bcbc8"/>
        <function-ref name="turnOn" scoped="" ref="0x409bcca8"/>
        <function-ref name="setChannel" scoped="" ref="0x409bcd88"/>
        <function-ref name="done" scoped="" ref="0x409bce68"/>
        <function-ref name="standby" scoped="" ref="0x409bb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x409d64a0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x409d64a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409d6678"/>
        <function-ref name="isInput" scoped="" ref="0x409d6758"/>
        <function-ref name="toggle" scoped="" ref="0x409d6838"/>
        <function-ref name="isOutput" scoped="" ref="0x409d6918"/>
        <function-ref name="get" scoped="" ref="0x409d69f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x409d6ad8"/>
        <function-ref name="set" scoped="" ref="0x409d6bb8"/>
        <function-ref name="clr" scoped="" ref="0x409d6c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTransmitPower" ref="0x409cc010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409cc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ccbd8"/>
        <function-ref name="get" scoped="" ref="0x409cc918"/>
        <function-ref name="isSet" scoped="" ref="0x409cc658"/>
        <function-ref name="set" scoped="" ref="0x409cce98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x409e73d0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409e73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TRF230" ref="0x405a4508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409e7a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x409b9b68" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409b9b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409b9d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x409d3a48" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x409d3a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409d3c20"/>
        <function-ref name="isInput" scoped="" ref="0x409d3d00"/>
        <function-ref name="toggle" scoped="" ref="0x409d3de0"/>
        <function-ref name="isOutput" scoped="" ref="0x409d3ec0"/>
        <function-ref name="get" scoped="" ref="0x409d6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x409d60f0"/>
        <function-ref name="set" scoped="" ref="0x409d61d0"/>
        <function-ref name="clr" scoped="" ref="0x409d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409bb708" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409bb708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409bb8e0"/>
        <function-ref name="header" scoped="" ref="0x409bb9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409e6c18" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409e6c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409e6df0"/>
        <function-ref name="wait" scoped="" ref="0x409e6ed0"/>
        <function-ref name="cancel" scoped="" ref="0x409e5010"/>
        <function-ref name="isFree" scoped="" ref="0x409e50f0"/>
        <function-ref name="getNow" scoped="" ref="0x409e51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x409ca800" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409ca800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c83d8"/>
        <function-ref name="get" scoped="" ref="0x409c8118"/>
        <function-ref name="isSet" scoped="" ref="0x409cae48"/>
        <function-ref name="set" scoped="" ref="0x409c8698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x409bc010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x409bc010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402e4ce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402e4ce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409bc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x409d8b30" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409d8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409d8d08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409d8de8"/>
        <function-ref name="request" scoped="" ref="0x409d8ec8"/>
        <function-ref name="granted" scoped="" ref="0x409b9010"/>
        <function-ref name="isOwner" scoped="" ref="0x409b90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x409ba090" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x409ba090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409ba268"/>
        <function-ref name="isInput" scoped="" ref="0x409ba348"/>
        <function-ref name="toggle" scoped="" ref="0x409ba428"/>
        <function-ref name="isOutput" scoped="" ref="0x409ba508"/>
        <function-ref name="get" scoped="" ref="0x409ba5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x409ba6c8"/>
        <function-ref name="set" scoped="" ref="0x409ba7a8"/>
        <function-ref name="clr" scoped="" ref="0x409ba888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409bb1b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409bb1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409bb388"/>
        <function-ref name="ready" scoped="" ref="0x409bb468"/>
        <function-ref name="sendDone" scoped="" ref="0x409bb548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x409d0650" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x409d0650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409d08a8"/>
        <function-ref name="disable" scoped="" ref="0x409d0988"/>
        <function-ref name="captured" scoped="" ref="0x409d0a68"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x409d0b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLinkQuality" ref="0x409d5bb0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x409d5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d2790"/>
        <function-ref name="get" scoped="" ref="0x409d24d0"/>
        <function-ref name="isSet" scoped="" ref="0x409d2210"/>
        <function-ref name="set" scoped="" ref="0x409d2a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x409e65f8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x409e65f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x409e67d0"/>
        <function-ref name="suspend" scoped="" ref="0x409e68b0"/>
        <function-ref name="resume" scoped="" ref="0x409e6990"/>
        <function-ref name="run" scoped="" ref="0x409e6a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0x409e7c98" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x409e7c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x409e7e70"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x409e6470"/>
        <function-ref name="getPayload" scoped="" ref="0x409e60f0"/>
        <function-ref name="setLength" scoped="" ref="0x409e61d0"/>
        <function-ref name="getLength" scoped="" ref="0x409e62b0"/>
        <function-ref name="getMaxLength" scoped="" ref="0x409e6390"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409e6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40a39580" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a39580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a39758"/>
        <function-ref name="isInput" scoped="" ref="0x40a39838"/>
        <function-ref name="toggle" scoped="" ref="0x40a39918"/>
        <function-ref name="isOutput" scoped="" ref="0x40a399f8"/>
        <function-ref name="get" scoped="" ref="0x40a39ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a39bb8"/>
        <function-ref name="set" scoped="" ref="0x40a39c98"/>
        <function-ref name="clr" scoped="" ref="0x40a39d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0x40a36278" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x40a36278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x40a36450"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x40a36530"/>
        <function-ref name="spiWrite" scoped="" ref="0x40a36610"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x40a366f0"/>
        <function-ref name="crcByte" scoped="" ref="0x40a367d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a3b6f0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a3b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a3b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40a3bac8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a3bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a3bca0"/>
        <function-ref name="isInput" scoped="" ref="0x40a3bd80"/>
        <function-ref name="toggle" scoped="" ref="0x40a3be60"/>
        <function-ref name="isOutput" scoped="" ref="0x40a39010"/>
        <function-ref name="get" scoped="" ref="0x40a390f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a391d0"/>
        <function-ref name="set" scoped="" ref="0x40a392b0"/>
        <function-ref name="clr" scoped="" ref="0x40a39390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a38810" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a38810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TRF230" ref="0x405a4508"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a37d58"/>
        <function-ref name="fired" scoped="" ref="0x40a37528"/>
        <function-ref name="startAt" scoped="" ref="0x40a37a18"/>
        <function-ref name="isRunning" scoped="" ref="0x40a377a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a36010"/>
        <function-ref name="start" scoped="" ref="0x40a37010"/>
        <function-ref name="stop" scoped="" ref="0x40a372b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40a3b010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a3b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a3b1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a3b2c8"/>
        <function-ref name="request" scoped="" ref="0x40a3b3a8"/>
        <function-ref name="granted" scoped="" ref="0x40a3b488"/>
        <function-ref name="isOwner" scoped="" ref="0x40a3b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x409bd540" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x409bd540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409bd718"/>
        <function-ref name="isInput" scoped="" ref="0x409bd7f8"/>
        <function-ref name="toggle" scoped="" ref="0x409bd8d8"/>
        <function-ref name="isOutput" scoped="" ref="0x409bd9b8"/>
        <function-ref name="get" scoped="" ref="0x409bda98"/>
        <function-ref name="makeOutput" scoped="" ref="0x409bdb78"/>
        <function-ref name="set" scoped="" ref="0x409bdc58"/>
        <function-ref name="clr" scoped="" ref="0x409bdd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a38010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a38010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a381e8"/>
        <function-ref name="disable" scoped="" ref="0x40a382c8"/>
        <function-ref name="captured" scoped="" ref="0x40a383a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a38488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40a63950" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40a63950"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a63b28"/>
        <function-ref name="isInput" scoped="" ref="0x40a63c08"/>
        <function-ref name="toggle" scoped="" ref="0x40a63ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a63dc8"/>
        <function-ref name="get" scoped="" ref="0x40a63ea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a62010"/>
        <function-ref name="set" scoped="" ref="0x40a620f0"/>
        <function-ref name="clr" scoped="" ref="0x40a621d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0x40a41258" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x40a41258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x40a41430"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x40a41510"/>
        <function-ref name="spiWrite" scoped="" ref="0x40a415f0"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x40a416d0"/>
        <function-ref name="crcByte" scoped="" ref="0x40a417b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40a41b38" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40a41b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40a63640"/>
        <function-ref name="test" scoped="" ref="0x40a63150"/>
        <function-ref name="get" scoped="" ref="0x40a40200"/>
        <function-ref name="captured" scoped="" ref="0x40a40718"/>
        <function-ref name="reset" scoped="" ref="0x40a409b8"/>
        <function-ref name="isOn" scoped="" ref="0x40a633c8"/>
        <function-ref name="set" scoped="" ref="0x40a40478"/>
        <function-ref name="start" scoped="" ref="0x40a40c30"/>
        <function-ref name="stop" scoped="" ref="0x40a40ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40a623d8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40a623d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a625b0"/>
        <function-ref name="isInput" scoped="" ref="0x40a62690"/>
        <function-ref name="toggle" scoped="" ref="0x40a62770"/>
        <function-ref name="isOutput" scoped="" ref="0x40a62850"/>
        <function-ref name="get" scoped="" ref="0x40a62930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a62a10"/>
        <function-ref name="set" scoped="" ref="0x40a62af0"/>
        <function-ref name="clr" scoped="" ref="0x40a62bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a43ec0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a43ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a410c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a43838" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a43838"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a43a10"/>
        <function-ref name="disable" scoped="" ref="0x40a43af0"/>
        <function-ref name="captured" scoped="" ref="0x40a43bd0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a43cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a6fa28" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a6fa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a6fc00"/>
        <function-ref name="sendDone" scoped="" ref="0x40a6fce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a755e8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a755e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a757c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a75268" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a75268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a75440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a74190" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a74190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a74368"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a74448"/>
        <function-ref name="request" scoped="" ref="0x40a74528"/>
        <function-ref name="granted" scoped="" ref="0x40a74608"/>
        <function-ref name="isOwner" scoped="" ref="0x40a746e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40a98860" loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40a98860"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a98a38"/>
        <function-ref name="runTask" scoped="" ref="0x40a98b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a6d9a0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a6d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a6db78"/>
        <function-ref name="sendDone" scoped="" ref="0x40a6dc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40a6a010" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40a6a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a6a1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a6a2c8"/>
        <function-ref name="request" scoped="" ref="0x40a6a3a8"/>
        <function-ref name="granted" scoped="" ref="0x40a6a488"/>
        <function-ref name="isOwner" scoped="" ref="0x40a6a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a6d628" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a6d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a6d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a6d2c8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a6d2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a6d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40a84320" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40a84320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a844f8"/>
        <function-ref name="sleep" scoped="" ref="0x40a6b950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a846b8"/>
        <function-ref name="dataReady" scoped="" ref="0x40a6ba30"/>
        <function-ref name="initMaster" scoped="" ref="0x40a84878"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a84958"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a84a38"/>
        <function-ref name="read" scoped="" ref="0x40a84b18"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a84bf8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a84cd8"/>
        <function-ref name="setClock" scoped="" ref="0x40a84db8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a84e98"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a6b010"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a6b170"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a6b250"/>
        <function-ref name="write" scoped="" ref="0x40a6b330"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a6b410"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a6b4f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a6b5d0"/>
        <function-ref name="getClock" scoped="" ref="0x40a6b6b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a6b790"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a845d8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a84798"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a6b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a6c100" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a6c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a6c2d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a6c3b8"/>
        <function-ref name="request" scoped="" ref="0x40a6c498"/>
        <function-ref name="granted" scoped="" ref="0x40a6c578"/>
        <function-ref name="isOwner" scoped="" ref="0x40a6c658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a80af8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a80af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a80cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a80678" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a80678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a80850"/>
        <function-ref name="userId" scoped="" ref="0x40a80930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40aa30c0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40aa30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40aa3298"/>
        <function-ref name="sleep" scoped="" ref="0x40aa2710"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40aa3458"/>
        <function-ref name="dataReady" scoped="" ref="0x40aa27f0"/>
        <function-ref name="initMaster" scoped="" ref="0x40aa3618"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40aa36f8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40aa37d8"/>
        <function-ref name="read" scoped="" ref="0x40aa38b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40aa3998"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40aa3a78"/>
        <function-ref name="setClock" scoped="" ref="0x40aa3b58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40aa3c38"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40aa3d18"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40aa3e78"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40aa2010"/>
        <function-ref name="write" scoped="" ref="0x40aa20f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40aa21d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40aa22b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40aa2390"/>
        <function-ref name="getClock" scoped="" ref="0x40aa2470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40aa2550"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40aa3378"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40aa3538"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40aa2630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40a9a200" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40a9a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a9a3d8"/>
        <function-ref name="isInput" scoped="" ref="0x40a9a4b8"/>
        <function-ref name="toggle" scoped="" ref="0x40a9a598"/>
        <function-ref name="isOutput" scoped="" ref="0x40a9a678"/>
        <function-ref name="get" scoped="" ref="0x40a9a758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a9a838"/>
        <function-ref name="set" scoped="" ref="0x40a9a918"/>
        <function-ref name="clr" scoped="" ref="0x40a9a9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40a9dd10" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40a9dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a9dee8"/>
        <function-ref name="isInput" scoped="" ref="0x40a9c010"/>
        <function-ref name="toggle" scoped="" ref="0x40a9c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a9c1d0"/>
        <function-ref name="get" scoped="" ref="0x40a9c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a9c390"/>
        <function-ref name="set" scoped="" ref="0x40a9c470"/>
        <function-ref name="clr" scoped="" ref="0x40a9c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40a9d338" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40a9d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a9d510"/>
        <function-ref name="isInput" scoped="" ref="0x40a9d5f0"/>
        <function-ref name="toggle" scoped="" ref="0x40a9d6d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a9d7b0"/>
        <function-ref name="get" scoped="" ref="0x40a9d890"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a9d970"/>
        <function-ref name="set" scoped="" ref="0x40a9da50"/>
        <function-ref name="clr" scoped="" ref="0x40a9db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40a9be30" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40a9be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a9d050"/>
        <function-ref name="stop" scoped="" ref="0x40a9d130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40a9ac00" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40a9ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a9add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40a9f4a0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40a9f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a9f678"/>
        <function-ref name="sleep" scoped="" ref="0x40a9eb10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a9f838"/>
        <function-ref name="dataReady" scoped="" ref="0x40a9ebf0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a9f9f8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a9fad8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a9fbb8"/>
        <function-ref name="read" scoped="" ref="0x40a9fc98"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a9fd78"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a9fe58"/>
        <function-ref name="setClock" scoped="" ref="0x40a9e010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a9e0f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a9e1d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a9e330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a9e410"/>
        <function-ref name="write" scoped="" ref="0x40a9e4f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a9e5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a9e6b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a9e790"/>
        <function-ref name="getClock" scoped="" ref="0x40a9e870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a9e950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a9f758"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a9f918"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a9ea30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40a9c740" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40a9c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a9c918"/>
        <function-ref name="isInput" scoped="" ref="0x40a9c9f8"/>
        <function-ref name="toggle" scoped="" ref="0x40a9cad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a9cbb8"/>
        <function-ref name="get" scoped="" ref="0x40a9cc98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a9cd78"/>
        <function-ref name="set" scoped="" ref="0x40a9ce58"/>
        <function-ref name="clr" scoped="" ref="0x40a9a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40afa030" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40afa030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40afa218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40afa2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40afa8e8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40afa8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40afaad0"/>
        <function-ref name="configure" scoped="" ref="0x40afabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ae28c0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ae28c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ae2aa8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ae2b88"/>
        <function-ref name="request" scoped="" ref="0x40ae2c68"/>
        <function-ref name="granted" scoped="" ref="0x40ae2d48"/>
        <function-ref name="isOwner" scoped="" ref="0x40ae2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40afa438" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40afa438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40afa610"/>
        <function-ref name="userId" scoped="" ref="0x40afa6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41606d88" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41606d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41604010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41604170" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41604170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41604348"/>
        <function-ref name="isEmpty" scoped="" ref="0x41604428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41604508"/>
        <function-ref name="dequeue" scoped="" ref="0x416045e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x416038c0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x416038c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41603aa8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41603b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41601218" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41601218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41601400"/>
        <function-ref name="configure" scoped="" ref="0x416014e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41601640" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41601640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41601818"/>
        <function-ref name="isEmpty" scoped="" ref="0x416018f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x416019d8"/>
        <function-ref name="dequeue" scoped="" ref="0x41601ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41603180" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41603180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41603368"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41603448"/>
        <function-ref name="request" scoped="" ref="0x41603528"/>
        <function-ref name="granted" scoped="" ref="0x41603608"/>
        <function-ref name="isOwner" scoped="" ref="0x416036e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41603cc8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41603cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41603ea0"/>
        <function-ref name="userId" scoped="" ref="0x41601010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41601c38" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41601c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41601e10"/>
        <function-ref name="runTask" scoped="" ref="0x41601ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b1ac88" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b1ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TOne" ref="0x4035edb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b1e150"/>
        <function-ref name="fired" scoped="" ref="0x40b1f908"/>
        <function-ref name="startAt" scoped="" ref="0x40b1fdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b1fb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b1e3c8"/>
        <function-ref name="start" scoped="" ref="0x40b1f3f0"/>
        <function-ref name="stop" scoped="" ref="0x40b1f690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x415edc18" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x415edc18"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402e48e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402e48e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TOne" ref="0x4035edb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415eb0f8"/>
        <function-ref name="fired" scoped="" ref="0x415ec898"/>
        <function-ref name="startAt" scoped="" ref="0x415ecd88"/>
        <function-ref name="isRunning" scoped="" ref="0x415ecb10"/>
        <function-ref name="getAlarm" scoped="" ref="0x415eb370"/>
        <function-ref name="start" scoped="" ref="0x415ec380"/>
        <function-ref name="stop" scoped="" ref="0x415ec620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x415e9880" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x415e9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x415e7df0"/>
        <function-ref name="fired" scoped="" ref="0x415e7410"/>
        <function-ref name="get" scoped="" ref="0x415e9ec8"/>
        <function-ref name="reset" scoped="" ref="0x415e7688"/>
        <function-ref name="isOn" scoped="" ref="0x415e6088"/>
        <function-ref name="set" scoped="" ref="0x415e7170"/>
        <function-ref name="start" scoped="" ref="0x415e7900"/>
        <function-ref name="stop" scoped="" ref="0x415e7b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x415eb630" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x415eb630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x415e90a8"/>
        <function-ref name="test" scoped="" ref="0x415eaba0"/>
        <function-ref name="get" scoped="" ref="0x415ebc78"/>
        <function-ref name="setScale" scoped="" ref="0x415e9320"/>
        <function-ref name="getScale" scoped="" ref="0x415e95c0"/>
        <function-ref name="reset" scoped="" ref="0x415ea438"/>
        <function-ref name="overflow" scoped="" ref="0x415ea1c0"/>
        <function-ref name="isOn" scoped="" ref="0x415eae18"/>
        <function-ref name="set" scoped="" ref="0x415ebef0"/>
        <function-ref name="start" scoped="" ref="0x415ea6b0"/>
        <function-ref name="stop" scoped="" ref="0x415ea928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40b43e48" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40b43e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40b405e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40b4e4f0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b4e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b4e6c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b4e7a8"/>
        <function-ref name="led1On" scoped="" ref="0x40b4e888"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b4e968"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b4ea48"/>
        <function-ref name="get" scoped="" ref="0x40b4eb28"/>
        <function-ref name="led1Off" scoped="" ref="0x40b4ec08"/>
        <function-ref name="led2Off" scoped="" ref="0x40b4b010"/>
        <function-ref name="set" scoped="" ref="0x40b4ece8"/>
        <function-ref name="led0On" scoped="" ref="0x40b4edc8"/>
        <function-ref name="led2On" scoped="" ref="0x40b4eea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40b47940" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40b47940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b47b18"/>
        <function-ref name="isInput" scoped="" ref="0x40b47bf8"/>
        <function-ref name="toggle" scoped="" ref="0x40b47cd8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b47db8"/>
        <function-ref name="get" scoped="" ref="0x40b47e98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b46010"/>
        <function-ref name="set" scoped="" ref="0x40b460f0"/>
        <function-ref name="clr" scoped="" ref="0x40b461d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b4b898" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b4b898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b4ba70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40b463c0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40b463c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b46598"/>
        <function-ref name="isInput" scoped="" ref="0x40b46678"/>
        <function-ref name="toggle" scoped="" ref="0x40b46758"/>
        <function-ref name="isOutput" scoped="" ref="0x40b46838"/>
        <function-ref name="get" scoped="" ref="0x40b46918"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b469f8"/>
        <function-ref name="set" scoped="" ref="0x40b46ad8"/>
        <function-ref name="clr" scoped="" ref="0x40b46bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40b4bbe0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b4bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b4bdb8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b4be98"/>
        <function-ref name="led1On" scoped="" ref="0x40b47010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b470f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b471d0"/>
        <function-ref name="get" scoped="" ref="0x40b472b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40b47390"/>
        <function-ref name="led2Off" scoped="" ref="0x40b47710"/>
        <function-ref name="set" scoped="" ref="0x40b47470"/>
        <function-ref name="led0On" scoped="" ref="0x40b47550"/>
        <function-ref name="led2On" scoped="" ref="0x40b47630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40b46da8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40b46da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b45010"/>
        <function-ref name="isInput" scoped="" ref="0x40b450f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b451d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b452b0"/>
        <function-ref name="get" scoped="" ref="0x40b45390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b45470"/>
        <function-ref name="set" scoped="" ref="0x40b45550"/>
        <function-ref name="clr" scoped="" ref="0x40b45630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40b60010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40b60010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b601e8"/>
        <function-ref name="isInput" scoped="" ref="0x40b602c8"/>
        <function-ref name="toggle" scoped="" ref="0x40b603a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b60488"/>
        <function-ref name="get" scoped="" ref="0x40b60568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b60648"/>
        <function-ref name="set" scoped="" ref="0x40b60728"/>
        <function-ref name="clr" scoped="" ref="0x40b60808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40b60a18" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40b60a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b60bf0"/>
        <function-ref name="isInput" scoped="" ref="0x40b60cd0"/>
        <function-ref name="toggle" scoped="" ref="0x40b60db0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b60e90"/>
        <function-ref name="get" scoped="" ref="0x40b5f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b5f0f0"/>
        <function-ref name="set" scoped="" ref="0x40b5f1d0"/>
        <function-ref name="clr" scoped="" ref="0x40b5f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40b5fe48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b5fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b5e050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40b5f4c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40b5f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b5f698"/>
        <function-ref name="isInput" scoped="" ref="0x40b5f778"/>
        <function-ref name="toggle" scoped="" ref="0x40b5f858"/>
        <function-ref name="isOutput" scoped="" ref="0x40b5f938"/>
        <function-ref name="get" scoped="" ref="0x40b5fa18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b5faf8"/>
        <function-ref name="set" scoped="" ref="0x40b5fbd8"/>
        <function-ref name="clr" scoped="" ref="0x40b5fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b5c8b8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.BeaconTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b5c8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b823d8"/>
        <function-ref name="fired" scoped="" ref="0x40b5b678"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b5bd80"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b5bb28"/>
        <function-ref name="getdt" scoped="" ref="0x40b82888"/>
        <function-ref name="gett0" scoped="" ref="0x40b82630"/>
        <function-ref name="isRunning" scoped="" ref="0x40b5b8d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b5cee0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b820b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b5b1a0"/>
        <function-ref name="stop" scoped="" ref="0x40b5b420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b816c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.BeaconWaitTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b816c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b7e248"/>
        <function-ref name="fired" scoped="" ref="0x40b804e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b80bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b80998"/>
        <function-ref name="getdt" scoped="" ref="0x40b7e6f8"/>
        <function-ref name="gett0" scoped="" ref="0x40b7e4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b80740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b81ce8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b80f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b80010"/>
        <function-ref name="stop" scoped="" ref="0x40b80290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b7d5a8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.ConnReqListenTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b7d5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b7b0d8"/>
        <function-ref name="fired" scoped="" ref="0x40b7c368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b7ca70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b7c818"/>
        <function-ref name="getdt" scoped="" ref="0x40b7b588"/>
        <function-ref name="gett0" scoped="" ref="0x40b7b330"/>
        <function-ref name="isRunning" scoped="" ref="0x40b7c5c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b7dbd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b7cd90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b7de50"/>
        <function-ref name="stop" scoped="" ref="0x40b7c110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b7a3d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.ConnRepWaitTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b7a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b78ec8"/>
        <function-ref name="fired" scoped="" ref="0x40b78180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b78888"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b78630"/>
        <function-ref name="getdt" scoped="" ref="0x40b773a8"/>
        <function-ref name="gett0" scoped="" ref="0x40b77150"/>
        <function-ref name="isRunning" scoped="" ref="0x40b783d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b7aa00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b78ba8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b7ac80"/>
        <function-ref name="stop" scoped="" ref="0x40b7af00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b76238" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.NeighbourUpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b76238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b75d58"/>
        <function-ref name="fired" scoped="" ref="0x40b75010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b75718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b754c0"/>
        <function-ref name="getdt" scoped="" ref="0x40b73268"/>
        <function-ref name="gett0" scoped="" ref="0x40b73010"/>
        <function-ref name="isRunning" scoped="" ref="0x40b75268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b76860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b75a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b76ae0"/>
        <function-ref name="stop" scoped="" ref="0x40b76d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b72188" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.NeighbourUpdateStopTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b72188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b71c70"/>
        <function-ref name="fired" scoped="" ref="0x40b72f08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b71630"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b713d8"/>
        <function-ref name="getdt" scoped="" ref="0x40b70150"/>
        <function-ref name="gett0" scoped="" ref="0x40b71ec8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b71180"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b727b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b71950"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b72a30"/>
        <function-ref name="stop" scoped="" ref="0x40b72cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40bcd9d8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40bcd9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bcdbb0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bcdc90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bcdd70"/>
        <function-ref name="cancel" scoped="" ref="0x40bcde50"/>
        <function-ref name="sendDone" scoped="" ref="0x40bcc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40bcc150" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bcc150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bcc328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bcc408"/>
        <function-ref name="getPayload" scoped="" ref="0x40bcc4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bcc5c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bcc6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40bcc7e8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bcc7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bcc9c0"/>
        <function-ref name="source" scoped="" ref="0x40bccaa0"/>
        <function-ref name="address" scoped="" ref="0x40bccb80"/>
        <function-ref name="destination" scoped="" ref="0x40bccc60"/>
        <function-ref name="setSource" scoped="" ref="0x40bccd40"/>
        <function-ref name="setDestination" scoped="" ref="0x40bcce20"/>
        <function-ref name="type" scoped="" ref="0x40bccf00"/>
        <function-ref name="setType" scoped="" ref="0x40bcb010"/>
        <function-ref name="isForMe" scoped="" ref="0x40bcb0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40bcb1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x40bcb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40bcb410" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40bcb410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bcb5e8"/>
        <function-ref name="noAck" scoped="" ref="0x40bcb6c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bcb7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41622c28" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.BeaconSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41622c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41622e00"/>
        <function-ref name="getPayload" scoped="" ref="0x41622ee0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4161e010"/>
        <function-ref name="cancel" scoped="" ref="0x4161e0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4161e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4161e340" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.BeaconSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4161e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4161e518"/>
        <function-ref name="getPayload" scoped="" ref="0x4161e5f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4161e6d8"/>
        <function-ref name="cancel" scoped="" ref="0x4161e7b8"/>
        <function-ref name="sendDone" scoped="" ref="0x4161e898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4161e9d8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.BeaconSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4161e9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4161ebb0"/>
        <function-ref name="source" scoped="" ref="0x4161ec90"/>
        <function-ref name="address" scoped="" ref="0x4161ed70"/>
        <function-ref name="destination" scoped="" ref="0x4161ee50"/>
        <function-ref name="setSource" scoped="" ref="0x4161d010"/>
        <function-ref name="setDestination" scoped="" ref="0x4161d0f0"/>
        <function-ref name="type" scoped="" ref="0x4161d1d0"/>
        <function-ref name="setType" scoped="" ref="0x4161d2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x4161d390"/>
        <function-ref name="setGroup" scoped="" ref="0x4161d470"/>
        <function-ref name="localGroup" scoped="" ref="0x4161d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ba9100" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ba9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ba92d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba93b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba9498"/>
        <function-ref name="cancel" scoped="" ref="0x40ba9578"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba9658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40bd3780" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40bd3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bd3968"/>
        <function-ref name="getPayload" scoped="" ref="0x40bd3a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd3b28"/>
        <function-ref name="cancel" scoped="" ref="0x40bd3c08"/>
        <function-ref name="sendDone" scoped="" ref="0x40bd3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bd3010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bd3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bd31f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40bd32d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd33b8"/>
        <function-ref name="cancel" scoped="" ref="0x40bd3498"/>
        <function-ref name="sendDone" scoped="" ref="0x40bd3578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40bd2a50" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bd2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd2c28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bd2d08"/>
        <function-ref name="getPayload" scoped="" ref="0x40bd2de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd2ec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bd0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40bd0190" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40bd0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bd0368"/>
        <function-ref name="runTask" scoped="" ref="0x40bd0448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40bd05c8" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40bd05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bd07a0"/>
        <function-ref name="runTask" scoped="" ref="0x40bd0880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40bd3e28" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bd3e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bd2050"/>
        <function-ref name="source" scoped="" ref="0x40bd2130"/>
        <function-ref name="address" scoped="" ref="0x40bd2210"/>
        <function-ref name="destination" scoped="" ref="0x40bd22f0"/>
        <function-ref name="setSource" scoped="" ref="0x40bd23d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40bd24b0"/>
        <function-ref name="type" scoped="" ref="0x40bd2590"/>
        <function-ref name="setType" scoped="" ref="0x40bd2670"/>
        <function-ref name="isForMe" scoped="" ref="0x40bd2750"/>
        <function-ref name="setGroup" scoped="" ref="0x40bd2830"/>
        <function-ref name="localGroup" scoped="" ref="0x40bd2910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40bc8250" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.BeaconReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bc8250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bc8428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bc8508"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc85e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bc86c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bc87a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bc9f28" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.BeaconReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bc9f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bc8110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40bc88e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.BeaconReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bc88e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bc8ac0"/>
        <function-ref name="source" scoped="" ref="0x40bc8ba0"/>
        <function-ref name="address" scoped="" ref="0x40bc8c80"/>
        <function-ref name="destination" scoped="" ref="0x40bc8d60"/>
        <function-ref name="setSource" scoped="" ref="0x40bc8e40"/>
        <function-ref name="setDestination" scoped="" ref="0x40bc8f20"/>
        <function-ref name="type" scoped="" ref="0x40bc5018"/>
        <function-ref name="setType" scoped="" ref="0x40bc50f8"/>
        <function-ref name="isForMe" scoped="" ref="0x40bc51d8"/>
        <function-ref name="setGroup" scoped="" ref="0x40bc52b8"/>
        <function-ref name="localGroup" scoped="" ref="0x40bc5398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40bc4760" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40bc4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bc4938"/>
        <function-ref name="stopDone" scoped="" ref="0x40bc4a18"/>
        <function-ref name="start" scoped="" ref="0x40bc4af8"/>
        <function-ref name="stop" scoped="" ref="0x40bc4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40bc1100" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40bc1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bc12d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc13b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bc1498"/>
        <function-ref name="cancel" scoped="" ref="0x40bc1578"/>
        <function-ref name="sendDone" scoped="" ref="0x40bc1658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40bc1e18" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bc1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40be9010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40be90f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40be91d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be92b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40be9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bc1ac0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bc1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bc1c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40be8768" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40be8768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40be8940"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40be8a20"/>
        <function-ref name="led1On" scoped="" ref="0x40be8b00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40be8be0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40be8cc0"/>
        <function-ref name="get" scoped="" ref="0x40be8da0"/>
        <function-ref name="led1Off" scoped="" ref="0x40be8e80"/>
        <function-ref name="led2Off" scoped="" ref="0x40be72b0"/>
        <function-ref name="set" scoped="" ref="0x40be7010"/>
        <function-ref name="led0On" scoped="" ref="0x40be70f0"/>
        <function-ref name="led2On" scoped="" ref="0x40be71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40be8230" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40be8230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40be8408"/>
        <function-ref name="noAck" scoped="" ref="0x40be84e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40be85c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40be9528" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40be9528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40be9700"/>
        <function-ref name="source" scoped="" ref="0x40be97e0"/>
        <function-ref name="address" scoped="" ref="0x40be98c0"/>
        <function-ref name="destination" scoped="" ref="0x40be99a0"/>
        <function-ref name="setSource" scoped="" ref="0x40be9a80"/>
        <function-ref name="setDestination" scoped="" ref="0x40be9b60"/>
        <function-ref name="type" scoped="" ref="0x40be9c40"/>
        <function-ref name="setType" scoped="" ref="0x40be9d20"/>
        <function-ref name="isForMe" scoped="" ref="0x40be9e00"/>
        <function-ref name="setGroup" scoped="" ref="0x40be9ee0"/>
        <function-ref name="localGroup" scoped="" ref="0x40be8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c099f8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c099f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c09bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c09cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c09d90"/>
        <function-ref name="cancel" scoped="" ref="0x40c09e70"/>
        <function-ref name="sendDone" scoped="" ref="0x40c08010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c08170" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c08170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c08348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40be6738" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40be6738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be6920"/>
        <function-ref name="getPayload" scoped="" ref="0x40be6a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be6ae0"/>
        <function-ref name="cancel" scoped="" ref="0x40be6bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x40be6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40be5d88" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40be5d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c09010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c090f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c091d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c092b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c09390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40be6e78" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40be6e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40be5070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40c094d0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c094d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c096a8"/>
        <function-ref name="noAck" scoped="" ref="0x40c09788"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c09868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40be51b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40be51b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40be5388"/>
        <function-ref name="source" scoped="" ref="0x40be5468"/>
        <function-ref name="address" scoped="" ref="0x40be5548"/>
        <function-ref name="destination" scoped="" ref="0x40be5628"/>
        <function-ref name="setSource" scoped="" ref="0x40be5708"/>
        <function-ref name="setDestination" scoped="" ref="0x40be57e8"/>
        <function-ref name="type" scoped="" ref="0x40be58c8"/>
        <function-ref name="setType" scoped="" ref="0x40be59a8"/>
        <function-ref name="isForMe" scoped="" ref="0x40be5a88"/>
        <function-ref name="setGroup" scoped="" ref="0x40be5b68"/>
        <function-ref name="localGroup" scoped="" ref="0x40be5c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c078f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c078f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c07ac8"/>
        <function-ref name="stopDone" scoped="" ref="0x40c07ba8"/>
        <function-ref name="start" scoped="" ref="0x40c07c88"/>
        <function-ref name="stop" scoped="" ref="0x40c07d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c047e0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c047e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404bc5d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c049b8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c04a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c04b78"/>
        <function-ref name="cancel" scoped="" ref="0x40c04c58"/>
        <function-ref name="sendDone" scoped="" ref="0x40c04d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c07558" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c07558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c07730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c041d8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c041d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404bc5d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c043b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c013f0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c013f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c015c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c016a8"/>
        <function-ref name="led1On" scoped="" ref="0x40c01788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c01868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c01948"/>
        <function-ref name="get" scoped="" ref="0x40c01a28"/>
        <function-ref name="led1Off" scoped="" ref="0x40c01b08"/>
        <function-ref name="led2Off" scoped="" ref="0x40c01e88"/>
        <function-ref name="set" scoped="" ref="0x40c01be8"/>
        <function-ref name="led0On" scoped="" ref="0x40c01cc8"/>
        <function-ref name="led2On" scoped="" ref="0x40c01da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40bffea8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40bffea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404bc5d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40c010c0"/>
        <function-ref name="offset" scoped="" ref="0x40c011a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40c01280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c17898" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c17898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c17a70"/>
        <function-ref name="stopDone" scoped="" ref="0x40c17b50"/>
        <function-ref name="start" scoped="" ref="0x40c17c30"/>
        <function-ref name="stop" scoped="" ref="0x40c17d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40c5f4e8" loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40c5f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c5f6c0"/>
        <function-ref name="runTask" scoped="" ref="0x40c5f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40c35ad0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40c35ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c35ca8"/>
        <function-ref name="stop" scoped="" ref="0x40c35d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40c52f00" loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40c52f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c510f0"/>
        <function-ref name="runTask" scoped="" ref="0x40c511d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c17500" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c17500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c176d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40c14af0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40c14af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40c14cc8"/>
        <function-ref name="flush" scoped="" ref="0x40c14da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40c60300" loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40c60300"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c604d8"/>
        <function-ref name="runTask" scoped="" ref="0x40c605b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40c374f0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40c374f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40c376c8"/>
        <function-ref name="resetSend" scoped="" ref="0x40c377a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x40c37888"/>
        <function-ref name="resetReceive" scoped="" ref="0x40c37968"/>
        <function-ref name="putData" scoped="" ref="0x40c37a48"/>
        <function-ref name="putDone" scoped="" ref="0x40c37b28"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40c37c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c37d78" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c37d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c15010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c150f0"/>
        <function-ref name="led1On" scoped="" ref="0x40c151d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c152b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c15390"/>
        <function-ref name="get" scoped="" ref="0x40c15470"/>
        <function-ref name="led1Off" scoped="" ref="0x40c15550"/>
        <function-ref name="led2Off" scoped="" ref="0x40c158d0"/>
        <function-ref name="set" scoped="" ref="0x40c15630"/>
        <function-ref name="led0On" scoped="" ref="0x40c15710"/>
        <function-ref name="led2On" scoped="" ref="0x40c157f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40c5c1e8" loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40c5c1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c5c3c0"/>
        <function-ref name="runTask" scoped="" ref="0x40c5c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40c3d068" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40c3d068"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40c3d240"/>
        <function-ref name="nextByte" scoped="" ref="0x40c3d320"/>
        <function-ref name="startSend" scoped="" ref="0x40c3d400"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40c3d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40c3b2a8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40c3b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40c3b480"/>
        <function-ref name="byteReceived" scoped="" ref="0x40c3b560"/>
        <function-ref name="endPacket" scoped="" ref="0x40c3b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40cccd68" loc="264:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40cccd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ccb010"/>
        <function-ref name="runTask" scoped="" ref="0x40ccb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40cac988" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40cac988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404bc5d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cacb70"/>
        <function-ref name="getPayload" scoped="" ref="0x40cacc50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cacd30"/>
        <function-ref name="cancel" scoped="" ref="0x40cace10"/>
        <function-ref name="sendDone" scoped="" ref="0x40cacef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40ccb270" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40ccb270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ccb448"/>
        <function-ref name="runTask" scoped="" ref="0x40ccb528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cac5c8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cac5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404bc5d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cac7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40cce138" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40cce138"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404bc5d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40cce320"/>
        <function-ref name="offset" scoped="" ref="0x40cce400"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40cce4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ccc150" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ccc150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ccc328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ccc408"/>
        <function-ref name="led1On" scoped="" ref="0x40ccc4e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ccc5c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ccc6a8"/>
        <function-ref name="get" scoped="" ref="0x40ccc788"/>
        <function-ref name="led1Off" scoped="" ref="0x40ccc868"/>
        <function-ref name="led2On" scoped="" ref="0x40cccbe8"/>
        <function-ref name="set" scoped="" ref="0x40ccca28"/>
        <function-ref name="led2Off" scoped="" ref="0x40ccc948"/>
        <function-ref name="led0On" scoped="" ref="0x40cccb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40cceaf8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40cceaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40ccecd0"/>
        <function-ref name="nextByte" scoped="" ref="0x40ccedb0"/>
        <function-ref name="startSend" scoped="" ref="0x40ccee90"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40ccc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40cce620" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40cce620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40cce7f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x40cce8d8"/>
        <function-ref name="endPacket" scoped="" ref="0x40cce9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40cee990" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40cee990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ceeb68"/>
        <function-ref name="receivedByte" scoped="" ref="0x40ceec48"/>
        <function-ref name="receive" scoped="" ref="0x40ceed28"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40ceee08"/>
        <function-ref name="receiveDone" scoped="" ref="0x40ceeee8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40cc6010"/>
        <function-ref name="sendDone" scoped="" ref="0x40cc60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40cca678" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40cca678"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40cca850"/>
        <function-ref name="resetSend" scoped="" ref="0x40cca930"/>
        <function-ref name="dataReceived" scoped="" ref="0x40ccaa10"/>
        <function-ref name="resetReceive" scoped="" ref="0x40ccaaf0"/>
        <function-ref name="putData" scoped="" ref="0x40ccabd0"/>
        <function-ref name="putDone" scoped="" ref="0x40ccacb0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40ccad90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cc6260" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cc6260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40cc6438"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40cc6518"/>
        <function-ref name="led1On" scoped="" ref="0x40cc65f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40cc66d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cc67b8"/>
        <function-ref name="get" scoped="" ref="0x40cc6898"/>
        <function-ref name="led1Off" scoped="" ref="0x40cc6978"/>
        <function-ref name="led2Off" scoped="" ref="0x40cc6cf8"/>
        <function-ref name="set" scoped="" ref="0x40cc6a58"/>
        <function-ref name="led0On" scoped="" ref="0x40cc6b38"/>
        <function-ref name="led2On" scoped="" ref="0x40cc6c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d082b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d082b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d08488"/>
        <function-ref name="receive" scoped="" ref="0x40d08568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40cdf490" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40cdf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cdf668"/>
        <function-ref name="receivedByte" scoped="" ref="0x40cdf748"/>
        <function-ref name="receive" scoped="" ref="0x40cdf828"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40cdf908"/>
        <function-ref name="receiveDone" scoped="" ref="0x40cdf9e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40cdfac8"/>
        <function-ref name="sendDone" scoped="" ref="0x40cdfba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40cdf010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40cdf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cdf1e8"/>
        <function-ref name="stop" scoped="" ref="0x40cdf2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d071c8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d071c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d073a0"/>
        <function-ref name="receive" scoped="" ref="0x40d07480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d07648" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d07648"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d07820"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d07900"/>
        <function-ref name="receive" scoped="" ref="0x40d079e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d07ac0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d07ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d07c80"/>
        <function-ref name="sendDone" scoped="" ref="0x40d07d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d060d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d060d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d06820"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d06d10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d06a98"/>
        <function-ref name="overflow" scoped="" ref="0x40d05010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d08cb8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d08cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d08e90"/>
        <function-ref name="stop" scoped="" ref="0x40d07010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40d04ae8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40d04ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d04cc0"/>
        <function-ref name="receive" scoped="" ref="0x40d04da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40d037b0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40d037b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d03988"/>
        <function-ref name="stop" scoped="" ref="0x40d03a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d04398" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d04398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d04570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40d04f00" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40d04f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d030f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40d031d0"/>
        <function-ref name="receive" scoped="" ref="0x40d032b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40d03390"/>
        <function-ref name="receiveDone" scoped="" ref="0x40d03470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40d03550"/>
        <function-ref name="sendDone" scoped="" ref="0x40d03630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d0ac88" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d0ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d093f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d098e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d09668"/>
        <function-ref name="overflow" scoped="" ref="0x40d09b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40d0a050" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40d0a050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d0a228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d0a308"/>
        <function-ref name="rxDone" scoped="" ref="0x40d0a3e8"/>
        <function-ref name="txDone" scoped="" ref="0x40d0a4c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d0a5a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d0a688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d0a768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d0a848"/>
        <function-ref name="tx" scoped="" ref="0x40d0a928"/>
        <function-ref name="rx" scoped="" ref="0x40d0aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d046d0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d046d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d048a8"/>
        <function-ref name="stop" scoped="" ref="0x40d04988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40d03be8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40d03be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d03dc0"/>
        <function-ref name="stop" scoped="" ref="0x40d03ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40d26010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40d26010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d261e8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d262c8"/>
        <function-ref name="rxDone" scoped="" ref="0x40d263a8"/>
        <function-ref name="txDone" scoped="" ref="0x40d26488"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d26568"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d26648"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d26728"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d26808"/>
        <function-ref name="tx" scoped="" ref="0x40d268e8"/>
        <function-ref name="rx" scoped="" ref="0x40d269c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40d25670" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40d25670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d25848"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d25928"/>
        <function-ref name="rxDone" scoped="" ref="0x40d25a08"/>
        <function-ref name="txDone" scoped="" ref="0x40d25ae8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d25bc8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d25ca8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d25d88"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d25e68"/>
        <function-ref name="tx" scoped="" ref="0x40d24010"/>
        <function-ref name="rx" scoped="" ref="0x40d240f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40d27a70" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40d27a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d27c48"/>
        <function-ref name="stop" scoped="" ref="0x40d27d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40d26c20" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40d26c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d26df8"/>
        <function-ref name="stop" scoped="" ref="0x40d26ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40d25178" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40d25178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d25350"/>
        <function-ref name="stop" scoped="" ref="0x40d25430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40d27560" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40d27560"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d27738"/>
        <function-ref name="stop" scoped="" ref="0x40d27818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40d24920" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40d24920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d24af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40d21880" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40d21880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d21a58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d21b38"/>
        <function-ref name="rxDone" scoped="" ref="0x40d21c18"/>
        <function-ref name="txDone" scoped="" ref="0x40d21cf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d21dd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d21eb8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d20010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d200f0"/>
        <function-ref name="tx" scoped="" ref="0x40d201d0"/>
        <function-ref name="rx" scoped="" ref="0x40d202b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40d204c0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40d204c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d20698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40d51390" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40d51390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40d51568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40d51648"/>
        <function-ref name="rxDone" scoped="" ref="0x40d51728"/>
        <function-ref name="txDone" scoped="" ref="0x40d51808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40d518e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40d519c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40d51aa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40d51b88"/>
        <function-ref name="tx" scoped="" ref="0x40d51c68"/>
        <function-ref name="rx" scoped="" ref="0x40d51d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40d21368" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40d21368"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d21540"/>
        <function-ref name="stop" scoped="" ref="0x40d21620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40d20910" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40d20910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d20ae8"/>
        <function-ref name="stop" scoped="" ref="0x40d20bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40d20e40" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40d20e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d51050"/>
        <function-ref name="stop" scoped="" ref="0x40d51130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40d50010" loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40d50010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40d501e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40d502c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40d503a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40d50488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40d50568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40d50750" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40d50750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40d50928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40d24d70" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40d24d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d21010"/>
        <function-ref name="stop" scoped="" ref="0x40d210f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40d7d628" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d7d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d7dd78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d7a288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d7a010"/>
        <function-ref name="overflow" scoped="" ref="0x40d7a500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40d76088" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d76088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TThree" ref="0x40365010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d767d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d76cc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d76a50"/>
        <function-ref name="overflow" scoped="" ref="0x40d75010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40d71db0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40d71db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40d6f010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40d6f0f0"/>
        <function-ref name="getControlA" scoped="" ref="0x40d6f1d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40d6f2b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40d6f390"/>
        <function-ref name="setControlB" scoped="" ref="0x40d6f470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40d6f550"/>
        <function-ref name="getControlB" scoped="" ref="0x40d6f630"/>
        <function-ref name="setControlC" scoped="" ref="0x40d6f710"/>
        <function-ref name="setControlA" scoped="" ref="0x40d6f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40d6fb28" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40d6fb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40d6d640"/>
        <function-ref name="test" scoped="" ref="0x40d6d150"/>
        <function-ref name="get" scoped="" ref="0x40d6e200"/>
        <function-ref name="captured" scoped="" ref="0x40d6e718"/>
        <function-ref name="reset" scoped="" ref="0x40d6e9b8"/>
        <function-ref name="isOn" scoped="" ref="0x40d6d3c8"/>
        <function-ref name="set" scoped="" ref="0x40d6e478"/>
        <function-ref name="start" scoped="" ref="0x40d6ec30"/>
        <function-ref name="stop" scoped="" ref="0x40d6eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40d6dd50" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40d6dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d6a300"/>
        <function-ref name="fired" scoped="" ref="0x40d6c8f8"/>
        <function-ref name="get" scoped="" ref="0x40d6c3e0"/>
        <function-ref name="reset" scoped="" ref="0x40d6cb70"/>
        <function-ref name="isOn" scoped="" ref="0x40d6a578"/>
        <function-ref name="set" scoped="" ref="0x40d6c658"/>
        <function-ref name="start" scoped="" ref="0x40d6cde8"/>
        <function-ref name="stop" scoped="" ref="0x40d6a088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d75aa8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d75aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40d71538"/>
        <function-ref name="test" scoped="" ref="0x40d71048"/>
        <function-ref name="get" scoped="" ref="0x40d72120"/>
        <function-ref name="setScale" scoped="" ref="0x40d717b0"/>
        <function-ref name="getScale" scoped="" ref="0x40d71a50"/>
        <function-ref name="reset" scoped="" ref="0x40d728b0"/>
        <function-ref name="overflow" scoped="" ref="0x40d72638"/>
        <function-ref name="isOn" scoped="" ref="0x40d712c0"/>
        <function-ref name="set" scoped="" ref="0x40d72398"/>
        <function-ref name="start" scoped="" ref="0x40d72b28"/>
        <function-ref name="stop" scoped="" ref="0x40d72da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40d94530" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40d94530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40d94708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40d947e8"/>
        <function-ref name="getControlA" scoped="" ref="0x40d948c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40d949a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40d94a88"/>
        <function-ref name="setControlB" scoped="" ref="0x40d94b68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40d94c48"/>
        <function-ref name="getControlB" scoped="" ref="0x40d94d28"/>
        <function-ref name="setControlC" scoped="" ref="0x40d94e08"/>
        <function-ref name="setControlA" scoped="" ref="0x40d94ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40d91128" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40d91128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d8f690"/>
        <function-ref name="fired" scoped="" ref="0x40d91c88"/>
        <function-ref name="get" scoped="" ref="0x40d91770"/>
        <function-ref name="reset" scoped="" ref="0x40d91f00"/>
        <function-ref name="isOn" scoped="" ref="0x40d8f908"/>
        <function-ref name="set" scoped="" ref="0x40d919e8"/>
        <function-ref name="start" scoped="" ref="0x40d8f1a0"/>
        <function-ref name="stop" scoped="" ref="0x40d8f418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40d93258" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40d93258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40d92cc0"/>
        <function-ref name="test" scoped="" ref="0x40d927d0"/>
        <function-ref name="get" scoped="" ref="0x40d938a0"/>
        <function-ref name="captured" scoped="" ref="0x40d93db8"/>
        <function-ref name="reset" scoped="" ref="0x40d92068"/>
        <function-ref name="isOn" scoped="" ref="0x40d92a48"/>
        <function-ref name="set" scoped="" ref="0x40d93b18"/>
        <function-ref name="start" scoped="" ref="0x40d922e0"/>
        <function-ref name="stop" scoped="" ref="0x40d92558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40d8fd20" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40d8fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d8d2c0"/>
        <function-ref name="fired" scoped="" ref="0x40d8e8a8"/>
        <function-ref name="get" scoped="" ref="0x40d8e390"/>
        <function-ref name="reset" scoped="" ref="0x40d8eb20"/>
        <function-ref name="isOn" scoped="" ref="0x40d8d538"/>
        <function-ref name="set" scoped="" ref="0x40d8e608"/>
        <function-ref name="start" scoped="" ref="0x40d8ed98"/>
        <function-ref name="stop" scoped="" ref="0x40d8d048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40d8d950" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40d8d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d8bf08"/>
        <function-ref name="fired" scoped="" ref="0x40d8b528"/>
        <function-ref name="get" scoped="" ref="0x40d8b010"/>
        <function-ref name="reset" scoped="" ref="0x40d8b7a0"/>
        <function-ref name="isOn" scoped="" ref="0x40d8a1a0"/>
        <function-ref name="set" scoped="" ref="0x40d8b288"/>
        <function-ref name="start" scoped="" ref="0x40d8ba18"/>
        <function-ref name="stop" scoped="" ref="0x40d8bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d97230" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d97230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40d96ca0"/>
        <function-ref name="test" scoped="" ref="0x40d967b0"/>
        <function-ref name="get" scoped="" ref="0x40d97878"/>
        <function-ref name="setScale" scoped="" ref="0x40d96f18"/>
        <function-ref name="getScale" scoped="" ref="0x40d941d0"/>
        <function-ref name="reset" scoped="" ref="0x40d96048"/>
        <function-ref name="overflow" scoped="" ref="0x40d97d90"/>
        <function-ref name="isOn" scoped="" ref="0x40d96a28"/>
        <function-ref name="set" scoped="" ref="0x40d97af0"/>
        <function-ref name="start" scoped="" ref="0x40d962c0"/>
        <function-ref name="stop" scoped="" ref="0x40d96538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ddb440" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ddb440"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ddb618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40ddb828" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ddb828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40dd82c0"/>
        <function-ref name="test" scoped="" ref="0x40dd9d90"/>
        <function-ref name="get" scoped="" ref="0x40ddbe70"/>
        <function-ref name="setScale" scoped="" ref="0x40dd8538"/>
        <function-ref name="getScale" scoped="" ref="0x40dd87d8"/>
        <function-ref name="reset" scoped="" ref="0x40dd9628"/>
        <function-ref name="overflow" scoped="" ref="0x40dd93b0"/>
        <function-ref name="isOn" scoped="" ref="0x40dd8048"/>
        <function-ref name="set" scoped="" ref="0x40dd9110"/>
        <function-ref name="start" scoped="" ref="0x40dd98a0"/>
        <function-ref name="stop" scoped="" ref="0x40dd9b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ddda68" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ddda68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TThree" ref="0x40365010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40dd6200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40dd66f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40dd6478"/>
        <function-ref name="overflow" scoped="" ref="0x40dd6968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40dd6c48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dd6c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40dd46a0"/>
        <function-ref name="test" scoped="" ref="0x40dd41b0"/>
        <function-ref name="get" scoped="" ref="0x40dd52a8"/>
        <function-ref name="setScale" scoped="" ref="0x40dd4918"/>
        <function-ref name="getScale" scoped="" ref="0x40dd4bb8"/>
        <function-ref name="reset" scoped="" ref="0x40dd5a38"/>
        <function-ref name="overflow" scoped="" ref="0x40dd57c0"/>
        <function-ref name="isOn" scoped="" ref="0x40dd4428"/>
        <function-ref name="set" scoped="" ref="0x40dd5520"/>
        <function-ref name="start" scoped="" ref="0x40dd5cb0"/>
        <function-ref name="stop" scoped="" ref="0x40dd5f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40dd1cd8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40dd1cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TThree" ref="0x40365010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40dcf478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40dcf968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40dcf6f0"/>
        <function-ref name="overflow" scoped="" ref="0x40dcfbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40d77a10" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d77a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40dd1200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40dd16f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40dd1478"/>
        <function-ref name="overflow" scoped="" ref="0x40dd1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40dcd730" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40dcd730"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40dcd908"/>
        <function-ref name="offset" scoped="" ref="0x40dcd9e8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40dcdac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer3" ref="0x40deabb0" loc="24:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer3" scoped="" ref="0x40deabb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40de76a8"/>
        <function-ref name="fired" scoped="" ref="0x40de9948"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40de7068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40de9df8"/>
        <function-ref name="getdt" scoped="" ref="0x40de7b58"/>
        <function-ref name="gett0" scoped="" ref="0x40de7900"/>
        <function-ref name="isRunning" scoped="" ref="0x40de9ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40de91f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40de7388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40de9470"/>
        <function-ref name="stop" scoped="" ref="0x40de96f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMAScheduleTimer" ref="0x40de6010" loc="25:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMAScheduleTimer" scoped="" ref="0x40de6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40de5b00"/>
        <function-ref name="fired" scoped="" ref="0x40de6d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40de54c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40de5268"/>
        <function-ref name="getdt" scoped="" ref="0x40de4010"/>
        <function-ref name="gett0" scoped="" ref="0x40de5d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40de5010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40de6638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40de57e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40de68b8"/>
        <function-ref name="stop" scoped="" ref="0x40de6b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40e13768" loc="28:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40e13768"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e13db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASlotTimer" ref="0x40de43d0" loc="26:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASlotTimer" scoped="" ref="0x40de43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e14ec8"/>
        <function-ref name="fired" scoped="" ref="0x40e14180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e14888"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e14630"/>
        <function-ref name="getdt" scoped="" ref="0x40e133a8"/>
        <function-ref name="gett0" scoped="" ref="0x40e13150"/>
        <function-ref name="isRunning" scoped="" ref="0x40e143d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40de49f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e14ba8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40de4c78"/>
        <function-ref name="stop" scoped="" ref="0x40de4ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40e12040" loc="30:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40e12040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40e12218"/>
        <function-ref name="rand32" scoped="" ref="0x40e122f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer1" ref="0x40def3f0" loc="22:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer1" scoped="" ref="0x40def3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40deeed0"/>
        <function-ref name="fired" scoped="" ref="0x40dee188"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40dee890"/>
        <function-ref name="isOneShot" scoped="" ref="0x40dee638"/>
        <function-ref name="getdt" scoped="" ref="0x40ded3a8"/>
        <function-ref name="gett0" scoped="" ref="0x40ded150"/>
        <function-ref name="isRunning" scoped="" ref="0x40dee3e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40defa18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40deebb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40defc98"/>
        <function-ref name="stop" scoped="" ref="0x40deff18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SeedInit" ref="0x40e12620" loc="31:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40e12620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e12c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40df36e0" loc="16:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40df36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40df38b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TDMASchedule" ref="0x40df6ac8" loc="15:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40df6ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40df3550"/>
        <function-ref name="getPPB" scoped="" ref="0x40df6d80"/>
        <function-ref name="radioWakeup" scoped="" ref="0x40df6e60"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40df3010"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40df30f0"/>
        <function-ref name="setPPB" scoped="" ref="0x40df31d0"/>
        <function-ref name="stopTimers" scoped="" ref="0x40df32b0"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40df3390"/>
        <function-ref name="startTimers" scoped="" ref="0x40df3470"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40df6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e12eb0" loc="32:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e12eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e11188"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e11268"/>
        <function-ref name="led1On" scoped="" ref="0x40e11348"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e11428"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e11508"/>
        <function-ref name="get" scoped="" ref="0x40e115e8"/>
        <function-ref name="led1Off" scoped="" ref="0x40e116c8"/>
        <function-ref name="led2Off" scoped="" ref="0x40e11a48"/>
        <function-ref name="set" scoped="" ref="0x40e117a8"/>
        <function-ref name="led0On" scoped="" ref="0x40e11888"/>
        <function-ref name="led2On" scoped="" ref="0x40e11968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer2" ref="0x40ded778" loc="23:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer2" scoped="" ref="0x40ded778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dea330"/>
        <function-ref name="fired" scoped="" ref="0x40deb520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40debc28"/>
        <function-ref name="isOneShot" scoped="" ref="0x40deb9d0"/>
        <function-ref name="getdt" scoped="" ref="0x40dea7e0"/>
        <function-ref name="gett0" scoped="" ref="0x40dea588"/>
        <function-ref name="isRunning" scoped="" ref="0x40deb778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40dedda0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40dea010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40deb048"/>
        <function-ref name="stop" scoped="" ref="0x40deb2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer0" ref="0x40df2030" loc="21:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer0" scoped="" ref="0x40df2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40df0b38"/>
        <function-ref name="fired" scoped="" ref="0x40df2db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40df04f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40df02a0"/>
        <function-ref name="getdt" scoped="" ref="0x40def010"/>
        <function-ref name="gett0" scoped="" ref="0x40df0d90"/>
        <function-ref name="isRunning" scoped="" ref="0x40df0048"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40df2658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40df0818"/>
        <function-ref name="startOneShot" scoped="" ref="0x40df28d8"/>
        <function-ref name="stop" scoped="" ref="0x40df2b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40df4760" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40df4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e55330"/>
        <function-ref name="fired" scoped="" ref="0x40e56520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e56c28"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e569d0"/>
        <function-ref name="getdt" scoped="" ref="0x40e557e0"/>
        <function-ref name="gett0" scoped="" ref="0x40e55588"/>
        <function-ref name="isRunning" scoped="" ref="0x40e56778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40df4d88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e55010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e56048"/>
        <function-ref name="stop" scoped="" ref="0x40e562c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e53670" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e53670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e51170"/>
        <function-ref name="fired" scoped="" ref="0x40e52408"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e52b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e528b8"/>
        <function-ref name="getdt" scoped="" ref="0x40e51620"/>
        <function-ref name="gett0" scoped="" ref="0x40e513c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e52660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e53c98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e52e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e53f18"/>
        <function-ref name="stop" scoped="" ref="0x40e521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e50458" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e50458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e4d010"/>
        <function-ref name="fired" scoped="" ref="0x40e4f268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e4f970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e4f718"/>
        <function-ref name="getdt" scoped="" ref="0x40e4d4c0"/>
        <function-ref name="gett0" scoped="" ref="0x40e4d268"/>
        <function-ref name="isRunning" scoped="" ref="0x40e4f4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e50a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e4fc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e50d00"/>
        <function-ref name="stop" scoped="" ref="0x40e4f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e4c330" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e4c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e4be38"/>
        <function-ref name="fired" scoped="" ref="0x40e4b0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e4b7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e4b5a0"/>
        <function-ref name="getdt" scoped="" ref="0x40e4a310"/>
        <function-ref name="gett0" scoped="" ref="0x40e4a0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e4b348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e4c958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e4bb18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e4cbd8"/>
        <function-ref name="stop" scoped="" ref="0x40e4ce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e49168" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.TDMAScheduleTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e49168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e7bc70"/>
        <function-ref name="fired" scoped="" ref="0x40e49ee8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e7b630"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e7b3d8"/>
        <function-ref name="getdt" scoped="" ref="0x40e7a150"/>
        <function-ref name="gett0" scoped="" ref="0x40e7bec8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e7b180"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e49790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e7b950"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e49a10"/>
        <function-ref name="stop" scoped="" ref="0x40e49c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e79010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.TDMASlotTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e79010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e78b00"/>
        <function-ref name="fired" scoped="" ref="0x40e79d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e784c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e78268"/>
        <function-ref name="getdt" scoped="" ref="0x40e76010"/>
        <function-ref name="gett0" scoped="" ref="0x40e78d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40e78010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e79638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e787e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e798b8"/>
        <function-ref name="stop" scoped="" ref="0x40e79b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSend" ref="0x40e70118" loc="16:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x40e70118"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e702f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e703d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e704b0"/>
        <function-ref name="cancel" scoped="" ref="0x40e70590"/>
        <function-ref name="sendDone" scoped="" ref="0x40e70670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40e74cf8" loc="14:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e74cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e74ed0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e71010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e710f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e711d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataQueueManage" ref="0x40e6e3d0" loc="23:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x40e6e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x40e6e5a8"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x40e6e688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40e70878" loc="17:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40e70878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e70a50"/>
        <function-ref name="getPayload" scoped="" ref="0x40e70b30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e70c10"/>
        <function-ref name="cancel" scoped="" ref="0x40e70cf0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e70dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASchedule" ref="0x40e6f3a8" loc="19:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40e6f3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40e6fd60"/>
        <function-ref name="getPPB" scoped="" ref="0x40e6f660"/>
        <function-ref name="radioWakeup" scoped="" ref="0x40e6f740"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40e6f820"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40e6f900"/>
        <function-ref name="setPPB" scoped="" ref="0x40e6f9e0"/>
        <function-ref name="stopTimers" scoped="" ref="0x40e6fac0"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40e6fba0"/>
        <function-ref name="startTimers" scoped="" ref="0x40e6fc80"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40e6f580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataReceive" ref="0x40e6f010" loc="18:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x40e6f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e6f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40e71448" loc="15:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e71448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e71620"/>
        <function-ref name="source" scoped="" ref="0x40e71700"/>
        <function-ref name="address" scoped="" ref="0x40e717e0"/>
        <function-ref name="destination" scoped="" ref="0x40e718c0"/>
        <function-ref name="setSource" scoped="" ref="0x40e719a0"/>
        <function-ref name="setDestination" scoped="" ref="0x40e71a80"/>
        <function-ref name="type" scoped="" ref="0x40e71b60"/>
        <function-ref name="setType" scoped="" ref="0x40e71c40"/>
        <function-ref name="isForMe" scoped="" ref="0x40e71d20"/>
        <function-ref name="setGroup" scoped="" ref="0x40e71e00"/>
        <function-ref name="localGroup" scoped="" ref="0x40e71ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSend" ref="0x40e69118" loc="18:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x40e69118"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e692f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e693d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e694b0"/>
        <function-ref name="cancel" scoped="" ref="0x40e69590"/>
        <function-ref name="sendDone" scoped="" ref="0x40e69670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x40eb02a0" loc="156:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x40eb02a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40eb0478"/>
        <function-ref name="runTask" scoped="" ref="0x40eb0558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40e6bcb8" loc="16:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e6bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e6be90"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e6a010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e6a0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e6a1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e6a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataQueueManage" ref="0x40e91d00" loc="29:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x40e91d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x40e91ed8"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x40e8f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40e7f658" loc="147:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40e7f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e7f8b0"/>
        <function-ref name="runTask" scoped="" ref="0x40e7f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40e69878" loc="19:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40e69878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e69a50"/>
        <function-ref name="getPayload" scoped="" ref="0x40e69b30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e69c10"/>
        <function-ref name="cancel" scoped="" ref="0x40e69cf0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e69dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataQueue" ref="0x40e96858" loc="22:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueue" scoped="" ref="0x40e96858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
              <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40e675a0"/>
        <function-ref name="enqueue" scoped="" ref="0x40e67c80"/>
        <function-ref name="element" scoped="" ref="0x40e95010"/>
        <function-ref name="maxSize" scoped="" ref="0x40e67348"/>
        <function-ref name="dequeue" scoped="" ref="0x40e67910"/>
        <function-ref name="empty" scoped="" ref="0x40e96e80"/>
        <function-ref name="size" scoped="" ref="0x40e670f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASchedule" ref="0x40e6ecd0" loc="12:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40e6ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40e6b710"/>
        <function-ref name="getPPB" scoped="" ref="0x40e6b010"/>
        <function-ref name="radioWakeup" scoped="" ref="0x40e6b0f0"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40e6b1d0"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40e6b2b0"/>
        <function-ref name="setPPB" scoped="" ref="0x40e6b390"/>
        <function-ref name="stopTimers" scoped="" ref="0x40e6b470"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40e6b550"/>
        <function-ref name="startTimers" scoped="" ref="0x40e6b630"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40e6eea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataMessagePool" ref="0x40e90af0" loc="23:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataMessagePool" scoped="" ref="0x40e90af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
            <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e94c78"/>
        <function-ref name="maxSize" scoped="" ref="0x40e94690"/>
        <function-ref name="empty" scoped="" ref="0x40e941e0"/>
        <function-ref name="put" scoped="" ref="0x40e948e8"/>
        <function-ref name="size" scoped="" ref="0x40e94438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e91060" loc="26:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e91060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e91238"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e91318"/>
        <function-ref name="led1On" scoped="" ref="0x40e913f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e914d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e915b8"/>
        <function-ref name="get" scoped="" ref="0x40e91698"/>
        <function-ref name="led1Off" scoped="" ref="0x40e91778"/>
        <function-ref name="led2Off" scoped="" ref="0x40e91af8"/>
        <function-ref name="set" scoped="" ref="0x40e91858"/>
        <function-ref name="led0On" scoped="" ref="0x40e91938"/>
        <function-ref name="led2On" scoped="" ref="0x40e91a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAvailableData" ref="0x40e8f690" loc="34:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAvailableData" scoped="" ref="0x40e8f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e8f868"/>
        <function-ref name="runTask" scoped="" ref="0x40e8f948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataReceive" ref="0x40e68010" loc="20:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x40e68010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e681e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40e6a448" loc="17:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e6a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e6a620"/>
        <function-ref name="source" scoped="" ref="0x40e6a700"/>
        <function-ref name="address" scoped="" ref="0x40e6a7e0"/>
        <function-ref name="destination" scoped="" ref="0x40e6a8c0"/>
        <function-ref name="setSource" scoped="" ref="0x40e6a9a0"/>
        <function-ref name="setDestination" scoped="" ref="0x40e6aa80"/>
        <function-ref name="type" scoped="" ref="0x40e6ab60"/>
        <function-ref name="setType" scoped="" ref="0x40e6ac40"/>
        <function-ref name="isForMe" scoped="" ref="0x40e6ad20"/>
        <function-ref name="setGroup" scoped="" ref="0x40e6ae00"/>
        <function-ref name="localGroup" scoped="" ref="0x40e6aee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40ecb5b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="DataManagerC.DataMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40ecb5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
            <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40eb56a0"/>
        <function-ref name="maxSize" scoped="" ref="0x40eb50b8"/>
        <function-ref name="empty" scoped="" ref="0x40ecbbd8"/>
        <function-ref name="put" scoped="" ref="0x40eb5310"/>
        <function-ref name="size" scoped="" ref="0x40ecbe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416e0c08" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="DataManagerC.DataMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x416e0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
            <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416dfcf0"/>
        <function-ref name="maxSize" scoped="" ref="0x416df708"/>
        <function-ref name="empty" scoped="" ref="0x416df258"/>
        <function-ref name="put" scoped="" ref="0x416df960"/>
        <function-ref name="size" scoped="" ref="0x416df4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416e0860" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="DataManagerC.DataMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416e0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416e0a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40eb30f0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="DataManagerC.DataQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40eb30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
              <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40eb3e20"/>
        <function-ref name="enqueue" scoped="" ref="0x40eb2518"/>
        <function-ref name="element" scoped="" ref="0x40eb2868"/>
        <function-ref name="maxSize" scoped="" ref="0x40eb3bc8"/>
        <function-ref name="dequeue" scoped="" ref="0x40eb21a8"/>
        <function-ref name="empty" scoped="" ref="0x40eb3718"/>
        <function-ref name="size" scoped="" ref="0x40eb3970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40efa288" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40efa288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40efa460"/>
        <function-ref name="getPayload" scoped="" ref="0x40efa540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40efa620"/>
        <function-ref name="cancel" scoped="" ref="0x40efa700"/>
        <function-ref name="sendDone" scoped="" ref="0x40efa7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40efa920" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40efa920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40efaaf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40efabd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40efacb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40efad98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40efae78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ef9010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ef9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ef91e8"/>
        <function-ref name="source" scoped="" ref="0x40ef92c8"/>
        <function-ref name="address" scoped="" ref="0x40ef93a8"/>
        <function-ref name="destination" scoped="" ref="0x40ef9488"/>
        <function-ref name="setSource" scoped="" ref="0x40ef9568"/>
        <function-ref name="setDestination" scoped="" ref="0x40ef9648"/>
        <function-ref name="type" scoped="" ref="0x40ef9728"/>
        <function-ref name="setType" scoped="" ref="0x40ef9808"/>
        <function-ref name="isForMe" scoped="" ref="0x40ef98e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40ef99c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40ef9aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ef9c08" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ef9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ef9de0"/>
        <function-ref name="noAck" scoped="" ref="0x40ef9ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ef8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416cf768" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416cf768"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416cf940"/>
        <function-ref name="getPayload" scoped="" ref="0x416cfa20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416cfb00"/>
        <function-ref name="cancel" scoped="" ref="0x416cfbe0"/>
        <function-ref name="sendDone" scoped="" ref="0x416cfcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416cfe30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416cfe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416ce050"/>
        <function-ref name="getPayload" scoped="" ref="0x416ce130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416ce210"/>
        <function-ref name="cancel" scoped="" ref="0x416ce2f0"/>
        <function-ref name="sendDone" scoped="" ref="0x416ce3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416ce510" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416ce510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416ce6e8"/>
        <function-ref name="source" scoped="" ref="0x416ce7c8"/>
        <function-ref name="address" scoped="" ref="0x416ce8a8"/>
        <function-ref name="destination" scoped="" ref="0x416ce988"/>
        <function-ref name="setSource" scoped="" ref="0x416cea68"/>
        <function-ref name="setDestination" scoped="" ref="0x416ceb48"/>
        <function-ref name="type" scoped="" ref="0x416cec28"/>
        <function-ref name="setType" scoped="" ref="0x416ced08"/>
        <function-ref name="isForMe" scoped="" ref="0x416cede8"/>
        <function-ref name="setGroup" scoped="" ref="0x416ceec8"/>
        <function-ref name="localGroup" scoped="" ref="0x416cd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f01100" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f01100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f012d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f013b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f01498"/>
        <function-ref name="cancel" scoped="" ref="0x40f01578"/>
        <function-ref name="sendDone" scoped="" ref="0x40f01658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40eff010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40eff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eff1f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40eff2d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eff3b8"/>
        <function-ref name="cancel" scoped="" ref="0x40eff498"/>
        <function-ref name="sendDone" scoped="" ref="0x40eff578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f00818" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f00818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f00a00"/>
        <function-ref name="getPayload" scoped="" ref="0x40f00ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f00bc0"/>
        <function-ref name="cancel" scoped="" ref="0x40f00ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f00d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40efe310" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40efe310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40efe4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40efe5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40efe6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40efe788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40efe868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40efe9e8" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40efe9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40efebc0"/>
        <function-ref name="runTask" scoped="" ref="0x40efeca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40efee20" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40efee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40efd010"/>
        <function-ref name="runTask" scoped="" ref="0x40efd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40eff6b8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40eff6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40eff890"/>
        <function-ref name="source" scoped="" ref="0x40eff970"/>
        <function-ref name="address" scoped="" ref="0x40effa50"/>
        <function-ref name="destination" scoped="" ref="0x40effb30"/>
        <function-ref name="setSource" scoped="" ref="0x40effc10"/>
        <function-ref name="setDestination" scoped="" ref="0x40effcf0"/>
        <function-ref name="type" scoped="" ref="0x40effdd0"/>
        <function-ref name="setType" scoped="" ref="0x40effeb0"/>
        <function-ref name="isForMe" scoped="" ref="0x40efe010"/>
        <function-ref name="setGroup" scoped="" ref="0x40efe0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40efe1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ef75c0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ef75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ef7798"/>
        <function-ref name="getPayload" scoped="" ref="0x40ef7878"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ef7958"/>
        <function-ref name="cancel" scoped="" ref="0x40ef7a38"/>
        <function-ref name="sendDone" scoped="" ref="0x40ef7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ef7c58" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ef7c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ef7e30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ef7f10"/>
        <function-ref name="getPayload" scoped="" ref="0x40ef6010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ef60f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ef61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ef6310" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ef6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ef64e8"/>
        <function-ref name="source" scoped="" ref="0x40ef65c8"/>
        <function-ref name="address" scoped="" ref="0x40ef66a8"/>
        <function-ref name="destination" scoped="" ref="0x40ef6788"/>
        <function-ref name="setSource" scoped="" ref="0x40ef6868"/>
        <function-ref name="setDestination" scoped="" ref="0x40ef6948"/>
        <function-ref name="type" scoped="" ref="0x40ef6a28"/>
        <function-ref name="setType" scoped="" ref="0x40ef6b08"/>
        <function-ref name="isForMe" scoped="" ref="0x40ef6be8"/>
        <function-ref name="setGroup" scoped="" ref="0x40ef6cc8"/>
        <function-ref name="localGroup" scoped="" ref="0x40ef6da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ef6f08" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ef6f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ef50f0"/>
        <function-ref name="noAck" scoped="" ref="0x40ef51d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ef52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416fb6e0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.DataSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416fb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416fb8b8"/>
        <function-ref name="getPayload" scoped="" ref="0x416fb998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416fba78"/>
        <function-ref name="cancel" scoped="" ref="0x416fbb58"/>
        <function-ref name="sendDone" scoped="" ref="0x416fbc38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416fbda8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.DataSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416fbda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416fa010"/>
        <function-ref name="getPayload" scoped="" ref="0x416fa0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416fa1d0"/>
        <function-ref name="cancel" scoped="" ref="0x416fa2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x416fa390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416fa4d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.DataSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416fa4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416fa6a8"/>
        <function-ref name="source" scoped="" ref="0x416fa788"/>
        <function-ref name="address" scoped="" ref="0x416fa868"/>
        <function-ref name="destination" scoped="" ref="0x416fa948"/>
        <function-ref name="setSource" scoped="" ref="0x416faa28"/>
        <function-ref name="setDestination" scoped="" ref="0x416fab08"/>
        <function-ref name="type" scoped="" ref="0x416fabe8"/>
        <function-ref name="setType" scoped="" ref="0x416facc8"/>
        <function-ref name="isForMe" scoped="" ref="0x416fada8"/>
        <function-ref name="setGroup" scoped="" ref="0x416fae88"/>
        <function-ref name="localGroup" scoped="" ref="0x416f9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ef4858" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.DataReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ef4858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ef4a30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ef4b10"/>
        <function-ref name="getPayload" scoped="" ref="0x40ef4bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ef4cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ef4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ef4540" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.DataReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ef4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ef4718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ef4ef0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.DataReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ef4ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ef20e0"/>
        <function-ref name="source" scoped="" ref="0x40ef21c0"/>
        <function-ref name="address" scoped="" ref="0x40ef22a0"/>
        <function-ref name="destination" scoped="" ref="0x40ef2380"/>
        <function-ref name="setSource" scoped="" ref="0x40ef2460"/>
        <function-ref name="setDestination" scoped="" ref="0x40ef2540"/>
        <function-ref name="type" scoped="" ref="0x40ef2620"/>
        <function-ref name="setType" scoped="" ref="0x40ef2700"/>
        <function-ref name="isForMe" scoped="" ref="0x40ef27e0"/>
        <function-ref name="setGroup" scoped="" ref="0x40ef28c0"/>
        <function-ref name="localGroup" scoped="" ref="0x40ef29a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40f11ec0" loc="41:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40f11ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40f100c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataQueueManage" ref="0x40f0ef00" loc="51:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x40f0ef00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x40f0d0f0"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x40f0d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sample" ref="0x40f0ad68" loc="46:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x40f0ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readSample" scoped="" ref="0x40f0e470"/>
        <function-ref name="readDone" scoped="" ref="0x40f0e550"/>
        <function-ref name="set_digital_output" scoped="" ref="0x40f0e1d0"/>
        <function-ref name="getSample" scoped="" ref="0x40f0e2b0"/>
        <function-ref name="start" scoped="" ref="0x40f0e0f0"/>
        <function-ref name="reTask" scoped="" ref="0x40f0e390"/>
        <function-ref name="stop" scoped="" ref="0x40f0e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerInit" ref="0x40f102d0" loc="44:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x40f102d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f104a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerControl" ref="0x40f10718" loc="45:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x40f10718"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f108f0"/>
        <function-ref name="stopDone" scoped="" ref="0x40f109d0"/>
        <function-ref name="start" scoped="" ref="0x40f10ab0"/>
        <function-ref name="stop" scoped="" ref="0x40f10b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingInit" ref="0x40f0eb50" loc="50:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingInit" scoped="" ref="0x40f0eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f0ed28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f0d350" loc="54:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f0d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f0d528"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f0d608"/>
        <function-ref name="led1On" scoped="" ref="0x40f0d6e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f0d7c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f0d8a8"/>
        <function-ref name="get" scoped="" ref="0x40f0d988"/>
        <function-ref name="led1Off" scoped="" ref="0x40f0da68"/>
        <function-ref name="led2Off" scoped="" ref="0x40f0dde8"/>
        <function-ref name="set" scoped="" ref="0x40f0db48"/>
        <function-ref name="led0On" scoped="" ref="0x40f0dc28"/>
        <function-ref name="led2On" scoped="" ref="0x40f0dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ee87a8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ee87a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ee8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40ee8b10" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ee8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ee8ce8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ee8dc8"/>
        <function-ref name="led1On" scoped="" ref="0x40ee8ea8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f6a010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f6a0f0"/>
        <function-ref name="get" scoped="" ref="0x40f6a1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40f6a2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40f6a630"/>
        <function-ref name="set" scoped="" ref="0x40f6a390"/>
        <function-ref name="led0On" scoped="" ref="0x40f6a470"/>
        <function-ref name="led2On" scoped="" ref="0x40f6a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sample" ref="0x40f5f878" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x40f5f878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readSample" scoped="" ref="0x40f5feb0"/>
        <function-ref name="readDone" scoped="" ref="0x40f5e010"/>
        <function-ref name="set_digital_output" scoped="" ref="0x40f5fc10"/>
        <function-ref name="getSample" scoped="" ref="0x40f5fcf0"/>
        <function-ref name="start" scoped="" ref="0x40f5fb30"/>
        <function-ref name="reTask" scoped="" ref="0x40f5fdd0"/>
        <function-ref name="stop" scoped="" ref="0x40f5fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerInit" ref="0x40ee7dc0" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x40ee7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f5f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerControl" ref="0x40f5f280" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x40f5f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f5f458"/>
        <function-ref name="stopDone" scoped="" ref="0x40f5f538"/>
        <function-ref name="start" scoped="" ref="0x40f5f618"/>
        <function-ref name="stop" scoped="" ref="0x40f5f6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam8" ref="0x40f85df8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam8" scoped="" ref="0x40f85df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f84010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam11" ref="0x40f84a18" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam11" scoped="" ref="0x40f84a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f84bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC6" ref="0x40f8bcb0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC6" scoped="" ref="0x40f8bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f8be88"/>
        <function-ref name="readDone" scoped="" ref="0x40f8a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam0" ref="0x40f87c68" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam0" scoped="" ref="0x40f87c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f87e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC0" ref="0x40f8c010" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC0" scoped="" ref="0x40f8c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f8c1e8"/>
        <function-ref name="readDone" scoped="" ref="0x40f8c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio2" ref="0x40f7b010" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio2" scoped="" ref="0x40f7b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f7b1e8"/>
        <function-ref name="high" scoped="" ref="0x40f7b2c8"/>
        <function-ref name="Toggle" scoped="" ref="0x40f7b3a8"/>
        <function-ref name="read" scoped="" ref="0x40f7b488"/>
        <function-ref name="setParam" scoped="" ref="0x40f7b568"/>
        <function-ref name="readDone" scoped="" ref="0x40f7b648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IBADCinit" ref="0x40f56678" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IBADCinit" scoped="" ref="0x40f56678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f56850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC9" ref="0x40f8ab50" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC9" scoped="" ref="0x40f8ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f8ad28"/>
        <function-ref name="readDone" scoped="" ref="0x40f8ae08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC3" ref="0x40f8ce08" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC3" scoped="" ref="0x40f8ce08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f8b010"/>
        <function-ref name="readDone" scoped="" ref="0x40f8b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam3" ref="0x40f86970" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam3" scoped="" ref="0x40f86970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f86b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio5" ref="0x40f787f8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio5" scoped="" ref="0x40f787f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f789d0"/>
        <function-ref name="high" scoped="" ref="0x40f78ab0"/>
        <function-ref name="Toggle" scoped="" ref="0x40f78b90"/>
        <function-ref name="read" scoped="" ref="0x40f78c70"/>
        <function-ref name="setParam" scoped="" ref="0x40f78d50"/>
        <function-ref name="readDone" scoped="" ref="0x40f78e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterInit" ref="0x40f770a0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x40f770a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f77478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC12" ref="0x40f88990" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC12" scoped="" ref="0x40f88990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f88b68"/>
        <function-ref name="readDone" scoped="" ref="0x40f88c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam6" ref="0x40f85618" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam6" scoped="" ref="0x40f85618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f857f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC4" ref="0x40f8b2e0" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC4" scoped="" ref="0x40f8b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f8b538"/>
        <function-ref name="readDone" scoped="" ref="0x40f8b618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio0" ref="0x40f7c010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio0" scoped="" ref="0x40f7c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f7c1e8"/>
        <function-ref name="high" scoped="" ref="0x40f7c2c8"/>
        <function-ref name="Toggle" scoped="" ref="0x40f7c3a8"/>
        <function-ref name="read" scoped="" ref="0x40f7c488"/>
        <function-ref name="setParam" scoped="" ref="0x40f7c568"/>
        <function-ref name="readDone" scoped="" ref="0x40f7c648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hum" ref="0x40f7fad0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hum" scoped="" ref="0x40f7fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f7e108"/>
        <function-ref name="readDone" scoped="" ref="0x40f7e360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Battery" ref="0x40f80a30" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Battery" scoped="" ref="0x40f80a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f82068"/>
        <function-ref name="readDone" scoped="" ref="0x40f822c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam9" ref="0x40f84228" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam9" scoped="" ref="0x40f84228"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f84400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam12" ref="0x40f84e10" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam12" scoped="" ref="0x40f84e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f83010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC7" ref="0x40f8a200" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC7" scoped="" ref="0x40f8a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f8a3d8"/>
        <function-ref name="readDone" scoped="" ref="0x40f8a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempHumControl" ref="0x40f826d8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempHumControl" scoped="" ref="0x40f826d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f828b0"/>
        <function-ref name="stopDone" scoped="" ref="0x40f82990"/>
        <function-ref name="start" scoped="" ref="0x40f82a70"/>
        <function-ref name="stop" scoped="" ref="0x40f82b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam1" ref="0x40f86090" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam1" scoped="" ref="0x40f86090"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f86268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sample" ref="0x40f5b8b8" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x40f5b8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readSample" scoped="" ref="0x40f5bef0"/>
        <function-ref name="readDone" scoped="" ref="0x40f5a010"/>
        <function-ref name="set_digital_output" scoped="" ref="0x40f5bc50"/>
        <function-ref name="getSample" scoped="" ref="0x40f5bd30"/>
        <function-ref name="start" scoped="" ref="0x40f5bb70"/>
        <function-ref name="reTask" scoped="" ref="0x40f5be10"/>
        <function-ref name="stop" scoped="" ref="0x40f5ba90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerTimer" ref="0x40f593d8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerTimer" scoped="" ref="0x40f593d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f57ec8"/>
        <function-ref name="fired" scoped="" ref="0x40f57180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f57888"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f57630"/>
        <function-ref name="getdt" scoped="" ref="0x40f563a8"/>
        <function-ref name="gett0" scoped="" ref="0x40f56150"/>
        <function-ref name="isRunning" scoped="" ref="0x40f573d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f59a00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f57ba8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f59c80"/>
        <function-ref name="stop" scoped="" ref="0x40f59f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC1" ref="0x40f8c4b8" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC1" scoped="" ref="0x40f8c4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f8c690"/>
        <function-ref name="readDone" scoped="" ref="0x40f8c770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC10" ref="0x40f88030" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC10" scoped="" ref="0x40f88030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f88208"/>
        <function-ref name="readDone" scoped="" ref="0x40f882e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam4" ref="0x40f86d60" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam4" scoped="" ref="0x40f86d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f85010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio3" ref="0x40f7b7f8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio3" scoped="" ref="0x40f7b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f7b9d0"/>
        <function-ref name="high" scoped="" ref="0x40f7bab0"/>
        <function-ref name="Toggle" scoped="" ref="0x40f7bb90"/>
        <function-ref name="read" scoped="" ref="0x40f7bc70"/>
        <function-ref name="setParam" scoped="" ref="0x40f7bd50"/>
        <function-ref name="readDone" scoped="" ref="0x40f7be30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerInit" ref="0x40f5ed80" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x40f5ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f5b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DioInit" ref="0x40f7e6e0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DioInit" scoped="" ref="0x40f7e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f7e8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerControl" ref="0x40f5b2a0" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x40f5b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f5b478"/>
        <function-ref name="stopDone" scoped="" ref="0x40f5b558"/>
        <function-ref name="start" scoped="" ref="0x40f5b638"/>
        <function-ref name="stop" scoped="" ref="0x40f5b718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40f77d28" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f77d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f77f00"/>
        <function-ref name="high" scoped="" ref="0x40f76010"/>
        <function-ref name="Toggle" scoped="" ref="0x40f760f0"/>
        <function-ref name="read" scoped="" ref="0x40f761d0"/>
        <function-ref name="setParam" scoped="" ref="0x40f762b0"/>
        <function-ref name="readDone" scoped="" ref="0x40f76390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC13" ref="0x40f88e40" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC13" scoped="" ref="0x40f88e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f87050"/>
        <function-ref name="readDone" scoped="" ref="0x40f87130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam7" ref="0x40f85a08" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam7" scoped="" ref="0x40f85a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f85be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f5a5c0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f5a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f5a798"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f5a878"/>
        <function-ref name="led1On" scoped="" ref="0x40f5a958"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f5aa38"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f5ab18"/>
        <function-ref name="get" scoped="" ref="0x40f5abf8"/>
        <function-ref name="led1Off" scoped="" ref="0x40f5acd8"/>
        <function-ref name="led2Off" scoped="" ref="0x40f590f0"/>
        <function-ref name="set" scoped="" ref="0x40f5adb8"/>
        <function-ref name="led0On" scoped="" ref="0x40f5ae98"/>
        <function-ref name="led2On" scoped="" ref="0x40f59010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC5" ref="0x40f8b808" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC5" scoped="" ref="0x40f8b808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f8b9e0"/>
        <function-ref name="readDone" scoped="" ref="0x40f8bac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam10" ref="0x40f84620" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam10" scoped="" ref="0x40f84620"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f847f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IBADCcontrol" ref="0x40f56ab0" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IBADCcontrol" scoped="" ref="0x40f56ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f56c88"/>
        <function-ref name="stopDone" scoped="" ref="0x40f56d68"/>
        <function-ref name="start" scoped="" ref="0x40f56e48"/>
        <function-ref name="stop" scoped="" ref="0x40f56f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp" ref="0x40f82df8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x40f82df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f7f448"/>
        <function-ref name="readDone" scoped="" ref="0x40f7f6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio1" ref="0x40f7c7f8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio1" scoped="" ref="0x40f7c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f7c9d0"/>
        <function-ref name="high" scoped="" ref="0x40f7cab0"/>
        <function-ref name="Toggle" scoped="" ref="0x40f7cb90"/>
        <function-ref name="read" scoped="" ref="0x40f7cc70"/>
        <function-ref name="setParam" scoped="" ref="0x40f7cd50"/>
        <function-ref name="readDone" scoped="" ref="0x40f7ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterControl" ref="0x40f776e8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x40f776e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f778c0"/>
        <function-ref name="stopDone" scoped="" ref="0x40f779a0"/>
        <function-ref name="start" scoped="" ref="0x40f77a80"/>
        <function-ref name="stop" scoped="" ref="0x40f77b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DioControl" ref="0x40f7eb00" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DioControl" scoped="" ref="0x40f7eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f7ecd8"/>
        <function-ref name="stopDone" scoped="" ref="0x40f7edb8"/>
        <function-ref name="start" scoped="" ref="0x40f7ee98"/>
        <function-ref name="stop" scoped="" ref="0x40f7d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam13" ref="0x40f83230" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam13" scoped="" ref="0x40f83230"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f83408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC8" ref="0x40f8a6a8" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC8" scoped="" ref="0x40f8a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f8a880"/>
        <function-ref name="readDone" scoped="" ref="0x40f8a960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam2" ref="0x40f86480" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam2" scoped="" ref="0x40f86480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f86758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC2" ref="0x40f8c960" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC2" scoped="" ref="0x40f8c960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f8cb38"/>
        <function-ref name="readDone" scoped="" ref="0x40f8cc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio4" ref="0x40f78010" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio4" scoped="" ref="0x40f78010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f781e8"/>
        <function-ref name="high" scoped="" ref="0x40f782c8"/>
        <function-ref name="Toggle" scoped="" ref="0x40f783a8"/>
        <function-ref name="read" scoped="" ref="0x40f78488"/>
        <function-ref name="setParam" scoped="" ref="0x40f78568"/>
        <function-ref name="readDone" scoped="" ref="0x40f78648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC11" ref="0x40f884e0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC11" scoped="" ref="0x40f884e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f886b8"/>
        <function-ref name="readDone" scoped="" ref="0x40f88798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam5" ref="0x40f85228" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam5" scoped="" ref="0x40f85228"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f85400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41000448" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SamplerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41000448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ffd010"/>
        <function-ref name="fired" scoped="" ref="0x40ffe268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ffe970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ffe718"/>
        <function-ref name="getdt" scoped="" ref="0x40ffd4c0"/>
        <function-ref name="gett0" scoped="" ref="0x40ffd268"/>
        <function-ref name="isRunning" scoped="" ref="0x40ffe4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41000a70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ffec90"/>
        <function-ref name="startOneShot" scoped="" ref="0x41000cf0"/>
        <function-ref name="stop" scoped="" ref="0x40ffe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40ffba60" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="SamplerC.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40ffba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ffa0b8"/>
        <function-ref name="readDone" scoped="" ref="0x40ffa310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x416e4ad0" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x416e4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x416e4ca8"/>
        <function-ref name="configure" scoped="" ref="0x416e4d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x416e5a50" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x416e5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x416e4098"/>
        <function-ref name="readDone" scoped="" ref="0x416e42f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x416e45f8" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x416e45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x416e47d0"/>
        <function-ref name="getChannel" scoped="" ref="0x416e48b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x416e4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40ff36f8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40ff36f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ff3d20"/>
        <function-ref name="readDone" scoped="" ref="0x40fef010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40fecb90" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40fecb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fee200"/>
        <function-ref name="readDone" scoped="" ref="0x40fee478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40feeb30" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40feeb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40feed08"/>
        <function-ref name="getChannel" scoped="" ref="0x40feede8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40feeec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40feb3c0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40feb3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40feb598"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40feb678"/>
        <function-ref name="request" scoped="" ref="0x40feb758"/>
        <function-ref name="granted" scoped="" ref="0x40feb838"/>
        <function-ref name="isOwner" scoped="" ref="0x40feb918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4101d6c8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4101d6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4101d8a0"/>
        <function-ref name="configure" scoped="" ref="0x4101d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x41019ec0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41019ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4101d0c0"/>
        <function-ref name="dataReady" scoped="" ref="0x4101d1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40fe4d38" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40fe4d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40fe4f10"/>
        <function-ref name="cancel" scoped="" ref="0x40fe7010"/>
        <function-ref name="dataReady" scoped="" ref="0x40fe70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40fe83c0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40fe83c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fe8598"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fe8678"/>
        <function-ref name="request" scoped="" ref="0x40fe8758"/>
        <function-ref name="granted" scoped="" ref="0x40fe8838"/>
        <function-ref name="isOwner" scoped="" ref="0x40fe8918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410173b8" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410173b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41017590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x41016200" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41016200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x410163d8"/>
        <function-ref name="dataReady" scoped="" ref="0x410164b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x41017bf8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41017bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x41017dd0"/>
        <function-ref name="cancel" scoped="" ref="0x41017eb0"/>
        <function-ref name="dataReady" scoped="" ref="0x41016010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x4100ca78" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x4100ca78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x4100cc50"/>
        <function-ref name="getAdmux" scoped="" ref="0x4100cd30"/>
        <function-ref name="setPrescaler" scoped="" ref="0x4100ce10"/>
        <function-ref name="isEnabled" scoped="" ref="0x4100cef0"/>
        <function-ref name="enableAdc" scoped="" ref="0x41015010"/>
        <function-ref name="setAdmux" scoped="" ref="0x410150f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x410151d0"/>
        <function-ref name="isComplete" scoped="" ref="0x410152b0"/>
        <function-ref name="cancel" scoped="" ref="0x41015390"/>
        <function-ref name="disableAdc" scoped="" ref="0x41015470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x41015550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x41015630"/>
        <function-ref name="startConversion" scoped="" ref="0x41015710"/>
        <function-ref name="isStarted" scoped="" ref="0x41015870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x41015950"/>
        <function-ref name="setContinuous" scoped="" ref="0x41015a30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x41015b10"/>
        <function-ref name="getValue" scoped="" ref="0x41015bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x41015cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x41017768" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41017768"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41017940"/>
        <function-ref name="stop" scoped="" ref="0x41017a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x41015ea8" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x41015ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x410140c0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x410141a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x41014280"/>
        <function-ref name="actualMicro" scoped="" ref="0x41014360"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x41014440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x41029010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x41029010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x410291e8"/>
        <function-ref name="getAdmux" scoped="" ref="0x410292c8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x410293a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x41029488"/>
        <function-ref name="enableAdc" scoped="" ref="0x41029568"/>
        <function-ref name="setAdmux" scoped="" ref="0x41029648"/>
        <function-ref name="enableInterruption" scoped="" ref="0x41029728"/>
        <function-ref name="isComplete" scoped="" ref="0x41029808"/>
        <function-ref name="cancel" scoped="" ref="0x410298e8"/>
        <function-ref name="disableAdc" scoped="" ref="0x410299c8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x41029aa8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x41029b88"/>
        <function-ref name="startConversion" scoped="" ref="0x41029c68"/>
        <function-ref name="isStarted" scoped="" ref="0x41029dc8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x41029ea8"/>
        <function-ref name="setContinuous" scoped="" ref="0x41028010"/>
        <function-ref name="getAdcsra" scoped="" ref="0x410280f0"/>
        <function-ref name="getValue" scoped="" ref="0x410281d0"/>
        <function-ref name="dataReady" scoped="" ref="0x410282b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x41028ce8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x41028ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x41028ec0"/>
        <function-ref name="getAdmux" scoped="" ref="0x41025010"/>
        <function-ref name="setPrescaler" scoped="" ref="0x410250f0"/>
        <function-ref name="isEnabled" scoped="" ref="0x410251d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x410252b0"/>
        <function-ref name="setAdmux" scoped="" ref="0x41025390"/>
        <function-ref name="enableInterruption" scoped="" ref="0x41025470"/>
        <function-ref name="isComplete" scoped="" ref="0x41025550"/>
        <function-ref name="cancel" scoped="" ref="0x41025630"/>
        <function-ref name="disableAdc" scoped="" ref="0x41025710"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x410257f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x410258d0"/>
        <function-ref name="startConversion" scoped="" ref="0x410259b0"/>
        <function-ref name="isStarted" scoped="" ref="0x41025b10"/>
        <function-ref name="setAdcsra" scoped="" ref="0x41025bf0"/>
        <function-ref name="setContinuous" scoped="" ref="0x41025cd0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x41025db0"/>
        <function-ref name="getValue" scoped="" ref="0x41025e90"/>
        <function-ref name="dataReady" scoped="" ref="0x41024010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x410241f8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x410241f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x410243d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41042808" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41042808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410429f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41042ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410797c0" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410797c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410799a8"/>
        <function-ref name="configure" scoped="" ref="0x41079a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41042c10" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41042c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41042de8"/>
        <function-ref name="requested" scoped="" ref="0x41042ec8"/>
        <function-ref name="granted" scoped="" ref="0x41079010"/>
        <function-ref name="isOwner" scoped="" ref="0x410790f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410791d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410420c8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410420c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410422b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41042390"/>
        <function-ref name="request" scoped="" ref="0x41042470"/>
        <function-ref name="granted" scoped="" ref="0x41042550"/>
        <function-ref name="isOwner" scoped="" ref="0x41042630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41079310" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41079310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410794e8"/>
        <function-ref name="userId" scoped="" ref="0x410795c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41731630" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41731630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41731808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x41731968" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x41731968"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41731b40"/>
        <function-ref name="isEmpty" scoped="" ref="0x41731c20"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41731d00"/>
        <function-ref name="dequeue" scoped="" ref="0x41731de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4172e3a8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4172e3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4172e590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4172e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4172d338" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4172d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4172d520"/>
        <function-ref name="configure" scoped="" ref="0x4172d600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4172d760" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4172d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4172d938"/>
        <function-ref name="isEmpty" scoped="" ref="0x4172da18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4172daf8"/>
        <function-ref name="dequeue" scoped="" ref="0x4172dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4172e7b0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4172e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4172e988"/>
        <function-ref name="requested" scoped="" ref="0x4172ea68"/>
        <function-ref name="granted" scoped="" ref="0x4172eb48"/>
        <function-ref name="isOwner" scoped="" ref="0x4172ec28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4172ed08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4172dd18" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4172dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4172def0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4172c010"/>
        <function-ref name="led1On" scoped="" ref="0x4172c0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4172c1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4172c2b0"/>
        <function-ref name="get" scoped="" ref="0x4172c390"/>
        <function-ref name="led1Off" scoped="" ref="0x4172c470"/>
        <function-ref name="led0On" scoped="" ref="0x4172c7f0"/>
        <function-ref name="set" scoped="" ref="0x4172c630"/>
        <function-ref name="led2On" scoped="" ref="0x4172c550"/>
        <function-ref name="led2Off" scoped="" ref="0x4172c710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41730bc0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41730bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41730da8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41730e88"/>
        <function-ref name="request" scoped="" ref="0x4172e010"/>
        <function-ref name="granted" scoped="" ref="0x4172e0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4172e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4172ee48" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4172ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4172d050"/>
        <function-ref name="userId" scoped="" ref="0x4172d130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4172c970" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4172c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4172cb48"/>
        <function-ref name="runTask" scoped="" ref="0x4172cc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41077510" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41077510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x410776e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41077828" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41077828"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41077a00"/>
        <function-ref name="requested" scoped="" ref="0x41077ae0"/>
        <function-ref name="granted" scoped="" ref="0x41077bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x41077ca0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41077d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x41077118" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41077118"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410772f0"/>
        <function-ref name="stop" scoped="" ref="0x410773d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41077ec0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41077ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410b20c0"/>
        <function-ref name="userId" scoped="" ref="0x410b21a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41711230" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41711230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41711408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41711548" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41711548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41711720"/>
        <function-ref name="requested" scoped="" ref="0x41711800"/>
        <function-ref name="granted" scoped="" ref="0x417118e0"/>
        <function-ref name="isOwner" scoped="" ref="0x417119c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41711aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x41713de0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41713de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41711010"/>
        <function-ref name="stop" scoped="" ref="0x417110f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41711be0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41711be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41711db8"/>
        <function-ref name="userId" scoped="" ref="0x41711e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x410a3970" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x410a3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410a0010"/>
        <function-ref name="readDone" scoped="" ref="0x410a0268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x410a0978" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x410a0978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4109e010"/>
        <function-ref name="readDone" scoped="" ref="0x4109e288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4109eeb0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4109eeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4109d0c0"/>
        <function-ref name="getChannel" scoped="" ref="0x4109d1a0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4109d280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x4109e638" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4109e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4109e810"/>
        <function-ref name="cancel" scoped="" ref="0x4109e8f0"/>
        <function-ref name="dataReady" scoped="" ref="0x4109e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x410d1538" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x410d1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410d1710"/>
        <function-ref name="runTask" scoped="" ref="0x410d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x410b9e78" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x410b9e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410c64d8"/>
        <function-ref name="readDone" scoped="" ref="0x410c6740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x410c6ba0" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x410c6ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410b81f0"/>
        <function-ref name="readDone" scoped="" ref="0x410b8458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x410b87d8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410b87d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410b89c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410b8aa0"/>
        <function-ref name="request" scoped="" ref="0x410b8b80"/>
        <function-ref name="granted" scoped="" ref="0x410b8c60"/>
        <function-ref name="isOwner" scoped="" ref="0x410b8d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x410b4ea0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x410b4ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x410ef0c0"/>
        <function-ref name="getChannel" scoped="" ref="0x410ef1a0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x410ef280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x410f0c38" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x410f0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x410f0e10"/>
        <function-ref name="stopDone" scoped="" ref="0x410f0ef0"/>
        <function-ref name="start" scoped="" ref="0x411bb010"/>
        <function-ref name="stop" scoped="" ref="0x411bb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x411bbf28" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x411bbf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411ba560"/>
        <function-ref name="readDone" scoped="" ref="0x411ba7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x411bb300" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x411bb300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411bb928"/>
        <function-ref name="readDone" scoped="" ref="0x411bbb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht15Temp" ref="0x4175cbe8" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht15Temp" scoped="" ref="0x4175cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x4175cdc0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x4175cea0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x4175b010"/>
        <function-ref name="reset" scoped="" ref="0x4175b0f0"/>
        <function-ref name="resetDone" scoped="" ref="0x4175b1d0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x4175b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x4175ee68" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x4175ee68"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x4175d050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x4175d260" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x4175d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4175d888"/>
        <function-ref name="readDone" scoped="" ref="0x4175dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x41760eb8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x41760eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x4175e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x4175ddf8" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x4175ddf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4175c010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4175c0f0"/>
        <function-ref name="request" scoped="" ref="0x4175c1d0"/>
        <function-ref name="granted" scoped="" ref="0x4175c2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x4175c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht15Hum" ref="0x4175b430" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht15Hum" scoped="" ref="0x4175b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x4175b608"/>
        <function-ref name="measureHumidity" scoped="" ref="0x4175b6e8"/>
        <function-ref name="measureTemperature" scoped="" ref="0x4175b7c8"/>
        <function-ref name="reset" scoped="" ref="0x4175b8a8"/>
        <function-ref name="resetDone" scoped="" ref="0x4175b988"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x4175ba68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x4175c510" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x4175c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4175c6e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4175c7c8"/>
        <function-ref name="request" scoped="" ref="0x4175c8a8"/>
        <function-ref name="granted" scoped="" ref="0x4175c988"/>
        <function-ref name="isOwner" scoped="" ref="0x4175ca68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x4175e2d0" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x4175e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4175e8f8"/>
        <function-ref name="readDone" scoped="" ref="0x4175eb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41106d50" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41106d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41106f28"/>
        <function-ref name="stopDone" scoped="" ref="0x41103018"/>
        <function-ref name="start" scoped="" ref="0x411030f8"/>
        <function-ref name="stop" scoped="" ref="0x411031d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht15" ref="0x41101100" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht15" scoped="" ref="0x41101100"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x411012d8"/>
        <function-ref name="measureHumidity" scoped="" ref="0x411013b8"/>
        <function-ref name="measureTemperature" scoped="" ref="0x41101498"/>
        <function-ref name="reset" scoped="" ref="0x41101578"/>
        <function-ref name="resetDone" scoped="" ref="0x41101658"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x41101738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41103698" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41103698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41103870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41103950"/>
        <function-ref name="request" scoped="" ref="0x41103a30"/>
        <function-ref name="granted" scoped="" ref="0x41103b10"/>
        <function-ref name="isOwner" scoped="" ref="0x41103bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht15" ref="0x410ffe70" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht15" scoped="" ref="0x410ffe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x41146070"/>
        <function-ref name="measureHumidity" scoped="" ref="0x41146150"/>
        <function-ref name="measureTemperature" scoped="" ref="0x41146230"/>
        <function-ref name="reset" scoped="" ref="0x41146310"/>
        <function-ref name="resetDone" scoped="" ref="0x411463f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x411464d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x41144988" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x41144988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41144b60"/>
        <function-ref name="disable" scoped="" ref="0x41144c40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x41144d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x41144e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x41141e58" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x41141e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41140050"/>
        <function-ref name="runTask" scoped="" ref="0x41140130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x41144010" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x41144010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411441e8"/>
        <function-ref name="isInput" scoped="" ref="0x411442c8"/>
        <function-ref name="toggle" scoped="" ref="0x411443a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41144488"/>
        <function-ref name="get" scoped="" ref="0x41144568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41144648"/>
        <function-ref name="set" scoped="" ref="0x41144728"/>
        <function-ref name="clr" scoped="" ref="0x41144808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x41146650" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x41146650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41146828"/>
        <function-ref name="isInput" scoped="" ref="0x41146908"/>
        <function-ref name="toggle" scoped="" ref="0x411469e8"/>
        <function-ref name="isOutput" scoped="" ref="0x41146ac8"/>
        <function-ref name="get" scoped="" ref="0x41146ba8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41146c88"/>
        <function-ref name="set" scoped="" ref="0x41146d68"/>
        <function-ref name="clr" scoped="" ref="0x41146e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41141240" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41141240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41141418"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411414f8"/>
        <function-ref name="led1On" scoped="" ref="0x411415d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x411416b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41141798"/>
        <function-ref name="get" scoped="" ref="0x41141878"/>
        <function-ref name="led1Off" scoped="" ref="0x41141958"/>
        <function-ref name="led2On" scoped="" ref="0x41141cd8"/>
        <function-ref name="set" scoped="" ref="0x41141b18"/>
        <function-ref name="led2Off" scoped="" ref="0x41141a38"/>
        <function-ref name="led0On" scoped="" ref="0x41141bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41143010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41143010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41142b00"/>
        <function-ref name="fired" scoped="" ref="0x41143d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411424c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41142268"/>
        <function-ref name="getdt" scoped="" ref="0x41141010"/>
        <function-ref name="gett0" scoped="" ref="0x41142d58"/>
        <function-ref name="isRunning" scoped="" ref="0x41142010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41143638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411427e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x411438b8"/>
        <function-ref name="stop" scoped="" ref="0x41143b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4113fa80" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4113fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4113fc58"/>
        <function-ref name="stopDone" scoped="" ref="0x4113fd38"/>
        <function-ref name="start" scoped="" ref="0x4113fe18"/>
        <function-ref name="stop" scoped="" ref="0x4113fef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x41139030" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x41139030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41139208"/>
        <function-ref name="disable" scoped="" ref="0x411392e8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x411393c8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x411394a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x4113a590" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x4113a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4113a768"/>
        <function-ref name="isInput" scoped="" ref="0x4113a848"/>
        <function-ref name="toggle" scoped="" ref="0x4113a928"/>
        <function-ref name="isOutput" scoped="" ref="0x4113aa08"/>
        <function-ref name="get" scoped="" ref="0x4113aae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4113abc8"/>
        <function-ref name="set" scoped="" ref="0x4113aca8"/>
        <function-ref name="clr" scoped="" ref="0x4113ad88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x4113cb10" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x4113cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4113cce8"/>
        <function-ref name="isInput" scoped="" ref="0x4113cdc8"/>
        <function-ref name="toggle" scoped="" ref="0x4113cea8"/>
        <function-ref name="isOutput" scoped="" ref="0x4113a010"/>
        <function-ref name="get" scoped="" ref="0x4113a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4113a1d0"/>
        <function-ref name="set" scoped="" ref="0x4113a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4113a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4113c3a8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4113c3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4113c580"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4113c660"/>
        <function-ref name="request" scoped="" ref="0x4113c740"/>
        <function-ref name="granted" scoped="" ref="0x4113c820"/>
        <function-ref name="isOwner" scoped="" ref="0x4113c900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x41139c50" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x41139c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41139e28"/>
        <function-ref name="isInput" scoped="" ref="0x41139f08"/>
        <function-ref name="toggle" scoped="" ref="0x41136010"/>
        <function-ref name="isOutput" scoped="" ref="0x411360f0"/>
        <function-ref name="get" scoped="" ref="0x411361d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411362b0"/>
        <function-ref name="set" scoped="" ref="0x41136390"/>
        <function-ref name="clr" scoped="" ref="0x41136470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x4112fec8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x4112fec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4116e188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x41135a28" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x41135a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41135c00"/>
        <function-ref name="isInput" scoped="" ref="0x41135ce0"/>
        <function-ref name="toggle" scoped="" ref="0x41135dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x41135ea0"/>
        <function-ref name="get" scoped="" ref="0x41134010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411340f0"/>
        <function-ref name="set" scoped="" ref="0x411341d0"/>
        <function-ref name="clr" scoped="" ref="0x411342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x41133850" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x41133850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41133a28"/>
        <function-ref name="isInput" scoped="" ref="0x41133b08"/>
        <function-ref name="toggle" scoped="" ref="0x41133be8"/>
        <function-ref name="isOutput" scoped="" ref="0x41133cc8"/>
        <function-ref name="get" scoped="" ref="0x41133da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41133e88"/>
        <function-ref name="set" scoped="" ref="0x41132010"/>
        <function-ref name="clr" scoped="" ref="0x411320f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x4116eb20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x4116eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4116ecf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x4116d2d8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x4116d2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4116d4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x41131740" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x41131740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41131918"/>
        <function-ref name="isInput" scoped="" ref="0x411319f8"/>
        <function-ref name="toggle" scoped="" ref="0x41131ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x41131bb8"/>
        <function-ref name="get" scoped="" ref="0x41131c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x41131d78"/>
        <function-ref name="set" scoped="" ref="0x41131e58"/>
        <function-ref name="clr" scoped="" ref="0x41130010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x41136650" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x41136650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41136828"/>
        <function-ref name="isInput" scoped="" ref="0x41136908"/>
        <function-ref name="toggle" scoped="" ref="0x411369e8"/>
        <function-ref name="isOutput" scoped="" ref="0x41136ac8"/>
        <function-ref name="get" scoped="" ref="0x41136ba8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41136c88"/>
        <function-ref name="set" scoped="" ref="0x41136d68"/>
        <function-ref name="clr" scoped="" ref="0x41136e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x41134490" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x41134490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41134668"/>
        <function-ref name="isInput" scoped="" ref="0x41134748"/>
        <function-ref name="toggle" scoped="" ref="0x41134828"/>
        <function-ref name="isOutput" scoped="" ref="0x41134908"/>
        <function-ref name="get" scoped="" ref="0x411349e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41134ac8"/>
        <function-ref name="set" scoped="" ref="0x41134ba8"/>
        <function-ref name="clr" scoped="" ref="0x41134c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x4116e380" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x4116e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4116e558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x411322d0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x411322d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411324a8"/>
        <function-ref name="isInput" scoped="" ref="0x41132588"/>
        <function-ref name="toggle" scoped="" ref="0x41132668"/>
        <function-ref name="isOutput" scoped="" ref="0x41132748"/>
        <function-ref name="get" scoped="" ref="0x41132828"/>
        <function-ref name="makeOutput" scoped="" ref="0x41132908"/>
        <function-ref name="set" scoped="" ref="0x411329e8"/>
        <function-ref name="clr" scoped="" ref="0x41132ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x4116d6a8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x4116d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4116d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x41130200" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x41130200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411303d8"/>
        <function-ref name="isInput" scoped="" ref="0x411304b8"/>
        <function-ref name="toggle" scoped="" ref="0x41130598"/>
        <function-ref name="isOutput" scoped="" ref="0x41130678"/>
        <function-ref name="get" scoped="" ref="0x41130758"/>
        <function-ref name="makeOutput" scoped="" ref="0x41130838"/>
        <function-ref name="set" scoped="" ref="0x41130918"/>
        <function-ref name="clr" scoped="" ref="0x411309f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x41135050" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x41135050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41135228"/>
        <function-ref name="isInput" scoped="" ref="0x41135308"/>
        <function-ref name="toggle" scoped="" ref="0x411353e8"/>
        <function-ref name="isOutput" scoped="" ref="0x411354c8"/>
        <function-ref name="get" scoped="" ref="0x411355a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41135688"/>
        <function-ref name="set" scoped="" ref="0x41135768"/>
        <function-ref name="clr" scoped="" ref="0x41135848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x41134e68" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x41134e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41133050"/>
        <function-ref name="isInput" scoped="" ref="0x41133130"/>
        <function-ref name="toggle" scoped="" ref="0x41133210"/>
        <function-ref name="isOutput" scoped="" ref="0x411332f0"/>
        <function-ref name="get" scoped="" ref="0x411333d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411334b0"/>
        <function-ref name="set" scoped="" ref="0x41133590"/>
        <function-ref name="clr" scoped="" ref="0x41133670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x4116e750" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x4116e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4116e928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x41132cb8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x41132cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41132e90"/>
        <function-ref name="isInput" scoped="" ref="0x41131010"/>
        <function-ref name="toggle" scoped="" ref="0x411310f0"/>
        <function-ref name="isOutput" scoped="" ref="0x411311d0"/>
        <function-ref name="get" scoped="" ref="0x411312b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x41131390"/>
        <function-ref name="set" scoped="" ref="0x41131470"/>
        <function-ref name="clr" scoped="" ref="0x41131550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x4116eef0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x4116eef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4116d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x4116da78" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x4116da78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4116dc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x41130be8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x41130be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41130dc0"/>
        <function-ref name="isInput" scoped="" ref="0x41130ea0"/>
        <function-ref name="toggle" scoped="" ref="0x4112f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4112f0f0"/>
        <function-ref name="get" scoped="" ref="0x4112f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4112f2b0"/>
        <function-ref name="set" scoped="" ref="0x4112f390"/>
        <function-ref name="clr" scoped="" ref="0x4112f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x4116c5c0" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x4116c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4116c798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x41169208" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x41169208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x411693e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x411699a8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x411699a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41169b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x4116c990" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x4116c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4116cb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x41169d78" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x41169d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41168010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x4116cd60" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x4116cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41169010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x411695d8" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x411695d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x411697b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x41168208" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x41168208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x411683e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x4115ca00" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht15C.Int"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x4115ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4115cbd8"/>
        <function-ref name="fired" scoped="" ref="0x4115ccb8"/>
        <function-ref name="disable" scoped="" ref="0x4115cd98"/>
        <function-ref name="edge" scoped="" ref="0x4115ce78"/>
        <function-ref name="enable" scoped="" ref="0x4115b010"/>
        <function-ref name="getValue" scoped="" ref="0x4115b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x4115c408" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht15C.Int"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x4115c408"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4115c5e0"/>
        <function-ref name="disable" scoped="" ref="0x4115c6c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4115c7a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4115c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x4118c338" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x4118c338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4118c510"/>
        <function-ref name="fired" scoped="" ref="0x4118c5f0"/>
        <function-ref name="disable" scoped="" ref="0x4118c6d0"/>
        <function-ref name="edge" scoped="" ref="0x4118c7b0"/>
        <function-ref name="enable" scoped="" ref="0x4118c890"/>
        <function-ref name="getValue" scoped="" ref="0x4118c970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x4114f6b8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x4114f6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4114f890"/>
        <function-ref name="fired" scoped="" ref="0x4114f970"/>
        <function-ref name="disable" scoped="" ref="0x4114fa50"/>
        <function-ref name="edge" scoped="" ref="0x4114fb30"/>
        <function-ref name="enable" scoped="" ref="0x4114fc10"/>
        <function-ref name="getValue" scoped="" ref="0x4114fcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x4118d168" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x4118d168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4118d340"/>
        <function-ref name="fired" scoped="" ref="0x4118d420"/>
        <function-ref name="disable" scoped="" ref="0x4118d500"/>
        <function-ref name="edge" scoped="" ref="0x4118d5e0"/>
        <function-ref name="enable" scoped="" ref="0x4118d6c0"/>
        <function-ref name="getValue" scoped="" ref="0x4118d7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x4118cbb8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x4118cbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4118cd90"/>
        <function-ref name="fired" scoped="" ref="0x4118ce70"/>
        <function-ref name="disable" scoped="" ref="0x4118b010"/>
        <function-ref name="edge" scoped="" ref="0x4118b0f0"/>
        <function-ref name="enable" scoped="" ref="0x4118b1d0"/>
        <function-ref name="getValue" scoped="" ref="0x4118b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x4118e010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x4118e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4118e1e8"/>
        <function-ref name="fired" scoped="" ref="0x4118e2c8"/>
        <function-ref name="disable" scoped="" ref="0x4118e3a8"/>
        <function-ref name="edge" scoped="" ref="0x4118e488"/>
        <function-ref name="enable" scoped="" ref="0x4118e568"/>
        <function-ref name="getValue" scoped="" ref="0x4118e648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x4118d9e8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x4118d9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4118dbc0"/>
        <function-ref name="fired" scoped="" ref="0x4118dca0"/>
        <function-ref name="disable" scoped="" ref="0x4118dd80"/>
        <function-ref name="edge" scoped="" ref="0x4118de60"/>
        <function-ref name="enable" scoped="" ref="0x4118c010"/>
        <function-ref name="getValue" scoped="" ref="0x4118c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x4115bdd8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x4115bdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4114f010"/>
        <function-ref name="fired" scoped="" ref="0x4114f0f0"/>
        <function-ref name="disable" scoped="" ref="0x4114f1d0"/>
        <function-ref name="edge" scoped="" ref="0x4114f2b0"/>
        <function-ref name="enable" scoped="" ref="0x4114f390"/>
        <function-ref name="getValue" scoped="" ref="0x4114f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x4118e890" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x4118e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4118ea68"/>
        <function-ref name="fired" scoped="" ref="0x4118eb48"/>
        <function-ref name="disable" scoped="" ref="0x4118ec28"/>
        <function-ref name="edge" scoped="" ref="0x4118ed08"/>
        <function-ref name="enable" scoped="" ref="0x4118ede8"/>
        <function-ref name="getValue" scoped="" ref="0x4118eec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x411872b0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x411872b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41187488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x41186c18" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x41186c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41186df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x41188998" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x41188998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41188b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x41187728" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x41187728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41187900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x411880a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x411880a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41188280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x41188e10" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x41188e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41187010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x411867a0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x411867a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41186978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x41188520" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x41188520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411886f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411896f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411896f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411898d0"/>
        <function-ref name="fired" scoped="" ref="0x411899b0"/>
        <function-ref name="disable" scoped="" ref="0x41189a90"/>
        <function-ref name="edge" scoped="" ref="0x41189b70"/>
        <function-ref name="enable" scoped="" ref="0x41189c50"/>
        <function-ref name="getValue" scoped="" ref="0x41189d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x41189eb0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x41189eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411750c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411aa7f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411aa7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411aa9d0"/>
        <function-ref name="fired" scoped="" ref="0x411aaab0"/>
        <function-ref name="disable" scoped="" ref="0x411aab90"/>
        <function-ref name="edge" scoped="" ref="0x411aac70"/>
        <function-ref name="enable" scoped="" ref="0x411aad50"/>
        <function-ref name="getValue" scoped="" ref="0x411aae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411a9010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411a9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411a91e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411a7920" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411a7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411a7af8"/>
        <function-ref name="fired" scoped="" ref="0x411a7bd8"/>
        <function-ref name="disable" scoped="" ref="0x411a7cb8"/>
        <function-ref name="edge" scoped="" ref="0x411a7d98"/>
        <function-ref name="enable" scoped="" ref="0x411a7e78"/>
        <function-ref name="getValue" scoped="" ref="0x411a6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411a6190" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411a6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411a6368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411a5b68" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411a5b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411a5d40"/>
        <function-ref name="fired" scoped="" ref="0x411a5e20"/>
        <function-ref name="disable" scoped="" ref="0x411a5f00"/>
        <function-ref name="edge" scoped="" ref="0x411a4010"/>
        <function-ref name="enable" scoped="" ref="0x411a40f0"/>
        <function-ref name="getValue" scoped="" ref="0x411a41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411a4350" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411a4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411a4528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411a3c70" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411a3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411a3e48"/>
        <function-ref name="fired" scoped="" ref="0x411a3f28"/>
        <function-ref name="disable" scoped="" ref="0x411a2018"/>
        <function-ref name="edge" scoped="" ref="0x411a20f8"/>
        <function-ref name="enable" scoped="" ref="0x411a21d8"/>
        <function-ref name="getValue" scoped="" ref="0x411a22b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411a2438" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411a2438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411a2610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x411a1d60" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x411a1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411a0010"/>
        <function-ref name="fired" scoped="" ref="0x411a00f0"/>
        <function-ref name="disable" scoped="" ref="0x411a01d0"/>
        <function-ref name="edge" scoped="" ref="0x411a02b0"/>
        <function-ref name="enable" scoped="" ref="0x411a0390"/>
        <function-ref name="getValue" scoped="" ref="0x411a0470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x411a05f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x411a05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411a07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4119e010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4119e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4119e1e8"/>
        <function-ref name="fired" scoped="" ref="0x4119e2c8"/>
        <function-ref name="disable" scoped="" ref="0x4119e3a8"/>
        <function-ref name="edge" scoped="" ref="0x4119e488"/>
        <function-ref name="enable" scoped="" ref="0x4119e568"/>
        <function-ref name="getValue" scoped="" ref="0x4119e648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4119e7c8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4119e7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4119e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4119b228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4119b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4119b400"/>
        <function-ref name="fired" scoped="" ref="0x4119b4e0"/>
        <function-ref name="disable" scoped="" ref="0x4119b5c0"/>
        <function-ref name="edge" scoped="" ref="0x4119b6a0"/>
        <function-ref name="enable" scoped="" ref="0x4119b780"/>
        <function-ref name="getValue" scoped="" ref="0x4119b860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4119b9e0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4119b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4119bbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411964a8" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411964a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41196680"/>
        <function-ref name="stopDone" scoped="" ref="0x41196760"/>
        <function-ref name="start" scoped="" ref="0x41196840"/>
        <function-ref name="stop" scoped="" ref="0x41196920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x4118f710" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x4118f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4118f8e8"/>
        <function-ref name="runTask" scoped="" ref="0x4118f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x41190870" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x41190870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41190a48"/>
        <function-ref name="isInput" scoped="" ref="0x41190b28"/>
        <function-ref name="toggle" scoped="" ref="0x41190c08"/>
        <function-ref name="isOutput" scoped="" ref="0x41190ce8"/>
        <function-ref name="get" scoped="" ref="0x41190dc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41190ea8"/>
        <function-ref name="set" scoped="" ref="0x4118f010"/>
        <function-ref name="clr" scoped="" ref="0x4118f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x41192e38" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x41192e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41190050"/>
        <function-ref name="isInput" scoped="" ref="0x41190130"/>
        <function-ref name="toggle" scoped="" ref="0x41190210"/>
        <function-ref name="isOutput" scoped="" ref="0x411902f0"/>
        <function-ref name="get" scoped="" ref="0x411903d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411904b0"/>
        <function-ref name="set" scoped="" ref="0x41190590"/>
        <function-ref name="clr" scoped="" ref="0x41190670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41196b88" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41196b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411926a8"/>
        <function-ref name="fired" scoped="" ref="0x41193938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41192068"/>
        <function-ref name="isOneShot" scoped="" ref="0x41193de8"/>
        <function-ref name="getdt" scoped="" ref="0x41192b58"/>
        <function-ref name="gett0" scoped="" ref="0x41192900"/>
        <function-ref name="isRunning" scoped="" ref="0x41193b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411931e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41192388"/>
        <function-ref name="startOneShot" scoped="" ref="0x41193460"/>
        <function-ref name="stop" scoped="" ref="0x411936e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x411942c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht15C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411942c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411cadb0"/>
        <function-ref name="fired" scoped="" ref="0x411ca068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411ca770"/>
        <function-ref name="isOneShot" scoped="" ref="0x411ca518"/>
        <function-ref name="getdt" scoped="" ref="0x411c92a0"/>
        <function-ref name="gett0" scoped="" ref="0x411c9048"/>
        <function-ref name="isRunning" scoped="" ref="0x411ca2c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411948e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411caa90"/>
        <function-ref name="startOneShot" scoped="" ref="0x41194b68"/>
        <function-ref name="stop" scoped="" ref="0x41194de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411c7488" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411c7488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411c7670"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411c7750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411c7d40" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411c7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411c7f28"/>
        <function-ref name="configure" scoped="" ref="0x411c5018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411c8ce8" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411c8ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411c8ed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411c7010"/>
        <function-ref name="request" scoped="" ref="0x411c70f0"/>
        <function-ref name="granted" scoped="" ref="0x411c71d0"/>
        <function-ref name="isOwner" scoped="" ref="0x411c72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411c7890" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411c7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411c7a68"/>
        <function-ref name="userId" scoped="" ref="0x411c7b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417b3120" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417b3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417b32f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x417b3458" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x417b3458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417b3630"/>
        <function-ref name="isEmpty" scoped="" ref="0x417b3710"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417b37f0"/>
        <function-ref name="dequeue" scoped="" ref="0x417b38d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x417b1b88" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x417b1b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x417b1d70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417b1e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x417b04d0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x417b04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x417b06b8"/>
        <function-ref name="configure" scoped="" ref="0x417b0798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x417b08f8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x417b08f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417b0ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x417b0bb0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417b0c90"/>
        <function-ref name="dequeue" scoped="" ref="0x417b0d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x417b1448" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x417b1448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417b1630"/>
        <function-ref name="immediateRequest" scoped="" ref="0x417b1710"/>
        <function-ref name="request" scoped="" ref="0x417b17f0"/>
        <function-ref name="granted" scoped="" ref="0x417b18d0"/>
        <function-ref name="isOwner" scoped="" ref="0x417b19b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x417b0010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x417b0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x417b01e8"/>
        <function-ref name="userId" scoped="" ref="0x417b02c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x417b0ef0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x417b0ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x417af0e0"/>
        <function-ref name="runTask" scoped="" ref="0x417af1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x411c3e30" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht15C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411c3e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411c1920"/>
        <function-ref name="fired" scoped="" ref="0x411c2bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411c12e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x411c1088"/>
        <function-ref name="getdt" scoped="" ref="0x411c1dd0"/>
        <function-ref name="gett0" scoped="" ref="0x411c1b78"/>
        <function-ref name="isRunning" scoped="" ref="0x411c2e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411c2468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411c1600"/>
        <function-ref name="startOneShot" scoped="" ref="0x411c26e8"/>
        <function-ref name="stop" scoped="" ref="0x411c2968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411b7220" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411b7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411b73f8"/>
        <function-ref name="stopDone" scoped="" ref="0x411b74d8"/>
        <function-ref name="start" scoped="" ref="0x411b75b8"/>
        <function-ref name="stop" scoped="" ref="0x411b7698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x411b7890" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x411b7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x411b7a78"/>
        <function-ref name="high" scoped="" ref="0x411b7b58"/>
        <function-ref name="Toggle" scoped="" ref="0x411b7c38"/>
        <function-ref name="read" scoped="" ref="0x411b7d18"/>
        <function-ref name="setParam" scoped="" ref="0x411b7df8"/>
        <function-ref name="readDone" scoped="" ref="0x411b7ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411b8ed8" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411b8ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411b70c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411b5d38" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411b5d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411b5f10"/>
        <function-ref name="stopDone" scoped="" ref="0x411b1010"/>
        <function-ref name="start" scoped="" ref="0x411b10f0"/>
        <function-ref name="stop" scoped="" ref="0x411b11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x411b1660" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x411b1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x411b1838"/>
        <function-ref name="high" scoped="" ref="0x411b1918"/>
        <function-ref name="Toggle" scoped="" ref="0x411b19f8"/>
        <function-ref name="read" scoped="" ref="0x411b1ad8"/>
        <function-ref name="setParam" scoped="" ref="0x411b1bb8"/>
        <function-ref name="readDone" scoped="" ref="0x411b1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411b5980" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411b5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411b5b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411b08d0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411b08d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411b0aa8"/>
        <function-ref name="stopDone" scoped="" ref="0x411b0b88"/>
        <function-ref name="start" scoped="" ref="0x411b0c68"/>
        <function-ref name="stop" scoped="" ref="0x411b0d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x411efba8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x411efba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x411ee318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x411ef1e0" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x411ef1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x411ef3b8"/>
        <function-ref name="high" scoped="" ref="0x411ef498"/>
        <function-ref name="Toggle" scoped="" ref="0x411ef578"/>
        <function-ref name="read" scoped="" ref="0x411ef658"/>
        <function-ref name="setParam" scoped="" ref="0x411ef738"/>
        <function-ref name="readDone" scoped="" ref="0x411ef818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read_io" ref="0x411ff408" loc="233:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read_io" scoped="" ref="0x411ff408"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411ff660"/>
        <function-ref name="runTask" scoped="" ref="0x411ff740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411b0538" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411b0538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411b0710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init_io" ref="0x411df978" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init_io" scoped="" ref="0x411df978"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411dfb50"/>
        <function-ref name="runTask" scoped="" ref="0x411dfc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x411ec360" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x411ec360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411ec538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411ec618"/>
        <function-ref name="request" scoped="" ref="0x411ec6f8"/>
        <function-ref name="granted" scoped="" ref="0x411ec7d8"/>
        <function-ref name="isOwner" scoped="" ref="0x411ec8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntPin" ref="0x411ecab8" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x411ecab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411ecc90"/>
        <function-ref name="isInput" scoped="" ref="0x411ecd70"/>
        <function-ref name="toggle" scoped="" ref="0x411ece50"/>
        <function-ref name="isOutput" scoped="" ref="0x411e4010"/>
        <function-ref name="get" scoped="" ref="0x411e40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411e41d0"/>
        <function-ref name="set" scoped="" ref="0x411e42b0"/>
        <function-ref name="clr" scoped="" ref="0x411e4390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_low" ref="0x411d1c58" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_low" scoped="" ref="0x411d1c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411d1e30"/>
        <function-ref name="runTask" scoped="" ref="0x411d1f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_toggle" ref="0x4120ef20" loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_toggle" scoped="" ref="0x4120ef20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4120d110"/>
        <function-ref name="runTask" scoped="" ref="0x4120d1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x411e33f0" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x411e33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411e3a38"/>
        <function-ref name="writeDone" scoped="" ref="0x411edca8"/>
        <function-ref name="write" scoped="" ref="0x411ed068"/>
        <function-ref name="readDone" scoped="" ref="0x411ed688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x411e4608" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x411e4608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411e47e0"/>
        <function-ref name="fired" scoped="" ref="0x411e48c0"/>
        <function-ref name="disable" scoped="" ref="0x411e49a0"/>
        <function-ref name="edge" scoped="" ref="0x411e4a80"/>
        <function-ref name="enable" scoped="" ref="0x411e4b60"/>
        <function-ref name="getValue" scoped="" ref="0x411e4c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_high" ref="0x411d6930" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_high" scoped="" ref="0x411d6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411d6b08"/>
        <function-ref name="runTask" scoped="" ref="0x411d6be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntPin" ref="0x4122a6b0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x4122a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4122a888"/>
        <function-ref name="isInput" scoped="" ref="0x4122a968"/>
        <function-ref name="toggle" scoped="" ref="0x4122aa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4122ab28"/>
        <function-ref name="get" scoped="" ref="0x4122ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122ace8"/>
        <function-ref name="set" scoped="" ref="0x4122adc8"/>
        <function-ref name="clr" scoped="" ref="0x4122aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CResource" ref="0x41224a08" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x41224a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41224be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41224cc0"/>
        <function-ref name="request" scoped="" ref="0x41224da0"/>
        <function-ref name="granted" scoped="" ref="0x41224e80"/>
        <function-ref name="isOwner" scoped="" ref="0x41223010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x41227a88" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x41227a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412260f8"/>
        <function-ref name="writeDone" scoped="" ref="0x41224368"/>
        <function-ref name="write" scoped="" ref="0x41226718"/>
        <function-ref name="readDone" scoped="" ref="0x41226d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x41227198" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x41227198"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41227370"/>
        <function-ref name="fired" scoped="" ref="0x41227450"/>
        <function-ref name="disable" scoped="" ref="0x41227530"/>
        <function-ref name="edge" scoped="" ref="0x41227610"/>
        <function-ref name="enable" scoped="" ref="0x412276f0"/>
        <function-ref name="getValue" scoped="" ref="0x412277d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41222a38" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300DigitalC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41222a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41222c10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41222cf0"/>
        <function-ref name="request" scoped="" ref="0x41222dd0"/>
        <function-ref name="granted" scoped="" ref="0x41222eb0"/>
        <function-ref name="isOwner" scoped="" ref="0x41221010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x41221200" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300DigitalC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x41221200"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41221848"/>
        <function-ref name="writeDone" scoped="" ref="0x412caab8"/>
        <function-ref name="write" scoped="" ref="0x41221e68"/>
        <function-ref name="readDone" scoped="" ref="0x412ca498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4121a658" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4121a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4121a830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4121a910"/>
        <function-ref name="request" scoped="" ref="0x4121a9f0"/>
        <function-ref name="granted" scoped="" ref="0x4121aad0"/>
        <function-ref name="isOwner" scoped="" ref="0x4121abb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x412161b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x412161b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41216800"/>
        <function-ref name="writeDone" scoped="" ref="0x41215a80"/>
        <function-ref name="write" scoped="" ref="0x41216e20"/>
        <function-ref name="readDone" scoped="" ref="0x41215460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41249b58" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41249b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41249d40"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41249e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41248b58" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41248b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41248d40"/>
        <function-ref name="configure" scoped="" ref="0x41248e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41248010" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41248010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412481e8"/>
        <function-ref name="requested" scoped="" ref="0x412482c8"/>
        <function-ref name="granted" scoped="" ref="0x412483a8"/>
        <function-ref name="isOwner" scoped="" ref="0x41248488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41248568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41249418" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41249418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41249600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412496e0"/>
        <function-ref name="request" scoped="" ref="0x412497c0"/>
        <function-ref name="granted" scoped="" ref="0x412498a0"/>
        <function-ref name="isOwner" scoped="" ref="0x41249980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x412486a8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412486a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41248880"/>
        <function-ref name="userId" scoped="" ref="0x41248960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417ea798" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417ea798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417ea970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x417eaad0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x417eaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417eaca8"/>
        <function-ref name="isEmpty" scoped="" ref="0x417ead88"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417eae68"/>
        <function-ref name="dequeue" scoped="" ref="0x417e9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x417e7488" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x417e7488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x417e7670"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417e7750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x417e63f8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x417e63f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x417e65e0"/>
        <function-ref name="configure" scoped="" ref="0x417e66c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x417e6820" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x417e6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417e69f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x417e6ad8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417e6bb8"/>
        <function-ref name="dequeue" scoped="" ref="0x417e6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x417e7890" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x417e7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417e7a68"/>
        <function-ref name="requested" scoped="" ref="0x417e7b48"/>
        <function-ref name="granted" scoped="" ref="0x417e7c28"/>
        <function-ref name="isOwner" scoped="" ref="0x417e7d08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417e7de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x417e6dd8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x417e6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x417e5010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x417e50f0"/>
        <function-ref name="led1On" scoped="" ref="0x417e51d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x417e52b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x417e5390"/>
        <function-ref name="get" scoped="" ref="0x417e5470"/>
        <function-ref name="led1Off" scoped="" ref="0x417e5550"/>
        <function-ref name="led0On" scoped="" ref="0x417e58d0"/>
        <function-ref name="set" scoped="" ref="0x417e5710"/>
        <function-ref name="led2On" scoped="" ref="0x417e5630"/>
        <function-ref name="led2Off" scoped="" ref="0x417e57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x417e9ce8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x417e9ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417e9ed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x417e7010"/>
        <function-ref name="request" scoped="" ref="0x417e70f0"/>
        <function-ref name="granted" scoped="" ref="0x417e71d0"/>
        <function-ref name="isOwner" scoped="" ref="0x417e72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x417e7f28" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x417e7f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x417e6110"/>
        <function-ref name="userId" scoped="" ref="0x417e61f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x417e5a50" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x417e5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x417e5c28"/>
        <function-ref name="runTask" scoped="" ref="0x417e5d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41246230" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41246230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41246408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41246548" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41246548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41246720"/>
        <function-ref name="requested" scoped="" ref="0x41246800"/>
        <function-ref name="granted" scoped="" ref="0x412468e0"/>
        <function-ref name="isOwner" scoped="" ref="0x412469c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41246aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x41247d90" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41247d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41246010"/>
        <function-ref name="stop" scoped="" ref="0x412460f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41246be0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41246be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41246db8"/>
        <function-ref name="userId" scoped="" ref="0x41246e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x41265dd8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x41265dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x41264010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41267f20" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41267f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41266580"/>
        <function-ref name="writeDone" scoped="" ref="0x41265800"/>
        <function-ref name="write" scoped="" ref="0x41266ba0"/>
        <function-ref name="readDone" scoped="" ref="0x412651e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41243010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41243010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412431f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412432d8"/>
        <function-ref name="request" scoped="" ref="0x412433b8"/>
        <function-ref name="granted" scoped="" ref="0x41243498"/>
        <function-ref name="isOwner" scoped="" ref="0x41243578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x41243800" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x41243800"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41243e58"/>
        <function-ref name="writeDone" scoped="" ref="0x41267128"/>
        <function-ref name="write" scoped="" ref="0x41242498"/>
        <function-ref name="readDone" scoped="" ref="0x41242ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x412677a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x412677a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41267990"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41267a70"/>
        <function-ref name="request" scoped="" ref="0x41267b50"/>
        <function-ref name="granted" scoped="" ref="0x41267c30"/>
        <function-ref name="isOwner" scoped="" ref="0x41267d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x412b3d50" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x412b3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x412b3f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x412b20b8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x412b20b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x412b2290"/>
        <function-ref name="sendCommand" scoped="" ref="0x412b2370"/>
        <function-ref name="setStart" scoped="" ref="0x412b2450"/>
        <function-ref name="status" scoped="" ref="0x412b2530"/>
        <function-ref name="hasAcks" scoped="" ref="0x412b2610"/>
        <function-ref name="isEnabled" scoped="" ref="0x412b26f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x412b27d0"/>
        <function-ref name="read" scoped="" ref="0x412b28b0"/>
        <function-ref name="init" scoped="" ref="0x412b2990"/>
        <function-ref name="enableAck" scoped="" ref="0x412b2a70"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x412b2b50"/>
        <function-ref name="hasStart" scoped="" ref="0x412b2c30"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x412b2d10"/>
        <function-ref name="commandComplete" scoped="" ref="0x412b2e70"/>
        <function-ref name="enable" scoped="" ref="0x412b1010"/>
        <function-ref name="write" scoped="" ref="0x412b10f0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x412b11d0"/>
        <function-ref name="off" scoped="" ref="0x412b12b0"/>
        <function-ref name="setStop" scoped="" ref="0x412b1390"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x412b1470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x412b1550"/>
        <function-ref name="hasStop" scoped="" ref="0x412b1630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x412b17b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x412b17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x412b1988"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412b1a68"/>
        <function-ref name="led1On" scoped="" ref="0x412b1b48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412b1c28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x412b1d08"/>
        <function-ref name="get" scoped="" ref="0x412b1de8"/>
        <function-ref name="led1Off" scoped="" ref="0x412b1ec8"/>
        <function-ref name="led2On" scoped="" ref="0x412b02b0"/>
        <function-ref name="set" scoped="" ref="0x412b00f0"/>
        <function-ref name="led2Off" scoped="" ref="0x412b0010"/>
        <function-ref name="led0On" scoped="" ref="0x412b01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x412b0430" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x412b0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x412b0608"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412b06e8"/>
        <function-ref name="led1On" scoped="" ref="0x412b07c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412b08a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x412b0988"/>
        <function-ref name="get" scoped="" ref="0x412b0a68"/>
        <function-ref name="led1Off" scoped="" ref="0x412b0b48"/>
        <function-ref name="led2On" scoped="" ref="0x412b0ec8"/>
        <function-ref name="set" scoped="" ref="0x412b0d08"/>
        <function-ref name="led2Off" scoped="" ref="0x412b0c28"/>
        <function-ref name="led0On" scoped="" ref="0x412b0de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x412639e8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x412639e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41263bc0"/>
        <function-ref name="stop" scoped="" ref="0x41263ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x41263e90" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x41263e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412b44f8"/>
        <function-ref name="writeDone" scoped="" ref="0x412b3778"/>
        <function-ref name="write" scoped="" ref="0x412b4b18"/>
        <function-ref name="readDone" scoped="" ref="0x412b3158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x412ae9b8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x412ae9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x412aeb90"/>
        <function-ref name="sendCommand" scoped="" ref="0x412aec70"/>
        <function-ref name="setStart" scoped="" ref="0x412aed50"/>
        <function-ref name="status" scoped="" ref="0x412aee30"/>
        <function-ref name="hasAcks" scoped="" ref="0x412aef10"/>
        <function-ref name="isEnabled" scoped="" ref="0x412ab010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x412ab0f0"/>
        <function-ref name="read" scoped="" ref="0x412ab1d0"/>
        <function-ref name="init" scoped="" ref="0x412ab2b0"/>
        <function-ref name="enableAck" scoped="" ref="0x412ab390"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x412ab470"/>
        <function-ref name="hasStart" scoped="" ref="0x412ab550"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x412ab630"/>
        <function-ref name="commandComplete" scoped="" ref="0x412ab790"/>
        <function-ref name="enable" scoped="" ref="0x412ab870"/>
        <function-ref name="write" scoped="" ref="0x412ab950"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x412aba30"/>
        <function-ref name="off" scoped="" ref="0x412abb10"/>
        <function-ref name="setStop" scoped="" ref="0x412abbf0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x412abcd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x412abdb0"/>
        <function-ref name="hasStop" scoped="" ref="0x412abe90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x412aaa88" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x412aaa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x412aac60"/>
        <function-ref name="sendCommand" scoped="" ref="0x412aad40"/>
        <function-ref name="setStart" scoped="" ref="0x412aae20"/>
        <function-ref name="status" scoped="" ref="0x412aaf00"/>
        <function-ref name="hasAcks" scoped="" ref="0x412a7010"/>
        <function-ref name="isEnabled" scoped="" ref="0x412a70f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x412a71d0"/>
        <function-ref name="read" scoped="" ref="0x412a72b0"/>
        <function-ref name="init" scoped="" ref="0x412a7390"/>
        <function-ref name="enableAck" scoped="" ref="0x412a7470"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x412a7550"/>
        <function-ref name="hasStart" scoped="" ref="0x412a7630"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x412a7710"/>
        <function-ref name="commandComplete" scoped="" ref="0x412a7870"/>
        <function-ref name="enable" scoped="" ref="0x412a7950"/>
        <function-ref name="write" scoped="" ref="0x412a7a30"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x412a7b10"/>
        <function-ref name="off" scoped="" ref="0x412a7bf0"/>
        <function-ref name="setStop" scoped="" ref="0x412a7cd0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x412a7db0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x412a7e90"/>
        <function-ref name="hasStop" scoped="" ref="0x412a6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x412a6240" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x412a6240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412a6418"/>
        <function-ref name="isInput" scoped="" ref="0x412a64f8"/>
        <function-ref name="toggle" scoped="" ref="0x412a65d8"/>
        <function-ref name="isOutput" scoped="" ref="0x412a66b8"/>
        <function-ref name="get" scoped="" ref="0x412a6798"/>
        <function-ref name="makeOutput" scoped="" ref="0x412a6878"/>
        <function-ref name="set" scoped="" ref="0x412a6958"/>
        <function-ref name="clr" scoped="" ref="0x412a6a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x412a6c40" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x412a6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412a6e18"/>
        <function-ref name="isInput" scoped="" ref="0x412a6ef8"/>
        <function-ref name="toggle" scoped="" ref="0x412a5010"/>
        <function-ref name="isOutput" scoped="" ref="0x412a50f0"/>
        <function-ref name="get" scoped="" ref="0x412a51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x412a52b0"/>
        <function-ref name="set" scoped="" ref="0x412a5390"/>
        <function-ref name="clr" scoped="" ref="0x412a5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x412c9c60" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplMDA300DigitalC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x412c9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x412c7790"/>
        <function-ref name="fired" scoped="" ref="0x412c8a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x412c7150"/>
        <function-ref name="isOneShot" scoped="" ref="0x412c8ed0"/>
        <function-ref name="getdt" scoped="" ref="0x412c7c40"/>
        <function-ref name="gett0" scoped="" ref="0x412c79e8"/>
        <function-ref name="isRunning" scoped="" ref="0x412c8c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x412c82c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x412c7470"/>
        <function-ref name="startOneShot" scoped="" ref="0x412c8548"/>
        <function-ref name="stop" scoped="" ref="0x412c87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412c1918" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412c1918"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412c1af0"/>
        <function-ref name="stopDone" scoped="" ref="0x412c1bd0"/>
        <function-ref name="start" scoped="" ref="0x412c1cb0"/>
        <function-ref name="stop" scoped="" ref="0x412c1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x41383c10" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x41383c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x41383de8"/>
        <function-ref name="off" scoped="" ref="0x41383ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412c1600" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412c1600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412c17d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x41383010" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x41383010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413831f8"/>
        <function-ref name="readDone" scoped="" ref="0x413832d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x413834b0" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x413834b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x41383698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x41382050" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x41382050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x41382228"/>
        <function-ref name="off" scoped="" ref="0x41382308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x413837f8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x413837f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x413839d0"/>
        <function-ref name="off" scoped="" ref="0x41383ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412bda48" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412bda48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412bdc20"/>
        <function-ref name="stopDone" scoped="" ref="0x412bdd00"/>
        <function-ref name="start" scoped="" ref="0x412bdde0"/>
        <function-ref name="stop" scoped="" ref="0x412bdec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x412fe3c8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x412fe3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x412fe5a0"/>
        <function-ref name="off" scoped="" ref="0x412fe680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412bd6b0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412bd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412bd888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x412ff3b8" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x412ff3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412ff590"/>
        <function-ref name="readDone" scoped="" ref="0x412ff670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x412ffb00" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x412ffb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x412ffcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x412fe888" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x412fe888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x412fea60"/>
        <function-ref name="off" scoped="" ref="0x412feb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x412ffee0" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x412ffee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x412fe0e0"/>
        <function-ref name="off" scoped="" ref="0x412fe1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBuffer" ref="0x412f86d8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x412f86d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412f88b0"/>
        <function-ref name="isInput" scoped="" ref="0x412f8990"/>
        <function-ref name="toggle" scoped="" ref="0x412f8a70"/>
        <function-ref name="isOutput" scoped="" ref="0x412f8b50"/>
        <function-ref name="get" scoped="" ref="0x412f8c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x412f8d10"/>
        <function-ref name="set" scoped="" ref="0x412f8df0"/>
        <function-ref name="clr" scoped="" ref="0x412f8ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation33" ref="0x412f9b98" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x412f9b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412f9d70"/>
        <function-ref name="isInput" scoped="" ref="0x412f9e50"/>
        <function-ref name="toggle" scoped="" ref="0x412f8010"/>
        <function-ref name="isOutput" scoped="" ref="0x412f80f0"/>
        <function-ref name="get" scoped="" ref="0x412f81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x412f82b0"/>
        <function-ref name="set" scoped="" ref="0x412f8390"/>
        <function-ref name="clr" scoped="" ref="0x412f8470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerStabalizingTimer" ref="0x412f2010" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x412f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x412f1b78"/>
        <function-ref name="fired" scoped="" ref="0x412f2e10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x412f1538"/>
        <function-ref name="isOneShot" scoped="" ref="0x412f12e0"/>
        <function-ref name="getdt" scoped="" ref="0x412ef048"/>
        <function-ref name="gett0" scoped="" ref="0x412f1dd0"/>
        <function-ref name="isRunning" scoped="" ref="0x412f1088"/>
        <function-ref name="startPeriodic" scoped="" ref="0x412f26b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x412f1858"/>
        <function-ref name="startOneShot" scoped="" ref="0x412f2938"/>
        <function-ref name="stop" scoped="" ref="0x412f2bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x412fa718" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x412fa718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x412fa8f0"/>
        <function-ref name="off" scoped="" ref="0x412fa9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x412fd708" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x412fd708"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412fd8e0"/>
        <function-ref name="readDone" scoped="" ref="0x412fd9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x412fde50" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x412fde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x412fa050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation50" ref="0x412f9150" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x412f9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412f9328"/>
        <function-ref name="isInput" scoped="" ref="0x412f9408"/>
        <function-ref name="toggle" scoped="" ref="0x412f94e8"/>
        <function-ref name="isOutput" scoped="" ref="0x412f95c8"/>
        <function-ref name="get" scoped="" ref="0x412f96a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x412f9788"/>
        <function-ref name="set" scoped="" ref="0x412f9868"/>
        <function-ref name="clr" scoped="" ref="0x412f9948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBooster" ref="0x412f7170" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x412f7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412f7348"/>
        <function-ref name="isInput" scoped="" ref="0x412f7428"/>
        <function-ref name="toggle" scoped="" ref="0x412f7508"/>
        <function-ref name="isOutput" scoped="" ref="0x412f75e8"/>
        <function-ref name="get" scoped="" ref="0x412f76c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x412f77a8"/>
        <function-ref name="set" scoped="" ref="0x412f7888"/>
        <function-ref name="clr" scoped="" ref="0x412f7968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Switch" ref="0x412eb6a8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x412eb6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x412eb880"/>
        <function-ref name="get" scoped="" ref="0x412eb960"/>
        <function-ref name="getDone" scoped="" ref="0x412eba40"/>
        <function-ref name="setAll" scoped="" ref="0x412ebb20"/>
        <function-ref name="set" scoped="" ref="0x412ebc00"/>
        <function-ref name="setAllDone" scoped="" ref="0x412ebce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x412f3708" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x412f3708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412f38e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412f39c0"/>
        <function-ref name="request" scoped="" ref="0x412f3aa0"/>
        <function-ref name="granted" scoped="" ref="0x412f3b80"/>
        <function-ref name="isOwner" scoped="" ref="0x412f3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x412ebe70" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x412ebe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x412ee070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412ee150"/>
        <function-ref name="led1On" scoped="" ref="0x412ee230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412ee310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x412ee3f0"/>
        <function-ref name="get" scoped="" ref="0x412ee4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x412ee5b0"/>
        <function-ref name="led2Off" scoped="" ref="0x412ee930"/>
        <function-ref name="set" scoped="" ref="0x412ee690"/>
        <function-ref name="led0On" scoped="" ref="0x412ee770"/>
        <function-ref name="led2On" scoped="" ref="0x412ee850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x412fabd8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x412fabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x412fadb0"/>
        <function-ref name="off" scoped="" ref="0x412fae90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x412fa258" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x412fa258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x412fa430"/>
        <function-ref name="off" scoped="" ref="0x412fa510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Amplifier" ref="0x412f7ba8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x412f7ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412f7d80"/>
        <function-ref name="isInput" scoped="" ref="0x412f7e60"/>
        <function-ref name="toggle" scoped="" ref="0x412f6010"/>
        <function-ref name="isOutput" scoped="" ref="0x412f60f0"/>
        <function-ref name="get" scoped="" ref="0x412f61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x412f62b0"/>
        <function-ref name="set" scoped="" ref="0x412f6390"/>
        <function-ref name="clr" scoped="" ref="0x412f6470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x412f6748" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x412f6748"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412f6d90"/>
        <function-ref name="writeDone" scoped="" ref="0x412f3048"/>
        <function-ref name="write" scoped="" ref="0x412f43c8"/>
        <function-ref name="readDone" scoped="" ref="0x412f49e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adc_get_data" ref="0x4131bbd8" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adc_get_data" scoped="" ref="0x4131bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4131bdb0"/>
        <function-ref name="runTask" scoped="" ref="0x4131be90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SwitchControl" ref="0x4133a010" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <component-ref qname="MDA300IBADCSwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x4133a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4133a1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x4133a2c8"/>
        <function-ref name="start" scoped="" ref="0x4133a3a8"/>
        <function-ref name="stop" scoped="" ref="0x4133a488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Switch" ref="0x4133a608" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <component-ref qname="MDA300IBADCSwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x4133a608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x4133a7e0"/>
        <function-ref name="get" scoped="" ref="0x4133a8c0"/>
        <function-ref name="getDone" scoped="" ref="0x4133a9a0"/>
        <function-ref name="setAll" scoped="" ref="0x4133aa80"/>
        <function-ref name="set" scoped="" ref="0x4133ab60"/>
        <function-ref name="setAllDone" scoped="" ref="0x4133ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41339520" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MDA300IBADCSwitchC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41339520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413396f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413397d8"/>
        <function-ref name="request" scoped="" ref="0x413398b8"/>
        <function-ref name="granted" scoped="" ref="0x41339998"/>
        <function-ref name="isOwner" scoped="" ref="0x41339a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x41339c68" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MDA300IBADCSwitchC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x41339c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413382e8"/>
        <function-ref name="writeDone" scoped="" ref="0x41337558"/>
        <function-ref name="write" scoped="" ref="0x41338908"/>
        <function-ref name="readDone" scoped="" ref="0x41338f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SwitchControl" ref="0x413366f8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x413366f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413368d0"/>
        <function-ref name="stopDone" scoped="" ref="0x413369b0"/>
        <function-ref name="start" scoped="" ref="0x41336a90"/>
        <function-ref name="stop" scoped="" ref="0x41336b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Switch" ref="0x41336cf0" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x41336cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x41336ec8"/>
        <function-ref name="get" scoped="" ref="0x41333010"/>
        <function-ref name="getDone" scoped="" ref="0x413330f0"/>
        <function-ref name="setAll" scoped="" ref="0x413331d0"/>
        <function-ref name="set" scoped="" ref="0x413332b0"/>
        <function-ref name="setAllDone" scoped="" ref="0x41333390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x413335e8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x413335e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413337c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413338a0"/>
        <function-ref name="request" scoped="" ref="0x41333980"/>
        <function-ref name="granted" scoped="" ref="0x41333a60"/>
        <function-ref name="isOwner" scoped="" ref="0x41333b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x41333e18" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x41333e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41331488"/>
        <function-ref name="writeDone" scoped="" ref="0x41330748"/>
        <function-ref name="write" scoped="" ref="0x41331aa8"/>
        <function-ref name="readDone" scoped="" ref="0x41330128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x413346c8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x413346c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413348a0"/>
        <function-ref name="stopDone" scoped="" ref="0x41334980"/>
        <function-ref name="start" scoped="" ref="0x41334a60"/>
        <function-ref name="stop" scoped="" ref="0x41334b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageBuffer" ref="0x41364338" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x41364338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41364510"/>
        <function-ref name="isInput" scoped="" ref="0x413645f0"/>
        <function-ref name="toggle" scoped="" ref="0x413646d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413647b0"/>
        <function-ref name="get" scoped="" ref="0x41364890"/>
        <function-ref name="makeOutput" scoped="" ref="0x41364970"/>
        <function-ref name="set" scoped="" ref="0x41364a50"/>
        <function-ref name="clr" scoped="" ref="0x41364b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Exitation33" ref="0x41365860" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x41365860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41365a38"/>
        <function-ref name="isInput" scoped="" ref="0x41365b18"/>
        <function-ref name="toggle" scoped="" ref="0x41365bf8"/>
        <function-ref name="isOutput" scoped="" ref="0x41365cd8"/>
        <function-ref name="get" scoped="" ref="0x41365db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41365e98"/>
        <function-ref name="set" scoped="" ref="0x41364010"/>
        <function-ref name="clr" scoped="" ref="0x413640f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerStabalizingTimer" ref="0x4135fbd8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x4135fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4135d6d8"/>
        <function-ref name="fired" scoped="" ref="0x4135e970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4135d098"/>
        <function-ref name="isOneShot" scoped="" ref="0x4135ee20"/>
        <function-ref name="getdt" scoped="" ref="0x4135db88"/>
        <function-ref name="gett0" scoped="" ref="0x4135d930"/>
        <function-ref name="isRunning" scoped="" ref="0x4135ebc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4135e218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4135d3b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4135e498"/>
        <function-ref name="stop" scoped="" ref="0x4135e718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41334330" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41334330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41334508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Exitation50" ref="0x41334d70" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x41334d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41365010"/>
        <function-ref name="isInput" scoped="" ref="0x413650f0"/>
        <function-ref name="toggle" scoped="" ref="0x413651d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413652b0"/>
        <function-ref name="get" scoped="" ref="0x41365390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41365470"/>
        <function-ref name="set" scoped="" ref="0x41365550"/>
        <function-ref name="clr" scoped="" ref="0x41365630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageBooster" ref="0x41364d80" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x41364d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41363010"/>
        <function-ref name="isInput" scoped="" ref="0x413630f0"/>
        <function-ref name="toggle" scoped="" ref="0x413631d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413632b0"/>
        <function-ref name="get" scoped="" ref="0x41363390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41363470"/>
        <function-ref name="set" scoped="" ref="0x41363550"/>
        <function-ref name="clr" scoped="" ref="0x41363630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CResource" ref="0x4135f340" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x4135f340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4135f518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4135f5f8"/>
        <function-ref name="request" scoped="" ref="0x4135f6d8"/>
        <function-ref name="granted" scoped="" ref="0x4135f7b8"/>
        <function-ref name="isOwner" scoped="" ref="0x4135f898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchControl" ref="0x4135def0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x4135def0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4135c0e0"/>
        <function-ref name="stopDone" scoped="" ref="0x4135c1c0"/>
        <function-ref name="start" scoped="" ref="0x4135c2a0"/>
        <function-ref name="stop" scoped="" ref="0x4135c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Amplifier" ref="0x41363850" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x41363850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41363a28"/>
        <function-ref name="isInput" scoped="" ref="0x41363b08"/>
        <function-ref name="toggle" scoped="" ref="0x41363be8"/>
        <function-ref name="isOutput" scoped="" ref="0x41363cc8"/>
        <function-ref name="get" scoped="" ref="0x41363da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41363e88"/>
        <function-ref name="set" scoped="" ref="0x41362010"/>
        <function-ref name="clr" scoped="" ref="0x413620f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x413623a8" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x413623a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413629f0"/>
        <function-ref name="writeDone" scoped="" ref="0x41361c88"/>
        <function-ref name="write" scoped="" ref="0x41361048"/>
        <function-ref name="readDone" scoped="" ref="0x41361668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4135b030" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300IBADCC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4135b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4135b208"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4135b2e8"/>
        <function-ref name="request" scoped="" ref="0x4135b3c8"/>
        <function-ref name="granted" scoped="" ref="0x4135b4a8"/>
        <function-ref name="isOwner" scoped="" ref="0x4135b588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x4135b778" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300IBADCC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4135b778"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4135bdc0"/>
        <function-ref name="writeDone" scoped="" ref="0x41358068"/>
        <function-ref name="write" scoped="" ref="0x41359400"/>
        <function-ref name="readDone" scoped="" ref="0x41359a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x413571e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplMDA300IBADCC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x413571e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337350"/>
            <typename><typedef-ref name="TMilli" ref="0x40337518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41356d58"/>
        <function-ref name="fired" scoped="" ref="0x41356010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41356718"/>
        <function-ref name="isOneShot" scoped="" ref="0x413564c0"/>
        <function-ref name="getdt" scoped="" ref="0x41355268"/>
        <function-ref name="gett0" scoped="" ref="0x41355010"/>
        <function-ref name="isRunning" scoped="" ref="0x41356268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41357810"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41356a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x41357a90"/>
        <function-ref name="stop" scoped="" ref="0x41357d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x413503c8" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x413503c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413505a0"/>
        <function-ref name="stopDone" scoped="" ref="0x41350680"/>
        <function-ref name="start" scoped="" ref="0x41350760"/>
        <function-ref name="stop" scoped="" ref="0x41350840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBuffer" ref="0x4134e010" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x4134e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4134e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4134e2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4134e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4134e488"/>
        <function-ref name="get" scoped="" ref="0x4134e568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4134e648"/>
        <function-ref name="set" scoped="" ref="0x4134e728"/>
        <function-ref name="clr" scoped="" ref="0x4134e808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation33" ref="0x4134f500" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x4134f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4134f6d8"/>
        <function-ref name="isInput" scoped="" ref="0x4134f7b8"/>
        <function-ref name="toggle" scoped="" ref="0x4134f898"/>
        <function-ref name="isOutput" scoped="" ref="0x4134f978"/>
        <function-ref name="get" scoped="" ref="0x4134fa58"/>
        <function-ref name="makeOutput" scoped="" ref="0x4134fb38"/>
        <function-ref name="set" scoped="" ref="0x4134fc18"/>
        <function-ref name="clr" scoped="" ref="0x4134fcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41350010" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41350010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413501e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation50" ref="0x41350a90" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x41350a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41350c68"/>
        <function-ref name="isInput" scoped="" ref="0x41350d48"/>
        <function-ref name="toggle" scoped="" ref="0x41350e28"/>
        <function-ref name="isOutput" scoped="" ref="0x41350f08"/>
        <function-ref name="get" scoped="" ref="0x4134f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4134f0f0"/>
        <function-ref name="set" scoped="" ref="0x4134f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4134f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBooster" ref="0x4134ea78" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x4134ea78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4134ec50"/>
        <function-ref name="isInput" scoped="" ref="0x4134ed30"/>
        <function-ref name="toggle" scoped="" ref="0x4134ee10"/>
        <function-ref name="isOutput" scoped="" ref="0x4134eef0"/>
        <function-ref name="get" scoped="" ref="0x4134d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4134d0f0"/>
        <function-ref name="set" scoped="" ref="0x4134d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4134d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchControl" ref="0x4134c998" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x4134c998"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4134cb70"/>
        <function-ref name="stopDone" scoped="" ref="0x4134cc50"/>
        <function-ref name="start" scoped="" ref="0x4134cd30"/>
        <function-ref name="stop" scoped="" ref="0x4134ce10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x4134df00" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x4134df00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4134c0f0"/>
        <function-ref name="isInput" scoped="" ref="0x4134c1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4134c2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4134c390"/>
        <function-ref name="get" scoped="" ref="0x4134c470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4134c550"/>
        <function-ref name="set" scoped="" ref="0x4134c630"/>
        <function-ref name="clr" scoped="" ref="0x4134c710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Amplifier" ref="0x4134d4f0" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x4134d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4134d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4134d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4134d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4134d968"/>
        <function-ref name="get" scoped="" ref="0x4134da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4134db28"/>
        <function-ref name="set" scoped="" ref="0x4134dc08"/>
        <function-ref name="clr" scoped="" ref="0x4134dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x4137b988" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x4137b988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4137bb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4137a350" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4137a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x4137a528"/>
        <function-ref name="high" scoped="" ref="0x4137a608"/>
        <function-ref name="Toggle" scoped="" ref="0x4137a6e8"/>
        <function-ref name="read" scoped="" ref="0x4137a7c8"/>
        <function-ref name="setParam" scoped="" ref="0x4137a8a8"/>
        <function-ref name="readDone" scoped="" ref="0x4137a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x4137bce0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x4137bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4137beb8"/>
        <function-ref name="stopDone" scoped="" ref="0x4137a010"/>
        <function-ref name="start" scoped="" ref="0x4137a0f0"/>
        <function-ref name="stop" scoped="" ref="0x4137a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x41378e10" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x41378e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41374010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41374900" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41374900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41374ad8"/>
        <function-ref name="high" scoped="" ref="0x41374bb8"/>
        <function-ref name="Toggle" scoped="" ref="0x41374c98"/>
        <function-ref name="read" scoped="" ref="0x41374d78"/>
        <function-ref name="setParam" scoped="" ref="0x41374e58"/>
        <function-ref name="readDone" scoped="" ref="0x41373010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x413742a0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x413742a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41374478"/>
        <function-ref name="stopDone" scoped="" ref="0x41374558"/>
        <function-ref name="start" scoped="" ref="0x41374638"/>
        <function-ref name="stop" scoped="" ref="0x41374718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x4136e128" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x4136e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40337bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40337d98"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x4136e878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x4136c010" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x4136c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4136c1e8"/>
        <function-ref name="fired" scoped="" ref="0x4136c2c8"/>
        <function-ref name="disable" scoped="" ref="0x4136c3a8"/>
        <function-ref name="edge" scoped="" ref="0x4136c488"/>
        <function-ref name="enable" scoped="" ref="0x4136c568"/>
        <function-ref name="getValue" scoped="" ref="0x4136c648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="count_ready" ref="0x413a6c28" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="count_ready" scoped="" ref="0x413a6c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413a6e00"/>
        <function-ref name="runTask" scoped="" ref="0x413a6ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x41373c78" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x41373c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41373e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41370730" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41370730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41370908"/>
        <function-ref name="high" scoped="" ref="0x413709e8"/>
        <function-ref name="Toggle" scoped="" ref="0x41370ac8"/>
        <function-ref name="read" scoped="" ref="0x41370ba8"/>
        <function-ref name="setParam" scoped="" ref="0x41370c88"/>
        <function-ref name="readDone" scoped="" ref="0x41370d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x413700f0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x413700f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413702c8"/>
        <function-ref name="stopDone" scoped="" ref="0x413703a8"/>
        <function-ref name="start" scoped="" ref="0x41370488"/>
        <function-ref name="stop" scoped="" ref="0x41370568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4136f308" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4136f308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4136f4e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4136f5c0"/>
        <function-ref name="led1On" scoped="" ref="0x4136f6a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4136f780"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4136f860"/>
        <function-ref name="get" scoped="" ref="0x4136f940"/>
        <function-ref name="led1Off" scoped="" ref="0x4136fa20"/>
        <function-ref name="led2Off" scoped="" ref="0x4136fda0"/>
        <function-ref name="set" scoped="" ref="0x4136fb00"/>
        <function-ref name="led0On" scoped="" ref="0x4136fbe0"/>
        <function-ref name="led2On" scoped="" ref="0x4136fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntPin" ref="0x4136eb70" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x4136eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4136ed48"/>
        <function-ref name="isInput" scoped="" ref="0x4136ee28"/>
        <function-ref name="toggle" scoped="" ref="0x4136ef08"/>
        <function-ref name="isOutput" scoped="" ref="0x4136d010"/>
        <function-ref name="get" scoped="" ref="0x4136d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4136d1d0"/>
        <function-ref name="set" scoped="" ref="0x4136d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4136d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x4136d588" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x4136d588"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4136d760"/>
        <function-ref name="isInput" scoped="" ref="0x4136d840"/>
        <function-ref name="toggle" scoped="" ref="0x4136d920"/>
        <function-ref name="isOutput" scoped="" ref="0x4136da00"/>
        <function-ref name="get" scoped="" ref="0x4136dae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4136dbc0"/>
        <function-ref name="set" scoped="" ref="0x4136dca0"/>
        <function-ref name="clr" scoped="" ref="0x4136dd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntPin" ref="0x4139d010" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x4139d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4139d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4139d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4139d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4139d488"/>
        <function-ref name="get" scoped="" ref="0x4139d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4139d648"/>
        <function-ref name="set" scoped="" ref="0x4139d728"/>
        <function-ref name="clr" scoped="" ref="0x4139d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x4139da00" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x4139da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4139dbd8"/>
        <function-ref name="isInput" scoped="" ref="0x4139dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x4139dd98"/>
        <function-ref name="isOutput" scoped="" ref="0x4139de78"/>
        <function-ref name="get" scoped="" ref="0x4139c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4139c0f0"/>
        <function-ref name="set" scoped="" ref="0x4139c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4139c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x4139c528" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x4139c528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4139c700"/>
        <function-ref name="fired" scoped="" ref="0x4139c7e0"/>
        <function-ref name="disable" scoped="" ref="0x4139c8c0"/>
        <function-ref name="edge" scoped="" ref="0x4139c9a0"/>
        <function-ref name="enable" scoped="" ref="0x4139ca80"/>
        <function-ref name="getValue" scoped="" ref="0x4139cb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4139bb10" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300CounterC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4139bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4139bce8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4139bdc8"/>
        <function-ref name="request" scoped="" ref="0x4139bea8"/>
        <function-ref name="granted" scoped="" ref="0x41399010"/>
        <function-ref name="isOwner" scoped="" ref="0x413990f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x413992e0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300CounterC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x413992e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x411eebd0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x411eed38"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41399928"/>
        <function-ref name="writeDone" scoped="" ref="0x41398c50"/>
        <function-ref name="write" scoped="" ref="0x41398010"/>
        <function-ref name="readDone" scoped="" ref="0x41398630"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4038ca70" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40387e18" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4038e508" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x4038e3b0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4038ab50" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4038f1c0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4038f068" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4038f888" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4038f730" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4038fde0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403a03e0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403a07c8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4039cb70" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4039f010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403a0010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403a0ba0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4039c430" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4039c7c0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402e88b0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402eb1c8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402e8cf0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402f2138" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402f2650" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403627e8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40376280" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40321bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40359cb8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataQueueManage" loc="3:DataQueueManage.nc">
      <function command="" provided="0" name="addToQueue" ref="0x404b3da8" loc="5:DataQueueManage.nc">
        <interfacedef-ref qname="DataQueueManage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x404b3aa8" loc="5:DataQueueManage.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable ref="0x404b3c48" loc="5:DataQueueManage.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="addLocalDataToQueue" ref="0x404b01c8" loc="7:DataQueueManage.nc">
        <interfacedef-ref qname="DataQueueManage"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404bbd58" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404bbc00" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404baae0" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404ba988" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404bb518" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404ba2a8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404ee818" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404ee818"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x404eecf8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404d46f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404d46f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x404e3f00" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404e5ca0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x404e4e08" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404e4ac0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404e4ca8" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404e4618" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x404e2888" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x404e2358" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404e4158" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x404d4d48" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404d4bf0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x404e38e0" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404e3598" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404e3780" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404e5408" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404e52b0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404e58d8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x404f8cf0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x404f8848" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404d2590" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404d2030" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404d2248" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404d2428" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404dc208" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404dee78" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404dc088" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404de918" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404d1240" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d10e8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404de010" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d1bd8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404d1dd0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x404f7718" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x404f7718"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x404f7d68" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x404f7718"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x404f7c10" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x404f7718"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TDMASchedule" loc="3:TDMASchedule.nc">
      <function command="" provided="0" name="allocChildTimeSlot" ref="0x40500e18" loc="21:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x4048c8b8"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x4048b0d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node_id" ref="0x40500a58" loc="21:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="local" ref="0x40500cb8" loc="21:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x4048c8b8"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x4048b0d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPPB" ref="0x404f6ea8" loc="7:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x4048bf18"/>
                  <typename><typedef-ref name="dozer_parent_t" ref="0x40489cc0"/></typename>
                </type-tag>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="gparent" ref="0x404f6d50" loc="7:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x4048bf18"/>
                  <typename><typedef-ref name="dozer_parent_t" ref="0x40489cc0"/></typename>
                </type-tag>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="radioWakeup" ref="0x404ff590" loc="23:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x404ff218" loc="23:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="node_id" ref="0x404ff430" loc="23:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBeaconTimeStamp" ref="0x40500010" loc="17:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timestamp" ref="0x404f4de0" loc="17:TDMASchedule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParentTDMASlot" ref="0x40500598" loc="19:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tslot" ref="0x40500440" loc="19:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPPB" ref="0x404f68b0" loc="5:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x4048bf18"/>
                <typename><typedef-ref name="dozer_parent_t" ref="0x40489cc0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Index" ref="0x404f6308" loc="5:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="ppb" ref="0x404f6550" loc="5:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x4048bf18"/>
                <typename><typedef-ref name="dozer_parent_t" ref="0x40489cc0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x404f6748" loc="5:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stopTimers" ref="0x404f56e8" loc="11:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setParentTimeStamp" ref="0x404f4970" loc="15:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x4048c8b8"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x4048b0d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node_id" ref="0x404f4380" loc="15:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="bmsg" ref="0x404f45d8" loc="15:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x4048c8b8"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x4048b0d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="timestamp" ref="0x404f4808" loc="15:TDMASchedule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startTimers" ref="0x404f52e8" loc="9:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTableEntry" ref="0x404f5ec8" loc="13:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node_id" ref="0x404f5b68" loc="13:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x404f5d68" loc="13:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40508cf0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40506158" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x405065d8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40506e48" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40505b60" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40504038" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40506a00" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40504778" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40504620" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x405088c8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x405052f0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40505718" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x404b8dd8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
              <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b8890" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404b8a70" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404b8c50" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <function command="" provided="0" name="group" ref="0x404d5648" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404be818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404d54f0" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x404ce010" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404cfe20" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x404d0ec0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x404cf578" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404cf420" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x404cb8f8" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404cb590" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404cb798" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x404cebf8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404ce890" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404cea98" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x404ca010" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404ccea0" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x404cab48" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404ca818" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404ca9e8" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x404cc4c0" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404cc368" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x404d6370" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404be818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404d6010" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x404d6210" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404be818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x404d6be8" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404be818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x4057b3e8" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4057b3e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4057b550" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057b550"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x4058c748" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057b550"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058c5f0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x4057d200" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057d0a8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x4057bbd8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057ba80" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4057dcc0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057b550"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057d950" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4057db60" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057b550"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x405705e0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40570488" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4056f010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40570e58" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4056d010" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057cc58" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4057ce38" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4057c670" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4056fc70" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056f930" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4056fb10" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x40576920" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x40580010" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40582e90" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x4057f268" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x4057f110" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x40584668" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x40584ef0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40584b28" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x40584d90" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x40584010" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x40576dd8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x40582518" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40582188" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x405823b8" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x40580a10" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x405808b8" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x405839c0" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40583868" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x405762f0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x40576198" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x405717f0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40571698" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40578300" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405781a8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40578d88" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40578c30" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x4059fe20" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4059fe20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x405ac168" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ac010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405adad0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4059fe20"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ad978" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x405ad4b0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ad358" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405ac910" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4059fe20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ac598" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x405ac7b0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4059fe20"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x405c4dc8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x405c5cf0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x405b8a08" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x405c5168" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c5010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x405c3350" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x405c4340" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="timerTick" ref="0x405c37b0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This command is periodically called when the timer is fired and&#10; the averages are updated&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x405c57e0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c5688" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x405c4888" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x405d1f20" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x405d0540" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x405cfb40" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cf9e8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timerTick" ref="0x405ce010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This event should be called periodically to indicate the passing of&#10; time (maybe we should use a timer)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x405d0c88" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d0b30" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x405cf398" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cf240" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
      <function command="" provided="0" name="checkPacket" ref="0x405cd188" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
          <short>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command.</short>
          <long>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command. This should clear the packet if the user&#10; forgot to do so (or return EINVAL to be strict).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cd030" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x405cdc90" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x405b1d88" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b1c30" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x405b94c8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x405b9010" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405bbc70" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405bbe88" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405bd7a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bd648" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x405bc6b8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bc560" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x405bb010" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405bcc78" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405bce90" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x405bd0c8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckReceived" ref="0x405bc060" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Sets for the transmitted message whether it was acknowledged or not.</short>
          <long>&#10; Sets for the transmitted message whether it was acknowledged or not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bdd00" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="acked" ref="0x405bdee0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405bb728" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bb5d0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IEEE154Packet" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x405d3780" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d3628" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x405d49c8" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d4870" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x405c9890" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c9540" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x405c9730" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x405d9c68" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d9b10" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set6LowPan" ref="0x405e1ab0" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the value of the 6LowPan network field.</short>
          <long>&#10; Sets the value of the 6LowPan network field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e1748" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="network" ref="0x405e1950" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x405e2c70" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e2910" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405e2b10" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x405d95d0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d9478" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x405d3170" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d4e00" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x405d3010" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x405d8c08" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405d8890" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405d8aa8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x405c7bf0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the IEEE 802.15.4 header including the length field.</short>
          <long>&#10; Returns the IEEE 802.15.4 header including the length field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="ieee154_header_t" ref="0x404afe40"/>
              <typename><typedef-ref name="ieee154_header_t" ref="0x404b7e40"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c7a78" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x405e2498" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e2340" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x405c9ef8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c9da0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x405e0980" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="181:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the active message type&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e0630" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x405e0820" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x405d7be0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d7a88" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x405d7530" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405d71b8" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405d73d0" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x405caa70" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ca710" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x405ca910" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get6LowPan" ref="0x405e12a0" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the value of the 6LowPan network field.</short>
          <long>&#10; Returns the value of the 6LowPan network field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e1148" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405de010" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e0e38" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x405d2e20" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d2ac0" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405d2cc0" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x405d8350" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d81f8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x405d43b8" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d4068" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x405d4258" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0x405ca2a0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the raw value (unadjusted) of the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ca148" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x405d2010" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d3c18" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x405d3e08" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x405d6410" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d60e8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405d62b0" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x405c9088" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405caef8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x405e01e0" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the active message type of the message&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404be5c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e0088" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405de720" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="192:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405de5c8" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x405d2640" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d24e8" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x405d6b40" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d69e8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x405ec2e8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x405dda78" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x405dd920" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405ddec0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x405dd400" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x405ec790" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x405b76e0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b7380" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x405b7580" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x405b7b78" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x405b2848" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b26f0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x405b2e90" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b2d38" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x405c1380" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c1228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x405c8c90" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c8b38" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x405c1878" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x405d1010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c1dd8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230Config" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <short>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.</short>
        <long>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeaderLength" ref="0x405b0d38" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The last touch event is not signaled &#10; for packets whose length is less than or equal to this header length.&#10; The header length must be at least 1.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x405afea8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405afd50" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405b07b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes.</short>
          <long>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes. The FCF field (CRC-16) is not stored,&#10; but automatically appended / verified.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b0640" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x405b0170" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Sets the length of the PHY payload.</short>
          <long>&#10; Sets the length of the PHY payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b3da0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405b0010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0x405b38b8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the length of the PHY payload (including the FCF field).</short>
          <long>&#10; Returns the length of the PHY payload (including the FCF field).&#10; This value must be in the range [3, 127].&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b3760" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxLength" ref="0x405af348" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the maximum PHY length that can be set via the setLength command&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultChannel" ref="0x405af810" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; This command is used at power up to set the default channel.</short>
          <long>&#10; This command is used at power up to set the default channel.&#10; The default CC2420 channel is 26.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40676df8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40673678" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40673278" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404be818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40676908" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404be818"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x406765a0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404be818"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x406767a8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406ca3c8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406ca3c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406ca530" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406ca530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406caa18" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406ca530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x406c9510" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x406c9010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406c9938" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x406d2460" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406e69f8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x406dabc0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406e5480" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406e5010" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406e6e60" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x406e6010" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406d2df8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406e5a48" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406e58f0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x406d2038" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x406e6588" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406e6430" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x406d29d8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406d2880" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406d4be0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d4be0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x406e06e0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x406e0588" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406e2ce8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406e30f8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d4be0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x406e3c48" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d4be0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406e3af0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d4be0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406e20c8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406e0158" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406e3670" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d4be0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406e3518" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d4be0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406e24d0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406e28c8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406e4ba0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406e4ba0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x406f1ad8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406dca90" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406dc0c8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406e4ba0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406dce98" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406f0010" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406dc650" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406e4ba0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406dc4f8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406e4ba0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406f12b8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406f16b0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x406c8bd8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406c8bd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x406d7438" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406d8b08" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406d90f8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406c8bd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x406d79c8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x406d7870" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x406d7e58" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406d9ec0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406d9aa0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406d7010" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406d9670" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406c8bd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406d9518" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406c8bd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406d82e8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406d86e0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407884c8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407884c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40788630" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40788630"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x407869a8" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40788630"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407875b8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40786360" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40788630"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40788630"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40786010" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40788630"/></type-var>
          </variable>
          <variable name="dt" ref="0x40786200" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40788630"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40787a28" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40786e38" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40788630"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40788c60" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40788630"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40788b08" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40788630"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40787158" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x4079b158" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x4079c700" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x4079e328" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x4079ccc0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x4079cb68" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x4079c290" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4079c138" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x4079b720" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x4079b5c8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x4079e778" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x4079ecf0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4079eb98" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x407954f0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x407961a8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x407965d0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x40796ab0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x407959b0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x40795010" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40799690" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403479e0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40347c08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40799c88" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403479e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40347c08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40799b30" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403479e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40347c08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x4085a8a8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x4085ae78" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x408754f8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x4085a480" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4087c488" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087c148" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4087c328" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40878190" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40879d78" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40878010" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40879818" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4087b168" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087b010" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4087be00" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087baa8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4087bca0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x408b4010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408a1e68" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x408a1988" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x408a2950" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a27f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x408b8680" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408b8168" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408b8010" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x408a03b8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x408a0df0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x408bb478" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x408bb320" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x408bb8e8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x408a08f8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x408b7d58" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
              <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b7be0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x408b7568" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b7410" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x409103f0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40910298" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40910870" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40915908" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409157b0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40915e68" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40915d10" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40913238" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409130e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40912010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40913de0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40913920" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409137c8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x409126e0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40912588" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40916b88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40916a30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404bea78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409ce3f0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409ce3f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x409ce558" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409ce558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x409ceb70" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409ce558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x409cea18" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409ce558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplRF230" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <short>&#10; There should be standard interfaces/commands for these&#10;</short>
      </documentation>
      <function command="" provided="0" name="spiSplitRead" ref="0x409d4378" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitReadWrite" ref="0x409d4a70" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409d4918" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiWrite" ref="0x409d3088" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409d4f18" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitWrite" ref="0x409d7df8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A spiSplitRead command must follow this command even if the&#10; result is unimportant. The SpiByte interface should be &#10; extended with this protocol.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409d7ca0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crcByte" ref="0x409d77f0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Calculates the crc.</short>
          <long>&#10; Calculates the crc. For some unknown reason the standard&#10; tinyos crcByte command swiches endianness.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="crc" ref="0x409d74a0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x409d7690" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x409b9930" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x409b97d8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x409d8138" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x409b77c8" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x409b71c8" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x409b7c78" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x409d8830" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x409d19c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x409d0458" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x409d0010" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x409d1dd8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x409d14c0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a72788" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a72218" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a72430" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a72620" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a70dd0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a70650" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a70868" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a70a58" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a70c60" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <short>&#10; HPL-level access to the Atmega128 SPI bus.</short>
        <long>&#10; HPL-level access to the Atmega128 SPI bus. Refer to pages 162-9&#10; of the Atmega128 datasheet (rev. 2467M-AVR-11/04) for details.&#10;&#10; &#60;pre>&#10;  $Id: Atm128Spi.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   September 8 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="initSlave" ref="0x40a69348" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40a64a38" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40a66b80" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40a86058" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40a64ec8" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40a6cee0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40a65b30" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40a659d8" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40a67d98" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40a67c40" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40a69bd8" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40a84168" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a84010" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40a66210" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40a869e0" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40a86888" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40a852c8" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40a645f0" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40a64498" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40a85b90" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40a65168" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40a65010" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a67188" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a67030" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40a66760" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40a66608" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40a64010" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40a86480" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40a86df0" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40a85720" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40a655a0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40a69770" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40a67750" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a675f8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40a6aef0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40a80430" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40a9b660" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a9bb48" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40ade458" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40adea30" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40adc750" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40adc290" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40ad5088" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40adfa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40ad6ef8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40adfa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40ad9cd8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40ad63b8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40adfa20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40ad6260" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40adfa20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40ad6968" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40adfa20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40bff8d0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bff540" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40bff770" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40c02630" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40c02f00" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c02b88" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404c3c88"/>
                <typename><typedef-ref name="message_t" ref="0x404d0a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40c02da0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40c35268" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40c35730" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40c148f8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40c144c0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40c3a010" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40c3ac70" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40c38d60" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c38c08" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40c381a8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40c3a740" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c3a5e8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40c37278" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40c38708" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40c3e010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40c3e5d8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40c16960" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40c16808" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40c3ed10" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c3ebb8" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40c3de98" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40c3c6c8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c3c570" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40c3cd60" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40c3cc08" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40cc78a8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40cc7558" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40cc7748" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40cf1c28" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40cf1ad0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40cef480" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40cef130" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40cef320" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40cf1090" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40cee370" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40cefda8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40cee010" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40cee208" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40cf1618" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40cc4730" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40cc41e0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40cc43d0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40cc45c8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40cdc468" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40cdc310" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40cdcd00" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40cdc998" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40cdcba0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40cfc4c8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40cfdc50" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40cfbaa8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cfb950" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40cfb1a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40cfd3d8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40cfd818" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40cfc0c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40cfc8c8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40cfcdd0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cfcc78" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40cfb578" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40e686a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e686a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x40e658f8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e686a8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x40e63820" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e686a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40e636c8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e686a8"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40031740"/>
              <value-structured>
                <type-tag size="I:0" alignment="I:1"><attribute-ref name="one" ref="0x40031740"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40e96168" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e686a8"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40e96010" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40e654c8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40e63010" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e686a8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40e68b48" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40e65010" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40e95830" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e95830"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40e904c0" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e95830"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40e92748" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40e95cd0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40e92d50" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e95830"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40e92bf8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e95830"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40e92210" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Sample" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
      <function command="" provided="0" name="stop" ref="0x40f0a830" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x40f0a6d8" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40f0ac00" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set_digital_output" ref="0x40f0cbb8" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40f0c860" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="state" ref="0x40f0ca58" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSample" ref="0x40f0c3d0" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40f0fbf0" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="channelType" ref="0x40f0fe20" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="interval" ref="0x40f0c068" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
          <variable name="param" ref="0x40f0c260" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reTask" ref="0x40f0bd38" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x40f0b9b0" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
          </variable>
          <variable name="interval" ref="0x40f0bbd8" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readSample" ref="0x40f0a2e0" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x40f0a188" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40f0b5a8" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40f0b010" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="channelType" ref="0x40f0b240" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40f0b440" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetParam" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="setParam" ref="0x40f87a70" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
        <interfacedef-ref qname="SetParam"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40f87918" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ADConvert" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40f8d6d8" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
          <short>&#10; Initiates an ADC conversion on a given port.</short>
          <long>&#10; Initiates an ADC conversion on a given port.&#10;&#10; @return SUCCESS if the ADC is free and available to accept the request&#10;</long>
        </documentation>
        <interfacedef-ref qname="ADConvert"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40f8dcd0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ADConvert"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40f8db78" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Dio" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="low" ref="0x40f7deb0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="high" ref="0x40f7daf8" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="Toggle" ref="0x40f7a2b8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40f7d730" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setParam" ref="0x40f7a858" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="modeToSet" ref="0x40f7a700" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40f7ad90" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40f7ac38" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40f83a30" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40f83a30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40f83ee0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40f806b8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40f83a30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40f80388" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40f80558" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40f83a30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40ff4d00" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40ff4808" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x40ff1210" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40fef8c0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40fef8c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40fefd90" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40fec578" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40fef8c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40fec248" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40fec418" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40fef8c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x4101a6a8" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40fe7e78" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x4101a0f0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x4101a318" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x4101a538" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x41019a40" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41019010" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x41019200" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x41019408" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x41019660" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x410198c8" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40fe59e8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40fe5208" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40fe5430" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40fe5658" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40fe5878" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40fe4a48" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40fe44c0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40fe4170" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40fe4360" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x4100f7e0" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x41016e58" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4032c7b0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x4032ca38"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x4100ec88" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4100eb30" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x4100fca0" loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x41011920" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x41013490" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4032c7b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4032ca38"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x41013338" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4032c7b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4032ca38"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x410101a8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x4100e5e0" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4100c158" loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x41011d20" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x41010a30" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x41010600" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x41010e68" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x4100e138" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x41011010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403309f0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40330d98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x41013e50" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403309f0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40330d98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x4100f3e0" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x41013978" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403309f0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40330d98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x410114c0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x4100c8a8" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4100c750" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4103feb8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x4103c8f0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4103f988" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4103c418" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4103cec8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x410b1cc8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht15" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <short>&#10; SensirionSht15 is the rich interface to the Sensirion SHT15&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15 is the rich interface to the Sensirion SHT15&#10; temperature/humidity sensor. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x410dc8f0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x410dc5a0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x410dc790" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x410dc0c8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x410dd330" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x410e0848" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x410e0df8" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x410e0ca0" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x410ddb78" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x410dd828" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x410dda18" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x410e5c30" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x410f88e0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x410f8480" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x410f8070" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x410fbaf0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x4112fc70" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4115ae58" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x41157d90" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4115aa60" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x411578c8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x41157770" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x4115a658" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x411572b8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x41186590" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x411eb970" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x411eb970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x411ea638" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x411eb010"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x411ebe98" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x411eb010"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x411ea0b8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x411ea2b8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x411ea4c8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x411e5bf0" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x411e5470" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x411e5670" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x411e5870" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x411e5a80" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x411e8910" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x411eb010"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x411e8190" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x411eb010"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x411e8390" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x411e8590" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x411e87a0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x411e6b10" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x411e6390" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x411e6590" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x411e6790" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x411e69a0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x4123bc60" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x4125bf08" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x4125a310" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x4125ac40" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x4125aae8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x4125bb28" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x412572a8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x41255568" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x41257828" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x412576d0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x412972e8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x4125b3a0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x4125b248" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x41258ea8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x41258d50" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x41257d00" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x41258070" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x41256630" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x4125a718" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x41255168" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x41255010" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x41255ee8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41255d90" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x412561c8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x4125b730" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x41258578" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x41258420" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x41256bf0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x41256a98" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x412559b0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x41258960" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Power" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
      <function command="" provided="0" name="on" ref="0x412bfd18" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
        <interfacedef-ref qname="Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x412bb0c8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
        <interfacedef-ref qname="Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Switch" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function event="" provided="0" name="setDone" ref="0x412eb010" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x412ece48" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x412ef878" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getDone" ref="0x412eca90" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x412ec938" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x412ec570" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x412ec418" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x412ec010" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x412efc80" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x412efe78" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAllDone" ref="0x412eb540" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x412eb3e8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
