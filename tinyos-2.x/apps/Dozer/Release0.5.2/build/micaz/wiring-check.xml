<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="30:uAgriC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40ffa3e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40381188"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40381188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40457418"/></to>
    </wire>
    <wire loc="31:uAgriC.nc">
      <from><interface-ref name="RoutingInit" scoped="" ref="0x40ff70a0"/></from>
      <to><interface-ref name="RoutingInit" scoped="" ref="0x4049be50"/></to>
    </wire>
    <wire loc="34:DozerC.nc">
      <from><interface-ref name="RoutingInit" scoped="" ref="0x4049be50"/></from>
      <to><interface-ref name="RoutingInit" scoped="" ref="0x4050d0f0"/></to>
    </wire>
    <wire loc="32:uAgriC.nc">
      <from><interface-ref name="DataQueueManage" scoped="" ref="0x40ff7450"/></from>
      <to><interface-ref name="DataQueueManage" scoped="" ref="0x404a4010"/></to>
    </wire>
    <wire loc="102:DozerC.nc">
      <from><interface-ref name="DataQueueManage" scoped="" ref="0x404a4010"/></from>
      <to><interface-ref name="DataQueueManage" scoped="" ref="0x40f3fa90"/></to>
    </wire>
    <wire loc="33:uAgriC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ff7888"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409a7520"/></to>
    </wire>
    <wire loc="36:uAgriC.nc">
      <from><interface-ref name="SamplerInit" scoped="" ref="0x40ffa7c8"/></from>
      <to><interface-ref name="SamplerInit" scoped="" ref="0x40fcb418"/></to>
    </wire>
    <wire loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerInit" scoped="" ref="0x40fcb418"/></from>
      <to><interface-ref name="SamplerInit" scoped="" ref="0x4105a260"/></to>
    </wire>
    <wire loc="37:uAgriC.nc">
      <from><interface-ref name="SamplerControl" scoped="" ref="0x40ffac10"/></from>
      <to><interface-ref name="SamplerControl" scoped="" ref="0x40fcb860"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerControl" scoped="" ref="0x40fcb860"/></from>
      <to><interface-ref name="SamplerControl" scoped="" ref="0x4105a6c8"/></to>
    </wire>
    <wire loc="38:uAgriC.nc">
      <from><interface-ref name="Sample" scoped="" ref="0x40ff3418"/></from>
      <to><interface-ref name="Sample" scoped="" ref="0x40fcbe58"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Sample" scoped="" ref="0x40fcbe58"/></from>
      <to><interface-ref name="Sample" scoped="" ref="0x4105ace0"/></to>
    </wire>
    <wire loc="41:uAgriC.nc">
      <from><function-ref name="PlugPlay" scoped="" ref="0x40ff3e20"/></from>
      <to><function-ref name="PlugPlay" scoped="" ref="0x410228a0"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><function-ref name="PlugPlay" scoped="" ref="0x410228a0"/></from>
      <to><function-ref name="PlugPlay" scoped="" ref="0x41058780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x418cd0a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4188f9b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41828030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417d0350"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40e0e8d8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40e0a3e0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40de6398"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ce0010"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bda658"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40beeb88"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bd0010"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b09488"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a84b48"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a06b28"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406ac5e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4165c120"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408dbad0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40651210"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x404577b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402eb408"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402eb408"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40358118"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40457d78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4037cef0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4037cef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40388168"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40474240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410b9440"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e9ba30"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40784700"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40382760"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40463a88"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40388950"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404636d8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40388548"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c4a6e0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40388548"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4038cc18"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4038cc18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4038bba0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4038b010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x40394218"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403974b0"/></to>
    </wire>
    <wire loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403974b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403def28"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40394c08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4038b010"/></to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403b1750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40430bd0"/></to>
    </wire>
    <wire loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403a2d08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403f8d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403f8d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f3010"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403af2f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40403ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40403ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41554228"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403b44b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4040e170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4040e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4156cc08"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403968e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403e5250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403e5250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4145d010"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403b50a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40406e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40406e70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4156f7f8"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403eb228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403eb228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41482de8"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4039e4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403f6e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403f6e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414dcd70"/></to>
    </wire>
    <wire loc="159:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403aac08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40400988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40400988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414ed010"/></to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403ad210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4040a7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4040a7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4154f0b0"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40399670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403df250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403df250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41466a88"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x4039bc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403eae48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403eae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4147ac08"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403a42f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403f4ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403f4ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414d7c08"/></to>
    </wire>
    <wire loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403a8a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403fe6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403fe6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41536010"/></to>
    </wire>
    <wire loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403b22f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4040de48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4040de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41567a88"/></to>
    </wire>
    <wire loc="185:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403b9830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40440d00"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403a7ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40404790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40404790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41558de0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403def28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414619e8"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403a1b18"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403e8ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403e8ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414c0a88"/></to>
    </wire>
    <wire loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403ba3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40439228"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x4039f010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403edb00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403edb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414df938"/></to>
    </wire>
    <wire loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403ab750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403f76b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403f76b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f29e8"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403afce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404014f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404014f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41553c08"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403b4ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4040eac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4040eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4156a6c0"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4039d2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403e5ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403e5ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4145c9e8"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x4039c750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403ebb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403ebb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4147d7f8"/></to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4039eea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403f57d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403f57d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414da7f8"/></to>
    </wire>
    <wire loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403a9670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403ff330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403ff330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414ec9e8"/></to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403adc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40409170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40409170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4154ea88"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403980a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403dfba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403dfba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41464538"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x4039a670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403e97d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403e97d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414776c0"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403a4ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403f34f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403f34f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414d56c0"/></to>
    </wire>
    <wire loc="180:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403b2ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4040c7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4040c7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41565538"/></to>
    </wire>
    <wire loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403a2210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403f83d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403f83d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f5538"/></to>
    </wire>
    <wire loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403b08e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40403170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40403170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415567f8"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403b5a98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4040f7f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4040f7f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4156d228"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403b82f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4043d260"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x40397ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403e6890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403e6890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4145f538"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403a0590"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403f14f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403f14f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414be538"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403ac670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40406518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40406518"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41575de8"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4039fa08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403f64f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403f64f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414dd3b0"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403aa210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40400030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40400030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414ef538"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403ae750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40401e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40401e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415516c0"/></to>
    </wire>
    <wire loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403b38e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4040d4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4040d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415680b0"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x4038ac20"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403e08e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403e08e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41467080"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x4039b210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403ea4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403ea4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4147b228"/></to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403a58e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403f4170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403f4170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414d8228"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403a80a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403ffc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403ffc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414ea538"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403badc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40437788"/></to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403a74b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40405dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40405dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41559418"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403a3750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403f3e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403f3e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414d30b0"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40398a98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403de5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403de5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41462010"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403a1120"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403e8170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403e8170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414c10b0"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40358950"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x4035d5f0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40366010"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4036a370"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406fe010"/></to>
    </wire>
    <wire loc="35:DataManagerC.nc">
      <from><interface-ref name="DataQueueManage" scoped="" ref="0x40f3fa90"/></from>
      <to><interface-ref name="DataQueueManage" scoped="" ref="0x40f642f8"/></to>
    </wire>
    <wire loc="35:DozerC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x404aba30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4057b598"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4057b598"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405949b0"/></to>
    </wire>
    <wire loc="36:DozerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x404e33b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40576568"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40576568"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4058f680"/></to>
    </wire>
    <wire loc="45:DozerC.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x404ef3c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c470a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c470a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:DozerC.nc">
      <from><interface-ref name="BeaconWaitTimer" scoped="" ref="0x404ee778"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c45e68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c45e68"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:DozerC.nc">
      <from><interface-ref name="ConnReqListenTimer" scoped="" ref="0x404fabd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c6dc80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c6dc80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:DozerC.nc">
      <from><interface-ref name="ConnRepWaitTimer" scoped="" ref="0x404f6010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c69af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c69af8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:DozerC.nc">
      <from><interface-ref name="NeighbourUpdateTimer" scoped="" ref="0x40501428"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c669d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c669d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:DozerC.nc">
      <from><interface-ref name="NeighbourUpdateStopTimer" scoped="" ref="0x404ff8f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c62880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c62880"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:DozerC.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x404e8418"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c9e428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40c9e428"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41759700"/></to>
    </wire>
    <wire loc="55:DozerC.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x404e6608"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cc8a48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40cc8a48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40578858"/>
      <arguments>
        <value cst="I:50">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:DozerC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x404a1188"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40cc23a0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40cc23a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ce03a8"/></to>
    </wire>
    <wire loc="61:DozerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40507920"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b03010"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40b03010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b8ac60"/></to>
    </wire>
    <wire loc="63:DozerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4050c7e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bd3398"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40bd3398"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bd0df0"/></to>
    </wire>
    <wire loc="64:DozerC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4050bad0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40bd6aa8"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40bd6aa8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40bd0530"/></to>
    </wire>
    <wire loc="65:DozerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405123f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c38730"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c38730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c34da8"/></to>
    </wire>
    <wire loc="69:DozerC.nc">
      <from><interface-ref name="TDMASchedule" scoped="" ref="0x40508010"/></from>
      <to><interface-ref name="TDMASchedule" scoped="" ref="0x40eb94a0"/></to>
    </wire>
    <wire loc="77:DozerC.nc">
      <from><interface-ref name="PPBListenTimer0" scoped="" ref="0x40eb6930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40eb7e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40eb7e48"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:DozerC.nc">
      <from><interface-ref name="PPBListenTimer1" scoped="" ref="0x40ee9d58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f21c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f21c68"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:DozerC.nc">
      <from><interface-ref name="PPBListenTimer2" scoped="" ref="0x40ee5140"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f55af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f55af0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:DozerC.nc">
      <from><interface-ref name="PPBListenTimer3" scoped="" ref="0x40ee34c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f519a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f519a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:DozerC.nc">
      <from><interface-ref name="TDMAScheduleTimer" scoped="" ref="0x40ee08a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f4e7b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f4e7b8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:DozerC.nc">
      <from><interface-ref name="TDMASlotTimer" scoped="" ref="0x40edec18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f4a658"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f4a658"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:DozerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40eda010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b03010"/></to>
    </wire>
    <wire loc="86:DozerC.nc">
      <from><function-ref name="chooseParent" scoped="" ref="0x40eb6610"/></from>
      <to><function-ref name="chooseParent" scoped="" ref="0x4050d6e0"/></to>
    </wire>
    <wire loc="87:DozerC.nc">
      <from><interface-ref name="SchedulerInit" scoped="" ref="0x404fb2f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40eb6010"/></to>
    </wire>
    <wire loc="89:DozerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40eda8a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bd3398"/></to>
    </wire>
    <wire loc="90:DozerC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40edae88"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40bd6aa8"/></to>
    </wire>
    <wire loc="91:DozerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ed9740"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c38730"/></to>
    </wire>
    <wire loc="104:DozerC.nc">
      <from><interface-ref name="TDMASchedule" scoped="" ref="0x40f409f0"/></from>
      <to><interface-ref name="TDMASchedule" scoped="" ref="0x40eb94a0"/></to>
    </wire>
    <wire loc="105:DozerC.nc">
      <from><function-ref name="chooseParent" scoped="" ref="0x40f3f868"/></from>
      <to><function-ref name="chooseParent" scoped="" ref="0x4050d6e0"/></to>
    </wire>
    <wire loc="107:DozerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f44aa8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40576568"/></to>
    </wire>
    <wire loc="108:DozerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f443b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40581e50"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40581e50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058e350"/></to>
    </wire>
    <wire loc="111:DozerC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40f41eb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40fb4b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40fb4b00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x418182b8"/></to>
    </wire>
    <wire loc="115:DozerC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x40f41750"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40fdcdf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40fdcdf8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x417ef1f0"/></to>
    </wire>
    <wire loc="116:DozerC.nc">
      <from><interface-ref name="DataReceive" scoped="" ref="0x40f40658"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40fd9da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40fd9da0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40578858"/>
      <arguments>
        <value cst="I:51">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:TreeP.nc">
      <from><interface-ref name="send_beacon" scoped="" ref="0x4051c610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="372:TreeP.nc">
      <from><interface-ref name="sendReply" scoped="" ref="0x40548a58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="360:TreeP.nc">
      <from><interface-ref name="sendRequest" scoped="" ref="0x4054b4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405949b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c081d8"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4057be70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405912a8"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405912a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405b5100"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40578ef0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4058f310"/></to>
    </wire>
    <wire loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4058f310"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x405b4178"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4058e350"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405b3190"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40580010"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad1de0"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad1de0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ac8668"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40578858"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40591c68"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40591c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405b5ac0"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057d6c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4058d150"/></to>
    </wire>
    <wire loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4058d150"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40ad4c88"/></to>
    </wire>
    <wire loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4058f680"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405b44e8"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405879d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40acf7e0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40acf7e0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ac5100"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c081d8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40c07c50"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40599100"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x405b2238"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405a8e50"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x405b3b88"/></to>
    </wire>
    <wire loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x4059aaa0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad45a0"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40ad45a0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40accde0"/></to>
    </wire>
    <wire loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405ac500"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40c09648"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40c09648"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40c068a8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40ad4c88"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40ac9520"/></to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405a6388"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40c0aad0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40c0aad0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40c1d010"/></to>
    </wire>
    <wire loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40597558"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad1788"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad1788"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ac8010"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405bc500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409a7520"/></to>
    </wire>
    <wire loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40c07c50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40601390"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40601390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40612408"/></to>
    </wire>
    <wire loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x405be8d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bd1e28"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bd1e28"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bee4c0"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bc55e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c0a3d0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c0a3d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c20308"/></to>
    </wire>
    <wire loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c20308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bdeb90"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bdeb90"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c070c8"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c070c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bc6f10"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bc6f10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bf1e38"/></to>
    </wire>
    <wire loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bf2de8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40601998"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40601998"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40612a10"/></to>
    </wire>
    <wire loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x405b1098"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c09280"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c09280"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c07830"/></to>
    </wire>
    <wire loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c07830"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bc7960"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bc7960"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bddec8"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bdd260"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bf2610"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bf2610"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c18558"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bf2a38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406000b8"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406000b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a85a40"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405c1600"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409e42c0"/></to>
    </wire>
    <wire loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x405b1430"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad45a0"/></to>
    </wire>
    <wire loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x405b9360"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad12d8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad12d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ac9aa0"/></to>
    </wire>
    <wire loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x405c5ce8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40657010"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40657010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40651cd8"/></to>
    </wire>
    <wire loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x405c1d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40600470"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40600470"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x406111f0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a85a40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a808e8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4060ca50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40646828"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40646828"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406515a0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x4061ac00"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40656010"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40656010"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40650ce0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40617668"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409fbb00"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40617668"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a85060"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a85060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a84ee8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409fbb00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a06ec8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x40614c20"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x409f8010"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x409f8010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a043e0"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x4061c438"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x409f8728"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x409f8728"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40a04b18"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40625d08"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad45a0"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x406243d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad12d8"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4061cc10"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bd3398"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x40620bc8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40bd4010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40bd4010"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408dfa28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40625090"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409a7520"/></to>
    </wire>
    <wire loc="77:CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x4061d170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x4061f8a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x40622cb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x40653e60"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x4064f840"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x4065c840"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x406acba8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x406acba8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x406bca60"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4065b2e0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40806c48"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40806c48"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x4065bce8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40804a50"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40804a50"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403968e0"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x4065a760"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x40803e78"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x40803e78"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x40397ea8"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x4066a8e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x40814ef0"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x40814ef0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x408634c0"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40663db0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409b31a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409b31a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4087e9e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40664cb0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x409b1840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409b1840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40663140"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x409b0260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409b0260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40663990"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x409b1190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409b1190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40663570"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x409b05b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409b05b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40665dc8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x409ab548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409ab548"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4066b380"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x409cc6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409cc6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4066b888"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x409ccae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409ccae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4066bda8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x409ae5c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409ae5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40669358"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x409aea00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409aea00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40666668"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x409cacd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409cacd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40669868"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x409ab010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409ab010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40669d60"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x409aee38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x409aee38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x40662e98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409c20f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409c20f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4087e9e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x406625e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409d40f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409d40f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4087e9e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40658010"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409e42c0"/></to>
    </wire>
    <wire loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x4066f198"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x40670988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x406ac5e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4080b4b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x4080b4b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407f27a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x406bca60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x415dd6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x415dd6a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41630dd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x4162cb60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x415d9448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x415d9448"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41626210"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x4162d918"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407bb010"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407bb010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407b67f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x41625c00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d0928"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406d0928"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406e7b70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x41622e68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406d82f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406c9840"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40721e78"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x406da6f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40737b88"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406d82f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40734a80"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406d82f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x407326a0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406d82f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x4072f340"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x4072ee98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406e0e18"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406e0e18"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406ecaf0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x406f0498"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406fe470"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406e3798"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406eb4f8"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406e9600"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406f37a0"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40784ae8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d0928"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407d7ae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407baa00"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407baa00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407b2320"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407b1568"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d0928"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40805660"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403a0590"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40804068"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x403ad210"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x40806270"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403a80a0"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40803490"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403aac08"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x408147f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40823c50"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40816618"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x4081f540"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x40813300"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406da6f0"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x4081fb38"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x4082a338"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x4082a338"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x408502b0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x40863b78"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x40806270"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x4082d788"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4085c7f8"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x4082b168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40855d60"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x4082abb8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4086a538"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x4082c030"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4085a920"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x4082b9e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40852050"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40830ee8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x408276f8"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x4082c8b0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40858b68"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40827eb0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x408407a0"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4085b010"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x40840c18"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40859190"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x408260a8"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40857350"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x40826520"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x408545f0"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x40826998"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40852808"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x40826e10"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40850a68"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x408412b0"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4086acf0"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x40841728"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x408603b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409c7190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40892a98"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x409b14e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409abdb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x409cc270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409b1ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409c95c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409ad6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x409cbbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409b3860"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40892208"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40892208"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4088c0f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409b0c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409af010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409af3e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409ad2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409ca030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409c9190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409ccf18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x409b3d78"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x409ae190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409adb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409c9a00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40892a98"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409ab980"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409af740"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409afdf0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409ca8a0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409b0910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409ca468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x409b1b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x409afa98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409cb368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x409cb7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x40892a98"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4088b370"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x40891500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4088bd98"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x40891cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4088a5e0"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4087e9e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4088c908"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x40890530"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4088ad98"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x4089da90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408c3770"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x408c3770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408dfa28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40889278"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408e9170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x408e9170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40994aa0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x408a2258"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408e9828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x408e9828"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408e7628"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x4089d5c0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408e9b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x408e9b60"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408e79c0"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40888260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409a7520"/></to>
    </wire>
    <wire loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x4089b010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x408dfa28"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408d8120"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x408e79c0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408e1928"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x408e7628"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408e15b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x408dade0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408e72a8"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408e72a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408e1250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x40991278"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408e4120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x409919a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408e4120"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408e0100"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x408fde00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4094b8c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4094b8c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x416b8448"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40907498"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40997438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40997438"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x416b7010"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x4090b1c8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x4091e0c0"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x4091e0c0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x409394a0"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40907918"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></to>
    </wire>
    <wire loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40919798"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40934c00"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40937338"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40937d10"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x4039c750"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40936740"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x4039b210"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40934200"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x4039bc08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40997030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x416b8b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x416b74d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x409978e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x416b78f8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4165c458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x416b7ef0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409bce38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409d7190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40892a98"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x409c13a8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409be4b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409ddcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x409dc190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409c1db0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409d85c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x409bed28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409bc5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409dc5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x409dbb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409c27b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40892208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409c0b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409c0ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409bf308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409c04e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409bc190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409be8f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409c1050"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409da010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409d8190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409dce38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x409c2cc8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x409be080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409bca00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409d8a00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40892a98"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409dca00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409dd468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409c1700"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409dd8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409bf660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409bfd10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409dacb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409da880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409c0840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409da448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x409c1a58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409c0190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x409bf9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409db2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x409db6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409cee38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409e9190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40892a98"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x409d33a8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409cf4b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409cdcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x409ee190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409d3db0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409ea5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x409cfd28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409ce5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409ee5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x409edb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409d47b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40892208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409d2b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409d2ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409d1308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409d24e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409ce190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409cf8f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409d3050"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409eb010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409ea190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409eee38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x409d4cc8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x409cf080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409cea00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409eaa00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40892a98"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409eea00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409cd468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409d3700"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409cd8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409d1660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409d1d10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409ebcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409eb880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409d2840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409eb448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x409d3a58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409d2190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x409d19b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409ed2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x409ed6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x409f7808"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x40a03490"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x409f7c70"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x40a03918"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x40a03ee0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x406acba8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x40a1f3d0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x40806270"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40a1fe48"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40806c48"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40a1e870"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x40803490"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40a1ad20"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x408147f0"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a19338"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a75a40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a75a40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4087e9e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a19a88"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a74170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a74170"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40892208"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40a16240"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40a74688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40a74688"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40a16650"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x40a73408"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40a73408"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40a16a80"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40a73760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40a73760"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40a16eb0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40a714e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40a714e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40a18d18"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40a6e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40a6e010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40a18070"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40a8c988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40a8c988"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40892a98"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a18810"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a8de38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a8de38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40a15328"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40a6f2b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40a6f2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40a11158"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a85500"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40a85500"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a803a8"/></to>
    </wire>
    <wire loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a01910"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad45a0"/></to>
    </wire>
    <wire loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a21010"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad12d8"/></to>
    </wire>
    <wire loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a21678"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad1de0"/></to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a1a650"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40acc010"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40acc010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aea888"/></to>
    </wire>
    <wire loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a11680"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409a7520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40a6e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40a74d38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40a70e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40a6d6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40a6dae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40a6f6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40a6df18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40a6a468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40a71840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40a71c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40a73e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40a6fb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40a749e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40a6a8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40a8da00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40a6b7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40a70a18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40a6e448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a8c2b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40892a98"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40a6b368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40a6edb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40a730b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40a6d270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40a70010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40a706c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40a8d5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40a8d190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a71190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40a6acd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40a73ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40a70368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40a6bbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40a6a030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40a85ed8"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40a80d80"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a9c458"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409a7520"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40a7f210"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40806c48"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40a7fc18"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x40805660"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40a7e688"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x40804068"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a7d198"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x40816618"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a7d858"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad2518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ad2518"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4087e9e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a7c010"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40bbde38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40bbde38"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40892a98"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a7cbc8"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40b9dc68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40b9dc68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40a7c798"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40b9c368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40b9c368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a9f040"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad45a0"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a9f6c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad12d8"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a9ed00"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad1de0"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40a9fb58"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40657010"/></to>
    </wire>
    <wire loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x40a94230"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40aeaeb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058e350"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b10448"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407bb010"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40ae9780"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40aeba88"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40ae7240"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b03010"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40b09c38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b66210"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b09488"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b026b0"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b026b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b5e010"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40b8e5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b59270"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b6a5b8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40b02c78"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40b02c78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b5e448"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b89638"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40afe8a8"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40afe8a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b5ceb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40b5ceb0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4170b228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40b5e010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4170e358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40b5e448"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4170e790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4170a400"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406e9600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41708640"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406e0e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x41708e68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406e3798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x41705890"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406f0498"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40b68010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40b8b798"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40bae6e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b09c38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40bc2368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40bbc550"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40892a98"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40b9f840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40bc4920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40bc0190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40bc05c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b9d260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bbda00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40bc3270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40bc3ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40bc0a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40bbe010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad2bd0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40892208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b9c010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40b9c740"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40b9d910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40bc36a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40bc4d58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40b9f4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40bbe448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40bbd5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40bbf2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40b9f190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40bc44e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40bc3f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40bc0e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40bc28a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40b9fb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40bc2cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40b9ca98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40bc4190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40bbd190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40bbecb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40891500"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40bbe880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40b9fef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40b9d5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40b9cdf0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40890530"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40bbf6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40bbfb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40891cc8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40bd6588"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bd0010"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40beb010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bc55e8"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40beb6e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40bed2d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40bed2d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408dfa28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40bebe98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bd3398"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bea388"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad12d8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40bc7d88"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40bda310"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bdaa80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bdd260"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bdae40"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad12d8"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c170c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bf2de8"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c17830"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bf2a38"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c17bf0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad12d8"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40c08848"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40c05448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40c05448"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408dfa28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c1d7c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057d6c0"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40c4a6e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c34a60"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40c31b00"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40c4c8e8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40c4c8e8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403980a0"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40c30580"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40c4b308"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40c4b308"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40399670"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40c2f010"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40c4bd10"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40c4bd10"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x4038ac20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40c9eac0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40581e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c9d230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40576568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40c9de28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057d6c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41759dc8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c788f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x417574d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40576568"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c788f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c73908"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40ca40a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4057be70"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ca4750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40576568"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ca23f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40581e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40ca2ac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40ca2f00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40cc8d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40581e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40cc74d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40576568"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40ce03a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d062d0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40cc2c78"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40cb9278"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40cbea70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cb8930"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40cbe718"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cb99b8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cbce60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ce4010"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40cbc1a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cb9ce0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ce0010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d0bf20"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d08e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40cbb3b0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ce4538"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d0d288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ce4bf0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ce0c68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40d08978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40ec0338"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d0d288"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40da9988"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40ce0c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40da95c8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40da8138"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40d08978"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d007b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d08e80"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40da7150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d08e80"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40da1260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d08e80"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40da8620"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40cffbd8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40da8af8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40d02a80"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40cfcf10"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40da5678"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40cfb500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40dbd010"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40dbd010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40db8cb8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40dcc990"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40dbd490"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40dbd490"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40db9648"/></to>
    </wire>
    <wire loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40d281e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40d19a18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40d29010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40d27e08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x40da7d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40da6270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40db82b0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40db91c8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40db91c8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40de6ae8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40db9648"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40de6f00"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40db8cb8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40de66d0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40db60d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e39618"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e39618"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ec7170"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40df1c88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40db60d0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40de57b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40e12560"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40e12560"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40e0ed28"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40de5be8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40e12a70"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40e12a70"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40e0b288"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40df1050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40e11010"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40e11010"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40e0b7a0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40e0f670"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40e09350"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40e11c20"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40e0a830"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40e0f178"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40e0ad60"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40e09f00"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40382760"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40e08658"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40ec63b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e32088"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e32088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ecc0c0"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ecb2f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e65a60"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e65a60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e56010"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40e60d78"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40e54370"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40e5fb28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40e53078"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e5cd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40e50010"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e5cd50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40e4fc08"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e5cd50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40e4c830"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e9be18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e65a60"/></to>
    </wire>
    <wire loc="37:DataManagerC.nc">
      <from><interface-ref name="TDMASchedule" scoped="" ref="0x40f3e3f8"/></from>
      <to><interface-ref name="TDMASchedule" scoped="" ref="0x40f409f0"/></to>
    </wire>
    <wire loc="38:DataManagerC.nc">
      <from><function-ref name="chooseParent" scoped="" ref="0x40f3b1c8"/></from>
      <to><function-ref name="chooseParent" scoped="" ref="0x40f3f868"/></to>
    </wire>
    <wire loc="40:DataManagerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f3b378"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f443b8"/></to>
    </wire>
    <wire loc="41:DataManagerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f3ba68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f44aa8"/></to>
    </wire>
    <wire loc="42:DataManagerC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x40f72748"/></from>
      <to><interface-ref name="DataSend" scoped="" ref="0x40f41750"/></to>
    </wire>
    <wire loc="43:DataManagerC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40f72ea8"/></from>
      <to><interface-ref name="SerialSend" scoped="" ref="0x40f41eb0"/></to>
    </wire>
    <wire loc="44:DataManagerC.nc">
      <from><interface-ref name="DataReceive" scoped="" ref="0x40f71658"/></from>
      <to><interface-ref name="DataReceive" scoped="" ref="0x40f40658"/></to>
    </wire>
    <wire loc="46:DataManagerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f65580"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c38730"/></to>
    </wire>
    <wire loc="51:DataManagerC.nc">
      <from><interface-ref name="DataMessagePool" scoped="" ref="0x40f690c8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40fa7eb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40fa7eb0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x417d06f8"/></to>
    </wire>
    <wire loc="52:DataManagerC.nc">
      <from><interface-ref name="DataQueue" scoped="" ref="0x40f6adb8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40f90ae8"/></to>
    </wire>
    <wire loc="151:DataManagerP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x40f8acc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:DataManagerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40f8c0d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:DataManagerP.nc">
      <from><interface-ref name="sendAvailableData" scoped="" ref="0x40f64c30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fde230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cbea70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fde8c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cbc1a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40fdd4f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cbce60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41818980"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40faea98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41817030"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cbc1a8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40faea98"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fe4180"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40fe48f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40cc2c78"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fe3010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cbc1a8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40fe3be8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cbea70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40fe2350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40fe2788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fdb4d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40581e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fdbb68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40576568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40fda790"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057d6c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x417ef8b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c788f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x417ee010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40576568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fd8150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40581e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fd87e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40576568"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerTimer" scoped="" ref="0x41056758"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4109d5d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4109d5d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41058940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c38730"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Battery" scoped="" ref="0x41049968"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x411a6ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x411a6ef8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41832430"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="TempHumControl" scoped="" ref="0x41048680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411a1520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x411a1520"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x411bc2c8"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x41048da0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x411a1ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x411a1ba8"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x4185bba8"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Hum" scoped="" ref="0x41046a68"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x412457f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x412457f0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x4185ab48"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="DioInit" scoped="" ref="0x41045690"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41241ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x41241ed8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4123c158"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="DioControl" scoped="" ref="0x41045ab0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41240220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x41240220"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4123c510"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio0" scoped="" ref="0x41041e78"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41240890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio1" scoped="" ref="0x41043680"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41240890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio2" scoped="" ref="0x41043e68"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41240890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio3" scoped="" ref="0x41040660"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41240890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio4" scoped="" ref="0x41040e48"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41240890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio5" scoped="" ref="0x4103f660"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x41240890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="IBADCinit" scoped="" ref="0x410549c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4135a600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x4135a600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413556b0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="IBADCcontrol" scoped="" ref="0x41054e00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4135a918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x4135a918"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41355a48"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x41050360"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x41050808"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x41050cb0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x41051200"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x410516a8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x41051bd0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x4104f090"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x4104f538"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC8" scoped="" ref="0x4104f9e0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC9" scoped="" ref="0x4104fe88"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC10" scoped="" ref="0x4104e348"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC11" scoped="" ref="0x4104e7f8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC12" scoped="" ref="0x4104eca8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC13" scoped="" ref="0x4104d208"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x41359010"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam0" scoped="" ref="0x4104c010"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam1" scoped="" ref="0x4104c400"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam2" scoped="" ref="0x4104c7f0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam3" scoped="" ref="0x4104cce0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam4" scoped="" ref="0x4104b0e0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam5" scoped="" ref="0x4104b4d0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam6" scoped="" ref="0x4104b8c0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam7" scoped="" ref="0x4104bcb0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam8" scoped="" ref="0x4104a0c0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam9" scoped="" ref="0x4104a4b0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam10" scoped="" ref="0x4104a8a8"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam11" scoped="" ref="0x4104aca0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam12" scoped="" ref="0x410490c8"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam13" scoped="" ref="0x410494c0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x413594b0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="CounterInit" scoped="" ref="0x4103fea8"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x4141c988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CounterInit" scoped="" ref="0x4141c988"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x41418e10"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="CounterControl" scoped="" ref="0x4103e578"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x4141cce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CounterControl" scoped="" ref="0x4141cce0"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x414152a0"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4103ebb8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4141b350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x4141b350"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41415900"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><function-ref name="Plugged" scoped="" ref="0x41079670"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x4141bb30"/></to>
    </wire>
    <wire>
      <from><function-ref name="Plugged" scoped="" ref="0x4141bb30"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x414143f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x41832430"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x410ce820"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41831010"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x411a7468"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x410c9bd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41831010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410c84b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x410c3498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410c17f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x418314e8"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x410ce820"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41152560"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x410c6c48"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x4118f178"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41179ea0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410c84b0"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4118e6b0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x410c9bd8"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x41179280"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x411901d8"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4118fde8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x410bee10"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x410bee10"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x410b9c80"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x410c1010"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x410b72e0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410c3498"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41109910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41109910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x418274e0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41164010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x410c17f0"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x410ecbc0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x4110c278"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x4110c278"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x4110beb0"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x410f30f8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40382760"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x411639f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x410b97f0"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41162150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41128470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41128470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41826040"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x411073b8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41128068"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41827c20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41128b08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x418266d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41826b98"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41164010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41824010"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x41828368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41823270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x41865708"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x411639f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41865b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x41163de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41865e18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41162150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x418634d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411627e8"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x41185e90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x411bc2c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412019c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x41858750"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411bcc00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht15Temp" scoped="" ref="0x41857550"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x411ba6c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x41858e28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411bcc00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht15Hum" scoped="" ref="0x41857d08"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x411ba6c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x412019c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4121fe48"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="SensirionSht15" scoped="" ref="0x411ba6c8"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x411b7c20"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x411bcc00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fe2f0"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x411fe2f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41251760"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x41208430"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x411fea58"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x411fea58"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x41234be8"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x41208da8"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x411fd4b0"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x411fd4b0"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x411fbc30"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x412077b0"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x411fb010"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x411fb010"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x41221790"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41207e18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4124d878"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4124d878"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41203030"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409a7520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="readSensor" scoped="" ref="0x41203c48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x411fbc30"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x4039f010"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x41234be8"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x403adc08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41251760"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4188dd38"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x41221d88"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x4082abb8"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4121c558"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4121dc30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4121dc30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x412197d8"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x403adc08"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x41218210"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x4039f010"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x41233ec8"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x412305c0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x411f7a28"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x4039eea8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x411f5850"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x403a4ce8"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x41232b20"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x4122d208"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x412312d8"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x4122d9a8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x41235740"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x403ae750"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x411f8650"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x4039fa08"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x411f6490"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x403a58e0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x41232380"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x41230990"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x411f42d0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x403a3750"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x412316a8"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x4122dd78"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x41234200"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x403ad210"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x411f7050"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x4039e4b0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x411f6e68"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x403a42f0"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x41232750"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x41230d60"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x411f4cb8"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x403afce8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x41232ef0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x4122d5d8"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x41231a78"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x4122c208"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x41217040"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41251ea0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4188c490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x412502e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4188c898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4188cd58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41250790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x4188b250"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4188fcf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4188b848"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4123c510"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412370e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Dio" scoped="" ref="0x41240890"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x4123ce18"/></to>
    </wire>
    <wire loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Dio" scoped="" ref="0x4123ce18"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x412379c8"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4123c158"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4123bcd8"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x4126de40"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x412b7ef0"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x412b7ef0"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x4082b168"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x4126fc70"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412b27f8"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x412b27f8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412ac200"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x41278bf8"/></from>
      <to><interface-ref name="I2CResource" scoped="" ref="0x412af7c8"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x412af7c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412ada38"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x4126d3d0"/></from>
      <to><interface-ref name="IntPin" scoped="" ref="0x412b7480"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x412b7480"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x403afce8"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x41277418"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x412b8840"/></to>
    </wire>
    <wire loc="233:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="read_io" scoped="" ref="0x4128cba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="init_io" scoped="" ref="0x412691d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_low" scoped="" ref="0x4125b430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_toggle" scoped="" ref="0x4129a730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_high" scoped="" ref="0x4125f1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x412ada38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a4470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x412ac200"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412a2010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x412a4470"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412d1010"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x412a2010"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412d1800"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x412f77a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412d7418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x412d7418"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x418cc548"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x412f7f20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412f3e90"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x412f5dd8"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x41348d50"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x412d5d90"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x412f39e8"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412d4548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412d6010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412d6010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x418cb150"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x413470b8"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x413439b8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x413439b8"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x4133fa88"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x413467b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409a7520"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x41345430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409a7520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x412d7b58"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x418ccc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x412d66a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x418cb7e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x418cbca8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x412d6b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x418ca170"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x418cd3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x418c9358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x4133b240"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x403a2210"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x4133bc40"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x403a2d08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41361c60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41355a48"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x413d16c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION33" scoped="" ref="0x41359c10"/></from>
      <to><interface-ref name="EXITATION33" scoped="" ref="0x4134f3c8"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION33" scoped="" ref="0x4134f3c8"/></from>
      <to><interface-ref name="EXITATION33" scoped="" ref="0x4134b718"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x413556b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413d1330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ADConvert" scoped="" ref="0x41359010"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x413503b8"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="ADConvert" scoped="" ref="0x413503b8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x4134e708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SetParam" scoped="" ref="0x413594b0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x41350b00"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SetParam" scoped="" ref="0x41350b00"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x4134ee50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION50" scoped="" ref="0x41423050"/></from>
      <to><interface-ref name="EXITATION50" scoped="" ref="0x4134f888"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION50" scoped="" ref="0x4134f888"/></from>
      <to><interface-ref name="EXITATION50" scoped="" ref="0x4134bbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION25" scoped="" ref="0x413597f8"/></from>
      <to><interface-ref name="EXITATION25" scoped="" ref="0x41350ee0"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION25" scoped="" ref="0x41350ee0"/></from>
      <to><interface-ref name="EXITATION25" scoped="" ref="0x4134b258"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x413d16c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x413ef3c8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x413d1330"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413ef010"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x413846a8"/></from>
      <to><interface-ref name="Switch" scoped="" ref="0x413d7608"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x413d7608"/></from>
      <to><interface-ref name="Switch" scoped="" ref="0x413d3cf0"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41384e70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c38730"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x41392150"/></from>
      <to><interface-ref name="Exitation50" scoped="" ref="0x413d1d70"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x413d1d70"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x411f6e68"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x41392b98"/></from>
      <to><interface-ref name="Exitation33" scoped="" ref="0x413ba860"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x413ba860"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x411f7a28"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x413916d8"/></from>
      <to><interface-ref name="VoltageBuffer" scoped="" ref="0x413b9338"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x413b9338"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x411f7050"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x41390170"/></from>
      <to><interface-ref name="VoltageBooster" scoped="" ref="0x413b9d80"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x413b9d80"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x411f8650"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x41390ba8"/></from>
      <to><interface-ref name="Amplifier" scoped="" ref="0x413b8850"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x413b8850"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x411f5850"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x4138f748"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x413b73a8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x413b73a8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x413fa778"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x4138c708"/></from>
      <to><interface-ref name="I2CResource" scoped="" ref="0x413fe340"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x413fe340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413fa030"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x4138b010"/></from>
      <to><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x413febd8"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x413febd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x413f61e8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x413fcef0"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x413d7010"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x413d7010"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x413d36f8"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <from><interface-ref name="adc_get_data" scoped="" ref="0x413b6bd8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x413d0e18"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x413d6c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x413d6c68"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412a2010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x413d05e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413d6520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413d6520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a4470"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x413f61e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413fa030"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a4470"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x413fa778"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412a2010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x413eb998"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x413fcef0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x413efa90"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x411f6e68"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x413ee500"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x411f7a28"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x413ed010"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x411f7050"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x413eda78"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x411f8650"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x413ec4f0"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x411f5850"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x413ecf00"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x411f6490"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="CounterInit" scoped="" ref="0x41418e10"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x41414c78"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41415900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41411730"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="CounterControl" scoped="" ref="0x414152a0"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x414110f0"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><function-ref name="Plugged" scoped="" ref="0x414143f0"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x41410138"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41410308"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c38730"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x4140d010"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x41441528"/></to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x41441528"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x4082b9e8"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x4140fb70"/></from>
      <to><interface-ref name="IntPin" scoped="" ref="0x41442010"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x41442010"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x403ae750"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x4140e588"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x41442a00"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x41442a00"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x411f6490"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x4140f128"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x412b8840"/></to>
    </wire>
    <wire loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <from><interface-ref name="count_ready" scoped="" ref="0x4144ac28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4143fb10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a4470"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x4143e2e0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x412a2010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.9 2008/06/26 03:38:27 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DozerC" loc="19:DozerC.nc">
      <configuration/>
    </component>
    <component qname="TreeP" loc="13:TreeP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.12 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.18 $ $Date: 2008/06/24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:CC2420CsmaP.nc" safe="">
      <documentation loc="32:CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x40354ea8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.5 2008/06/11 00:46:27 razvanm Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008/06/26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008/06/26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008/06/23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.15 $ $Date: 2008/07/10 21:46:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="35(CC2420PacketC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b1f428"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <value cst="I:18">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="36(CC2420PacketC.DummyTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconTimerC" loc="36(DozerC.BeaconTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconWaitTimerC" loc="36(DozerC.BeaconWaitTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.ConnReqListenTimerC" loc="36(DozerC.ConnReqListenTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.ConnRepWaitTimerC" loc="36(DozerC.ConnRepWaitTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.NeighbourUpdateTimerC" loc="36(DozerC.NeighbourUpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.NeighbourUpdateStopTimerC" loc="36(DozerC.NeighbourUpdateStopTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconSenderC" loc="39(DozerC.BeaconSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.BeaconSenderC.AMQueueEntryP" loc="35(DozerC.BeaconSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.BeaconReceiverC" loc="35(DozerC.BeaconReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403521d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SchedulerP" loc="14:SchedulerP.nc">
      <module/>
    </component>
    <component qname="DozerC.PPBListenTimer0C" loc="36(DozerC.PPBListenTimer0C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.PPBListenTimer1C" loc="36(DozerC.PPBListenTimer1C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.PPBListenTimer2C" loc="36(DozerC.PPBListenTimer2C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.PPBListenTimer3C" loc="36(DozerC.PPBListenTimer3C):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.TDMAScheduleTimerC" loc="36(DozerC.TDMAScheduleTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.TDMASlotTimerC" loc="36(DozerC.TDMASlotTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DataManagerC" loc="12:DataManagerC.nc">
      <configuration/>
    </component>
    <component qname="DataManagerP" loc="10:DataManagerP.nc">
      <module/>
    </component>
    <component qname="DataManagerC.DataMessagePoolP" loc="41(DataManagerC.DataMessagePoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
            <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
          </type-tag>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DataManagerC.DataMessagePoolP.PoolP" loc="53(DataManagerC.DataMessagePoolP.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40fa88a8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DataManagerC.DataQueueP" loc="42(DataManagerC.DataQueueP):/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
              <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.SerialAMSenderC" loc="39(DozerC.SerialAMSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.SerialAMSenderC.AMQueueEntryP" loc="35(DozerC.SerialAMSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="37(SerialAMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.DataSenderC" loc="39(DozerC.DataSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DozerC.DataSenderC.AMQueueEntryP" loc="35(DozerC.DataSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DozerC.DataReceiverC" loc="35(DozerC.DataReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="uAgriP" loc="39:uAgriP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/sensorboard.h">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <configuration/>
    </component>
    <component qname="SamplerM" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/sensorboard.h">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.TimerMilliC" loc="36(SamplerC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.VoltageC" loc="29(SamplerC.VoltageC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.VoltageC.AdcReadClientC" loc="21(SamplerC.VoltageC.AdcReadClientC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.TempHumC" loc="15(SamplerC.TempHumC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
        <short>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard.</short>
        <long>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @author Gilman Tolles &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht15C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.TempHumC.SensirionSht15ReaderP" loc="16(SamplerC.TempHumC.SensirionSht15ReaderP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht15ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht15C" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
        <short>&#10; HalSensirionSht15C is an advanced access component for the&#10; Sensirion SHT15 model humidity and temperature sensor, available on&#10; the mda300CA sensor board.</short>
        <long>&#10; HalSensirionSht15C is an advanced access component for the&#10; Sensirion SHT15 model humidity and temperature sensor, available on&#10; the mda300CA sensor board. This component provides the SensirionSht15&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht15C.SensirionSht15LogicP" loc="24(HalSensirionSht15C.SensirionSht15LogicP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
        <short>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht15 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT15 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht15LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15C" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/mda300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; Revision: $Revision: 1.0 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.Int" loc="6(HplSensirionSht15C.Int):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15P" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <documentation loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
        <short>&#10; HplSensirionSht15P is a low-level component that controls power for&#10; the Sensirion SHT15 sensor on the mda300CA sensor board&#10;&#10; </short>
        <long>&#10; HplSensirionSht15P is a low-level component that controls power for&#10; the Sensirion SHT15 sensor on the mda300CA sensor board&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.TimerMilliC" loc="36(HplSensirionSht15C.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter" loc="73(HplSensirionSht15C.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht15.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter.Queue" loc="32(HplSensirionSht15C.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter.Arbiter" loc="49(HplSensirionSht15C.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht15C.TimerMilliC" loc="36(HalSensirionSht15C.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.DioC" loc="10(SamplerC.DioC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300DigitalC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300DigitalLogicP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="HplMDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300DigitalC.I2C" loc="43(HplMDA300DigitalC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="79(Atm128I2CMasterP.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="32(Atm128I2CMasterP.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="48(Atm128I2CMasterP.Power):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="44(Atm128I2CMasterP.Master):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300DigitalC.WarmupTimer" loc="36(HplMDA300DigitalC.WarmupTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.IBADC" loc="10(SamplerC.IBADC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300IBADCC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300IBADCLogicP" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MDA300IBADCSwitchC" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300IBADCSwitchC.I2C" loc="43(MDA300IBADCSwitchC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MDA300IBADCSwitchP" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCC.I2C" loc="43(HplMDA300IBADCC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCC.WarmupTimer" loc="36(HplMDA300IBADCC.WarmupTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.CounterC" loc="10(SamplerC.CounterC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300CounterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300CounterLogicP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300CounterC.I2C" loc="43(HplMDA300CounterC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403bd0e8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403bd300" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403bd518" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403c14f0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403c1718" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403c1940" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403c1b30" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40412878" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40412aa0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40412cc8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40412eb8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40785de0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40785de0"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40782030" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40787c20" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40787c20"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x4078f090" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4078f090"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x4078f250" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x407b38e8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x407b38e8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x407b3d30" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x407b3d30"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x407b7d70" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x407b7d70"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407d61e8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407d61e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407d6450" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407d6450"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407d68c0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407d68c0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x407d6b28" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x407d5010" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x407d5010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x407a4bc0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x407a4bc0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407dd038" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407dd038"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407dd2a0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407dd2a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407dd710" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407dd710"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x407dd978" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x408286d8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x40828900" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x40828b28" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40828d18" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4094de50" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40968d90" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40aec968" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40aec968"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b1f428" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b1f428"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b1f5e8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b1a6a8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b1a6a8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b1a868" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b01e68" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b01e68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b653a8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b653a8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40b65588" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40c5eb00" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40c846b8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40c75da0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40cc6260" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40fa88a8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40fa88a8"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40fa8ac8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40fa3d98" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40fa3d98"/></type-var>
        </typedef>
        <constant name="size" ref="0x40fa0010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40f91e60" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40f91e60"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40fc70f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40fb64f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x411275f0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x41124858" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x4114e528" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x41153940" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x41153940"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht15C" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
        <short>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard.</short>
        <long>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @author Gilman Tolles &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht15ReaderP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht15LogicP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
        <short>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht15 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT15 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4129d4e8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x40381db8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40381db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40381188" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40381188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40381360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40382ec0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40382ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4037cef0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4037cef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037f0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40382760" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40382760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40382938"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40382a18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40382af8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40382bd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40382cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40388548" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40388548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40388720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40388168" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40388168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40388340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40388950" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40388950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40388b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4038b010" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4038b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4038cc18" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4038cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40394c08" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40394c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40394de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x40394218" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x40394218"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403943f0"/>
        <function-ref name="isInput" scoped="" ref="0x403944d0"/>
        <function-ref name="toggle" scoped="" ref="0x403945b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40394690"/>
        <function-ref name="get" scoped="" ref="0x40394770"/>
        <function-ref name="makeOutput" scoped="" ref="0x40394850"/>
        <function-ref name="set" scoped="" ref="0x40394930"/>
        <function-ref name="clr" scoped="" ref="0x40394a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4038bba0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4038bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038bd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403b1750" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403b1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b1b28"/>
        <function-ref name="isInput" scoped="" ref="0x403b1c08"/>
        <function-ref name="toggle" scoped="" ref="0x403b1ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b1dc8"/>
        <function-ref name="get" scoped="" ref="0x403b1ea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ba010"/>
        <function-ref name="set" scoped="" ref="0x403ba0f0"/>
        <function-ref name="clr" scoped="" ref="0x403ba1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403a2d08" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403a2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a2ee0"/>
        <function-ref name="isInput" scoped="" ref="0x403ab010"/>
        <function-ref name="toggle" scoped="" ref="0x403ab0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ab1d0"/>
        <function-ref name="get" scoped="" ref="0x403ab2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ab390"/>
        <function-ref name="set" scoped="" ref="0x403ab470"/>
        <function-ref name="clr" scoped="" ref="0x403ab550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403af2f0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403af2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403af4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403af5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403af688"/>
        <function-ref name="isOutput" scoped="" ref="0x403af768"/>
        <function-ref name="get" scoped="" ref="0x403af848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403af928"/>
        <function-ref name="set" scoped="" ref="0x403afa08"/>
        <function-ref name="clr" scoped="" ref="0x403afae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403b44b0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403b44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b4688"/>
        <function-ref name="isInput" scoped="" ref="0x403b4768"/>
        <function-ref name="toggle" scoped="" ref="0x403b4848"/>
        <function-ref name="isOutput" scoped="" ref="0x403b4928"/>
        <function-ref name="get" scoped="" ref="0x403b4a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b4ae8"/>
        <function-ref name="set" scoped="" ref="0x403b4bc8"/>
        <function-ref name="clr" scoped="" ref="0x403b4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403968e0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403968e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40396ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40396b98"/>
        <function-ref name="toggle" scoped="" ref="0x40396c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40396d58"/>
        <function-ref name="get" scoped="" ref="0x40396e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40396f18"/>
        <function-ref name="set" scoped="" ref="0x4039d010"/>
        <function-ref name="clr" scoped="" ref="0x4039d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403b50a0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403b50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b5278"/>
        <function-ref name="isInput" scoped="" ref="0x403b5358"/>
        <function-ref name="toggle" scoped="" ref="0x403b5438"/>
        <function-ref name="isOutput" scoped="" ref="0x403b5518"/>
        <function-ref name="get" scoped="" ref="0x403b55f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b56d8"/>
        <function-ref name="set" scoped="" ref="0x403b57b8"/>
        <function-ref name="clr" scoped="" ref="0x403b5898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x4039dce8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x4039dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039dec0"/>
        <function-ref name="isInput" scoped="" ref="0x4039c010"/>
        <function-ref name="toggle" scoped="" ref="0x4039c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4039c1d0"/>
        <function-ref name="get" scoped="" ref="0x4039c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039c390"/>
        <function-ref name="set" scoped="" ref="0x4039c470"/>
        <function-ref name="clr" scoped="" ref="0x4039c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4039e4b0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4039e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039e688"/>
        <function-ref name="isInput" scoped="" ref="0x4039e768"/>
        <function-ref name="toggle" scoped="" ref="0x4039e848"/>
        <function-ref name="isOutput" scoped="" ref="0x4039e928"/>
        <function-ref name="get" scoped="" ref="0x4039ea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039eae8"/>
        <function-ref name="set" scoped="" ref="0x4039ebc8"/>
        <function-ref name="clr" scoped="" ref="0x4039eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403aac08" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403aac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403aade0"/>
        <function-ref name="isInput" scoped="" ref="0x403aaec0"/>
        <function-ref name="toggle" scoped="" ref="0x403a9010"/>
        <function-ref name="isOutput" scoped="" ref="0x403a90f0"/>
        <function-ref name="get" scoped="" ref="0x403a91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a92b0"/>
        <function-ref name="set" scoped="" ref="0x403a9390"/>
        <function-ref name="clr" scoped="" ref="0x403a9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403ad210" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403ad210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ad3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403ad4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403ad5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ad688"/>
        <function-ref name="get" scoped="" ref="0x403ad768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ad848"/>
        <function-ref name="set" scoped="" ref="0x403ad928"/>
        <function-ref name="clr" scoped="" ref="0x403ada08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40399670" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40399670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40399848"/>
        <function-ref name="isInput" scoped="" ref="0x40399928"/>
        <function-ref name="toggle" scoped="" ref="0x40399a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40399ae8"/>
        <function-ref name="get" scoped="" ref="0x40399bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40399ca8"/>
        <function-ref name="set" scoped="" ref="0x40399d88"/>
        <function-ref name="clr" scoped="" ref="0x40399e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x4039bc08" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x4039bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039bde0"/>
        <function-ref name="isInput" scoped="" ref="0x4039bec0"/>
        <function-ref name="toggle" scoped="" ref="0x4039a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4039a0f0"/>
        <function-ref name="get" scoped="" ref="0x4039a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039a2b0"/>
        <function-ref name="set" scoped="" ref="0x4039a390"/>
        <function-ref name="clr" scoped="" ref="0x4039a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403a42f0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403a42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a44c8"/>
        <function-ref name="isInput" scoped="" ref="0x403a45a8"/>
        <function-ref name="toggle" scoped="" ref="0x403a4688"/>
        <function-ref name="isOutput" scoped="" ref="0x403a4768"/>
        <function-ref name="get" scoped="" ref="0x403a4848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a4928"/>
        <function-ref name="set" scoped="" ref="0x403a4a08"/>
        <function-ref name="clr" scoped="" ref="0x403a4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403a8a98" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403a8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a8c70"/>
        <function-ref name="isInput" scoped="" ref="0x403a8d50"/>
        <function-ref name="toggle" scoped="" ref="0x403a8e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403a8f10"/>
        <function-ref name="get" scoped="" ref="0x403a7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a70f0"/>
        <function-ref name="set" scoped="" ref="0x403a71d0"/>
        <function-ref name="clr" scoped="" ref="0x403a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403b22f0" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b24c8"/>
        <function-ref name="isInput" scoped="" ref="0x403b25a8"/>
        <function-ref name="toggle" scoped="" ref="0x403b2688"/>
        <function-ref name="isOutput" scoped="" ref="0x403b2768"/>
        <function-ref name="get" scoped="" ref="0x403b2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b2928"/>
        <function-ref name="set" scoped="" ref="0x403b2a08"/>
        <function-ref name="clr" scoped="" ref="0x403b2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403b9830" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403b9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9a08"/>
        <function-ref name="isInput" scoped="" ref="0x403b9ae8"/>
        <function-ref name="toggle" scoped="" ref="0x403b9bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9ca8"/>
        <function-ref name="get" scoped="" ref="0x403b9d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b9e68"/>
        <function-ref name="set" scoped="" ref="0x403b8010"/>
        <function-ref name="clr" scoped="" ref="0x403b80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403a7ea8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403a7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b00c0"/>
        <function-ref name="isInput" scoped="" ref="0x403b01a0"/>
        <function-ref name="toggle" scoped="" ref="0x403b0280"/>
        <function-ref name="isOutput" scoped="" ref="0x403b0360"/>
        <function-ref name="get" scoped="" ref="0x403b0440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b0520"/>
        <function-ref name="set" scoped="" ref="0x403b0600"/>
        <function-ref name="clr" scoped="" ref="0x403b06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403974b0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403974b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40397688"/>
        <function-ref name="isInput" scoped="" ref="0x40397768"/>
        <function-ref name="toggle" scoped="" ref="0x40397848"/>
        <function-ref name="isOutput" scoped="" ref="0x40397928"/>
        <function-ref name="get" scoped="" ref="0x40397a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40397ae8"/>
        <function-ref name="set" scoped="" ref="0x40397bc8"/>
        <function-ref name="clr" scoped="" ref="0x40397ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403a1b18" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403a1b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a1cf0"/>
        <function-ref name="isInput" scoped="" ref="0x403a1dd0"/>
        <function-ref name="toggle" scoped="" ref="0x403a1eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a0010"/>
        <function-ref name="get" scoped="" ref="0x403a00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a01d0"/>
        <function-ref name="set" scoped="" ref="0x403a02b0"/>
        <function-ref name="clr" scoped="" ref="0x403a0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403ba3d0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403ba3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ba5a8"/>
        <function-ref name="isInput" scoped="" ref="0x403ba688"/>
        <function-ref name="toggle" scoped="" ref="0x403ba768"/>
        <function-ref name="isOutput" scoped="" ref="0x403ba848"/>
        <function-ref name="get" scoped="" ref="0x403ba928"/>
        <function-ref name="makeOutput" scoped="" ref="0x403baa08"/>
        <function-ref name="set" scoped="" ref="0x403baae8"/>
        <function-ref name="clr" scoped="" ref="0x403babc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x4039f010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x4039f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4039f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4039f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4039f488"/>
        <function-ref name="get" scoped="" ref="0x4039f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039f648"/>
        <function-ref name="set" scoped="" ref="0x4039f728"/>
        <function-ref name="clr" scoped="" ref="0x4039f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403ab750" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403ab750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ab928"/>
        <function-ref name="isInput" scoped="" ref="0x403aba08"/>
        <function-ref name="toggle" scoped="" ref="0x403abae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403abbc8"/>
        <function-ref name="get" scoped="" ref="0x403abca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403abd88"/>
        <function-ref name="set" scoped="" ref="0x403abe68"/>
        <function-ref name="clr" scoped="" ref="0x403aa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403afce8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403afce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403afec0"/>
        <function-ref name="isInput" scoped="" ref="0x403ae010"/>
        <function-ref name="toggle" scoped="" ref="0x403ae0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ae1d0"/>
        <function-ref name="get" scoped="" ref="0x403ae2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ae390"/>
        <function-ref name="set" scoped="" ref="0x403ae470"/>
        <function-ref name="clr" scoped="" ref="0x403ae550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403b4ea8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403b4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b30c0"/>
        <function-ref name="isInput" scoped="" ref="0x403b31a0"/>
        <function-ref name="toggle" scoped="" ref="0x403b3280"/>
        <function-ref name="isOutput" scoped="" ref="0x403b3360"/>
        <function-ref name="get" scoped="" ref="0x403b3440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b3520"/>
        <function-ref name="set" scoped="" ref="0x403b3600"/>
        <function-ref name="clr" scoped="" ref="0x403b36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4039d2f0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4039d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039d4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4039d5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4039d688"/>
        <function-ref name="isOutput" scoped="" ref="0x4039d768"/>
        <function-ref name="get" scoped="" ref="0x4039d848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039d928"/>
        <function-ref name="set" scoped="" ref="0x4039da08"/>
        <function-ref name="clr" scoped="" ref="0x4039dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x4039c750" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x4039c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039c928"/>
        <function-ref name="isInput" scoped="" ref="0x4039ca08"/>
        <function-ref name="toggle" scoped="" ref="0x4039cae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4039cbc8"/>
        <function-ref name="get" scoped="" ref="0x4039cca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039cd88"/>
        <function-ref name="set" scoped="" ref="0x4039ce68"/>
        <function-ref name="clr" scoped="" ref="0x4039b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4039eea8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4039eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a50c0"/>
        <function-ref name="isInput" scoped="" ref="0x403a51a0"/>
        <function-ref name="toggle" scoped="" ref="0x403a5280"/>
        <function-ref name="isOutput" scoped="" ref="0x403a5360"/>
        <function-ref name="get" scoped="" ref="0x403a5440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a5520"/>
        <function-ref name="set" scoped="" ref="0x403a5600"/>
        <function-ref name="clr" scoped="" ref="0x403a56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403a9670" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a9848"/>
        <function-ref name="isInput" scoped="" ref="0x403a9928"/>
        <function-ref name="toggle" scoped="" ref="0x403a9a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403a9ae8"/>
        <function-ref name="get" scoped="" ref="0x403a9bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a9ca8"/>
        <function-ref name="set" scoped="" ref="0x403a9d88"/>
        <function-ref name="clr" scoped="" ref="0x403a9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403adc08" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403adc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403adde0"/>
        <function-ref name="isInput" scoped="" ref="0x403adec0"/>
        <function-ref name="toggle" scoped="" ref="0x403ac010"/>
        <function-ref name="isOutput" scoped="" ref="0x403ac0f0"/>
        <function-ref name="get" scoped="" ref="0x403ac1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ac2b0"/>
        <function-ref name="set" scoped="" ref="0x403ac390"/>
        <function-ref name="clr" scoped="" ref="0x403ac470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403980a0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40398278"/>
        <function-ref name="isInput" scoped="" ref="0x40398358"/>
        <function-ref name="toggle" scoped="" ref="0x40398438"/>
        <function-ref name="isOutput" scoped="" ref="0x40398518"/>
        <function-ref name="get" scoped="" ref="0x403985f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403986d8"/>
        <function-ref name="set" scoped="" ref="0x403987b8"/>
        <function-ref name="clr" scoped="" ref="0x40398898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x4039a670" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x4039a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039a8c8"/>
        <function-ref name="isInput" scoped="" ref="0x4039a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x4039aa88"/>
        <function-ref name="isOutput" scoped="" ref="0x4039ab68"/>
        <function-ref name="get" scoped="" ref="0x4039ac48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039ad28"/>
        <function-ref name="set" scoped="" ref="0x4039ae08"/>
        <function-ref name="clr" scoped="" ref="0x4039aee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403a4ce8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403a4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a4ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403a3010"/>
        <function-ref name="toggle" scoped="" ref="0x403a30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a31d0"/>
        <function-ref name="get" scoped="" ref="0x403a32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a3390"/>
        <function-ref name="set" scoped="" ref="0x403a3470"/>
        <function-ref name="clr" scoped="" ref="0x403a3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403b2ce8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403b2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403b1010"/>
        <function-ref name="toggle" scoped="" ref="0x403b10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b11d0"/>
        <function-ref name="get" scoped="" ref="0x403b12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b1390"/>
        <function-ref name="set" scoped="" ref="0x403b1470"/>
        <function-ref name="clr" scoped="" ref="0x403b1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403a2210" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403a2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a24e8"/>
        <function-ref name="isInput" scoped="" ref="0x403a25c8"/>
        <function-ref name="toggle" scoped="" ref="0x403a26a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a2788"/>
        <function-ref name="get" scoped="" ref="0x403a2868"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a2948"/>
        <function-ref name="set" scoped="" ref="0x403a2a28"/>
        <function-ref name="clr" scoped="" ref="0x403a2b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403b08e0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403b08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403b0b98"/>
        <function-ref name="toggle" scoped="" ref="0x403b0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403b0d58"/>
        <function-ref name="get" scoped="" ref="0x403b0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b0f18"/>
        <function-ref name="set" scoped="" ref="0x403af010"/>
        <function-ref name="clr" scoped="" ref="0x403af0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403b5a98" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403b5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b5c70"/>
        <function-ref name="isInput" scoped="" ref="0x403b5d50"/>
        <function-ref name="toggle" scoped="" ref="0x403b5e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403b5f10"/>
        <function-ref name="get" scoped="" ref="0x403b4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b40f0"/>
        <function-ref name="set" scoped="" ref="0x403b41d0"/>
        <function-ref name="clr" scoped="" ref="0x403b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403b82f0" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403b82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b84c8"/>
        <function-ref name="isInput" scoped="" ref="0x403b85a8"/>
        <function-ref name="toggle" scoped="" ref="0x403b8688"/>
        <function-ref name="isOutput" scoped="" ref="0x403b8768"/>
        <function-ref name="get" scoped="" ref="0x403b8848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b8928"/>
        <function-ref name="set" scoped="" ref="0x403b8a08"/>
        <function-ref name="clr" scoped="" ref="0x403b8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x40397ea8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x40397ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403960c0"/>
        <function-ref name="isInput" scoped="" ref="0x403961a0"/>
        <function-ref name="toggle" scoped="" ref="0x40396280"/>
        <function-ref name="isOutput" scoped="" ref="0x40396360"/>
        <function-ref name="get" scoped="" ref="0x40396440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40396520"/>
        <function-ref name="set" scoped="" ref="0x40396600"/>
        <function-ref name="clr" scoped="" ref="0x403966e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403a0590" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403a0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a0768"/>
        <function-ref name="isInput" scoped="" ref="0x403a0848"/>
        <function-ref name="toggle" scoped="" ref="0x403a0928"/>
        <function-ref name="isOutput" scoped="" ref="0x403a0a08"/>
        <function-ref name="get" scoped="" ref="0x403a0ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a0bc8"/>
        <function-ref name="set" scoped="" ref="0x403a0ca8"/>
        <function-ref name="clr" scoped="" ref="0x403a0d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403ac670" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403ac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ac848"/>
        <function-ref name="isInput" scoped="" ref="0x403ac928"/>
        <function-ref name="toggle" scoped="" ref="0x403aca08"/>
        <function-ref name="isOutput" scoped="" ref="0x403acae8"/>
        <function-ref name="get" scoped="" ref="0x403acbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403acca8"/>
        <function-ref name="set" scoped="" ref="0x403acd88"/>
        <function-ref name="clr" scoped="" ref="0x403ace68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4039fa08" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4039fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x4039fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x4039fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x4039fe80"/>
        <function-ref name="get" scoped="" ref="0x4039e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039e0f0"/>
        <function-ref name="set" scoped="" ref="0x4039e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4039e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403aa210" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403aa210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403aa3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403aa4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403aa5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403aa688"/>
        <function-ref name="get" scoped="" ref="0x403aa768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403aa848"/>
        <function-ref name="set" scoped="" ref="0x403aa928"/>
        <function-ref name="clr" scoped="" ref="0x403aaa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403ae750" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403ae750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ae928"/>
        <function-ref name="isInput" scoped="" ref="0x403aea08"/>
        <function-ref name="toggle" scoped="" ref="0x403aeae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403aebc8"/>
        <function-ref name="get" scoped="" ref="0x403aeca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403aed88"/>
        <function-ref name="set" scoped="" ref="0x403aee68"/>
        <function-ref name="clr" scoped="" ref="0x403ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403b38e0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403b38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b3ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403b3b98"/>
        <function-ref name="toggle" scoped="" ref="0x403b3c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403b3d58"/>
        <function-ref name="get" scoped="" ref="0x403b3e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b3f18"/>
        <function-ref name="set" scoped="" ref="0x403b2010"/>
        <function-ref name="clr" scoped="" ref="0x403b20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x4038ac20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x4038ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4038adf8"/>
        <function-ref name="isInput" scoped="" ref="0x4038aed8"/>
        <function-ref name="toggle" scoped="" ref="0x40399010"/>
        <function-ref name="isOutput" scoped="" ref="0x403990f0"/>
        <function-ref name="get" scoped="" ref="0x403991d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403992b0"/>
        <function-ref name="set" scoped="" ref="0x40399390"/>
        <function-ref name="clr" scoped="" ref="0x40399470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x4039b210" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x4039b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039b3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4039b4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4039b5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4039b688"/>
        <function-ref name="get" scoped="" ref="0x4039b768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039b848"/>
        <function-ref name="set" scoped="" ref="0x4039b928"/>
        <function-ref name="clr" scoped="" ref="0x4039ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403a58e0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403a58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a5ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403a5b98"/>
        <function-ref name="toggle" scoped="" ref="0x403a5c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403a5d58"/>
        <function-ref name="get" scoped="" ref="0x403a5e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a5f18"/>
        <function-ref name="set" scoped="" ref="0x403a4010"/>
        <function-ref name="clr" scoped="" ref="0x403a40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403a80a0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403a80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a8278"/>
        <function-ref name="isInput" scoped="" ref="0x403a8358"/>
        <function-ref name="toggle" scoped="" ref="0x403a8438"/>
        <function-ref name="isOutput" scoped="" ref="0x403a8518"/>
        <function-ref name="get" scoped="" ref="0x403a85f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a86d8"/>
        <function-ref name="set" scoped="" ref="0x403a87b8"/>
        <function-ref name="clr" scoped="" ref="0x403a8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403badc8" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403badc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9010"/>
        <function-ref name="isInput" scoped="" ref="0x403b90f0"/>
        <function-ref name="toggle" scoped="" ref="0x403b91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b92b0"/>
        <function-ref name="get" scoped="" ref="0x403b9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b9470"/>
        <function-ref name="set" scoped="" ref="0x403b9550"/>
        <function-ref name="clr" scoped="" ref="0x403b9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403a74b0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403a74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a7688"/>
        <function-ref name="isInput" scoped="" ref="0x403a7768"/>
        <function-ref name="toggle" scoped="" ref="0x403a7848"/>
        <function-ref name="isOutput" scoped="" ref="0x403a7928"/>
        <function-ref name="get" scoped="" ref="0x403a7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a7ae8"/>
        <function-ref name="set" scoped="" ref="0x403a7bc8"/>
        <function-ref name="clr" scoped="" ref="0x403a7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403a3750" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403a3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a3928"/>
        <function-ref name="isInput" scoped="" ref="0x403a3a08"/>
        <function-ref name="toggle" scoped="" ref="0x403a3ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a3bc8"/>
        <function-ref name="get" scoped="" ref="0x403a3ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a3d88"/>
        <function-ref name="set" scoped="" ref="0x403a3e68"/>
        <function-ref name="clr" scoped="" ref="0x403a2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40398a98" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40398a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40398c70"/>
        <function-ref name="isInput" scoped="" ref="0x40398d50"/>
        <function-ref name="toggle" scoped="" ref="0x40398e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40398f10"/>
        <function-ref name="get" scoped="" ref="0x40397010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403970f0"/>
        <function-ref name="set" scoped="" ref="0x403971d0"/>
        <function-ref name="clr" scoped="" ref="0x403972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403a1120" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403a1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a12f8"/>
        <function-ref name="isInput" scoped="" ref="0x403a13d8"/>
        <function-ref name="toggle" scoped="" ref="0x403a14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a1598"/>
        <function-ref name="get" scoped="" ref="0x403a1678"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a1758"/>
        <function-ref name="set" scoped="" ref="0x403a1838"/>
        <function-ref name="clr" scoped="" ref="0x403a1918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403dfba8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403dfba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dfd80"/>
        <function-ref name="isInput" scoped="" ref="0x403dfe60"/>
        <function-ref name="toggle" scoped="" ref="0x403de010"/>
        <function-ref name="isOutput" scoped="" ref="0x403de0f0"/>
        <function-ref name="get" scoped="" ref="0x403de1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403de2b0"/>
        <function-ref name="set" scoped="" ref="0x403de390"/>
        <function-ref name="clr" scoped="" ref="0x403de470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403e6890" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403e6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6a68"/>
        <function-ref name="isInput" scoped="" ref="0x403e6b48"/>
        <function-ref name="toggle" scoped="" ref="0x403e6c28"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6d08"/>
        <function-ref name="get" scoped="" ref="0x403e6de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6ec8"/>
        <function-ref name="set" scoped="" ref="0x403e5010"/>
        <function-ref name="clr" scoped="" ref="0x403e50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403e08e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403e08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e0b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e0d58"/>
        <function-ref name="get" scoped="" ref="0x403e0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0f18"/>
        <function-ref name="set" scoped="" ref="0x403df010"/>
        <function-ref name="clr" scoped="" ref="0x403df0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403de5d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403de5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403de7a8"/>
        <function-ref name="isInput" scoped="" ref="0x403de888"/>
        <function-ref name="toggle" scoped="" ref="0x403de968"/>
        <function-ref name="isOutput" scoped="" ref="0x403dea48"/>
        <function-ref name="get" scoped="" ref="0x403deb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dec08"/>
        <function-ref name="set" scoped="" ref="0x403dece8"/>
        <function-ref name="clr" scoped="" ref="0x403dedc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403e5250" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403e5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5428"/>
        <function-ref name="isInput" scoped="" ref="0x403e5508"/>
        <function-ref name="toggle" scoped="" ref="0x403e55e8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e56c8"/>
        <function-ref name="get" scoped="" ref="0x403e57a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e5888"/>
        <function-ref name="set" scoped="" ref="0x403e5968"/>
        <function-ref name="clr" scoped="" ref="0x403e5a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403df250" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403df250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df428"/>
        <function-ref name="isInput" scoped="" ref="0x403df508"/>
        <function-ref name="toggle" scoped="" ref="0x403df5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x403df6c8"/>
        <function-ref name="get" scoped="" ref="0x403df7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df888"/>
        <function-ref name="set" scoped="" ref="0x403df968"/>
        <function-ref name="clr" scoped="" ref="0x403dfa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403def28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403def28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6110"/>
        <function-ref name="isInput" scoped="" ref="0x403e61f0"/>
        <function-ref name="toggle" scoped="" ref="0x403e62d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e63b0"/>
        <function-ref name="get" scoped="" ref="0x403e6490"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6570"/>
        <function-ref name="set" scoped="" ref="0x403e6650"/>
        <function-ref name="clr" scoped="" ref="0x403e6730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403e5ba8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403e5ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5d80"/>
        <function-ref name="isInput" scoped="" ref="0x403e5e60"/>
        <function-ref name="toggle" scoped="" ref="0x403e4010"/>
        <function-ref name="isOutput" scoped="" ref="0x403e40f0"/>
        <function-ref name="get" scoped="" ref="0x403e41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e42b0"/>
        <function-ref name="set" scoped="" ref="0x403e4390"/>
        <function-ref name="clr" scoped="" ref="0x403e4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41467080" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41467080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41467258"/>
        <function-ref name="isInput" scoped="" ref="0x41467338"/>
        <function-ref name="toggle" scoped="" ref="0x41467418"/>
        <function-ref name="isOutput" scoped="" ref="0x414674f8"/>
        <function-ref name="get" scoped="" ref="0x414675d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x414676b8"/>
        <function-ref name="set" scoped="" ref="0x41467798"/>
        <function-ref name="clr" scoped="" ref="0x41467878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41466a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41466a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41466c60"/>
        <function-ref name="isInput" scoped="" ref="0x41466d40"/>
        <function-ref name="toggle" scoped="" ref="0x41466e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41466f00"/>
        <function-ref name="get" scoped="" ref="0x41465010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414650f0"/>
        <function-ref name="set" scoped="" ref="0x414651d0"/>
        <function-ref name="clr" scoped="" ref="0x414652b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41464538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41464538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41464710"/>
        <function-ref name="isInput" scoped="" ref="0x414647f0"/>
        <function-ref name="toggle" scoped="" ref="0x414648d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414649b0"/>
        <function-ref name="get" scoped="" ref="0x41464a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41464b70"/>
        <function-ref name="set" scoped="" ref="0x41464c50"/>
        <function-ref name="clr" scoped="" ref="0x41464d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41462010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41462010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414621e8"/>
        <function-ref name="isInput" scoped="" ref="0x414622c8"/>
        <function-ref name="toggle" scoped="" ref="0x414623a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41462488"/>
        <function-ref name="get" scoped="" ref="0x41462568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41462648"/>
        <function-ref name="set" scoped="" ref="0x41462728"/>
        <function-ref name="clr" scoped="" ref="0x41462808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414619e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414619e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41461bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41461ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41461d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41461e60"/>
        <function-ref name="get" scoped="" ref="0x41460010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414600f0"/>
        <function-ref name="set" scoped="" ref="0x414601d0"/>
        <function-ref name="clr" scoped="" ref="0x414602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4145f538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4145f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4145f710"/>
        <function-ref name="isInput" scoped="" ref="0x4145f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4145f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4145f9b0"/>
        <function-ref name="get" scoped="" ref="0x4145fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4145fb70"/>
        <function-ref name="set" scoped="" ref="0x4145fc50"/>
        <function-ref name="clr" scoped="" ref="0x4145fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4145d010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4145d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4145d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4145d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4145d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4145d488"/>
        <function-ref name="get" scoped="" ref="0x4145d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4145d648"/>
        <function-ref name="set" scoped="" ref="0x4145d728"/>
        <function-ref name="clr" scoped="" ref="0x4145d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4145c9e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4145c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4145cbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4145cca0"/>
        <function-ref name="toggle" scoped="" ref="0x4145cd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4145ce60"/>
        <function-ref name="get" scoped="" ref="0x4145b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4145b0f0"/>
        <function-ref name="set" scoped="" ref="0x4145b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4145b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403ea4f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403ea4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ea6c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ea7a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ea888"/>
        <function-ref name="isOutput" scoped="" ref="0x403ea968"/>
        <function-ref name="get" scoped="" ref="0x403eaa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eab28"/>
        <function-ref name="set" scoped="" ref="0x403eac08"/>
        <function-ref name="clr" scoped="" ref="0x403eace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403e8170" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403e8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e8348"/>
        <function-ref name="isInput" scoped="" ref="0x403e8428"/>
        <function-ref name="toggle" scoped="" ref="0x403e8508"/>
        <function-ref name="isOutput" scoped="" ref="0x403e85e8"/>
        <function-ref name="get" scoped="" ref="0x403e86c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e87a8"/>
        <function-ref name="set" scoped="" ref="0x403e8888"/>
        <function-ref name="clr" scoped="" ref="0x403e8968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403eb228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403eb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eb400"/>
        <function-ref name="isInput" scoped="" ref="0x403eb4e0"/>
        <function-ref name="toggle" scoped="" ref="0x403eb5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x403eb6a0"/>
        <function-ref name="get" scoped="" ref="0x403eb780"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eb860"/>
        <function-ref name="set" scoped="" ref="0x403eb940"/>
        <function-ref name="clr" scoped="" ref="0x403eba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403eae48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403eae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e9050"/>
        <function-ref name="isInput" scoped="" ref="0x403e9130"/>
        <function-ref name="toggle" scoped="" ref="0x403e9210"/>
        <function-ref name="isOutput" scoped="" ref="0x403e92f0"/>
        <function-ref name="get" scoped="" ref="0x403e93d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e94b0"/>
        <function-ref name="set" scoped="" ref="0x403e9590"/>
        <function-ref name="clr" scoped="" ref="0x403e9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403e8ac8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403e8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e8ca0"/>
        <function-ref name="isInput" scoped="" ref="0x403e8d80"/>
        <function-ref name="toggle" scoped="" ref="0x403e8e60"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1010"/>
        <function-ref name="get" scoped="" ref="0x403f10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f11d0"/>
        <function-ref name="set" scoped="" ref="0x403f12b0"/>
        <function-ref name="clr" scoped="" ref="0x403f1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403ebb80" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403ebb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ebd58"/>
        <function-ref name="isInput" scoped="" ref="0x403ebe38"/>
        <function-ref name="toggle" scoped="" ref="0x403ebf18"/>
        <function-ref name="isOutput" scoped="" ref="0x403ea010"/>
        <function-ref name="get" scoped="" ref="0x403ea0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ea1d0"/>
        <function-ref name="set" scoped="" ref="0x403ea2b0"/>
        <function-ref name="clr" scoped="" ref="0x403ea390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403e97d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403e97d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e99a8"/>
        <function-ref name="isInput" scoped="" ref="0x403e9a88"/>
        <function-ref name="toggle" scoped="" ref="0x403e9b68"/>
        <function-ref name="isOutput" scoped="" ref="0x403e9c48"/>
        <function-ref name="get" scoped="" ref="0x403e9d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e9e08"/>
        <function-ref name="set" scoped="" ref="0x403e9ee8"/>
        <function-ref name="clr" scoped="" ref="0x403e8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403f14f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403f14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f16c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f17a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f1888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1968"/>
        <function-ref name="get" scoped="" ref="0x403f1a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f1b28"/>
        <function-ref name="set" scoped="" ref="0x403f1c08"/>
        <function-ref name="clr" scoped="" ref="0x403f1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41482de8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41482de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4147e010"/>
        <function-ref name="isInput" scoped="" ref="0x4147e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4147e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4147e2b0"/>
        <function-ref name="get" scoped="" ref="0x4147e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4147e470"/>
        <function-ref name="set" scoped="" ref="0x4147e550"/>
        <function-ref name="clr" scoped="" ref="0x4147e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4147d7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4147d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4147d9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4147dab0"/>
        <function-ref name="toggle" scoped="" ref="0x4147db90"/>
        <function-ref name="isOutput" scoped="" ref="0x4147dc70"/>
        <function-ref name="get" scoped="" ref="0x4147dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4147de30"/>
        <function-ref name="set" scoped="" ref="0x4147df10"/>
        <function-ref name="clr" scoped="" ref="0x4147c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4147b228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4147b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4147b400"/>
        <function-ref name="isInput" scoped="" ref="0x4147b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4147b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4147b6a0"/>
        <function-ref name="get" scoped="" ref="0x4147b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4147b860"/>
        <function-ref name="set" scoped="" ref="0x4147b940"/>
        <function-ref name="clr" scoped="" ref="0x4147ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4147ac08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4147ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4147ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4147aec0"/>
        <function-ref name="toggle" scoped="" ref="0x41478010"/>
        <function-ref name="isOutput" scoped="" ref="0x414780f0"/>
        <function-ref name="get" scoped="" ref="0x414781d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x414782b0"/>
        <function-ref name="set" scoped="" ref="0x41478390"/>
        <function-ref name="clr" scoped="" ref="0x41478470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414776c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414776c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41477898"/>
        <function-ref name="isInput" scoped="" ref="0x41477978"/>
        <function-ref name="toggle" scoped="" ref="0x41477a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41477b38"/>
        <function-ref name="get" scoped="" ref="0x41477c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41477cf8"/>
        <function-ref name="set" scoped="" ref="0x41477dd8"/>
        <function-ref name="clr" scoped="" ref="0x41477eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414c10b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414c10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414c1288"/>
        <function-ref name="isInput" scoped="" ref="0x414c1368"/>
        <function-ref name="toggle" scoped="" ref="0x414c1448"/>
        <function-ref name="isOutput" scoped="" ref="0x414c1528"/>
        <function-ref name="get" scoped="" ref="0x414c1608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414c16e8"/>
        <function-ref name="set" scoped="" ref="0x414c17c8"/>
        <function-ref name="clr" scoped="" ref="0x414c18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414c0a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414c0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414c0c60"/>
        <function-ref name="isInput" scoped="" ref="0x414c0d40"/>
        <function-ref name="toggle" scoped="" ref="0x414c0e20"/>
        <function-ref name="isOutput" scoped="" ref="0x414c0f00"/>
        <function-ref name="get" scoped="" ref="0x414bf010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414bf0f0"/>
        <function-ref name="set" scoped="" ref="0x414bf1d0"/>
        <function-ref name="clr" scoped="" ref="0x414bf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414be538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414be538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414be710"/>
        <function-ref name="isInput" scoped="" ref="0x414be7f0"/>
        <function-ref name="toggle" scoped="" ref="0x414be8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414be9b0"/>
        <function-ref name="get" scoped="" ref="0x414bea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414beb70"/>
        <function-ref name="set" scoped="" ref="0x414bec50"/>
        <function-ref name="clr" scoped="" ref="0x414bed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403f6e48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403f6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f5050"/>
        <function-ref name="isInput" scoped="" ref="0x403f5130"/>
        <function-ref name="toggle" scoped="" ref="0x403f5210"/>
        <function-ref name="isOutput" scoped="" ref="0x403f52f0"/>
        <function-ref name="get" scoped="" ref="0x403f53d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f54b0"/>
        <function-ref name="set" scoped="" ref="0x403f5590"/>
        <function-ref name="clr" scoped="" ref="0x403f5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403f4ac8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403f4ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f4ca0"/>
        <function-ref name="isInput" scoped="" ref="0x403f4d80"/>
        <function-ref name="toggle" scoped="" ref="0x403f4e60"/>
        <function-ref name="isOutput" scoped="" ref="0x403f3010"/>
        <function-ref name="get" scoped="" ref="0x403f30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f31d0"/>
        <function-ref name="set" scoped="" ref="0x403f32b0"/>
        <function-ref name="clr" scoped="" ref="0x403f3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403edb00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403edb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403edcd8"/>
        <function-ref name="isInput" scoped="" ref="0x403eddb8"/>
        <function-ref name="toggle" scoped="" ref="0x403ede98"/>
        <function-ref name="isOutput" scoped="" ref="0x403f6010"/>
        <function-ref name="get" scoped="" ref="0x403f60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f61d0"/>
        <function-ref name="set" scoped="" ref="0x403f62b0"/>
        <function-ref name="clr" scoped="" ref="0x403f6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403f57d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403f57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f59a8"/>
        <function-ref name="isInput" scoped="" ref="0x403f5a88"/>
        <function-ref name="toggle" scoped="" ref="0x403f5b68"/>
        <function-ref name="isOutput" scoped="" ref="0x403f5c48"/>
        <function-ref name="get" scoped="" ref="0x403f5d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f5e08"/>
        <function-ref name="set" scoped="" ref="0x403f5ee8"/>
        <function-ref name="clr" scoped="" ref="0x403f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403f34f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403f34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f36c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f37a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f3888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f3968"/>
        <function-ref name="get" scoped="" ref="0x403f3a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f3b28"/>
        <function-ref name="set" scoped="" ref="0x403f3c08"/>
        <function-ref name="clr" scoped="" ref="0x403f3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403f64f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403f64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f66c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f67a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f6888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f6968"/>
        <function-ref name="get" scoped="" ref="0x403f6a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f6b28"/>
        <function-ref name="set" scoped="" ref="0x403f6c08"/>
        <function-ref name="clr" scoped="" ref="0x403f6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403f4170" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403f4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f4348"/>
        <function-ref name="isInput" scoped="" ref="0x403f4428"/>
        <function-ref name="toggle" scoped="" ref="0x403f4508"/>
        <function-ref name="isOutput" scoped="" ref="0x403f45e8"/>
        <function-ref name="get" scoped="" ref="0x403f46c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f47a8"/>
        <function-ref name="set" scoped="" ref="0x403f4888"/>
        <function-ref name="clr" scoped="" ref="0x403f4968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403f3e48" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403f3e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f2050"/>
        <function-ref name="isInput" scoped="" ref="0x403f2130"/>
        <function-ref name="toggle" scoped="" ref="0x403f2210"/>
        <function-ref name="isOutput" scoped="" ref="0x403f22f0"/>
        <function-ref name="get" scoped="" ref="0x403f23d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f24b0"/>
        <function-ref name="set" scoped="" ref="0x403f2590"/>
        <function-ref name="clr" scoped="" ref="0x403f2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414df938" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414df938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414dfb10"/>
        <function-ref name="isInput" scoped="" ref="0x414dfbf0"/>
        <function-ref name="toggle" scoped="" ref="0x414dfcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x414dfdb0"/>
        <function-ref name="get" scoped="" ref="0x414dfe90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414de010"/>
        <function-ref name="set" scoped="" ref="0x414de0f0"/>
        <function-ref name="clr" scoped="" ref="0x414de1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414dd3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414dd3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414dd588"/>
        <function-ref name="isInput" scoped="" ref="0x414dd668"/>
        <function-ref name="toggle" scoped="" ref="0x414dd748"/>
        <function-ref name="isOutput" scoped="" ref="0x414dd828"/>
        <function-ref name="get" scoped="" ref="0x414dd908"/>
        <function-ref name="makeOutput" scoped="" ref="0x414dd9e8"/>
        <function-ref name="set" scoped="" ref="0x414ddac8"/>
        <function-ref name="clr" scoped="" ref="0x414ddba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414dcd70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414dcd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414db010"/>
        <function-ref name="isInput" scoped="" ref="0x414db0f0"/>
        <function-ref name="toggle" scoped="" ref="0x414db1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414db2b0"/>
        <function-ref name="get" scoped="" ref="0x414db390"/>
        <function-ref name="makeOutput" scoped="" ref="0x414db470"/>
        <function-ref name="set" scoped="" ref="0x414db550"/>
        <function-ref name="clr" scoped="" ref="0x414db630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414da7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414da7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414da9d0"/>
        <function-ref name="isInput" scoped="" ref="0x414daab0"/>
        <function-ref name="toggle" scoped="" ref="0x414dab90"/>
        <function-ref name="isOutput" scoped="" ref="0x414dac70"/>
        <function-ref name="get" scoped="" ref="0x414dad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x414dae30"/>
        <function-ref name="set" scoped="" ref="0x414daf10"/>
        <function-ref name="clr" scoped="" ref="0x414d9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414d8228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414d8228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414d8400"/>
        <function-ref name="isInput" scoped="" ref="0x414d84e0"/>
        <function-ref name="toggle" scoped="" ref="0x414d85c0"/>
        <function-ref name="isOutput" scoped="" ref="0x414d86a0"/>
        <function-ref name="get" scoped="" ref="0x414d8780"/>
        <function-ref name="makeOutput" scoped="" ref="0x414d8860"/>
        <function-ref name="set" scoped="" ref="0x414d8940"/>
        <function-ref name="clr" scoped="" ref="0x414d8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414d7c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414d7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414d7de0"/>
        <function-ref name="isInput" scoped="" ref="0x414d7ec0"/>
        <function-ref name="toggle" scoped="" ref="0x414d6010"/>
        <function-ref name="isOutput" scoped="" ref="0x414d60f0"/>
        <function-ref name="get" scoped="" ref="0x414d61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x414d62b0"/>
        <function-ref name="set" scoped="" ref="0x414d6390"/>
        <function-ref name="clr" scoped="" ref="0x414d6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414d56c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414d56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414d5898"/>
        <function-ref name="isInput" scoped="" ref="0x414d5978"/>
        <function-ref name="toggle" scoped="" ref="0x414d5a58"/>
        <function-ref name="isOutput" scoped="" ref="0x414d5b38"/>
        <function-ref name="get" scoped="" ref="0x414d5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x414d5cf8"/>
        <function-ref name="set" scoped="" ref="0x414d5dd8"/>
        <function-ref name="clr" scoped="" ref="0x414d5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414d30b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414d30b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414d3288"/>
        <function-ref name="isInput" scoped="" ref="0x414d3368"/>
        <function-ref name="toggle" scoped="" ref="0x414d3448"/>
        <function-ref name="isOutput" scoped="" ref="0x414d3528"/>
        <function-ref name="get" scoped="" ref="0x414d3608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414d36e8"/>
        <function-ref name="set" scoped="" ref="0x414d37c8"/>
        <function-ref name="clr" scoped="" ref="0x414d38a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403f76b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403f76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f7888"/>
        <function-ref name="isInput" scoped="" ref="0x403f7968"/>
        <function-ref name="toggle" scoped="" ref="0x403f7a48"/>
        <function-ref name="isOutput" scoped="" ref="0x403f7b28"/>
        <function-ref name="get" scoped="" ref="0x403f7c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f7ce8"/>
        <function-ref name="set" scoped="" ref="0x403f7dc8"/>
        <function-ref name="clr" scoped="" ref="0x403f7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403ff330" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403ff330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ff508"/>
        <function-ref name="isInput" scoped="" ref="0x403ff5e8"/>
        <function-ref name="toggle" scoped="" ref="0x403ff6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ff7a8"/>
        <function-ref name="get" scoped="" ref="0x403ff888"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ff968"/>
        <function-ref name="set" scoped="" ref="0x403ffa48"/>
        <function-ref name="clr" scoped="" ref="0x403ffb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403f83d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403f83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f85b0"/>
        <function-ref name="isInput" scoped="" ref="0x403f8690"/>
        <function-ref name="toggle" scoped="" ref="0x403f8770"/>
        <function-ref name="isOutput" scoped="" ref="0x403f8850"/>
        <function-ref name="get" scoped="" ref="0x403f8930"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f8a10"/>
        <function-ref name="set" scoped="" ref="0x403f8af0"/>
        <function-ref name="clr" scoped="" ref="0x403f8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40400030" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40400030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40400208"/>
        <function-ref name="isInput" scoped="" ref="0x404002e8"/>
        <function-ref name="toggle" scoped="" ref="0x404003c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404004a8"/>
        <function-ref name="get" scoped="" ref="0x40400588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40400668"/>
        <function-ref name="set" scoped="" ref="0x40400748"/>
        <function-ref name="clr" scoped="" ref="0x40400828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403ffc88" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403ffc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ffe60"/>
        <function-ref name="isInput" scoped="" ref="0x403fe010"/>
        <function-ref name="toggle" scoped="" ref="0x403fe0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403fe1d0"/>
        <function-ref name="get" scoped="" ref="0x403fe2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fe390"/>
        <function-ref name="set" scoped="" ref="0x403fe470"/>
        <function-ref name="clr" scoped="" ref="0x403fe550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403f8d30" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403f8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f8f08"/>
        <function-ref name="isInput" scoped="" ref="0x403f7010"/>
        <function-ref name="toggle" scoped="" ref="0x403f70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403f71d0"/>
        <function-ref name="get" scoped="" ref="0x403f72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f7390"/>
        <function-ref name="set" scoped="" ref="0x403f7470"/>
        <function-ref name="clr" scoped="" ref="0x403f7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40400988" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40400988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40400b60"/>
        <function-ref name="isInput" scoped="" ref="0x40400c40"/>
        <function-ref name="toggle" scoped="" ref="0x40400d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40400e00"/>
        <function-ref name="get" scoped="" ref="0x40400ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ff010"/>
        <function-ref name="set" scoped="" ref="0x403ff0f0"/>
        <function-ref name="clr" scoped="" ref="0x403ff1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403fe6b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403fe6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fe888"/>
        <function-ref name="isInput" scoped="" ref="0x403fe968"/>
        <function-ref name="toggle" scoped="" ref="0x403fea48"/>
        <function-ref name="isOutput" scoped="" ref="0x403feb28"/>
        <function-ref name="get" scoped="" ref="0x403fec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fece8"/>
        <function-ref name="set" scoped="" ref="0x403fedc8"/>
        <function-ref name="clr" scoped="" ref="0x403feea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f5538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f5538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f5710"/>
        <function-ref name="isInput" scoped="" ref="0x414f57f0"/>
        <function-ref name="toggle" scoped="" ref="0x414f58d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414f59b0"/>
        <function-ref name="get" scoped="" ref="0x414f5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414f5b70"/>
        <function-ref name="set" scoped="" ref="0x414f5c50"/>
        <function-ref name="clr" scoped="" ref="0x414f5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f3010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f31e8"/>
        <function-ref name="isInput" scoped="" ref="0x414f32c8"/>
        <function-ref name="toggle" scoped="" ref="0x414f33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x414f3488"/>
        <function-ref name="get" scoped="" ref="0x414f3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x414f3648"/>
        <function-ref name="set" scoped="" ref="0x414f3728"/>
        <function-ref name="clr" scoped="" ref="0x414f3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f29e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f29e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f2bc0"/>
        <function-ref name="isInput" scoped="" ref="0x414f2ca0"/>
        <function-ref name="toggle" scoped="" ref="0x414f2d80"/>
        <function-ref name="isOutput" scoped="" ref="0x414f2e60"/>
        <function-ref name="get" scoped="" ref="0x414f0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414f00f0"/>
        <function-ref name="set" scoped="" ref="0x414f01d0"/>
        <function-ref name="clr" scoped="" ref="0x414f02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414ef538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414ef538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414ef710"/>
        <function-ref name="isInput" scoped="" ref="0x414ef7f0"/>
        <function-ref name="toggle" scoped="" ref="0x414ef8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414ef9b0"/>
        <function-ref name="get" scoped="" ref="0x414efa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414efb70"/>
        <function-ref name="set" scoped="" ref="0x414efc50"/>
        <function-ref name="clr" scoped="" ref="0x414efd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414ed010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414ed1e8"/>
        <function-ref name="isInput" scoped="" ref="0x414ed2c8"/>
        <function-ref name="toggle" scoped="" ref="0x414ed3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x414ed488"/>
        <function-ref name="get" scoped="" ref="0x414ed568"/>
        <function-ref name="makeOutput" scoped="" ref="0x414ed648"/>
        <function-ref name="set" scoped="" ref="0x414ed728"/>
        <function-ref name="clr" scoped="" ref="0x414ed808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414ec9e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414ec9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414ecbc0"/>
        <function-ref name="isInput" scoped="" ref="0x414ecca0"/>
        <function-ref name="toggle" scoped="" ref="0x414ecd80"/>
        <function-ref name="isOutput" scoped="" ref="0x414ece60"/>
        <function-ref name="get" scoped="" ref="0x414eb010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414eb0f0"/>
        <function-ref name="set" scoped="" ref="0x414eb1d0"/>
        <function-ref name="clr" scoped="" ref="0x414eb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414ea538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414ea538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414ea710"/>
        <function-ref name="isInput" scoped="" ref="0x414ea7f0"/>
        <function-ref name="toggle" scoped="" ref="0x414ea8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414ea9b0"/>
        <function-ref name="get" scoped="" ref="0x414eaa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414eab70"/>
        <function-ref name="set" scoped="" ref="0x414eac50"/>
        <function-ref name="clr" scoped="" ref="0x414ead30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41536010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41536010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415361e8"/>
        <function-ref name="isInput" scoped="" ref="0x415362c8"/>
        <function-ref name="toggle" scoped="" ref="0x415363a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41536488"/>
        <function-ref name="get" scoped="" ref="0x41536568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41536648"/>
        <function-ref name="set" scoped="" ref="0x41536728"/>
        <function-ref name="clr" scoped="" ref="0x41536808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40403170" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40403170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403348"/>
        <function-ref name="isInput" scoped="" ref="0x40403428"/>
        <function-ref name="toggle" scoped="" ref="0x40403508"/>
        <function-ref name="isOutput" scoped="" ref="0x404035e8"/>
        <function-ref name="get" scoped="" ref="0x404036c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404037a8"/>
        <function-ref name="set" scoped="" ref="0x40403888"/>
        <function-ref name="clr" scoped="" ref="0x40403968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40401e48" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40401e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a050"/>
        <function-ref name="isInput" scoped="" ref="0x4040a130"/>
        <function-ref name="toggle" scoped="" ref="0x4040a210"/>
        <function-ref name="isOutput" scoped="" ref="0x4040a2f0"/>
        <function-ref name="get" scoped="" ref="0x4040a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040a4b0"/>
        <function-ref name="set" scoped="" ref="0x4040a590"/>
        <function-ref name="clr" scoped="" ref="0x4040a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40405dc8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40405dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404010"/>
        <function-ref name="isInput" scoped="" ref="0x404040f0"/>
        <function-ref name="toggle" scoped="" ref="0x404041d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404042b0"/>
        <function-ref name="get" scoped="" ref="0x40404390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404470"/>
        <function-ref name="set" scoped="" ref="0x40404550"/>
        <function-ref name="clr" scoped="" ref="0x40404630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40403ac8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40403ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40403d80"/>
        <function-ref name="toggle" scoped="" ref="0x40403e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40401010"/>
        <function-ref name="get" scoped="" ref="0x404010f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404011d0"/>
        <function-ref name="set" scoped="" ref="0x404012b0"/>
        <function-ref name="clr" scoped="" ref="0x40401390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4040a7d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4040a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4040aa88"/>
        <function-ref name="toggle" scoped="" ref="0x4040ab68"/>
        <function-ref name="isOutput" scoped="" ref="0x4040ac48"/>
        <function-ref name="get" scoped="" ref="0x4040ad28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040ae08"/>
        <function-ref name="set" scoped="" ref="0x4040aee8"/>
        <function-ref name="clr" scoped="" ref="0x40409010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40404790" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40404790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404968"/>
        <function-ref name="isInput" scoped="" ref="0x40404a48"/>
        <function-ref name="toggle" scoped="" ref="0x40404b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40404c08"/>
        <function-ref name="get" scoped="" ref="0x40404ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404dc8"/>
        <function-ref name="set" scoped="" ref="0x40404ea8"/>
        <function-ref name="clr" scoped="" ref="0x40403010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404014f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404014f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404016c8"/>
        <function-ref name="isInput" scoped="" ref="0x404017a8"/>
        <function-ref name="toggle" scoped="" ref="0x40401888"/>
        <function-ref name="isOutput" scoped="" ref="0x40401968"/>
        <function-ref name="get" scoped="" ref="0x40401a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40401b28"/>
        <function-ref name="set" scoped="" ref="0x40401c08"/>
        <function-ref name="clr" scoped="" ref="0x40401ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40409170" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40409170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409348"/>
        <function-ref name="isInput" scoped="" ref="0x40409428"/>
        <function-ref name="toggle" scoped="" ref="0x40409508"/>
        <function-ref name="isOutput" scoped="" ref="0x404095e8"/>
        <function-ref name="get" scoped="" ref="0x404096c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404097a8"/>
        <function-ref name="set" scoped="" ref="0x40409888"/>
        <function-ref name="clr" scoped="" ref="0x40409968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41559418" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41559418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415595f0"/>
        <function-ref name="isInput" scoped="" ref="0x415596d0"/>
        <function-ref name="toggle" scoped="" ref="0x415597b0"/>
        <function-ref name="isOutput" scoped="" ref="0x41559890"/>
        <function-ref name="get" scoped="" ref="0x41559970"/>
        <function-ref name="makeOutput" scoped="" ref="0x41559a50"/>
        <function-ref name="set" scoped="" ref="0x41559b30"/>
        <function-ref name="clr" scoped="" ref="0x41559c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41558de0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41558de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41557010"/>
        <function-ref name="isInput" scoped="" ref="0x415570f0"/>
        <function-ref name="toggle" scoped="" ref="0x415571d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415572b0"/>
        <function-ref name="get" scoped="" ref="0x41557390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41557470"/>
        <function-ref name="set" scoped="" ref="0x41557550"/>
        <function-ref name="clr" scoped="" ref="0x41557630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415567f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415567f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415569d0"/>
        <function-ref name="isInput" scoped="" ref="0x41556ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41556b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41556c70"/>
        <function-ref name="get" scoped="" ref="0x41556d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41556e30"/>
        <function-ref name="set" scoped="" ref="0x41556f10"/>
        <function-ref name="clr" scoped="" ref="0x41555010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41554228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41554228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41554400"/>
        <function-ref name="isInput" scoped="" ref="0x415544e0"/>
        <function-ref name="toggle" scoped="" ref="0x415545c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415546a0"/>
        <function-ref name="get" scoped="" ref="0x41554780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41554860"/>
        <function-ref name="set" scoped="" ref="0x41554940"/>
        <function-ref name="clr" scoped="" ref="0x41554a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41553c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41553c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41553de0"/>
        <function-ref name="isInput" scoped="" ref="0x41553ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41552010"/>
        <function-ref name="isOutput" scoped="" ref="0x415520f0"/>
        <function-ref name="get" scoped="" ref="0x415521d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x415522b0"/>
        <function-ref name="set" scoped="" ref="0x41552390"/>
        <function-ref name="clr" scoped="" ref="0x41552470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415516c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415516c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41551898"/>
        <function-ref name="isInput" scoped="" ref="0x41551978"/>
        <function-ref name="toggle" scoped="" ref="0x41551a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41551b38"/>
        <function-ref name="get" scoped="" ref="0x41551c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41551cf8"/>
        <function-ref name="set" scoped="" ref="0x41551dd8"/>
        <function-ref name="clr" scoped="" ref="0x41551eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4154f0b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4154f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4154f288"/>
        <function-ref name="isInput" scoped="" ref="0x4154f368"/>
        <function-ref name="toggle" scoped="" ref="0x4154f448"/>
        <function-ref name="isOutput" scoped="" ref="0x4154f528"/>
        <function-ref name="get" scoped="" ref="0x4154f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4154f6e8"/>
        <function-ref name="set" scoped="" ref="0x4154f7c8"/>
        <function-ref name="clr" scoped="" ref="0x4154f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4154ea88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4154ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4154ec60"/>
        <function-ref name="isInput" scoped="" ref="0x4154ed40"/>
        <function-ref name="toggle" scoped="" ref="0x4154ee20"/>
        <function-ref name="isOutput" scoped="" ref="0x4154ef00"/>
        <function-ref name="get" scoped="" ref="0x4154d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4154d0f0"/>
        <function-ref name="set" scoped="" ref="0x4154d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4154d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4040f7f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4040f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f9c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040faa8"/>
        <function-ref name="toggle" scoped="" ref="0x4040fb88"/>
        <function-ref name="isOutput" scoped="" ref="0x4040fc68"/>
        <function-ref name="get" scoped="" ref="0x4040fd48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040fe28"/>
        <function-ref name="set" scoped="" ref="0x4040ff08"/>
        <function-ref name="clr" scoped="" ref="0x4040e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4040d4f0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4040d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4040d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d968"/>
        <function-ref name="get" scoped="" ref="0x4040da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040db28"/>
        <function-ref name="set" scoped="" ref="0x4040dc08"/>
        <function-ref name="clr" scoped="" ref="0x4040dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40406518" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40406518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404066f0"/>
        <function-ref name="isInput" scoped="" ref="0x404067d0"/>
        <function-ref name="toggle" scoped="" ref="0x404068b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40406990"/>
        <function-ref name="get" scoped="" ref="0x40406a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406b50"/>
        <function-ref name="set" scoped="" ref="0x40406c30"/>
        <function-ref name="clr" scoped="" ref="0x40406d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4040e170" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4040e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e348"/>
        <function-ref name="isInput" scoped="" ref="0x4040e428"/>
        <function-ref name="toggle" scoped="" ref="0x4040e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e5e8"/>
        <function-ref name="get" scoped="" ref="0x4040e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e7a8"/>
        <function-ref name="set" scoped="" ref="0x4040e888"/>
        <function-ref name="clr" scoped="" ref="0x4040e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4040de48" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4040de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c050"/>
        <function-ref name="isInput" scoped="" ref="0x4040c130"/>
        <function-ref name="toggle" scoped="" ref="0x4040c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c2f0"/>
        <function-ref name="get" scoped="" ref="0x4040c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c4b0"/>
        <function-ref name="set" scoped="" ref="0x4040c590"/>
        <function-ref name="clr" scoped="" ref="0x4040c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40406e70" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40406e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f070"/>
        <function-ref name="isInput" scoped="" ref="0x4040f150"/>
        <function-ref name="toggle" scoped="" ref="0x4040f230"/>
        <function-ref name="isOutput" scoped="" ref="0x4040f310"/>
        <function-ref name="get" scoped="" ref="0x4040f3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040f4d0"/>
        <function-ref name="set" scoped="" ref="0x4040f5b0"/>
        <function-ref name="clr" scoped="" ref="0x4040f690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4040eac8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4040eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4040ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4040ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d010"/>
        <function-ref name="get" scoped="" ref="0x4040d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040d1d0"/>
        <function-ref name="set" scoped="" ref="0x4040d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4040d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4040c7d0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4040c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4040ca88"/>
        <function-ref name="toggle" scoped="" ref="0x4040cb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4040cc48"/>
        <function-ref name="get" scoped="" ref="0x4040cd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040ce08"/>
        <function-ref name="set" scoped="" ref="0x4040cee8"/>
        <function-ref name="clr" scoped="" ref="0x4040b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41575de8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41575de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41570010"/>
        <function-ref name="isInput" scoped="" ref="0x415700f0"/>
        <function-ref name="toggle" scoped="" ref="0x415701d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415702b0"/>
        <function-ref name="get" scoped="" ref="0x41570390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41570470"/>
        <function-ref name="set" scoped="" ref="0x41570550"/>
        <function-ref name="clr" scoped="" ref="0x41570630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4156f7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4156f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4156f9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4156fab0"/>
        <function-ref name="toggle" scoped="" ref="0x4156fb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4156fc70"/>
        <function-ref name="get" scoped="" ref="0x4156fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4156fe30"/>
        <function-ref name="set" scoped="" ref="0x4156ff10"/>
        <function-ref name="clr" scoped="" ref="0x4156e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4156d228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4156d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4156d400"/>
        <function-ref name="isInput" scoped="" ref="0x4156d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4156d5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4156d6a0"/>
        <function-ref name="get" scoped="" ref="0x4156d780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4156d860"/>
        <function-ref name="set" scoped="" ref="0x4156d940"/>
        <function-ref name="clr" scoped="" ref="0x4156da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4156cc08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4156cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4156cde0"/>
        <function-ref name="isInput" scoped="" ref="0x4156cec0"/>
        <function-ref name="toggle" scoped="" ref="0x4156b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4156b0f0"/>
        <function-ref name="get" scoped="" ref="0x4156b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4156b2b0"/>
        <function-ref name="set" scoped="" ref="0x4156b390"/>
        <function-ref name="clr" scoped="" ref="0x4156b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4156a6c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4156a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4156a898"/>
        <function-ref name="isInput" scoped="" ref="0x4156a978"/>
        <function-ref name="toggle" scoped="" ref="0x4156aa58"/>
        <function-ref name="isOutput" scoped="" ref="0x4156ab38"/>
        <function-ref name="get" scoped="" ref="0x4156ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4156acf8"/>
        <function-ref name="set" scoped="" ref="0x4156add8"/>
        <function-ref name="clr" scoped="" ref="0x4156aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415680b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415680b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41568288"/>
        <function-ref name="isInput" scoped="" ref="0x41568368"/>
        <function-ref name="toggle" scoped="" ref="0x41568448"/>
        <function-ref name="isOutput" scoped="" ref="0x41568528"/>
        <function-ref name="get" scoped="" ref="0x41568608"/>
        <function-ref name="makeOutput" scoped="" ref="0x415686e8"/>
        <function-ref name="set" scoped="" ref="0x415687c8"/>
        <function-ref name="clr" scoped="" ref="0x415688a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41567a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41567a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41567c60"/>
        <function-ref name="isInput" scoped="" ref="0x41567d40"/>
        <function-ref name="toggle" scoped="" ref="0x41567e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41567f00"/>
        <function-ref name="get" scoped="" ref="0x41566010"/>
        <function-ref name="makeOutput" scoped="" ref="0x415660f0"/>
        <function-ref name="set" scoped="" ref="0x415661d0"/>
        <function-ref name="clr" scoped="" ref="0x415662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41565538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41565538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41565710"/>
        <function-ref name="isInput" scoped="" ref="0x415657f0"/>
        <function-ref name="toggle" scoped="" ref="0x415658d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415659b0"/>
        <function-ref name="get" scoped="" ref="0x41565a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41565b70"/>
        <function-ref name="set" scoped="" ref="0x41565c50"/>
        <function-ref name="clr" scoped="" ref="0x41565d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40411818" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40411818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404119f0"/>
        <function-ref name="isInput" scoped="" ref="0x40411ad0"/>
        <function-ref name="toggle" scoped="" ref="0x40411bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40411c90"/>
        <function-ref name="get" scoped="" ref="0x40411d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411e50"/>
        <function-ref name="set" scoped="" ref="0x40410010"/>
        <function-ref name="clr" scoped="" ref="0x404100f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40421ec0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40421ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404200c0"/>
        <function-ref name="isInput" scoped="" ref="0x404201a0"/>
        <function-ref name="toggle" scoped="" ref="0x40420280"/>
        <function-ref name="isOutput" scoped="" ref="0x40420360"/>
        <function-ref name="get" scoped="" ref="0x40420440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420520"/>
        <function-ref name="set" scoped="" ref="0x40420600"/>
        <function-ref name="clr" scoped="" ref="0x404206e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40429538" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40429538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429710"/>
        <function-ref name="isInput" scoped="" ref="0x404297f0"/>
        <function-ref name="toggle" scoped="" ref="0x404298d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404299b0"/>
        <function-ref name="get" scoped="" ref="0x40429a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429b70"/>
        <function-ref name="set" scoped="" ref="0x40429c50"/>
        <function-ref name="clr" scoped="" ref="0x40429d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40426b68" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40426b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426d40"/>
        <function-ref name="isInput" scoped="" ref="0x40426e20"/>
        <function-ref name="toggle" scoped="" ref="0x40426f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40425010"/>
        <function-ref name="get" scoped="" ref="0x404250f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404251d0"/>
        <function-ref name="set" scoped="" ref="0x404252b0"/>
        <function-ref name="clr" scoped="" ref="0x40425390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4042f228" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4042f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f400"/>
        <function-ref name="isInput" scoped="" ref="0x4042f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4042f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f6a0"/>
        <function-ref name="get" scoped="" ref="0x4042f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f860"/>
        <function-ref name="set" scoped="" ref="0x4042f940"/>
        <function-ref name="clr" scoped="" ref="0x4042fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4042d880" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4042d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042da58"/>
        <function-ref name="isInput" scoped="" ref="0x4042db38"/>
        <function-ref name="toggle" scoped="" ref="0x4042dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x4042dcf8"/>
        <function-ref name="get" scoped="" ref="0x4042ddd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042deb8"/>
        <function-ref name="set" scoped="" ref="0x4042b010"/>
        <function-ref name="clr" scoped="" ref="0x4042b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40435010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40435010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404351e8"/>
        <function-ref name="isInput" scoped="" ref="0x404352c8"/>
        <function-ref name="toggle" scoped="" ref="0x404353a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40435488"/>
        <function-ref name="get" scoped="" ref="0x40435568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435648"/>
        <function-ref name="set" scoped="" ref="0x40435728"/>
        <function-ref name="clr" scoped="" ref="0x40435808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404335e8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404335e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404337c0"/>
        <function-ref name="isInput" scoped="" ref="0x404338a0"/>
        <function-ref name="toggle" scoped="" ref="0x40433980"/>
        <function-ref name="isOutput" scoped="" ref="0x40433a60"/>
        <function-ref name="get" scoped="" ref="0x40433b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433c20"/>
        <function-ref name="set" scoped="" ref="0x40433d00"/>
        <function-ref name="clr" scoped="" ref="0x40433de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40430bd0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40430bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430da8"/>
        <function-ref name="isInput" scoped="" ref="0x40430e88"/>
        <function-ref name="toggle" scoped="" ref="0x4043b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b0f0"/>
        <function-ref name="get" scoped="" ref="0x4043b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043b2b0"/>
        <function-ref name="set" scoped="" ref="0x4043b390"/>
        <function-ref name="clr" scoped="" ref="0x4043b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40439228" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40439228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439400"/>
        <function-ref name="isInput" scoped="" ref="0x404394e0"/>
        <function-ref name="toggle" scoped="" ref="0x404395c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404396a0"/>
        <function-ref name="get" scoped="" ref="0x40439780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439860"/>
        <function-ref name="set" scoped="" ref="0x40439940"/>
        <function-ref name="clr" scoped="" ref="0x40439a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40437788" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40437788"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437960"/>
        <function-ref name="isInput" scoped="" ref="0x40437a40"/>
        <function-ref name="toggle" scoped="" ref="0x40437b20"/>
        <function-ref name="isOutput" scoped="" ref="0x40437c00"/>
        <function-ref name="get" scoped="" ref="0x40437ce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40437dc0"/>
        <function-ref name="set" scoped="" ref="0x40437ea0"/>
        <function-ref name="clr" scoped="" ref="0x40436010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40440d00" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40440d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40440ed8"/>
        <function-ref name="isInput" scoped="" ref="0x4043f010"/>
        <function-ref name="toggle" scoped="" ref="0x4043f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043f1d0"/>
        <function-ref name="get" scoped="" ref="0x4043f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043f390"/>
        <function-ref name="set" scoped="" ref="0x4043f470"/>
        <function-ref name="clr" scoped="" ref="0x4043f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4043d260" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4043d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043d438"/>
        <function-ref name="isInput" scoped="" ref="0x4043d518"/>
        <function-ref name="toggle" scoped="" ref="0x4043d5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043d6d8"/>
        <function-ref name="get" scoped="" ref="0x4043d7b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043d898"/>
        <function-ref name="set" scoped="" ref="0x4043d978"/>
        <function-ref name="clr" scoped="" ref="0x4043da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404636d8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404636d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402e4ce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402e4ce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404638b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40463a88" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40463a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40463c60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40463d40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40463e20"/>
        <function-ref name="actualMicro" scoped="" ref="0x40463f00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40462010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40474240" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40474240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40474418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40457418" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40457418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404575f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40457d78" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40457d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40474010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x404577b0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x404577b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40457988"/>
        <function-ref name="taskLoop" scoped="" ref="0x40457a68"/>
        <function-ref name="runNextTask" scoped="" ref="0x40457b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402f2bc0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402f2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402f2d98"/>
        <function-ref name="runTask" scoped="" ref="0x402f2e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402eb408" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402eb408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402eb5e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402eb6c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402eb7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40358950" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40358950"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40358b28"/>
        <function-ref name="runTask" scoped="" ref="0x40358c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x4035d5f0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4035d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4035d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40358118" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40358118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403582f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403583d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403584b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4036a370" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4036a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4036a548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40366010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40366010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403661e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40366cc8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40366cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40366ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataQueueManage" ref="0x404a4010" loc="21:DozerC.nc">
      <component-ref qname="DozerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x404a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x404a41e8"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x404a42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoutingInit" ref="0x4049be50" loc="20:DozerC.nc">
      <component-ref qname="DozerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingInit" scoped="" ref="0x4049be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a5050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x404a1188" loc="16:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x404a1188"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404a1360"/>
        <function-ref name="stopDone" scoped="" ref="0x404a1440"/>
        <function-ref name="start" scoped="" ref="0x404a1520"/>
        <function-ref name="stop" scoped="" ref="0x404a1600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_beacon" ref="0x4051c610" loc="75:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send_beacon" scoped="" ref="0x4051c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4051c7e8"/>
        <function-ref name="runTask" scoped="" ref="0x4051c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40507920" loc="29:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40507920"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404fb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x404aba30" loc="15:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x404aba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404abc08"/>
        <function-ref name="stopDone" scoped="" ref="0x404abce8"/>
        <function-ref name="start" scoped="" ref="0x404abdc8"/>
        <function-ref name="stop" scoped="" ref="0x404abea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConnReqListenTimer" ref="0x404fabd0" loc="24:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConnReqListenTimer" scoped="" ref="0x404fabd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404f76d8"/>
        <function-ref name="fired" scoped="" ref="0x404f8970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404f7098"/>
        <function-ref name="isOneShot" scoped="" ref="0x404f8e20"/>
        <function-ref name="getdt" scoped="" ref="0x404f7b88"/>
        <function-ref name="gett0" scoped="" ref="0x404f7930"/>
        <function-ref name="isRunning" scoped="" ref="0x404f8bc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404f8218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404f73b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x404f8498"/>
        <function-ref name="stop" scoped="" ref="0x404f8718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SchedulerInit" ref="0x404fb2f8" loc="31:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SchedulerInit" scoped="" ref="0x404fb2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404fb550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconWaitTimer" ref="0x404ee778" loc="23:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconWaitTimer" scoped="" ref="0x404ee778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404fa330"/>
        <function-ref name="fired" scoped="" ref="0x404ed520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404edc28"/>
        <function-ref name="isOneShot" scoped="" ref="0x404ed9d0"/>
        <function-ref name="getdt" scoped="" ref="0x404fa7e0"/>
        <function-ref name="gett0" scoped="" ref="0x404fa588"/>
        <function-ref name="isRunning" scoped="" ref="0x404ed778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404eeda0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404fa010"/>
        <function-ref name="startOneShot" scoped="" ref="0x404ed048"/>
        <function-ref name="stop" scoped="" ref="0x404ed2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConnRepWaitTimer" ref="0x404f6010" loc="25:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConnRepWaitTimer" scoped="" ref="0x404f6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404f4b00"/>
        <function-ref name="fired" scoped="" ref="0x404f6d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404f44c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x404f4268"/>
        <function-ref name="getdt" scoped="" ref="0x40501010"/>
        <function-ref name="gett0" scoped="" ref="0x404f4d58"/>
        <function-ref name="isRunning" scoped="" ref="0x404f4010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404f6638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404f47e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x404f68b8"/>
        <function-ref name="stop" scoped="" ref="0x404f6b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4050c7e0" loc="36:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4050c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4050c9b8"/>
        <function-ref name="rand32" scoped="" ref="0x4050ca98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x404e8418" loc="19:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x404e8418"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404e85f0"/>
        <function-ref name="getPayload" scoped="" ref="0x404e86d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404e87b0"/>
        <function-ref name="cancel" scoped="" ref="0x404e8890"/>
        <function-ref name="sendDone" scoped="" ref="0x404e8970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SeedInit" ref="0x4050bad0" loc="37:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4050bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40506108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoutingInit" ref="0x4050d0f0" loc="41:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingInit" scoped="" ref="0x4050d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4050d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x404ef3c0" loc="22:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x404ef3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404e1ec8"/>
        <function-ref name="fired" scoped="" ref="0x404e1180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404e1888"/>
        <function-ref name="isOneShot" scoped="" ref="0x404e1630"/>
        <function-ref name="getdt" scoped="" ref="0x404ee3a8"/>
        <function-ref name="gett0" scoped="" ref="0x404ee150"/>
        <function-ref name="isRunning" scoped="" ref="0x404e13d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404ef9e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404e1ba8"/>
        <function-ref name="startOneShot" scoped="" ref="0x404efc68"/>
        <function-ref name="stop" scoped="" ref="0x404efee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighbourUpdateStopTimer" ref="0x404ff8f0" loc="27:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighbourUpdateStopTimer" scoped="" ref="0x404ff8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404fc3f8"/>
        <function-ref name="fired" scoped="" ref="0x404fd688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404fdd90"/>
        <function-ref name="isOneShot" scoped="" ref="0x404fdb38"/>
        <function-ref name="getdt" scoped="" ref="0x404fc8a8"/>
        <function-ref name="gett0" scoped="" ref="0x404fc650"/>
        <function-ref name="isRunning" scoped="" ref="0x404fd8e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404fff18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404fc0d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x404fd1b0"/>
        <function-ref name="stop" scoped="" ref="0x404fd430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASchedule" ref="0x40508010" loc="32:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40508010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x405089c8"/>
        <function-ref name="getPPB" scoped="" ref="0x405082c8"/>
        <function-ref name="radioWakeup" scoped="" ref="0x405083a8"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40508488"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40508568"/>
        <function-ref name="setPPB" scoped="" ref="0x40508648"/>
        <function-ref name="stopTimers" scoped="" ref="0x40508728"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40508808"/>
        <function-ref name="startTimers" scoped="" ref="0x405088e8"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x405081e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405123f8" loc="38:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405123f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405125d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405126b0"/>
        <function-ref name="led1On" scoped="" ref="0x40512790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40512870"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40512950"/>
        <function-ref name="get" scoped="" ref="0x40512a30"/>
        <function-ref name="led1Off" scoped="" ref="0x40512b10"/>
        <function-ref name="led2Off" scoped="" ref="0x40512e90"/>
        <function-ref name="set" scoped="" ref="0x40512bf0"/>
        <function-ref name="led0On" scoped="" ref="0x40512cd0"/>
        <function-ref name="led2On" scoped="" ref="0x40512db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendReply" ref="0x40548a58" loc="372:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendReply" scoped="" ref="0x40548a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40548c30"/>
        <function-ref name="runTask" scoped="" ref="0x40548d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x404e6608" loc="20:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x404e6608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404e67e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x404e33b8" loc="18:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x404e33b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404e3590"/>
        <function-ref name="source" scoped="" ref="0x404e3670"/>
        <function-ref name="address" scoped="" ref="0x404e3750"/>
        <function-ref name="destination" scoped="" ref="0x404e3830"/>
        <function-ref name="setSource" scoped="" ref="0x404e3910"/>
        <function-ref name="setDestination" scoped="" ref="0x404e39f0"/>
        <function-ref name="type" scoped="" ref="0x404e3ad0"/>
        <function-ref name="setType" scoped="" ref="0x404e3bb0"/>
        <function-ref name="isForMe" scoped="" ref="0x404e3c90"/>
        <function-ref name="setGroup" scoped="" ref="0x404e3d70"/>
        <function-ref name="localGroup" scoped="" ref="0x404e3e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighbourUpdateTimer" ref="0x40501428" loc="26:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighbourUpdateTimer" scoped="" ref="0x40501428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404ff010"/>
        <function-ref name="fired" scoped="" ref="0x40500268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40500970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40500718"/>
        <function-ref name="getdt" scoped="" ref="0x404ff4c0"/>
        <function-ref name="gett0" scoped="" ref="0x404ff268"/>
        <function-ref name="isRunning" scoped="" ref="0x405004c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40501a50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40500c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40501cd0"/>
        <function-ref name="stop" scoped="" ref="0x40500010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendRequest" ref="0x4054b4d8" loc="360:TreeP.nc">
      <component-ref qname="TreeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendRequest" scoped="" ref="0x4054b4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4054b6b0"/>
        <function-ref name="runTask" scoped="" ref="0x4054b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4057b598" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4057b598"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4057b770"/>
        <function-ref name="stopDone" scoped="" ref="0x4057b850"/>
        <function-ref name="start" scoped="" ref="0x4057b930"/>
        <function-ref name="stop" scoped="" ref="0x4057ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4057be70" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4057be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40578070"/>
        <function-ref name="getPayload" scoped="" ref="0x40578150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40578230"/>
        <function-ref name="cancel" scoped="" ref="0x40578310"/>
        <function-ref name="sendDone" scoped="" ref="0x405783f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40578ef0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40578ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405770e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40581e50" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40581e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40576050"/>
        <function-ref name="payloadLength" scoped="" ref="0x40576130"/>
        <function-ref name="getPayload" scoped="" ref="0x40576210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405762f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405763d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40580010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40580010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40580b10"/>
        <function-ref name="clear" scoped="" ref="0x40580ec0"/>
        <function-ref name="isValid" scoped="" ref="0x40580760"/>
        <function-ref name="set" scoped="" ref="0x405872a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40578858" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40578858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40578a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4057d6c0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4057d898"/>
        <function-ref name="noAck" scoped="" ref="0x4057d978"/>
        <function-ref name="wasAcked" scoped="" ref="0x4057da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40576568" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40576568"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40576740"/>
        <function-ref name="source" scoped="" ref="0x40576820"/>
        <function-ref name="address" scoped="" ref="0x40576900"/>
        <function-ref name="destination" scoped="" ref="0x405769e0"/>
        <function-ref name="setSource" scoped="" ref="0x40576ac0"/>
        <function-ref name="setDestination" scoped="" ref="0x40576ba0"/>
        <function-ref name="type" scoped="" ref="0x40576c80"/>
        <function-ref name="setType" scoped="" ref="0x40576d60"/>
        <function-ref name="isForMe" scoped="" ref="0x40576e40"/>
        <function-ref name="setGroup" scoped="" ref="0x40576f20"/>
        <function-ref name="localGroup" scoped="" ref="0x40575018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405879d8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405879d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405855b0"/>
        <function-ref name="clear" scoped="" ref="0x40585960"/>
        <function-ref name="isValid" scoped="" ref="0x40585200"/>
        <function-ref name="set" scoped="" ref="0x40585d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405949b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405949b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40594b88"/>
        <function-ref name="stopDone" scoped="" ref="0x40594c68"/>
        <function-ref name="start" scoped="" ref="0x40594d48"/>
        <function-ref name="stop" scoped="" ref="0x40594e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40599100" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40599100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405992d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405993b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40599498"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40599578"/>
        <function-ref name="setCca" scoped="" ref="0x40599658"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40599738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405a8e50" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405a8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405a20c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4058e350" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4058e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4058e528"/>
        <function-ref name="payloadLength" scoped="" ref="0x4058e608"/>
        <function-ref name="getPayload" scoped="" ref="0x4058e6e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058e7c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4058e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405912a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405912a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40591480"/>
        <function-ref name="getPayload" scoped="" ref="0x40591560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40591640"/>
        <function-ref name="cancel" scoped="" ref="0x40591720"/>
        <function-ref name="sendDone" scoped="" ref="0x40591800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4058f310" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4058f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4058f4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x4059aaa0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x4059aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4059ac78"/>
        <function-ref name="getRssi" scoped="" ref="0x4059ad58"/>
        <function-ref name="getPower" scoped="" ref="0x4059ae38"/>
        <function-ref name="getLqi" scoped="" ref="0x4059af18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405ac500" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405ac500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x405ac6d8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x405ac7b8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x405ac898"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x405ac978"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x405aca58"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x405acb38"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x405acc18"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x405accf8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x405acdd8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x405aceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40591c68" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40591c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40591e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4058d150" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4058d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4058d328"/>
        <function-ref name="noAck" scoped="" ref="0x4058d408"/>
        <function-ref name="wasAcked" scoped="" ref="0x4058d4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405a6388" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405a6388"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405a6560"/>
        <function-ref name="setRetries" scoped="" ref="0x405a6640"/>
        <function-ref name="getRetries" scoped="" ref="0x405a6720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405a6800"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405a68e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4058f680" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4058f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4058f858"/>
        <function-ref name="source" scoped="" ref="0x4058f938"/>
        <function-ref name="address" scoped="" ref="0x4058fa18"/>
        <function-ref name="destination" scoped="" ref="0x4058faf8"/>
        <function-ref name="setSource" scoped="" ref="0x4058fbd8"/>
        <function-ref name="setDestination" scoped="" ref="0x4058fcb8"/>
        <function-ref name="type" scoped="" ref="0x4058fd98"/>
        <function-ref name="setType" scoped="" ref="0x4058fe78"/>
        <function-ref name="isForMe" scoped="" ref="0x4058e010"/>
        <function-ref name="setGroup" scoped="" ref="0x4058e0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4058e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40597558" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40597558"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40597730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x405b1098" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x405b1098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405b1270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x405be8d8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x405be8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405beab0"/>
        <function-ref name="getPayload" scoped="" ref="0x405beb90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405bec70"/>
        <function-ref name="cancel" scoped="" ref="0x405bed50"/>
        <function-ref name="sendDone" scoped="" ref="0x405bee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x405c5ce8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x405c5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x405c5ec0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x405b0010"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x405b00f0"/>
        <function-ref name="syncDone" scoped="" ref="0x405b01d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x405b02b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x405b0390"/>
        <function-ref name="setChannel" scoped="" ref="0x405b0470"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x405b0550"/>
        <function-ref name="setPanAddr" scoped="" ref="0x405b0630"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x405b0710"/>
        <function-ref name="getShortAddr" scoped="" ref="0x405b07f0"/>
        <function-ref name="sync" scoped="" ref="0x405b08d0"/>
        <function-ref name="getChannel" scoped="" ref="0x405b09b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x405b0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405b2238" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405b2238"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405b2410"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405b24f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405b25d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405b26b0"/>
        <function-ref name="setCca" scoped="" ref="0x405b2790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405b2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405b3b88" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405b3b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405b3d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x405c1d40" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x405c1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405c1f18"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405bc010"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405bc0f0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405bc1d0"/>
        <function-ref name="setCca" scoped="" ref="0x405bc2b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405bc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405b3190" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405b3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b3368"/>
        <function-ref name="payloadLength" scoped="" ref="0x405b3448"/>
        <function-ref name="getPayload" scoped="" ref="0x405b3528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b3608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405b36e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405b5100" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405b5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405b52d8"/>
        <function-ref name="getPayload" scoped="" ref="0x405b53b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b5498"/>
        <function-ref name="cancel" scoped="" ref="0x405b5578"/>
        <function-ref name="sendDone" scoped="" ref="0x405b5658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405b4178" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405b4178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405b4350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x405b1430" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x405b1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405b1608"/>
        <function-ref name="getRssi" scoped="" ref="0x405b16e8"/>
        <function-ref name="getPower" scoped="" ref="0x405b17c8"/>
        <function-ref name="getLqi" scoped="" ref="0x405b18a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x405c1600" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405c1600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x405c1858"/>
        <function-ref name="changed" scoped="" ref="0x405c1938"/>
        <function-ref name="amGroup" scoped="" ref="0x405c1a18"/>
        <function-ref name="setAddress" scoped="" ref="0x405c1af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x405b9360" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x405b9360"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x405b9538"/>
        <function-ref name="getMetadata" scoped="" ref="0x405b9618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405b5ac0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405b5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405b5c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405bc500" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405bc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405bc6d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405bc7b8"/>
        <function-ref name="led1On" scoped="" ref="0x405bc898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405bc978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405bca58"/>
        <function-ref name="get" scoped="" ref="0x405bcb38"/>
        <function-ref name="led1Off" scoped="" ref="0x405bcc18"/>
        <function-ref name="led2Off" scoped="" ref="0x405c3010"/>
        <function-ref name="set" scoped="" ref="0x405bccf8"/>
        <function-ref name="led0On" scoped="" ref="0x405bcdd8"/>
        <function-ref name="led2On" scoped="" ref="0x405bceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405b44e8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405b44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405b46c0"/>
        <function-ref name="source" scoped="" ref="0x405b47a0"/>
        <function-ref name="address" scoped="" ref="0x405b4880"/>
        <function-ref name="destination" scoped="" ref="0x405b4960"/>
        <function-ref name="setSource" scoped="" ref="0x405b4a40"/>
        <function-ref name="setDestination" scoped="" ref="0x405b4b20"/>
        <function-ref name="type" scoped="" ref="0x405b4c00"/>
        <function-ref name="setType" scoped="" ref="0x405b4ce0"/>
        <function-ref name="isForMe" scoped="" ref="0x405b4dc0"/>
        <function-ref name="setGroup" scoped="" ref="0x405b4ea0"/>
        <function-ref name="localGroup" scoped="" ref="0x405b3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40601390" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40601390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40601568"/>
        <function-ref name="stopDone" scoped="" ref="0x40601648"/>
        <function-ref name="start" scoped="" ref="0x40601728"/>
        <function-ref name="stop" scoped="" ref="0x40601808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40600470" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40600470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40600648"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40600728"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40600808"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x406008e8"/>
        <function-ref name="setCca" scoped="" ref="0x406009c8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40600aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40601998" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40601998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40601b70"/>
        <function-ref name="getPayload" scoped="" ref="0x40601c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40601d30"/>
        <function-ref name="cancel" scoped="" ref="0x40601e10"/>
        <function-ref name="sendDone" scoped="" ref="0x40601ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406000b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406000b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40600290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40612408" loc="39:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40612408"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406125e0"/>
        <function-ref name="stopDone" scoped="" ref="0x406126c0"/>
        <function-ref name="start" scoped="" ref="0x406127a0"/>
        <function-ref name="stop" scoped="" ref="0x40612880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x406111f0" loc="41:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x406111f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x406113c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x406114a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40611588"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40611668"/>
        <function-ref name="setCca" scoped="" ref="0x40611748"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40611828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x4061c438" loc="47:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x4061c438"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4061c610"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4061c6f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4061c7d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4061c8b0"/>
        <function-ref name="setCca" scoped="" ref="0x4061c990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4061ca70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40625d08" loc="50:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40625d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40625ee0"/>
        <function-ref name="getRssi" scoped="" ref="0x40624010"/>
        <function-ref name="getPower" scoped="" ref="0x406240f0"/>
        <function-ref name="getLqi" scoped="" ref="0x406241d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x40614c20" loc="46:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x40614c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40614df8"/>
        <function-ref name="cancel" scoped="" ref="0x40614ed8"/>
        <function-ref name="modify" scoped="" ref="0x4061c010"/>
        <function-ref name="sendDone" scoped="" ref="0x4061c0f0"/>
        <function-ref name="resend" scoped="" ref="0x4061c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40612a10" loc="40:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40612a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40612be8"/>
        <function-ref name="getPayload" scoped="" ref="0x40612cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40612da8"/>
        <function-ref name="cancel" scoped="" ref="0x40612e88"/>
        <function-ref name="sendDone" scoped="" ref="0x40611010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4061cc10" loc="48:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4061cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4061cde8"/>
        <function-ref name="rand32" scoped="" ref="0x4061cec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40617668" loc="45:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40617668"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40617840"/>
        <function-ref name="stop" scoped="" ref="0x40617920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x406243d8" loc="51:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x406243d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x406245b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40624690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x4061ac00" loc="44:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x4061ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x4061add8"/>
        <function-ref name="rfOff" scoped="" ref="0x4061aeb8"/>
        <function-ref name="rxOn" scoped="" ref="0x4060f010"/>
        <function-ref name="startVReg" scoped="" ref="0x4060f0f0"/>
        <function-ref name="stopVReg" scoped="" ref="0x4060f1d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4060f2b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4060f390"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4060f470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40625090" loc="49:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40625090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40625268"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40625348"/>
        <function-ref name="led1On" scoped="" ref="0x40625428"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40625508"/>
        <function-ref name="led2Toggle" scoped="" ref="0x406255e8"/>
        <function-ref name="get" scoped="" ref="0x406256c8"/>
        <function-ref name="led1Off" scoped="" ref="0x406257a8"/>
        <function-ref name="led2Off" scoped="" ref="0x40625b28"/>
        <function-ref name="set" scoped="" ref="0x40625888"/>
        <function-ref name="led0On" scoped="" ref="0x40625968"/>
        <function-ref name="led2On" scoped="" ref="0x40625a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4060ca50" loc="43:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4060ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4060cc28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4060cd08"/>
        <function-ref name="request" scoped="" ref="0x4060cde8"/>
        <function-ref name="granted" scoped="" ref="0x4060cec8"/>
        <function-ref name="isOwner" scoped="" ref="0x40610010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x40620bc8" loc="52:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x40620bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40620e20"/>
        <function-ref name="toIdle" scoped="" ref="0x40620f00"/>
        <function-ref name="isState" scoped="" ref="0x40623010"/>
        <function-ref name="isIdle" scoped="" ref="0x406230f0"/>
        <function-ref name="requestState" scoped="" ref="0x406231d0"/>
        <function-ref name="forceState" scoped="" ref="0x406232b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x4061d170" loc="77:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x4061d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4061d348"/>
        <function-ref name="runTask" scoped="" ref="0x4061d428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x4061f8a0" loc="76:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x4061f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4061fa78"/>
        <function-ref name="runTask" scoped="" ref="0x4061fb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x40622cb8" loc="74:CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x40622cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40622e90"/>
        <function-ref name="runTask" scoped="" ref="0x4061f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40657010" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40657010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x406571e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x406572c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x406573a8"/>
        <function-ref name="syncDone" scoped="" ref="0x40657488"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40657568"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40657648"/>
        <function-ref name="setChannel" scoped="" ref="0x40657728"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40657808"/>
        <function-ref name="setPanAddr" scoped="" ref="0x406578e8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x406579c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40657aa8"/>
        <function-ref name="sync" scoped="" ref="0x40657b88"/>
        <function-ref name="getChannel" scoped="" ref="0x40657c68"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40657dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40653e60" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x40653e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406554b8"/>
        <function-ref name="readDone" scoped="" ref="0x40655710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40656010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40656010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x406561e8"/>
        <function-ref name="rfOff" scoped="" ref="0x406562c8"/>
        <function-ref name="rxOn" scoped="" ref="0x406563a8"/>
        <function-ref name="startVReg" scoped="" ref="0x40656488"/>
        <function-ref name="stopVReg" scoped="" ref="0x40656568"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40656648"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40656728"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40656808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40646828" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40646828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40646a00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40646ae0"/>
        <function-ref name="request" scoped="" ref="0x40646bc0"/>
        <function-ref name="granted" scoped="" ref="0x40646ca0"/>
        <function-ref name="isOwner" scoped="" ref="0x40646d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40651cd8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40651cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40651eb0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40650010"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x406500f0"/>
        <function-ref name="syncDone" scoped="" ref="0x406501d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x406502b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40650390"/>
        <function-ref name="setChannel" scoped="" ref="0x40650470"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40650550"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40650630"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40650710"/>
        <function-ref name="getShortAddr" scoped="" ref="0x406507f0"/>
        <function-ref name="sync" scoped="" ref="0x406508d0"/>
        <function-ref name="getChannel" scoped="" ref="0x406509b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40650b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x40669868" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40669868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40669a40"/>
        <function-ref name="write" scoped="" ref="0x40669b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x4065c840" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x4065c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40660d58"/>
        <function-ref name="fired" scoped="" ref="0x40660528"/>
        <function-ref name="startAt" scoped="" ref="0x40660a18"/>
        <function-ref name="isRunning" scoped="" ref="0x406607a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4065b010"/>
        <function-ref name="start" scoped="" ref="0x40660010"/>
        <function-ref name="stop" scoped="" ref="0x406602b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x4066bda8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4066bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40669010"/>
        <function-ref name="write" scoped="" ref="0x406690f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x4065bce8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x4065bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065bec0"/>
        <function-ref name="isInput" scoped="" ref="0x4065a010"/>
        <function-ref name="toggle" scoped="" ref="0x4065a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4065a1d0"/>
        <function-ref name="get" scoped="" ref="0x4065a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065a390"/>
        <function-ref name="set" scoped="" ref="0x4065a470"/>
        <function-ref name="clr" scoped="" ref="0x4065a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4064f840" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4064f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4064fe68"/>
        <function-ref name="readDone" scoped="" ref="0x4064e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x4066f198" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x4066f198"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4066f370"/>
        <function-ref name="runTask" scoped="" ref="0x4066f450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x40669d60" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40669d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40664010"/>
        <function-ref name="write" scoped="" ref="0x406640f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x4066b380" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4066b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4066b558"/>
        <function-ref name="write" scoped="" ref="0x4066b638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40658010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40658010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x406581e8"/>
        <function-ref name="changed" scoped="" ref="0x406582c8"/>
        <function-ref name="amGroup" scoped="" ref="0x406583a8"/>
        <function-ref name="setAddress" scoped="" ref="0x40658488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x4065b2e0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4065b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065b4b8"/>
        <function-ref name="isInput" scoped="" ref="0x4065b598"/>
        <function-ref name="toggle" scoped="" ref="0x4065b678"/>
        <function-ref name="isOutput" scoped="" ref="0x4065b758"/>
        <function-ref name="get" scoped="" ref="0x4065b838"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065b918"/>
        <function-ref name="set" scoped="" ref="0x4065b9f8"/>
        <function-ref name="clr" scoped="" ref="0x4065bad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x40663570" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40663570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40663748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x4065a760" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x4065a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065a938"/>
        <function-ref name="isInput" scoped="" ref="0x4065aa18"/>
        <function-ref name="toggle" scoped="" ref="0x4065aaf8"/>
        <function-ref name="isOutput" scoped="" ref="0x4065abd8"/>
        <function-ref name="get" scoped="" ref="0x4065acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065ad98"/>
        <function-ref name="set" scoped="" ref="0x4065ae78"/>
        <function-ref name="clr" scoped="" ref="0x40659010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40651210" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40651210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406513e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40669358" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40669358"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40669530"/>
        <function-ref name="write" scoped="" ref="0x40669610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x40663990" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40663990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40663b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40663db0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40663db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40662010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406620f0"/>
        <function-ref name="request" scoped="" ref="0x406621d0"/>
        <function-ref name="granted" scoped="" ref="0x406622b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40662390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x40662e98" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x40662e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406750c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406751a0"/>
        <function-ref name="request" scoped="" ref="0x40675280"/>
        <function-ref name="granted" scoped="" ref="0x40675360"/>
        <function-ref name="isOwner" scoped="" ref="0x40675440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40650ce0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40650ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40650eb8"/>
        <function-ref name="rfOff" scoped="" ref="0x4064f010"/>
        <function-ref name="rxOn" scoped="" ref="0x4064f0f0"/>
        <function-ref name="startVReg" scoped="" ref="0x4064f1d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x4064f2b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4064f390"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4064f470"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4064f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x4066b888" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4066b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4066ba60"/>
        <function-ref name="write" scoped="" ref="0x4066bb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x40665dc8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40665dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4066b050"/>
        <function-ref name="write" scoped="" ref="0x4066b130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x40664cb0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40664cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40664e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406755d0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406755d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x406757a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40675888"/>
        <function-ref name="led1On" scoped="" ref="0x40675968"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40675a48"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40675b28"/>
        <function-ref name="get" scoped="" ref="0x40675c08"/>
        <function-ref name="led1Off" scoped="" ref="0x40675ce8"/>
        <function-ref name="led2Off" scoped="" ref="0x406740f0"/>
        <function-ref name="set" scoped="" ref="0x40675dc8"/>
        <function-ref name="led0On" scoped="" ref="0x40675ea8"/>
        <function-ref name="led2On" scoped="" ref="0x40674010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x40670988" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x40670988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40670b60"/>
        <function-ref name="runTask" scoped="" ref="0x40670c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406515a0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406515a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40651778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40651858"/>
        <function-ref name="request" scoped="" ref="0x40651938"/>
        <function-ref name="granted" scoped="" ref="0x40651a18"/>
        <function-ref name="isOwner" scoped="" ref="0x40651af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x40666668" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40666668"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40666840"/>
        <function-ref name="write" scoped="" ref="0x40666920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x4066a8e0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x4066a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4066aab8"/>
        <function-ref name="disable" scoped="" ref="0x4066ab98"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4066ac78"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4066ad58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x406625e8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x406625e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406628c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406629a0"/>
        <function-ref name="request" scoped="" ref="0x40662a80"/>
        <function-ref name="granted" scoped="" ref="0x40662b60"/>
        <function-ref name="isOwner" scoped="" ref="0x40662c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x40663140" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40663140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40663318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406ac5e0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406ac5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406ac7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x406acba8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x406acba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406bd088"/>
        <function-ref name="fired" scoped="" ref="0x406a9830"/>
        <function-ref name="startAt" scoped="" ref="0x406a9d20"/>
        <function-ref name="isRunning" scoped="" ref="0x406a9aa8"/>
        <function-ref name="getAlarm" scoped="" ref="0x406bd300"/>
        <function-ref name="start" scoped="" ref="0x406a9318"/>
        <function-ref name="stop" scoped="" ref="0x406a95b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x406bca60" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406bca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4080b010"/>
        <function-ref name="fired" scoped="" ref="0x406bb718"/>
        <function-ref name="startAt" scoped="" ref="0x406bbc08"/>
        <function-ref name="isRunning" scoped="" ref="0x406bb990"/>
        <function-ref name="getAlarm" scoped="" ref="0x4080b288"/>
        <function-ref name="start" scoped="" ref="0x406bb200"/>
        <function-ref name="stop" scoped="" ref="0x406bb4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4080b4b8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4080b4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4080b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x415dd6a8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x415dd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415dcb60"/>
        <function-ref name="fired" scoped="" ref="0x415dc330"/>
        <function-ref name="startAt" scoped="" ref="0x415dc820"/>
        <function-ref name="isRunning" scoped="" ref="0x415dc5a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x415dcdd8"/>
        <function-ref name="start" scoped="" ref="0x415dddf8"/>
        <function-ref name="stop" scoped="" ref="0x415dc0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x415d9448" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x415d9448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41631908"/>
        <function-ref name="fired" scoped="" ref="0x416310d8"/>
        <function-ref name="startAt" scoped="" ref="0x416315c8"/>
        <function-ref name="isRunning" scoped="" ref="0x41631350"/>
        <function-ref name="getAlarm" scoped="" ref="0x41631b80"/>
        <function-ref name="start" scoped="" ref="0x415d9b98"/>
        <function-ref name="stop" scoped="" ref="0x415d9e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406c9840" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406c9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406c9a18"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x406c9af8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406c9bd8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x406c9cb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406c9d98"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406c9e78"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x406cf010"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x406cf0f0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x406cf1d0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x406cf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406da6f0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406da6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406d9288"/>
        <function-ref name="test" scoped="" ref="0x406cecb8"/>
        <function-ref name="get" scoped="" ref="0x406dad38"/>
        <function-ref name="captured" scoped="" ref="0x406ce2b0"/>
        <function-ref name="reset" scoped="" ref="0x406ce550"/>
        <function-ref name="isOn" scoped="" ref="0x406d9010"/>
        <function-ref name="set" scoped="" ref="0x406ce010"/>
        <function-ref name="start" scoped="" ref="0x406ce7c8"/>
        <function-ref name="stop" scoped="" ref="0x406cea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406d82f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406d82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406d4840"/>
        <function-ref name="fired" scoped="" ref="0x406d8e50"/>
        <function-ref name="get" scoped="" ref="0x406d8938"/>
        <function-ref name="reset" scoped="" ref="0x406d40d8"/>
        <function-ref name="isOn" scoped="" ref="0x406d4ab8"/>
        <function-ref name="set" scoped="" ref="0x406d8bb0"/>
        <function-ref name="start" scoped="" ref="0x406d4350"/>
        <function-ref name="stop" scoped="" ref="0x406d45c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406d0928" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406d0928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406bf418"/>
        <function-ref name="test" scoped="" ref="0x406c1f08"/>
        <function-ref name="get" scoped="" ref="0x406c1010"/>
        <function-ref name="setScale" scoped="" ref="0x406bf690"/>
        <function-ref name="getScale" scoped="" ref="0x406bf930"/>
        <function-ref name="reset" scoped="" ref="0x406c17a0"/>
        <function-ref name="overflow" scoped="" ref="0x406c1528"/>
        <function-ref name="isOn" scoped="" ref="0x406bf1a0"/>
        <function-ref name="set" scoped="" ref="0x406c1288"/>
        <function-ref name="start" scoped="" ref="0x406c1a18"/>
        <function-ref name="stop" scoped="" ref="0x406c1c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406e0e18" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406e0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406e3010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406e30f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406e31d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406e32b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406e3390"/>
        <function-ref name="setControl" scoped="" ref="0x406e3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406f0498" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406f0498"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406f0670"/>
        <function-ref name="compareBusy" scoped="" ref="0x406f0750"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406f0830"/>
        <function-ref name="countBusy" scoped="" ref="0x406f0910"/>
        <function-ref name="getAssr" scoped="" ref="0x406f09f0"/>
        <function-ref name="setAssr" scoped="" ref="0x406f0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406e3798" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406e3798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406dfce8"/>
        <function-ref name="fired" scoped="" ref="0x406df308"/>
        <function-ref name="get" scoped="" ref="0x406e3de0"/>
        <function-ref name="reset" scoped="" ref="0x406df580"/>
        <function-ref name="isOn" scoped="" ref="0x406f4010"/>
        <function-ref name="set" scoped="" ref="0x406df068"/>
        <function-ref name="start" scoped="" ref="0x406df7f8"/>
        <function-ref name="stop" scoped="" ref="0x406dfa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406e9600" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406e9600"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406e4088"/>
        <function-ref name="test" scoped="" ref="0x406e6b70"/>
        <function-ref name="get" scoped="" ref="0x406e9c48"/>
        <function-ref name="setScale" scoped="" ref="0x406e4300"/>
        <function-ref name="getScale" scoped="" ref="0x406e45a0"/>
        <function-ref name="reset" scoped="" ref="0x406e6408"/>
        <function-ref name="overflow" scoped="" ref="0x406e6190"/>
        <function-ref name="isOn" scoped="" ref="0x406e6de8"/>
        <function-ref name="set" scoped="" ref="0x406e9ec0"/>
        <function-ref name="start" scoped="" ref="0x406e6680"/>
        <function-ref name="stop" scoped="" ref="0x406e68f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406ecaf0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406ecaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406eccc8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406ecda8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406ece88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406eb010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406eb0f0"/>
        <function-ref name="setControl" scoped="" ref="0x406eb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406fe010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406fe1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406fe470" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406fe470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406fe648"/>
        <function-ref name="compareBusy" scoped="" ref="0x406fe728"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406fe808"/>
        <function-ref name="countBusy" scoped="" ref="0x406fe8e8"/>
        <function-ref name="getAssr" scoped="" ref="0x406fe9c8"/>
        <function-ref name="setAssr" scoped="" ref="0x406feaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406eb4f8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406eb4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406eaa48"/>
        <function-ref name="fired" scoped="" ref="0x406ea068"/>
        <function-ref name="get" scoped="" ref="0x406ebb40"/>
        <function-ref name="reset" scoped="" ref="0x406ea2e0"/>
        <function-ref name="isOn" scoped="" ref="0x406eacc0"/>
        <function-ref name="set" scoped="" ref="0x406ebdb8"/>
        <function-ref name="start" scoped="" ref="0x406ea558"/>
        <function-ref name="stop" scoped="" ref="0x406ea7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406f37a0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406f37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406ec288"/>
        <function-ref name="test" scoped="" ref="0x406edd08"/>
        <function-ref name="get" scoped="" ref="0x406f3de8"/>
        <function-ref name="setScale" scoped="" ref="0x406ec500"/>
        <function-ref name="getScale" scoped="" ref="0x406ec7a0"/>
        <function-ref name="reset" scoped="" ref="0x406ed5a0"/>
        <function-ref name="overflow" scoped="" ref="0x406ed328"/>
        <function-ref name="isOn" scoped="" ref="0x406ec010"/>
        <function-ref name="set" scoped="" ref="0x406ed088"/>
        <function-ref name="start" scoped="" ref="0x406ed818"/>
        <function-ref name="stop" scoped="" ref="0x406eda90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40721e78" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40721e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40737070"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40737150"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40737230"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40737310"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407373f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407374d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x407375b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40737690"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40737770"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40737850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x4072ee98" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x4072ee98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x4072d0c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4072d1a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4072d280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4072d360"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4072d440"/>
        <function-ref name="setControl" scoped="" ref="0x4072d520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40734a80" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40734a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40732010"/>
        <function-ref name="fired" scoped="" ref="0x40733610"/>
        <function-ref name="get" scoped="" ref="0x407330f8"/>
        <function-ref name="reset" scoped="" ref="0x40733888"/>
        <function-ref name="isOn" scoped="" ref="0x40732288"/>
        <function-ref name="set" scoped="" ref="0x40733370"/>
        <function-ref name="start" scoped="" ref="0x40733b00"/>
        <function-ref name="stop" scoped="" ref="0x40733d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40737b88" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40737b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40734640"/>
        <function-ref name="test" scoped="" ref="0x40734150"/>
        <function-ref name="get" scoped="" ref="0x40736200"/>
        <function-ref name="captured" scoped="" ref="0x40736718"/>
        <function-ref name="reset" scoped="" ref="0x407369b8"/>
        <function-ref name="isOn" scoped="" ref="0x407343c8"/>
        <function-ref name="set" scoped="" ref="0x40736478"/>
        <function-ref name="start" scoped="" ref="0x40736c30"/>
        <function-ref name="stop" scoped="" ref="0x40736ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x407326a0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x407326a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40730c90"/>
        <function-ref name="fired" scoped="" ref="0x407302b0"/>
        <function-ref name="get" scoped="" ref="0x40732ce8"/>
        <function-ref name="reset" scoped="" ref="0x40730528"/>
        <function-ref name="isOn" scoped="" ref="0x40730f08"/>
        <function-ref name="set" scoped="" ref="0x40730010"/>
        <function-ref name="start" scoped="" ref="0x407307a0"/>
        <function-ref name="stop" scoped="" ref="0x40730a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x4072f340" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x4072f340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4072e898"/>
        <function-ref name="fired" scoped="" ref="0x4072fea0"/>
        <function-ref name="get" scoped="" ref="0x4072f988"/>
        <function-ref name="reset" scoped="" ref="0x4072e130"/>
        <function-ref name="isOn" scoped="" ref="0x4072eb10"/>
        <function-ref name="set" scoped="" ref="0x4072fc00"/>
        <function-ref name="start" scoped="" ref="0x4072e3a8"/>
        <function-ref name="stop" scoped="" ref="0x4072e620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406e7b70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406e7b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40721600"/>
        <function-ref name="test" scoped="" ref="0x40721110"/>
        <function-ref name="get" scoped="" ref="0x40722200"/>
        <function-ref name="setScale" scoped="" ref="0x40721878"/>
        <function-ref name="getScale" scoped="" ref="0x40721b18"/>
        <function-ref name="reset" scoped="" ref="0x40722990"/>
        <function-ref name="overflow" scoped="" ref="0x40722718"/>
        <function-ref name="isOn" scoped="" ref="0x40721388"/>
        <function-ref name="set" scoped="" ref="0x40722478"/>
        <function-ref name="start" scoped="" ref="0x40722c08"/>
        <function-ref name="stop" scoped="" ref="0x40722e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40784700" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40784700"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407848d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40784ae8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40784ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40793600"/>
        <function-ref name="test" scoped="" ref="0x40793110"/>
        <function-ref name="get" scoped="" ref="0x40783200"/>
        <function-ref name="setScale" scoped="" ref="0x40793878"/>
        <function-ref name="getScale" scoped="" ref="0x40793b18"/>
        <function-ref name="reset" scoped="" ref="0x40783990"/>
        <function-ref name="overflow" scoped="" ref="0x40783718"/>
        <function-ref name="isOn" scoped="" ref="0x40793388"/>
        <function-ref name="set" scoped="" ref="0x40783478"/>
        <function-ref name="start" scoped="" ref="0x40783c08"/>
        <function-ref name="stop" scoped="" ref="0x40783e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41626210" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41626210"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402e48e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402e48e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x416256c8"/>
        <function-ref name="fired" scoped="" ref="0x41626e78"/>
        <function-ref name="startAt" scoped="" ref="0x41625388"/>
        <function-ref name="isRunning" scoped="" ref="0x41625110"/>
        <function-ref name="getAlarm" scoped="" ref="0x41625940"/>
        <function-ref name="start" scoped="" ref="0x41626960"/>
        <function-ref name="stop" scoped="" ref="0x41626c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x41622e68" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x41622e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x416203e8"/>
        <function-ref name="fired" scoped="" ref="0x416219f0"/>
        <function-ref name="get" scoped="" ref="0x416214d8"/>
        <function-ref name="reset" scoped="" ref="0x41621c68"/>
        <function-ref name="isOn" scoped="" ref="0x41620660"/>
        <function-ref name="set" scoped="" ref="0x41621750"/>
        <function-ref name="start" scoped="" ref="0x41621ee0"/>
        <function-ref name="stop" scoped="" ref="0x41620170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x41625c00" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x41625c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41622690"/>
        <function-ref name="test" scoped="" ref="0x416221a0"/>
        <function-ref name="get" scoped="" ref="0x41624278"/>
        <function-ref name="setScale" scoped="" ref="0x41622908"/>
        <function-ref name="getScale" scoped="" ref="0x41622ba8"/>
        <function-ref name="reset" scoped="" ref="0x41624a08"/>
        <function-ref name="overflow" scoped="" ref="0x41624790"/>
        <function-ref name="isOn" scoped="" ref="0x41622418"/>
        <function-ref name="set" scoped="" ref="0x416244f0"/>
        <function-ref name="start" scoped="" ref="0x41624c80"/>
        <function-ref name="stop" scoped="" ref="0x41624ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407bb010" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407bb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407bb760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407bbc50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407bb9d8"/>
        <function-ref name="overflow" scoped="" ref="0x407bbec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407baa00" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407baa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407b5200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b56f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b5478"/>
        <function-ref name="overflow" scoped="" ref="0x407b5968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407b2320" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407b2320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407b2a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b1010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b2ce8"/>
        <function-ref name="overflow" scoped="" ref="0x407b1288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407b1568" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407b1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407bf010"/>
        <function-ref name="test" scoped="" ref="0x407c1ad8"/>
        <function-ref name="get" scoped="" ref="0x407b1bb0"/>
        <function-ref name="setScale" scoped="" ref="0x407bf288"/>
        <function-ref name="getScale" scoped="" ref="0x407bf528"/>
        <function-ref name="reset" scoped="" ref="0x407c1370"/>
        <function-ref name="overflow" scoped="" ref="0x407c10f8"/>
        <function-ref name="isOn" scoped="" ref="0x407c1d50"/>
        <function-ref name="set" scoped="" ref="0x407b1e28"/>
        <function-ref name="start" scoped="" ref="0x407c15e8"/>
        <function-ref name="stop" scoped="" ref="0x407c1860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407d7ae8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407d7ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407e0308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407e07f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407e0580"/>
        <function-ref name="overflow" scoped="" ref="0x407e0a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407b67f0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407b67f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407d7010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407d7500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407d7288"/>
        <function-ref name="overflow" scoped="" ref="0x407d7778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41630dd0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41630dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4162d350"/>
        <function-ref name="fired" scoped="" ref="0x4162fa88"/>
        <function-ref name="startAt" scoped="" ref="0x4162d010"/>
        <function-ref name="isRunning" scoped="" ref="0x4162fd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x4162d5c8"/>
        <function-ref name="start" scoped="" ref="0x4162f570"/>
        <function-ref name="stop" scoped="" ref="0x4162f810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x4162cb60" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x4162cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="TOne" ref="0x403549a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4162a068"/>
        <function-ref name="fired" scoped="" ref="0x4162b820"/>
        <function-ref name="startAt" scoped="" ref="0x4162bd10"/>
        <function-ref name="isRunning" scoped="" ref="0x4162ba98"/>
        <function-ref name="getAlarm" scoped="" ref="0x4162a2e0"/>
        <function-ref name="start" scoped="" ref="0x4162b308"/>
        <function-ref name="stop" scoped="" ref="0x4162b5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4162d918" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4162d918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4162c088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4162c578"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4162c300"/>
        <function-ref name="overflow" scoped="" ref="0x4162c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407f27a0" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407f27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407f2978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x40805660" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40805660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40805838"/>
        <function-ref name="isInput" scoped="" ref="0x40805918"/>
        <function-ref name="toggle" scoped="" ref="0x408059f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40805ad8"/>
        <function-ref name="get" scoped="" ref="0x40805bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40805c98"/>
        <function-ref name="set" scoped="" ref="0x40805d78"/>
        <function-ref name="clr" scoped="" ref="0x40805e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x40804068" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40804068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40804240"/>
        <function-ref name="isInput" scoped="" ref="0x40804320"/>
        <function-ref name="toggle" scoped="" ref="0x40804400"/>
        <function-ref name="isOutput" scoped="" ref="0x408044e0"/>
        <function-ref name="get" scoped="" ref="0x408045c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408046a0"/>
        <function-ref name="set" scoped="" ref="0x40804780"/>
        <function-ref name="clr" scoped="" ref="0x40804860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40804a50" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40804a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40804c28"/>
        <function-ref name="isInput" scoped="" ref="0x40804d08"/>
        <function-ref name="toggle" scoped="" ref="0x40804de8"/>
        <function-ref name="isOutput" scoped="" ref="0x40804ec8"/>
        <function-ref name="get" scoped="" ref="0x40803010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408030f0"/>
        <function-ref name="set" scoped="" ref="0x408031d0"/>
        <function-ref name="clr" scoped="" ref="0x408032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x40806c48" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40806c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40806e20"/>
        <function-ref name="isInput" scoped="" ref="0x40806f00"/>
        <function-ref name="toggle" scoped="" ref="0x40805010"/>
        <function-ref name="isOutput" scoped="" ref="0x408050f0"/>
        <function-ref name="get" scoped="" ref="0x408051d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408052b0"/>
        <function-ref name="set" scoped="" ref="0x40805390"/>
        <function-ref name="clr" scoped="" ref="0x40805470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x40803e78" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x40803e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40802070"/>
        <function-ref name="isInput" scoped="" ref="0x40802150"/>
        <function-ref name="toggle" scoped="" ref="0x40802230"/>
        <function-ref name="isOutput" scoped="" ref="0x40802310"/>
        <function-ref name="get" scoped="" ref="0x408023f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408024d0"/>
        <function-ref name="set" scoped="" ref="0x408025b0"/>
        <function-ref name="clr" scoped="" ref="0x40802690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x40806270" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40806270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40806448"/>
        <function-ref name="isInput" scoped="" ref="0x40806528"/>
        <function-ref name="toggle" scoped="" ref="0x40806608"/>
        <function-ref name="isOutput" scoped="" ref="0x408066e8"/>
        <function-ref name="get" scoped="" ref="0x408067c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x408068a8"/>
        <function-ref name="set" scoped="" ref="0x40806988"/>
        <function-ref name="clr" scoped="" ref="0x40806a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x40803490" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40803490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40803668"/>
        <function-ref name="isInput" scoped="" ref="0x40803748"/>
        <function-ref name="toggle" scoped="" ref="0x40803828"/>
        <function-ref name="isOutput" scoped="" ref="0x40803908"/>
        <function-ref name="get" scoped="" ref="0x408039e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40803ac8"/>
        <function-ref name="set" scoped="" ref="0x40803ba8"/>
        <function-ref name="clr" scoped="" ref="0x40803c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x408147f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x408147f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x408149c8"/>
        <function-ref name="disable" scoped="" ref="0x40814aa8"/>
        <function-ref name="captured" scoped="" ref="0x40814b88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40814c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x40814ef0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x40814ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408160e0"/>
        <function-ref name="disable" scoped="" ref="0x408161c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408162a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40816380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x40816618" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40816618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408167f0"/>
        <function-ref name="disable" scoped="" ref="0x408168d0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408169b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40816a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40823c50" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40823c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40823e28"/>
        <function-ref name="disable" scoped="" ref="0x40823f08"/>
        <function-ref name="captured" scoped="" ref="0x40813010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x408130f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x40813300" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x40813300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40812d88"/>
        <function-ref name="test" scoped="" ref="0x40812898"/>
        <function-ref name="get" scoped="" ref="0x40813948"/>
        <function-ref name="captured" scoped="" ref="0x40813e60"/>
        <function-ref name="reset" scoped="" ref="0x40812130"/>
        <function-ref name="isOn" scoped="" ref="0x40812b10"/>
        <function-ref name="set" scoped="" ref="0x40813bc0"/>
        <function-ref name="start" scoped="" ref="0x408123a8"/>
        <function-ref name="stop" scoped="" ref="0x40812620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x4081fb38" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x4081fb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4081fd10"/>
        <function-ref name="fired" scoped="" ref="0x4081fdf0"/>
        <function-ref name="disable" scoped="" ref="0x4081fed0"/>
        <function-ref name="edge" scoped="" ref="0x40830010"/>
        <function-ref name="enable" scoped="" ref="0x408300f0"/>
        <function-ref name="getValue" scoped="" ref="0x408301d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x4081f540" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x4081f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4081f718"/>
        <function-ref name="disable" scoped="" ref="0x4081f7f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4081f8d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4081f9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x4082a338" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x4082a338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082a510"/>
        <function-ref name="fired" scoped="" ref="0x4082a5f0"/>
        <function-ref name="disable" scoped="" ref="0x4082a6d0"/>
        <function-ref name="edge" scoped="" ref="0x4082a7b0"/>
        <function-ref name="enable" scoped="" ref="0x4082a890"/>
        <function-ref name="getValue" scoped="" ref="0x4082a970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x4082d788" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x4082d788"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082d960"/>
        <function-ref name="fired" scoped="" ref="0x4082da40"/>
        <function-ref name="disable" scoped="" ref="0x4082db20"/>
        <function-ref name="edge" scoped="" ref="0x4082dc00"/>
        <function-ref name="enable" scoped="" ref="0x4082dce0"/>
        <function-ref name="getValue" scoped="" ref="0x4082ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x4082b168" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x4082b168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082b340"/>
        <function-ref name="fired" scoped="" ref="0x4082b420"/>
        <function-ref name="disable" scoped="" ref="0x4082b500"/>
        <function-ref name="edge" scoped="" ref="0x4082b5e0"/>
        <function-ref name="enable" scoped="" ref="0x4082b6c0"/>
        <function-ref name="getValue" scoped="" ref="0x4082b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x4082abb8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x4082abb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082ad90"/>
        <function-ref name="fired" scoped="" ref="0x4082ae70"/>
        <function-ref name="disable" scoped="" ref="0x40829010"/>
        <function-ref name="edge" scoped="" ref="0x408290f0"/>
        <function-ref name="enable" scoped="" ref="0x408291d0"/>
        <function-ref name="getValue" scoped="" ref="0x408292b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x4082c030" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x4082c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082c208"/>
        <function-ref name="fired" scoped="" ref="0x4082c2e8"/>
        <function-ref name="disable" scoped="" ref="0x4082c3c8"/>
        <function-ref name="edge" scoped="" ref="0x4082c4a8"/>
        <function-ref name="enable" scoped="" ref="0x4082c588"/>
        <function-ref name="getValue" scoped="" ref="0x4082c668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x4082b9e8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x4082b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082bbc0"/>
        <function-ref name="fired" scoped="" ref="0x4082bca0"/>
        <function-ref name="disable" scoped="" ref="0x4082bd80"/>
        <function-ref name="edge" scoped="" ref="0x4082be60"/>
        <function-ref name="enable" scoped="" ref="0x4082a010"/>
        <function-ref name="getValue" scoped="" ref="0x4082a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40830ee8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40830ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082d0e0"/>
        <function-ref name="fired" scoped="" ref="0x4082d1c0"/>
        <function-ref name="disable" scoped="" ref="0x4082d2a0"/>
        <function-ref name="edge" scoped="" ref="0x4082d380"/>
        <function-ref name="enable" scoped="" ref="0x4082d460"/>
        <function-ref name="getValue" scoped="" ref="0x4082d540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x4082c8b0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x4082c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082ca88"/>
        <function-ref name="fired" scoped="" ref="0x4082cb68"/>
        <function-ref name="disable" scoped="" ref="0x4082cc48"/>
        <function-ref name="edge" scoped="" ref="0x4082cd28"/>
        <function-ref name="enable" scoped="" ref="0x4082ce08"/>
        <function-ref name="getValue" scoped="" ref="0x4082cee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x408412b0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x408412b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40841488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x40840c18" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x40840c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40840df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x40826998" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x40826998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40826b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x40841728" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x40841728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40841900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x408260a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x408260a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40826280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x40826e10" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x40826e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40841010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x408407a0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x408407a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40840978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x40826520" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x40826520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408266f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x408276f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x408276f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408278d0"/>
        <function-ref name="fired" scoped="" ref="0x408279b0"/>
        <function-ref name="disable" scoped="" ref="0x40827a90"/>
        <function-ref name="edge" scoped="" ref="0x40827b70"/>
        <function-ref name="enable" scoped="" ref="0x40827c50"/>
        <function-ref name="getValue" scoped="" ref="0x40827d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40827eb0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40827eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4084c0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4085c7f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4085c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4085c9d0"/>
        <function-ref name="fired" scoped="" ref="0x4085cab0"/>
        <function-ref name="disable" scoped="" ref="0x4085cb90"/>
        <function-ref name="edge" scoped="" ref="0x4085cc70"/>
        <function-ref name="enable" scoped="" ref="0x4085cd50"/>
        <function-ref name="getValue" scoped="" ref="0x4085ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4085b010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4085b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4085b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4085a920" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4085a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4085aaf8"/>
        <function-ref name="fired" scoped="" ref="0x4085abd8"/>
        <function-ref name="disable" scoped="" ref="0x4085acb8"/>
        <function-ref name="edge" scoped="" ref="0x4085ad98"/>
        <function-ref name="enable" scoped="" ref="0x4085ae78"/>
        <function-ref name="getValue" scoped="" ref="0x40859010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40859190" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40859190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40859368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40858b68" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40858b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40858d40"/>
        <function-ref name="fired" scoped="" ref="0x40858e20"/>
        <function-ref name="disable" scoped="" ref="0x40858f00"/>
        <function-ref name="edge" scoped="" ref="0x40857010"/>
        <function-ref name="enable" scoped="" ref="0x408570f0"/>
        <function-ref name="getValue" scoped="" ref="0x408571d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40857350" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40857350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40857528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40855d60" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40855d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40854010"/>
        <function-ref name="fired" scoped="" ref="0x408540f0"/>
        <function-ref name="disable" scoped="" ref="0x408541d0"/>
        <function-ref name="edge" scoped="" ref="0x408542b0"/>
        <function-ref name="enable" scoped="" ref="0x40854390"/>
        <function-ref name="getValue" scoped="" ref="0x40854470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x408545f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x408545f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408547c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40852050" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40852050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40852228"/>
        <function-ref name="fired" scoped="" ref="0x40852308"/>
        <function-ref name="disable" scoped="" ref="0x408523e8"/>
        <function-ref name="edge" scoped="" ref="0x408524c8"/>
        <function-ref name="enable" scoped="" ref="0x408525a8"/>
        <function-ref name="getValue" scoped="" ref="0x40852688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40852808" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40852808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408529e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x408502b0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x408502b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40850488"/>
        <function-ref name="fired" scoped="" ref="0x40850568"/>
        <function-ref name="disable" scoped="" ref="0x40850648"/>
        <function-ref name="edge" scoped="" ref="0x40850728"/>
        <function-ref name="enable" scoped="" ref="0x40850808"/>
        <function-ref name="getValue" scoped="" ref="0x408508e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40850a68" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40850a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40850c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4086a538" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4086a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4086a710"/>
        <function-ref name="fired" scoped="" ref="0x4086a7f0"/>
        <function-ref name="disable" scoped="" ref="0x4086a8d0"/>
        <function-ref name="edge" scoped="" ref="0x4086a9b0"/>
        <function-ref name="enable" scoped="" ref="0x4086aa90"/>
        <function-ref name="getValue" scoped="" ref="0x4086ab70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4086acf0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4086acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4086aec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x40863b78" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x40863b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40863d50"/>
        <function-ref name="isInput" scoped="" ref="0x40863e30"/>
        <function-ref name="toggle" scoped="" ref="0x40863f10"/>
        <function-ref name="isOutput" scoped="" ref="0x40862010"/>
        <function-ref name="get" scoped="" ref="0x408620f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408621d0"/>
        <function-ref name="set" scoped="" ref="0x408622b0"/>
        <function-ref name="clr" scoped="" ref="0x40862390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x408634c0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x408634c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40863698"/>
        <function-ref name="disable" scoped="" ref="0x40863778"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40863858"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40863938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x408603b0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x408603b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40860588"/>
        <function-ref name="runTask" scoped="" ref="0x40860668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409ab010" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409ab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ab2e8"/>
        <function-ref name="write" scoped="" ref="0x409ab3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409c7190" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409c7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409c7368"/>
        <function-ref name="writeDone" scoped="" ref="0x409c7448"/>
        <function-ref name="write" scoped="" ref="0x409c7528"/>
        <function-ref name="beginRead" scoped="" ref="0x409c7608"/>
        <function-ref name="readDone" scoped="" ref="0x409c76e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409b14e8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409b14e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409ae5c8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409ae5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ae7a0"/>
        <function-ref name="write" scoped="" ref="0x409ae880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409abdb8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409abdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cc010"/>
        <function-ref name="write" scoped="" ref="0x409cc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409cc270" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409cc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cc448"/>
        <function-ref name="write" scoped="" ref="0x409cc528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409b1ef0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409b1ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409c95c8" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409c95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c97a0"/>
        <function-ref name="write" scoped="" ref="0x409c9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409aee38" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409aee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ad050"/>
        <function-ref name="write" scoped="" ref="0x409ad130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409ad6e8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409ad6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ad8c0"/>
        <function-ref name="write" scoped="" ref="0x409ad9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409cc6a8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409cc6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cc880"/>
        <function-ref name="write" scoped="" ref="0x409cc960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409cbbd8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409cbbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cbdb0"/>
        <function-ref name="write" scoped="" ref="0x409cbe90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409b3860" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409b3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409b3a38"/>
        <function-ref name="abortRelease" scoped="" ref="0x409b3b18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409b3bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409b0c68" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409b0c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b0e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409af010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409af268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409af3e8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409af3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409af5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409b05b8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409b05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b0790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409ad2b0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409ad2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ad488"/>
        <function-ref name="write" scoped="" ref="0x409ad568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409aea00" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409aea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aebd8"/>
        <function-ref name="write" scoped="" ref="0x409aecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409b1190" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409b1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b1368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409ca030" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409ca030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ca208"/>
        <function-ref name="write" scoped="" ref="0x409ca2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409c9190" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409c9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c9368"/>
        <function-ref name="write" scoped="" ref="0x409c9448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409ccf18" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409ccf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cb108"/>
        <function-ref name="write" scoped="" ref="0x409cb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409b3d78" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409b3d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409ae190" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409ae190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ae368"/>
        <function-ref name="write" scoped="" ref="0x409ae448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409adb20" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409adb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409adcf8"/>
        <function-ref name="write" scoped="" ref="0x409addd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409c9a00" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409c9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409c9bd8"/>
        <function-ref name="writeDone" scoped="" ref="0x409c9cb8"/>
        <function-ref name="write" scoped="" ref="0x409c9d98"/>
        <function-ref name="beginRead" scoped="" ref="0x409c9e78"/>
        <function-ref name="readDone" scoped="" ref="0x409c7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409ccae0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409ccae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cccb8"/>
        <function-ref name="write" scoped="" ref="0x409ccd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409ab548" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409ab548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ab720"/>
        <function-ref name="write" scoped="" ref="0x409ab800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409b1840" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409b1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b1a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409ab980" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409ab980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409abb58"/>
        <function-ref name="write" scoped="" ref="0x409abc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409b31a8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409b31a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409b3380"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409b3460"/>
        <function-ref name="request" scoped="" ref="0x409b3540"/>
        <function-ref name="granted" scoped="" ref="0x409b3620"/>
        <function-ref name="isOwner" scoped="" ref="0x409b3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409af740" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409af740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409af918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409afdf0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409afdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ae010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409cacd8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409cacd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409caeb0"/>
        <function-ref name="write" scoped="" ref="0x409c9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409ca8a0" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409ca8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409caa78"/>
        <function-ref name="write" scoped="" ref="0x409cab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409b0910" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409b0910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409ca468" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409ca468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ca640"/>
        <function-ref name="write" scoped="" ref="0x409ca720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409b1b98" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409b1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b1d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409b0260" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409b0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b0438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409afa98" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409afa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409afc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409cb368" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409cb368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cb540"/>
        <function-ref name="write" scoped="" ref="0x409cb620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409cb7a0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409cb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cb978"/>
        <function-ref name="write" scoped="" ref="0x409cba58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40892a98" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40892a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40892c70"/>
        <function-ref name="writeDone" scoped="" ref="0x40892d50"/>
        <function-ref name="write" scoped="" ref="0x40892e30"/>
        <function-ref name="beginRead" scoped="" ref="0x40892f10"/>
        <function-ref name="readDone" scoped="" ref="0x40891010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40892208" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40892208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x408923e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x408924c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x408925a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40891500" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40891500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408916d8"/>
        <function-ref name="write" scoped="" ref="0x408917b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x40891cc8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x40891cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40891ea0"/>
        <function-ref name="write" scoped="" ref="0x40890010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4087e9e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4087e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4087ebc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4087eca0"/>
        <function-ref name="request" scoped="" ref="0x4087ed80"/>
        <function-ref name="granted" scoped="" ref="0x4087ee60"/>
        <function-ref name="isOwner" scoped="" ref="0x40892010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x40890530" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x40890530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40890708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x4089d5c0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x4089d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089d798"/>
        <function-ref name="sendDone" scoped="" ref="0x4089d878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x4088b370" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x4088b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4088b548"/>
        <function-ref name="writeDone" scoped="" ref="0x4088b628"/>
        <function-ref name="write" scoped="" ref="0x4088b708"/>
        <function-ref name="beginRead" scoped="" ref="0x4088b7e8"/>
        <function-ref name="readDone" scoped="" ref="0x4088b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4088c0f8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x4088c0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4088c2d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x4088c3b0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4088c490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x408a2258" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408a2258"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408a2430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x4089da90" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x4089da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4089dc68"/>
        <function-ref name="toIdle" scoped="" ref="0x4089dd48"/>
        <function-ref name="isState" scoped="" ref="0x4089de28"/>
        <function-ref name="isIdle" scoped="" ref="0x4089df08"/>
        <function-ref name="requestState" scoped="" ref="0x40888010"/>
        <function-ref name="forceState" scoped="" ref="0x408880f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40889278" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40889278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40889450"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40889530"/>
        <function-ref name="request" scoped="" ref="0x40889610"/>
        <function-ref name="granted" scoped="" ref="0x408896f0"/>
        <function-ref name="isOwner" scoped="" ref="0x408897d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x4088bd98" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x4088bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088a010"/>
        <function-ref name="write" scoped="" ref="0x4088a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4088a5e0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x4088a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088a7b8"/>
        <function-ref name="write" scoped="" ref="0x4088a898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40888260" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40888260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40888438"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40888518"/>
        <function-ref name="led1On" scoped="" ref="0x408885f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408886d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408887b8"/>
        <function-ref name="get" scoped="" ref="0x40888898"/>
        <function-ref name="led1Off" scoped="" ref="0x40888978"/>
        <function-ref name="led2Off" scoped="" ref="0x40888cf8"/>
        <function-ref name="set" scoped="" ref="0x40888a58"/>
        <function-ref name="led0On" scoped="" ref="0x40888b38"/>
        <function-ref name="led2On" scoped="" ref="0x40888c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4088c908" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4088c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4088cae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4088cbc0"/>
        <function-ref name="request" scoped="" ref="0x4088cca0"/>
        <function-ref name="granted" scoped="" ref="0x4088cd80"/>
        <function-ref name="isOwner" scoped="" ref="0x4088ce60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x4089b010" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x4089b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4089b1e8"/>
        <function-ref name="runTask" scoped="" ref="0x4089b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x4088ad98" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x4088ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40889010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408c3770" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408c3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408c3948"/>
        <function-ref name="toIdle" scoped="" ref="0x408c3a28"/>
        <function-ref name="isState" scoped="" ref="0x408c3b08"/>
        <function-ref name="isIdle" scoped="" ref="0x408c3be8"/>
        <function-ref name="requestState" scoped="" ref="0x408c3cc8"/>
        <function-ref name="forceState" scoped="" ref="0x408c3da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408dfa28" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408dfa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408dfc00"/>
        <function-ref name="toIdle" scoped="" ref="0x408dfce0"/>
        <function-ref name="isState" scoped="" ref="0x408dfdc0"/>
        <function-ref name="isIdle" scoped="" ref="0x408dfea0"/>
        <function-ref name="requestState" scoped="" ref="0x408db010"/>
        <function-ref name="forceState" scoped="" ref="0x408db0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408dbad0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408dbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408dbca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408d8120" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408d8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408d82f8"/>
        <function-ref name="toIdle" scoped="" ref="0x408d83d8"/>
        <function-ref name="isState" scoped="" ref="0x408d84b8"/>
        <function-ref name="isIdle" scoped="" ref="0x408d8598"/>
        <function-ref name="requestState" scoped="" ref="0x408d8678"/>
        <function-ref name="forceState" scoped="" ref="0x408d8758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408e9b60" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408e9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e9d38"/>
        <function-ref name="sendDone" scoped="" ref="0x408e9e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408e9828" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408e9828"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408e9a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408dade0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408dade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408e9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408e9170" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408e9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408e9348"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408e9428"/>
        <function-ref name="request" scoped="" ref="0x408e9508"/>
        <function-ref name="granted" scoped="" ref="0x408e95e8"/>
        <function-ref name="isOwner" scoped="" ref="0x408e96c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408e79c0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408e79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e7b98"/>
        <function-ref name="sendDone" scoped="" ref="0x408e7c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408e7628" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408e7628"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408e7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408e72a8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408e72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408e7480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408e4120" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408e4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408e42f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408e43d8"/>
        <function-ref name="request" scoped="" ref="0x408e44b8"/>
        <function-ref name="granted" scoped="" ref="0x408e4598"/>
        <function-ref name="isOwner" scoped="" ref="0x408e4678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40919798" loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40919798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40919970"/>
        <function-ref name="runTask" scoped="" ref="0x40919a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408e1928" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408e1928"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e1b00"/>
        <function-ref name="sendDone" scoped="" ref="0x408e1be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x408fde00" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x408fde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408fc010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408fc0f0"/>
        <function-ref name="request" scoped="" ref="0x408fc1d0"/>
        <function-ref name="granted" scoped="" ref="0x408fc2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x408fc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408e15b0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408e15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408e1788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408e1250" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408e1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408e1428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x4090b1c8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x4090b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x4090b3a0"/>
        <function-ref name="sleep" scoped="" ref="0x408fd7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x4090b560"/>
        <function-ref name="dataReady" scoped="" ref="0x408fd8d0"/>
        <function-ref name="initMaster" scoped="" ref="0x4090b720"/>
        <function-ref name="setMasterBit" scoped="" ref="0x4090b800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x4090b8e0"/>
        <function-ref name="read" scoped="" ref="0x4090b9c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x4090baa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x4090bb80"/>
        <function-ref name="setClock" scoped="" ref="0x4090bc60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4090bd40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x4090be20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x408fd010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408fd0f0"/>
        <function-ref name="write" scoped="" ref="0x408fd1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x408fd2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x408fd390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x408fd470"/>
        <function-ref name="getClock" scoped="" ref="0x408fd550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x408fd630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x4090b480"/>
        <function-ref name="setClockPhase" scoped="" ref="0x4090b640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x408fd710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408e0100" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408e0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408e02d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408e03b8"/>
        <function-ref name="request" scoped="" ref="0x408e0498"/>
        <function-ref name="granted" scoped="" ref="0x408e0578"/>
        <function-ref name="isOwner" scoped="" ref="0x408e0658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40907918" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40907918"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40907af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40907498" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40907498"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40907670"/>
        <function-ref name="userId" scoped="" ref="0x40907750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x4091e0c0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x4091e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x4091e298"/>
        <function-ref name="sleep" scoped="" ref="0x4091d710"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x4091e458"/>
        <function-ref name="dataReady" scoped="" ref="0x4091d7f0"/>
        <function-ref name="initMaster" scoped="" ref="0x4091e618"/>
        <function-ref name="setMasterBit" scoped="" ref="0x4091e6f8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x4091e7d8"/>
        <function-ref name="read" scoped="" ref="0x4091e8b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x4091e998"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x4091ea78"/>
        <function-ref name="setClock" scoped="" ref="0x4091eb58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4091ec38"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x4091ed18"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x4091ee78"/>
        <function-ref name="setDataOrder" scoped="" ref="0x4091d010"/>
        <function-ref name="write" scoped="" ref="0x4091d0f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x4091d1d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x4091d2b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x4091d390"/>
        <function-ref name="getClock" scoped="" ref="0x4091d470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x4091d550"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x4091e378"/>
        <function-ref name="setClockPhase" scoped="" ref="0x4091e538"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x4091d630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40934200" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40934200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409343d8"/>
        <function-ref name="isInput" scoped="" ref="0x409344b8"/>
        <function-ref name="toggle" scoped="" ref="0x40934598"/>
        <function-ref name="isOutput" scoped="" ref="0x40934678"/>
        <function-ref name="get" scoped="" ref="0x40934758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40934838"/>
        <function-ref name="set" scoped="" ref="0x40934918"/>
        <function-ref name="clr" scoped="" ref="0x409349f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40937d10" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40937d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40937ee8"/>
        <function-ref name="isInput" scoped="" ref="0x40936010"/>
        <function-ref name="toggle" scoped="" ref="0x409360f0"/>
        <function-ref name="isOutput" scoped="" ref="0x409361d0"/>
        <function-ref name="get" scoped="" ref="0x409362b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40936390"/>
        <function-ref name="set" scoped="" ref="0x40936470"/>
        <function-ref name="clr" scoped="" ref="0x40936550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40937338" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40937338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40937510"/>
        <function-ref name="isInput" scoped="" ref="0x409375f0"/>
        <function-ref name="toggle" scoped="" ref="0x409376d0"/>
        <function-ref name="isOutput" scoped="" ref="0x409377b0"/>
        <function-ref name="get" scoped="" ref="0x40937890"/>
        <function-ref name="makeOutput" scoped="" ref="0x40937970"/>
        <function-ref name="set" scoped="" ref="0x40937a50"/>
        <function-ref name="clr" scoped="" ref="0x40937b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40935e30" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40935e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40937050"/>
        <function-ref name="stop" scoped="" ref="0x40937130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40934c00" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40934c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40934dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x409394a0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x409394a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40939678"/>
        <function-ref name="sleep" scoped="" ref="0x40938b10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40939838"/>
        <function-ref name="dataReady" scoped="" ref="0x40938bf0"/>
        <function-ref name="initMaster" scoped="" ref="0x409399f8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40939ad8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40939bb8"/>
        <function-ref name="read" scoped="" ref="0x40939c98"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40939d78"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40939e58"/>
        <function-ref name="setClock" scoped="" ref="0x40938010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x409380f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x409381d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40938330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40938410"/>
        <function-ref name="write" scoped="" ref="0x409384f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x409385d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x409386b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40938790"/>
        <function-ref name="getClock" scoped="" ref="0x40938870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40938950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40939758"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40939918"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40938a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40936740" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40936740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40936918"/>
        <function-ref name="isInput" scoped="" ref="0x409369f8"/>
        <function-ref name="toggle" scoped="" ref="0x40936ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40936bb8"/>
        <function-ref name="get" scoped="" ref="0x40936c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40936d78"/>
        <function-ref name="set" scoped="" ref="0x40936e58"/>
        <function-ref name="clr" scoped="" ref="0x40934010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40997030" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40997030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40997218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x409972f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409978e8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409978e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40997ad0"/>
        <function-ref name="configure" scoped="" ref="0x40997bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4094b8c0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4094b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4094baa8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4094bb88"/>
        <function-ref name="request" scoped="" ref="0x4094bc68"/>
        <function-ref name="granted" scoped="" ref="0x4094bd48"/>
        <function-ref name="isOwner" scoped="" ref="0x4094be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40997438" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40997438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40997610"/>
        <function-ref name="userId" scoped="" ref="0x409976f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4165c120" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4165c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4165c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4165c458" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4165c458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4165c630"/>
        <function-ref name="isEmpty" scoped="" ref="0x4165c710"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4165c7f0"/>
        <function-ref name="dequeue" scoped="" ref="0x4165c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x416b8b88" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x416b8b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x416b8d70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x416b8e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x416b74d0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x416b74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x416b76b8"/>
        <function-ref name="configure" scoped="" ref="0x416b7798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x416b78f8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x416b78f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x416b7ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x416b7bb0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x416b7c90"/>
        <function-ref name="dequeue" scoped="" ref="0x416b7d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x416b8448" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x416b8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x416b8630"/>
        <function-ref name="immediateRequest" scoped="" ref="0x416b8710"/>
        <function-ref name="request" scoped="" ref="0x416b87f0"/>
        <function-ref name="granted" scoped="" ref="0x416b88d0"/>
        <function-ref name="isOwner" scoped="" ref="0x416b89b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x416b7010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x416b7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x416b71e8"/>
        <function-ref name="userId" scoped="" ref="0x416b72c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x416b7ef0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x416b7ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x416b50e0"/>
        <function-ref name="runTask" scoped="" ref="0x416b51c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x409919a8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x409919a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40991b80"/>
        <function-ref name="isInput" scoped="" ref="0x40991c60"/>
        <function-ref name="toggle" scoped="" ref="0x40991d40"/>
        <function-ref name="isOutput" scoped="" ref="0x40991e20"/>
        <function-ref name="get" scoped="" ref="0x40991f00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40990010"/>
        <function-ref name="set" scoped="" ref="0x409900f0"/>
        <function-ref name="clr" scoped="" ref="0x409901d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40994aa0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40994aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40994c78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40994d58"/>
        <function-ref name="request" scoped="" ref="0x40994e38"/>
        <function-ref name="granted" scoped="" ref="0x40994f18"/>
        <function-ref name="isOwner" scoped="" ref="0x40991010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40991278" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40991278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40991450"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40991530"/>
        <function-ref name="request" scoped="" ref="0x40991610"/>
        <function-ref name="granted" scoped="" ref="0x409916f0"/>
        <function-ref name="isOwner" scoped="" ref="0x409917d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409a71b8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409a71b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409a7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x409a7520" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409a7520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409a76f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409a77d8"/>
        <function-ref name="led1On" scoped="" ref="0x409a78b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409a7998"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409a7a78"/>
        <function-ref name="get" scoped="" ref="0x409a7b58"/>
        <function-ref name="led1Off" scoped="" ref="0x409a7c38"/>
        <function-ref name="led2Off" scoped="" ref="0x409a6010"/>
        <function-ref name="set" scoped="" ref="0x409a7d18"/>
        <function-ref name="led0On" scoped="" ref="0x409a7df8"/>
        <function-ref name="led2On" scoped="" ref="0x409a7ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409bce38" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409bce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd208"/>
        <function-ref name="write" scoped="" ref="0x409dd2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409d7190" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409d7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409d7368"/>
        <function-ref name="writeDone" scoped="" ref="0x409d7448"/>
        <function-ref name="write" scoped="" ref="0x409d7528"/>
        <function-ref name="beginRead" scoped="" ref="0x409d7608"/>
        <function-ref name="readDone" scoped="" ref="0x409d76e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409c13a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409c13a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c1580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409be4b8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409be4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409be690"/>
        <function-ref name="write" scoped="" ref="0x409be770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409ddcd8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409ddcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ddeb0"/>
        <function-ref name="write" scoped="" ref="0x409dc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409dc190" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409dc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dc368"/>
        <function-ref name="write" scoped="" ref="0x409dc448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409c1db0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409c1db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409d85c8" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409d85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d87a0"/>
        <function-ref name="write" scoped="" ref="0x409d8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409bed28" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409bed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bef00"/>
        <function-ref name="write" scoped="" ref="0x409bc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409bc5c8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409bc5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bc7a0"/>
        <function-ref name="write" scoped="" ref="0x409bc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409dc5c8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409dc5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dc7a0"/>
        <function-ref name="write" scoped="" ref="0x409dc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409dbb20" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409dbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dbcf8"/>
        <function-ref name="write" scoped="" ref="0x409dbdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409c27b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409c27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409c2988"/>
        <function-ref name="abortRelease" scoped="" ref="0x409c2a68"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409c2b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409c0b98" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409c0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c0d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409c0ef0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409c0ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409bf188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409bf308" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409bf308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409bf4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409c04e8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409c04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409bc190" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409bc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bc368"/>
        <function-ref name="write" scoped="" ref="0x409bc448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409be8f0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409be8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409beac8"/>
        <function-ref name="write" scoped="" ref="0x409beba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409c1050" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409c1050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c1228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409da010" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409da010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409da1e8"/>
        <function-ref name="write" scoped="" ref="0x409da2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409d8190" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409d8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d8368"/>
        <function-ref name="write" scoped="" ref="0x409d8448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409dce38" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409dce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409db050"/>
        <function-ref name="write" scoped="" ref="0x409db130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409c2cc8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409c2cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c2ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409be080" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409be080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409be258"/>
        <function-ref name="write" scoped="" ref="0x409be338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409bca00" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409bca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bcbd8"/>
        <function-ref name="write" scoped="" ref="0x409bccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409d8a00" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409d8a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409d8bd8"/>
        <function-ref name="writeDone" scoped="" ref="0x409d8cb8"/>
        <function-ref name="write" scoped="" ref="0x409d8d98"/>
        <function-ref name="beginRead" scoped="" ref="0x409d8e78"/>
        <function-ref name="readDone" scoped="" ref="0x409d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409dca00" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409dca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dcbd8"/>
        <function-ref name="write" scoped="" ref="0x409dccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409dd468" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409dd468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd640"/>
        <function-ref name="write" scoped="" ref="0x409dd720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409c1700" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409c1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c18d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409dd8a0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409dd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dda78"/>
        <function-ref name="write" scoped="" ref="0x409ddb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409c20f8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409c20f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409c22d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409c23b0"/>
        <function-ref name="request" scoped="" ref="0x409c2490"/>
        <function-ref name="granted" scoped="" ref="0x409c2570"/>
        <function-ref name="isOwner" scoped="" ref="0x409c2650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409bf660" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409bf660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409bf838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409bfd10" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409bfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409bfee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409dacb8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409dacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dae90"/>
        <function-ref name="write" scoped="" ref="0x409d8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409da880" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409da880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409daa58"/>
        <function-ref name="write" scoped="" ref="0x409dab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409c0840" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409c0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c0a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409da448" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409da448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409da620"/>
        <function-ref name="write" scoped="" ref="0x409da700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409c1a58" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409c1a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c1c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409c0190" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409c0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c0368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409bf9b8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409bf9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409bfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409db2b0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409db2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409db488"/>
        <function-ref name="write" scoped="" ref="0x409db568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409db6e8" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409db6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409db8c0"/>
        <function-ref name="write" scoped="" ref="0x409db9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409cee38" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409cee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cd208"/>
        <function-ref name="write" scoped="" ref="0x409cd2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409e9190" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409e9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409e9368"/>
        <function-ref name="writeDone" scoped="" ref="0x409e9448"/>
        <function-ref name="write" scoped="" ref="0x409e9528"/>
        <function-ref name="beginRead" scoped="" ref="0x409e9608"/>
        <function-ref name="readDone" scoped="" ref="0x409e96e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409d33a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409d33a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d3580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409cf4b8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409cf4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cf690"/>
        <function-ref name="write" scoped="" ref="0x409cf770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409cdcd8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409cdcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cdeb0"/>
        <function-ref name="write" scoped="" ref="0x409ee010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409ee190" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409ee190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ee368"/>
        <function-ref name="write" scoped="" ref="0x409ee448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409d3db0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409d3db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409ea5c8" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409ea5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ea7a0"/>
        <function-ref name="write" scoped="" ref="0x409ea880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409cfd28" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409cfd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cff00"/>
        <function-ref name="write" scoped="" ref="0x409ce010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409ce5c8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409ce5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ce7a0"/>
        <function-ref name="write" scoped="" ref="0x409ce880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409ee5c8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409ee5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ee7a0"/>
        <function-ref name="write" scoped="" ref="0x409ee880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409edb20" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409edb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409edcf8"/>
        <function-ref name="write" scoped="" ref="0x409eddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409d47b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409d47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409d4988"/>
        <function-ref name="abortRelease" scoped="" ref="0x409d4a68"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409d4b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409d2b98" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409d2b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d2d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409d2ef0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409d2ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d1188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409d1308" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409d1308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409d24e8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409d24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409ce190" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409ce190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ce368"/>
        <function-ref name="write" scoped="" ref="0x409ce448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409cf8f0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409cf8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cfac8"/>
        <function-ref name="write" scoped="" ref="0x409cfba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409d3050" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409d3050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d3228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409eb010" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eb1e8"/>
        <function-ref name="write" scoped="" ref="0x409eb2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409ea190" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409ea190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ea368"/>
        <function-ref name="write" scoped="" ref="0x409ea448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409eee38" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409eee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ed050"/>
        <function-ref name="write" scoped="" ref="0x409ed130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409d4cc8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409d4cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d4ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409cf080" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409cf080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cf258"/>
        <function-ref name="write" scoped="" ref="0x409cf338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409cea00" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409cea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cebd8"/>
        <function-ref name="write" scoped="" ref="0x409cecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409eaa00" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409eaa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409eabd8"/>
        <function-ref name="writeDone" scoped="" ref="0x409eacb8"/>
        <function-ref name="write" scoped="" ref="0x409ead98"/>
        <function-ref name="beginRead" scoped="" ref="0x409eae78"/>
        <function-ref name="readDone" scoped="" ref="0x409e9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409eea00" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409eea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eebd8"/>
        <function-ref name="write" scoped="" ref="0x409eecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409cd468" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409cd468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cd640"/>
        <function-ref name="write" scoped="" ref="0x409cd720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409d3700" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409d3700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d38d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409cd8a0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409cd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cda78"/>
        <function-ref name="write" scoped="" ref="0x409cdb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409d40f8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409d40f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409d42d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409d43b0"/>
        <function-ref name="request" scoped="" ref="0x409d4490"/>
        <function-ref name="granted" scoped="" ref="0x409d4570"/>
        <function-ref name="isOwner" scoped="" ref="0x409d4650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409d1660" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409d1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d1838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409d1d10" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409d1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d1ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409ebcb8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409ebcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ebe90"/>
        <function-ref name="write" scoped="" ref="0x409ea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409eb880" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409eb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eba58"/>
        <function-ref name="write" scoped="" ref="0x409ebb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409d2840" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409d2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d2a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409eb448" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409eb448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409eb620"/>
        <function-ref name="write" scoped="" ref="0x409eb700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409d3a58" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409d3a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d3c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409d2190" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409d2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d2368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409d19b8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409d19b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409d1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409ed2b0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409ed2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ed488"/>
        <function-ref name="write" scoped="" ref="0x409ed568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409ed6e8" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409ed6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ed8c0"/>
        <function-ref name="write" scoped="" ref="0x409ed9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x409e42c0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409e42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x409e4498"/>
        <function-ref name="changed" scoped="" ref="0x409e4578"/>
        <function-ref name="amGroup" scoped="" ref="0x409e4658"/>
        <function-ref name="setAddress" scoped="" ref="0x409e4738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x409f8728" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x409f8728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x409f8900"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x409f89e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x409f8ac0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x409f8ba0"/>
        <function-ref name="setCca" scoped="" ref="0x409f8c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x409f8d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x409f7808" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x409f7808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409f79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x409f8010" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x409f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409f81e8"/>
        <function-ref name="cancel" scoped="" ref="0x409f82c8"/>
        <function-ref name="modify" scoped="" ref="0x409f83a8"/>
        <function-ref name="sendDone" scoped="" ref="0x409f8488"/>
        <function-ref name="resend" scoped="" ref="0x409f8568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409fbb00" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409fbb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409fbcd8"/>
        <function-ref name="stop" scoped="" ref="0x409fbdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x409f7c70" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x409f7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409f7e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40a04b18" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40a04b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40a04cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40a04dd0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40a04eb0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40a03010"/>
        <function-ref name="setCca" scoped="" ref="0x40a030f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40a031d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a21678" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a21678"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a20198"/>
        <function-ref name="clear" scoped="" ref="0x40a20548"/>
        <function-ref name="isValid" scoped="" ref="0x40a21dc8"/>
        <function-ref name="set" scoped="" ref="0x40a208f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40a03490" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40a03490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a03668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x40a16a80" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40a16a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a16c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x40a1ad20" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40a1ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a1aef8"/>
        <function-ref name="disable" scoped="" ref="0x40a1f010"/>
        <function-ref name="captured" scoped="" ref="0x40a1f0f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a1f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x40a03ee0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x40a03ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a013e8"/>
        <function-ref name="fired" scoped="" ref="0x40a02b98"/>
        <function-ref name="startAt" scoped="" ref="0x40a010a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40a02e10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a01660"/>
        <function-ref name="start" scoped="" ref="0x40a02680"/>
        <function-ref name="stop" scoped="" ref="0x40a02920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40a01910" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a01910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a01ae8"/>
        <function-ref name="getRssi" scoped="" ref="0x40a01bc8"/>
        <function-ref name="getPower" scoped="" ref="0x40a01ca8"/>
        <function-ref name="getLqi" scoped="" ref="0x40a01d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x40a18810" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a18810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a189e8"/>
        <function-ref name="write" scoped="" ref="0x40a18ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40a18d18" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40a18d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a18ef0"/>
        <function-ref name="write" scoped="" ref="0x40a16010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x40a11158" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a11158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a11330"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a11410"/>
        <function-ref name="sfd" scoped="" ref="0x40a114f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a043e0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a043e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a045b8"/>
        <function-ref name="cancel" scoped="" ref="0x40a04698"/>
        <function-ref name="modify" scoped="" ref="0x40a04778"/>
        <function-ref name="sendDone" scoped="" ref="0x40a04858"/>
        <function-ref name="resend" scoped="" ref="0x40a04938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x40a19a88" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a19a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a19c60"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a19d40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a19e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x40a16eb0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40a16eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a150c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40a1fe48" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40a1fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a1e050"/>
        <function-ref name="isInput" scoped="" ref="0x40a1e130"/>
        <function-ref name="toggle" scoped="" ref="0x40a1e210"/>
        <function-ref name="isOutput" scoped="" ref="0x40a1e2f0"/>
        <function-ref name="get" scoped="" ref="0x40a1e3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a1e4b0"/>
        <function-ref name="set" scoped="" ref="0x40a1e590"/>
        <function-ref name="clr" scoped="" ref="0x40a1e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a06b28" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a06b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a06d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40a21010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a21010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40a211e8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a212c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40a1a650" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a1a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a1a828"/>
        <function-ref name="isSet" scoped="" ref="0x40a1a908"/>
        <function-ref name="cancel" scoped="" ref="0x40a1a9e8"/>
        <function-ref name="set" scoped="" ref="0x40a1aac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40a15328" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40a15328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a15600"/>
        <function-ref name="write" scoped="" ref="0x40a156e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a19338" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a19338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a19510"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a195f0"/>
        <function-ref name="request" scoped="" ref="0x40a196d0"/>
        <function-ref name="granted" scoped="" ref="0x40a197b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a19890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x40a1f3d0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40a1f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a1f628"/>
        <function-ref name="isInput" scoped="" ref="0x40a1f708"/>
        <function-ref name="toggle" scoped="" ref="0x40a1f7e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a1f8c8"/>
        <function-ref name="get" scoped="" ref="0x40a1f9a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a1fa88"/>
        <function-ref name="set" scoped="" ref="0x40a1fb68"/>
        <function-ref name="clr" scoped="" ref="0x40a1fc48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40a16240" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a16240"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a16418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x40a1e870" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40a1e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a1ea48"/>
        <function-ref name="isInput" scoped="" ref="0x40a1eb28"/>
        <function-ref name="toggle" scoped="" ref="0x40a1ec08"/>
        <function-ref name="isOutput" scoped="" ref="0x40a1ece8"/>
        <function-ref name="get" scoped="" ref="0x40a1edc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a1eea8"/>
        <function-ref name="set" scoped="" ref="0x40a19010"/>
        <function-ref name="clr" scoped="" ref="0x40a190f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a11680" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a11680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a11858"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a11938"/>
        <function-ref name="led1On" scoped="" ref="0x40a11a18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a11af8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a11bd8"/>
        <function-ref name="get" scoped="" ref="0x40a11cb8"/>
        <function-ref name="led1Off" scoped="" ref="0x40a11d98"/>
        <function-ref name="led2Off" scoped="" ref="0x40a141d0"/>
        <function-ref name="set" scoped="" ref="0x40a11e78"/>
        <function-ref name="led0On" scoped="" ref="0x40a14010"/>
        <function-ref name="led2On" scoped="" ref="0x40a140f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a06ec8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a06ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a040c0"/>
        <function-ref name="stop" scoped="" ref="0x40a041a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x40a18070" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40a18070"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a18248"/>
        <function-ref name="writeDone" scoped="" ref="0x40a18328"/>
        <function-ref name="write" scoped="" ref="0x40a18408"/>
        <function-ref name="beginRead" scoped="" ref="0x40a184e8"/>
        <function-ref name="readDone" scoped="" ref="0x40a185c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x40a16650" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40a16650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a16828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40a03918" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40a03918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a03af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40a6e880" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40a6e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6eb58"/>
        <function-ref name="write" scoped="" ref="0x40a6ec38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40a8c988" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40a8c988"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a8cb60"/>
        <function-ref name="writeDone" scoped="" ref="0x40a8cc40"/>
        <function-ref name="write" scoped="" ref="0x40a8cd20"/>
        <function-ref name="beginRead" scoped="" ref="0x40a8ce00"/>
        <function-ref name="readDone" scoped="" ref="0x40a8cee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40a74d38" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40a74d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a74f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40a70e50" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40a70e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6f050"/>
        <function-ref name="write" scoped="" ref="0x40a6f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40a6d6a8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40a6d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6d880"/>
        <function-ref name="write" scoped="" ref="0x40a6d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40a6dae0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40a6dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6dcb8"/>
        <function-ref name="write" scoped="" ref="0x40a6dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40a73760" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40a73760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a73938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40a8de38" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a8de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8c050"/>
        <function-ref name="write" scoped="" ref="0x40a8c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40a6f6e8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40a6f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6f8c0"/>
        <function-ref name="write" scoped="" ref="0x40a6f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40a6e010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40a6e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6e1e8"/>
        <function-ref name="write" scoped="" ref="0x40a6e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40a6df18" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40a6df18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6b108"/>
        <function-ref name="write" scoped="" ref="0x40a6b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40a6a468" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40a6a468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6a640"/>
        <function-ref name="write" scoped="" ref="0x40a6a720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40a74170" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a74170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a74348"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a74428"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a74508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40a714e8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40a714e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a716c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40a71840" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a71840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a71a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40a71c18" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40a71c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a71df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40a73e10" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40a73e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a71010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40a6fb20" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40a6fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6fcf8"/>
        <function-ref name="write" scoped="" ref="0x40a6fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40a6f2b0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40a6f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6f488"/>
        <function-ref name="write" scoped="" ref="0x40a6f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40a749e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40a749e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a74bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40a6a8a0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40a6a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6aa78"/>
        <function-ref name="write" scoped="" ref="0x40a6ab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40a8da00" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40a8da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8dbd8"/>
        <function-ref name="write" scoped="" ref="0x40a8dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40a6b7a0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40a6b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6b978"/>
        <function-ref name="write" scoped="" ref="0x40a6ba58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40a74688" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a74688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a74860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40a70a18" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40a70a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a70bf0"/>
        <function-ref name="write" scoped="" ref="0x40a70cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40a6e448" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40a6e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6e620"/>
        <function-ref name="write" scoped="" ref="0x40a6e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40a8c2b0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a8c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a8c488"/>
        <function-ref name="writeDone" scoped="" ref="0x40a8c568"/>
        <function-ref name="write" scoped="" ref="0x40a8c648"/>
        <function-ref name="beginRead" scoped="" ref="0x40a8c728"/>
        <function-ref name="readDone" scoped="" ref="0x40a8c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40a6b368" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40a6b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6b540"/>
        <function-ref name="write" scoped="" ref="0x40a6b620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40a6edb8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40a6edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6d010"/>
        <function-ref name="write" scoped="" ref="0x40a6d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40a730b0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40a730b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a73288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40a6d270" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40a6d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6d448"/>
        <function-ref name="write" scoped="" ref="0x40a6d528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a75a40" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a75a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a75c18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a75cf8"/>
        <function-ref name="request" scoped="" ref="0x40a75dd8"/>
        <function-ref name="granted" scoped="" ref="0x40a75eb8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a74010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40a70010" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40a70010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a701e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40a706c0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40a706c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a70898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40a8d5c8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40a8d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8d7a0"/>
        <function-ref name="write" scoped="" ref="0x40a8d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40a8d190" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40a8d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a8d368"/>
        <function-ref name="write" scoped="" ref="0x40a8d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40a71190" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a71190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a71368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40a6acd8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40a6acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6aeb0"/>
        <function-ref name="write" scoped="" ref="0x40a8d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40a73408" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40a73408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a735e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40a73ab8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40a73ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a73c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40a70368" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40a70368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a70540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40a6bbd8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40a6bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6bdb0"/>
        <function-ref name="write" scoped="" ref="0x40a6be90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40a6a030" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40a6a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6a208"/>
        <function-ref name="write" scoped="" ref="0x40a6a2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a85500" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a85500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a856d8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a857b8"/>
        <function-ref name="sfd" scoped="" ref="0x40a85898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a85a40" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a85a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a85c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a85ed8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a85ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a840c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a85060" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a85060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a85238"/>
        <function-ref name="stop" scoped="" ref="0x40a85318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x40a7fc18" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40a7fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7fdf0"/>
        <function-ref name="isInput" scoped="" ref="0x40a7fed0"/>
        <function-ref name="toggle" scoped="" ref="0x40a7e010"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7e0f0"/>
        <function-ref name="get" scoped="" ref="0x40a7e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7e2b0"/>
        <function-ref name="set" scoped="" ref="0x40a7e390"/>
        <function-ref name="clr" scoped="" ref="0x40a7e470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40a9fb58" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40a9fb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40a9fd30"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40a9fe10"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40a9fef0"/>
        <function-ref name="syncDone" scoped="" ref="0x40a9e010"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40a9e0f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40a9e1d0"/>
        <function-ref name="setChannel" scoped="" ref="0x40a9e2b0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40a9e390"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40a9e470"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40a9e550"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40a9e630"/>
        <function-ref name="sync" scoped="" ref="0x40a9e710"/>
        <function-ref name="getChannel" scoped="" ref="0x40a9e7f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40a9e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x40a94230" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x40a94230"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a94408"/>
        <function-ref name="runTask" scoped="" ref="0x40a944e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x40a7e688" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40a7e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7e860"/>
        <function-ref name="isInput" scoped="" ref="0x40a7e940"/>
        <function-ref name="toggle" scoped="" ref="0x40a7ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7eb00"/>
        <function-ref name="get" scoped="" ref="0x40a7ebe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7ecc0"/>
        <function-ref name="set" scoped="" ref="0x40a7eda0"/>
        <function-ref name="clr" scoped="" ref="0x40a7ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a9ed00" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a9ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a9d828"/>
        <function-ref name="clear" scoped="" ref="0x40a9dbd8"/>
        <function-ref name="isValid" scoped="" ref="0x40a9d478"/>
        <function-ref name="set" scoped="" ref="0x40a9c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40a9f040" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a9f040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a9f218"/>
        <function-ref name="getRssi" scoped="" ref="0x40a9f2f8"/>
        <function-ref name="getPower" scoped="" ref="0x40a9f3d8"/>
        <function-ref name="getLqi" scoped="" ref="0x40a9f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a803a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a803a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a80580"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a80660"/>
        <function-ref name="sfd" scoped="" ref="0x40a80740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40a7c798" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a7c798"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a7c970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40a7f210" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40a7f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7f3e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a7f4c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a7f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7f688"/>
        <function-ref name="get" scoped="" ref="0x40a7f768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7f848"/>
        <function-ref name="set" scoped="" ref="0x40a7f928"/>
        <function-ref name="clr" scoped="" ref="0x40a7fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a84b48" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a84b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a84d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40a9f6c0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a9f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40a9f898"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a9f978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a808e8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a808e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a80ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a7d858" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a7d858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a7da30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a7db10"/>
        <function-ref name="request" scoped="" ref="0x40a7dbf0"/>
        <function-ref name="granted" scoped="" ref="0x40a7dcd0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a7ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40a7c010" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a7c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a7c1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x40a7c2c8"/>
        <function-ref name="write" scoped="" ref="0x40a7c3a8"/>
        <function-ref name="beginRead" scoped="" ref="0x40a7c488"/>
        <function-ref name="readDone" scoped="" ref="0x40a7c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a80d80" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a80d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a7f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a9c458" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a9c458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a9c630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a9c710"/>
        <function-ref name="led1On" scoped="" ref="0x40a9c7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a9c8d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a9c9b0"/>
        <function-ref name="get" scoped="" ref="0x40a9ca90"/>
        <function-ref name="led1Off" scoped="" ref="0x40a9cb70"/>
        <function-ref name="led2Off" scoped="" ref="0x40a9cef0"/>
        <function-ref name="set" scoped="" ref="0x40a9cc50"/>
        <function-ref name="led0On" scoped="" ref="0x40a9cd30"/>
        <function-ref name="led2On" scoped="" ref="0x40a9ce10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40a7d198" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a7d198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a7d370"/>
        <function-ref name="disable" scoped="" ref="0x40a7d450"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40a7d530"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40a7d610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40a7cbc8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a7cbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a7ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a84ee8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a84ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a800e0"/>
        <function-ref name="stop" scoped="" ref="0x40a801c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40ad1788" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad1788"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ad1960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40ad45a0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40ad45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40ad4778"/>
        <function-ref name="getRssi" scoped="" ref="0x40ad4858"/>
        <function-ref name="getPower" scoped="" ref="0x40ad4938"/>
        <function-ref name="getLqi" scoped="" ref="0x40ad4a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40ad1de0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ad1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ad0920"/>
        <function-ref name="clear" scoped="" ref="0x40ad0cd0"/>
        <function-ref name="isValid" scoped="" ref="0x40ad0570"/>
        <function-ref name="set" scoped="" ref="0x40acf0a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40ad12d8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad12d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40ad14b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40ad1590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40acc010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40acc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40acc1e8"/>
        <function-ref name="isSet" scoped="" ref="0x40acc2c8"/>
        <function-ref name="cancel" scoped="" ref="0x40acc3a8"/>
        <function-ref name="set" scoped="" ref="0x40acc488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40acf7e0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40acf7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40acd3c0"/>
        <function-ref name="clear" scoped="" ref="0x40acd770"/>
        <function-ref name="isValid" scoped="" ref="0x40acd010"/>
        <function-ref name="set" scoped="" ref="0x40acdb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ad4c88" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ad4c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ad4e60"/>
        <function-ref name="noAck" scoped="" ref="0x40ad1010"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ad10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40ac8010" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ac8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ac81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40accde0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40accde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40ac9010"/>
        <function-ref name="getRssi" scoped="" ref="0x40ac90f0"/>
        <function-ref name="getPower" scoped="" ref="0x40ac91d0"/>
        <function-ref name="getLqi" scoped="" ref="0x40ac92b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40aeaeb0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40aeaeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ae90c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ae91a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ae9280"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ae9360"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ae9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40ac8668" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ac8668"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ac7198"/>
        <function-ref name="clear" scoped="" ref="0x40ac7548"/>
        <function-ref name="isValid" scoped="" ref="0x40ac8db8"/>
        <function-ref name="set" scoped="" ref="0x40ac78f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40ac9aa0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ac9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40ac9c78"/>
        <function-ref name="getMetadata" scoped="" ref="0x40ac9d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40aea888" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aea888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aeaa60"/>
        <function-ref name="isSet" scoped="" ref="0x40aeab40"/>
        <function-ref name="cancel" scoped="" ref="0x40aeac20"/>
        <function-ref name="set" scoped="" ref="0x40aead00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40ae9780" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40ae9780"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae9dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40ae7240" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40ae7240"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae7888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40ac5100" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ac5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ac5c00"/>
        <function-ref name="clear" scoped="" ref="0x40aea010"/>
        <function-ref name="isValid" scoped="" ref="0x40ac5850"/>
        <function-ref name="set" scoped="" ref="0x40aea3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ac9520" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ac9520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ac96f8"/>
        <function-ref name="noAck" scoped="" ref="0x40ac97d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ac98b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40aeba88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40aeba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b100f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b10448" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b10448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40334e10"/>
            <typename><typedef-ref name="T32khz" ref="0x40333010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b10b98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b0a0a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b10e10"/>
        <function-ref name="overflow" scoped="" ref="0x40b0a320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40b09c38" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40b09c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b05730"/>
        <function-ref name="fired" scoped="" ref="0x40b069d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b050f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b06e80"/>
        <function-ref name="getdt" scoped="" ref="0x40b05be0"/>
        <function-ref name="gett0" scoped="" ref="0x40b05988"/>
        <function-ref name="isRunning" scoped="" ref="0x40b06c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b06278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b05410"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b064f8"/>
        <function-ref name="stop" scoped="" ref="0x40b06778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b03010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b03010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b03658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b09488" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b09488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b09660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40afe8a8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40afe8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b22010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b22500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b22288"/>
        <function-ref name="overflow" scoped="" ref="0x40b22778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b026b0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b026b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b02888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40b02c78" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40b02c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40afe150"/>
        <function-ref name="fired" scoped="" ref="0x40aff908"/>
        <function-ref name="startAt" scoped="" ref="0x40affdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x40affb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40afe3c8"/>
        <function-ref name="start" scoped="" ref="0x40aff3f0"/>
        <function-ref name="stop" scoped="" ref="0x40aff690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b5e448" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b5e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b5c908"/>
        <function-ref name="fired" scoped="" ref="0x40b5c0d8"/>
        <function-ref name="startAt" scoped="" ref="0x40b5c5c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b5c350"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b5cb80"/>
        <function-ref name="start" scoped="" ref="0x40b5eb98"/>
        <function-ref name="stop" scoped="" ref="0x40b5ee38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b5e010" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b5e010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b5e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b5ceb0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b5ceb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b5b610"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b5bb00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b5b888"/>
        <function-ref name="overflow" scoped="" ref="0x40b5bd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x41708640" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41708640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x41708818"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x417088f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x417089d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41708ab8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x41708b98"/>
        <function-ref name="setControl" scoped="" ref="0x41708c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4170e790" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4170e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4170dc68"/>
        <function-ref name="fired" scoped="" ref="0x4170d438"/>
        <function-ref name="startAt" scoped="" ref="0x4170d928"/>
        <function-ref name="isRunning" scoped="" ref="0x4170d6b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4170dee0"/>
        <function-ref name="start" scoped="" ref="0x4170eee0"/>
        <function-ref name="stop" scoped="" ref="0x4170d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4170e358" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4170e358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4170e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4170b228" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4170b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4170b978"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4170be68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4170bbf0"/>
        <function-ref name="overflow" scoped="" ref="0x4170a110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x41705890" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x41705890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x41705a68"/>
        <function-ref name="compareBusy" scoped="" ref="0x41705b48"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x41705c28"/>
        <function-ref name="countBusy" scoped="" ref="0x41705d08"/>
        <function-ref name="getAssr" scoped="" ref="0x41705de8"/>
        <function-ref name="setAssr" scoped="" ref="0x41705ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x41708e68" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x41708e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x417053e8"/>
        <function-ref name="fired" scoped="" ref="0x417069f0"/>
        <function-ref name="get" scoped="" ref="0x417064d8"/>
        <function-ref name="reset" scoped="" ref="0x41706c68"/>
        <function-ref name="isOn" scoped="" ref="0x41705660"/>
        <function-ref name="set" scoped="" ref="0x41706750"/>
        <function-ref name="start" scoped="" ref="0x41706ee0"/>
        <function-ref name="stop" scoped="" ref="0x41705170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4170a400" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4170a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41709ee0"/>
        <function-ref name="test" scoped="" ref="0x417099f0"/>
        <function-ref name="get" scoped="" ref="0x4170aa48"/>
        <function-ref name="setScale" scoped="" ref="0x41708170"/>
        <function-ref name="getScale" scoped="" ref="0x41708410"/>
        <function-ref name="reset" scoped="" ref="0x41709288"/>
        <function-ref name="overflow" scoped="" ref="0x41709010"/>
        <function-ref name="isOn" scoped="" ref="0x41709c68"/>
        <function-ref name="set" scoped="" ref="0x4170acc0"/>
        <function-ref name="start" scoped="" ref="0x41709500"/>
        <function-ref name="stop" scoped="" ref="0x41709778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40b68010" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40b68010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b681e8"/>
        <function-ref name="runTask" scoped="" ref="0x40b682c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40b6a5b8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b6a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b69ab8"/>
        <function-ref name="fired" scoped="" ref="0x40b69288"/>
        <function-ref name="startAt" scoped="" ref="0x40b69778"/>
        <function-ref name="isRunning" scoped="" ref="0x40b69500"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b69d30"/>
        <function-ref name="start" scoped="" ref="0x40b6ad08"/>
        <function-ref name="stop" scoped="" ref="0x40b69010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b59270" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b59270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b6cd58"/>
        <function-ref name="fired" scoped="" ref="0x40b6c010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b6c718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b6c4c0"/>
        <function-ref name="getdt" scoped="" ref="0x40b6a268"/>
        <function-ref name="gett0" scoped="" ref="0x40b6a010"/>
        <function-ref name="isRunning" scoped="" ref="0x40b6c268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b59898"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b6ca38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b59b18"/>
        <function-ref name="stop" scoped="" ref="0x40b59d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40b8b798" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40b8b798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b8b970"/>
        <function-ref name="runTask" scoped="" ref="0x40b8ba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40b8e5a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40b8e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b8b098"/>
        <function-ref name="fired" scoped="" ref="0x40b8d330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b8da38"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b8d7e0"/>
        <function-ref name="getdt" scoped="" ref="0x40b8b548"/>
        <function-ref name="gett0" scoped="" ref="0x40b8b2f0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b8d588"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b8ebc8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b8dd58"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b8ee48"/>
        <function-ref name="stop" scoped="" ref="0x40b8d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b66210" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b66210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b90da8"/>
        <function-ref name="fired" scoped="" ref="0x40b90010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b90748"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b904e0"/>
        <function-ref name="getdt" scoped="" ref="0x40b8e2b0"/>
        <function-ref name="gett0" scoped="" ref="0x40b8e048"/>
        <function-ref name="isRunning" scoped="" ref="0x40b90278"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b66848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b90a78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b66ad8"/>
        <function-ref name="stop" scoped="" ref="0x40b66d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b8ac60" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b8ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b892e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b89638" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b89638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b89d88"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b88288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b88010"/>
        <function-ref name="overflow" scoped="" ref="0x40b88500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40bae6e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bae6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ba1248"/>
        <function-ref name="fired" scoped="" ref="0x40bad4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40badbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bad998"/>
        <function-ref name="getdt" scoped="" ref="0x40ba16f8"/>
        <function-ref name="gett0" scoped="" ref="0x40ba14a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40bad740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40baed10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40badf10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40bad010"/>
        <function-ref name="stop" scoped="" ref="0x40bad290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40ba98f0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40ba98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ba33f8"/>
        <function-ref name="fired" scoped="" ref="0x40ba5688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ba5d90"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ba5b38"/>
        <function-ref name="getdt" scoped="" ref="0x40ba38a8"/>
        <function-ref name="gett0" scoped="" ref="0x40ba3650"/>
        <function-ref name="isRunning" scoped="" ref="0x40ba58e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ba9f18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ba30d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ba51b0"/>
        <function-ref name="stop" scoped="" ref="0x40ba5430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40bc2368" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40bc2368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc2640"/>
        <function-ref name="write" scoped="" ref="0x40bc2720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40bbc550" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40bbc550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bbc728"/>
        <function-ref name="writeDone" scoped="" ref="0x40bbc808"/>
        <function-ref name="write" scoped="" ref="0x40bbc8e8"/>
        <function-ref name="beginRead" scoped="" ref="0x40bbc9c8"/>
        <function-ref name="readDone" scoped="" ref="0x40bbcaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40b9f840" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40b9f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9fa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40bc4920" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40bc4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc4af8"/>
        <function-ref name="write" scoped="" ref="0x40bc4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40bc0190" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40bc0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc0368"/>
        <function-ref name="write" scoped="" ref="0x40bc0448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40bc05c8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40bc05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc07a0"/>
        <function-ref name="write" scoped="" ref="0x40bc0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40b9d260" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b9d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9d438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40bbda00" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40bbda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbdbd8"/>
        <function-ref name="write" scoped="" ref="0x40bbdcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40bc3270" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40bc3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc3448"/>
        <function-ref name="write" scoped="" ref="0x40bc3528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40bc3ae0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40bc3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc3cb8"/>
        <function-ref name="write" scoped="" ref="0x40bc3d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40bc0a00" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40bc0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc0bd8"/>
        <function-ref name="write" scoped="" ref="0x40bc0cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40bbe010" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40bbe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbe1e8"/>
        <function-ref name="write" scoped="" ref="0x40bbe2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40ad2bd0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40ad2da8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40ad2e88"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b9f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40b9c010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b9c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40b9c368" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40b9c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9c5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40b9c740" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40b9c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9c918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40b9d910" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40b9d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40bc36a8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40bc36a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc3880"/>
        <function-ref name="write" scoped="" ref="0x40bc3960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40bc4d58" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40bc4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc3010"/>
        <function-ref name="write" scoped="" ref="0x40bc30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40b9f4e8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40b9f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40bbe448" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40bbe448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbe620"/>
        <function-ref name="write" scoped="" ref="0x40bbe700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40bbd5c8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40bbd5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbd7a0"/>
        <function-ref name="write" scoped="" ref="0x40bbd880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40bbf2b0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40bbf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbf488"/>
        <function-ref name="write" scoped="" ref="0x40bbf568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40b9f190" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40b9f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9f368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40bc44e8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40bc44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc46c0"/>
        <function-ref name="write" scoped="" ref="0x40bc47a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40bc3f18" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40bc3f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc2108"/>
        <function-ref name="write" scoped="" ref="0x40bc21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40bbde38" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40bbde38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bbc050"/>
        <function-ref name="writeDone" scoped="" ref="0x40bbc130"/>
        <function-ref name="write" scoped="" ref="0x40bbc210"/>
        <function-ref name="beginRead" scoped="" ref="0x40bbc2f0"/>
        <function-ref name="readDone" scoped="" ref="0x40bbc3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40bc0e38" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40bc0e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbf050"/>
        <function-ref name="write" scoped="" ref="0x40bbf130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40bc28a0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40bc28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc2a78"/>
        <function-ref name="write" scoped="" ref="0x40bc2b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40b9fb98" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40b9fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9fd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40bc2cd8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40bc2cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc2eb0"/>
        <function-ref name="write" scoped="" ref="0x40bc0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ad2518" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ad2518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad26f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ad27d0"/>
        <function-ref name="request" scoped="" ref="0x40ad28b0"/>
        <function-ref name="granted" scoped="" ref="0x40ad2990"/>
        <function-ref name="isOwner" scoped="" ref="0x40ad2a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40b9ca98" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40b9ca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40bc4190" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40bc4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bc4368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40bbd190" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40bbd190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbd368"/>
        <function-ref name="write" scoped="" ref="0x40bbd448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40bbecb8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40bbecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbee90"/>
        <function-ref name="write" scoped="" ref="0x40bbd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40b9dc68" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40b9dc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40bbe880" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40bbe880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbea58"/>
        <function-ref name="write" scoped="" ref="0x40bbeb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40b9fef0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b9fef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40b9d5b8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40b9d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b9d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40b9cdf0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40b9cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bc4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40bbf6e8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40bbf6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbf8c0"/>
        <function-ref name="write" scoped="" ref="0x40bbf9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40bbfb20" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40bbfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbfcf8"/>
        <function-ref name="write" scoped="" ref="0x40bbfdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40bd3398" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40bd3398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40bd3570"/>
        <function-ref name="rand32" scoped="" ref="0x40bd3650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40bd6aa8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40bd6aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bd3100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bd6588" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bd6588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bd6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40bd0df0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40bd0df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40bcf010"/>
        <function-ref name="rand32" scoped="" ref="0x40bcf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40bd0530" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40bd0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bd0b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bd0010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bd0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bd01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40bd4010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40bd4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40bd41e8"/>
        <function-ref name="toIdle" scoped="" ref="0x40bd42c8"/>
        <function-ref name="isState" scoped="" ref="0x40bd43a8"/>
        <function-ref name="isIdle" scoped="" ref="0x40bd4488"/>
        <function-ref name="requestState" scoped="" ref="0x40bd4568"/>
        <function-ref name="forceState" scoped="" ref="0x40bd4648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bc55e8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bc55e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bc57c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc58a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bc5980"/>
        <function-ref name="cancel" scoped="" ref="0x40bc5a60"/>
        <function-ref name="sendDone" scoped="" ref="0x40bc5b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bd1e28" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bd1e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bc5050"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc5130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bc5210"/>
        <function-ref name="cancel" scoped="" ref="0x40bc52f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bc53d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40beb010" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40beb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40beb1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40beb2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40beb3a8"/>
        <function-ref name="cancel" scoped="" ref="0x40beb488"/>
        <function-ref name="sendDone" scoped="" ref="0x40beb568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bee4c0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bee4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bee698"/>
        <function-ref name="getPayload" scoped="" ref="0x40bee778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bee858"/>
        <function-ref name="cancel" scoped="" ref="0x40bee938"/>
        <function-ref name="sendDone" scoped="" ref="0x40beea18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40bebe98" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40bebe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40bea0c0"/>
        <function-ref name="rand32" scoped="" ref="0x40bea1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40beeb88" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40beeb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40beed60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40bea388" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bea388"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40bea560"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bea640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40beb6e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40beb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40beb8b8"/>
        <function-ref name="toIdle" scoped="" ref="0x40beb998"/>
        <function-ref name="isState" scoped="" ref="0x40beba78"/>
        <function-ref name="isIdle" scoped="" ref="0x40bebb58"/>
        <function-ref name="requestState" scoped="" ref="0x40bebc38"/>
        <function-ref name="forceState" scoped="" ref="0x40bebd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40bed2d0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40bed2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40bed4a8"/>
        <function-ref name="toIdle" scoped="" ref="0x40bed588"/>
        <function-ref name="isState" scoped="" ref="0x40bed668"/>
        <function-ref name="isIdle" scoped="" ref="0x40bed748"/>
        <function-ref name="requestState" scoped="" ref="0x40bed828"/>
        <function-ref name="forceState" scoped="" ref="0x40bed908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bdd260" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bdd260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bdd438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bc7960" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bc7960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bc7b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40bc7d88" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40bc7d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bdd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bdaa80" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bdaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bdac58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bda658" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bda658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bda830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bddec8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bddec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bda0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40bdae40" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bdae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40c03050"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c03130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40bda310" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40bda310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bda4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bf2a38" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bf2a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bf2c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bf2de8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bf2de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bf1010"/>
        <function-ref name="getPayload" scoped="" ref="0x40bf10f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bf11d0"/>
        <function-ref name="cancel" scoped="" ref="0x40bf12b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bf1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bc6f10" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bc6f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bf2108"/>
        <function-ref name="getPayload" scoped="" ref="0x40bf21e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bf22c8"/>
        <function-ref name="cancel" scoped="" ref="0x40bf23a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40bf2488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bf2610" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bf2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bf27e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c170c8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c170c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c172a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c17380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c17460"/>
        <function-ref name="cancel" scoped="" ref="0x40c17540"/>
        <function-ref name="sendDone" scoped="" ref="0x40c17620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c17830" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c17830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c17a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bf1e38" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bf1e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c18050"/>
        <function-ref name="getPayload" scoped="" ref="0x40c18130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c18210"/>
        <function-ref name="cancel" scoped="" ref="0x40c182f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c183d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x40c18ca8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x40c18ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c18e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c17bf0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c17bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40c17dc8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c17ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c18558" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c18558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c18730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c081d8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c081d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c083b0"/>
        <function-ref name="stopDone" scoped="" ref="0x40c08490"/>
        <function-ref name="start" scoped="" ref="0x40c08570"/>
        <function-ref name="stop" scoped="" ref="0x40c08650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c070c8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c070c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c072a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c07380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c07460"/>
        <function-ref name="cancel" scoped="" ref="0x40c07540"/>
        <function-ref name="sendDone" scoped="" ref="0x40c07620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c07830" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c07830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c07a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bdeb90" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bdeb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bded68"/>
        <function-ref name="getPayload" scoped="" ref="0x40bdee48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bdef28"/>
        <function-ref name="cancel" scoped="" ref="0x40c09018"/>
        <function-ref name="sendDone" scoped="" ref="0x40c090f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40c09648" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40c09648"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40c09820"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40c09900"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40c099e0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40c09ac0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40c09ba0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40c09c80"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40c09d60"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40c09e40"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40c09f20"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40c08018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40c08848" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40c08848"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c08a20"/>
        <function-ref name="toIdle" scoped="" ref="0x40c08b00"/>
        <function-ref name="isState" scoped="" ref="0x40c08be0"/>
        <function-ref name="isIdle" scoped="" ref="0x40c08cc0"/>
        <function-ref name="requestState" scoped="" ref="0x40c08da0"/>
        <function-ref name="forceState" scoped="" ref="0x40c08e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40c07c50" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40c07c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c07e28"/>
        <function-ref name="stopDone" scoped="" ref="0x40c07f08"/>
        <function-ref name="start" scoped="" ref="0x40c06010"/>
        <function-ref name="stop" scoped="" ref="0x40c060f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c09280" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c09280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c09458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40c068a8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40c068a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40c06a80"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40c06b60"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40c06c40"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40c06d20"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40c06e00"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40c06ee0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40c2d010"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40c2d0f0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40c2d1d0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40c2d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40c05448" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c05448"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c05620"/>
        <function-ref name="toIdle" scoped="" ref="0x40c05700"/>
        <function-ref name="isState" scoped="" ref="0x40c057e0"/>
        <function-ref name="isIdle" scoped="" ref="0x40c058c0"/>
        <function-ref name="requestState" scoped="" ref="0x40c059a0"/>
        <function-ref name="forceState" scoped="" ref="0x40c05a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c20308" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c20308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c204e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c205c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c206a0"/>
        <function-ref name="cancel" scoped="" ref="0x40c20780"/>
        <function-ref name="sendDone" scoped="" ref="0x40c20860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c0a3d0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c0a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c0a5a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c0a688"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c0a768"/>
        <function-ref name="cancel" scoped="" ref="0x40c0a848"/>
        <function-ref name="sendDone" scoped="" ref="0x40c0a928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40c0aad0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40c0aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c0aca8"/>
        <function-ref name="setRetries" scoped="" ref="0x40c0ad88"/>
        <function-ref name="getRetries" scoped="" ref="0x40c0ae68"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c20010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c200f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40c1d7c8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c1d7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c1d9a0"/>
        <function-ref name="noAck" scoped="" ref="0x40c1da80"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c1db60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40c1d010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40c1d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c1d1e8"/>
        <function-ref name="setRetries" scoped="" ref="0x40c1d2c8"/>
        <function-ref name="getRetries" scoped="" ref="0x40c1d3a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c1d488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c1d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40c38730" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c38730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c38908"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c389e8"/>
        <function-ref name="led1On" scoped="" ref="0x40c38ac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c38ba8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c38c88"/>
        <function-ref name="get" scoped="" ref="0x40c38d68"/>
        <function-ref name="led1Off" scoped="" ref="0x40c38e48"/>
        <function-ref name="led2Off" scoped="" ref="0x40c341d8"/>
        <function-ref name="set" scoped="" ref="0x40c38f28"/>
        <function-ref name="led0On" scoped="" ref="0x40c34018"/>
        <function-ref name="led2On" scoped="" ref="0x40c340f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40c31b00" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40c31b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c31cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40c31db8"/>
        <function-ref name="toggle" scoped="" ref="0x40c31e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40c30010"/>
        <function-ref name="get" scoped="" ref="0x40c300f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c301d0"/>
        <function-ref name="set" scoped="" ref="0x40c302b0"/>
        <function-ref name="clr" scoped="" ref="0x40c30390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c34a60" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c34a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c34c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40c30580" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40c30580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c30758"/>
        <function-ref name="isInput" scoped="" ref="0x40c30838"/>
        <function-ref name="toggle" scoped="" ref="0x40c30918"/>
        <function-ref name="isOutput" scoped="" ref="0x40c309f8"/>
        <function-ref name="get" scoped="" ref="0x40c30ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c30bb8"/>
        <function-ref name="set" scoped="" ref="0x40c30c98"/>
        <function-ref name="clr" scoped="" ref="0x40c30d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40c34da8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c34da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c31010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c310f0"/>
        <function-ref name="led1On" scoped="" ref="0x40c311d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c312b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c31390"/>
        <function-ref name="get" scoped="" ref="0x40c31470"/>
        <function-ref name="led1Off" scoped="" ref="0x40c31550"/>
        <function-ref name="led2Off" scoped="" ref="0x40c318d0"/>
        <function-ref name="set" scoped="" ref="0x40c31630"/>
        <function-ref name="led0On" scoped="" ref="0x40c31710"/>
        <function-ref name="led2On" scoped="" ref="0x40c317f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40c2f010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40c2f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c2f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c2f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c2f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c2f488"/>
        <function-ref name="get" scoped="" ref="0x40c2f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c2f648"/>
        <function-ref name="set" scoped="" ref="0x40c2f728"/>
        <function-ref name="clr" scoped="" ref="0x40c2f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40c4c8e8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40c4c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4cac0"/>
        <function-ref name="isInput" scoped="" ref="0x40c4cba0"/>
        <function-ref name="toggle" scoped="" ref="0x40c4cc80"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4cd60"/>
        <function-ref name="get" scoped="" ref="0x40c4ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4cf20"/>
        <function-ref name="set" scoped="" ref="0x40c4b018"/>
        <function-ref name="clr" scoped="" ref="0x40c4b0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40c4b308" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40c4b308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4b4e0"/>
        <function-ref name="isInput" scoped="" ref="0x40c4b5c0"/>
        <function-ref name="toggle" scoped="" ref="0x40c4b6a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4b780"/>
        <function-ref name="get" scoped="" ref="0x40c4b860"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4b940"/>
        <function-ref name="set" scoped="" ref="0x40c4ba20"/>
        <function-ref name="clr" scoped="" ref="0x40c4bb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40c4a6e0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c4a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c4a8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40c4bd10" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40c4bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4bee8"/>
        <function-ref name="isInput" scoped="" ref="0x40c4a010"/>
        <function-ref name="toggle" scoped="" ref="0x40c4a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4a1d0"/>
        <function-ref name="get" scoped="" ref="0x40c4a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4a390"/>
        <function-ref name="set" scoped="" ref="0x40c4a470"/>
        <function-ref name="clr" scoped="" ref="0x40c4a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c470a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.BeaconTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c470a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c46b88"/>
        <function-ref name="fired" scoped="" ref="0x40c47e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c46548"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c462f0"/>
        <function-ref name="getdt" scoped="" ref="0x40c45048"/>
        <function-ref name="gett0" scoped="" ref="0x40c46de0"/>
        <function-ref name="isRunning" scoped="" ref="0x40c46098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c476c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c46868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c47948"/>
        <function-ref name="stop" scoped="" ref="0x40c47bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c45e68" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.BeaconWaitTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c45e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c6e988"/>
        <function-ref name="fired" scoped="" ref="0x40c44c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c6e348"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c6e0f0"/>
        <function-ref name="getdt" scoped="" ref="0x40c6ee38"/>
        <function-ref name="gett0" scoped="" ref="0x40c6ebe0"/>
        <function-ref name="isRunning" scoped="" ref="0x40c44e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c444b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c6e668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c44738"/>
        <function-ref name="stop" scoped="" ref="0x40c449b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c6dc80" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.ConnReqListenTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c6dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c6b790"/>
        <function-ref name="fired" scoped="" ref="0x40c6ca20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c6b150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c6ced0"/>
        <function-ref name="getdt" scoped="" ref="0x40c6bc40"/>
        <function-ref name="gett0" scoped="" ref="0x40c6b9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40c6cc78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c6c2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c6b470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c6c548"/>
        <function-ref name="stop" scoped="" ref="0x40c6c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c69af8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.ConnRepWaitTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c69af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c676a8"/>
        <function-ref name="fired" scoped="" ref="0x40c68938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c67068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c68de8"/>
        <function-ref name="getdt" scoped="" ref="0x40c67b58"/>
        <function-ref name="gett0" scoped="" ref="0x40c67900"/>
        <function-ref name="isRunning" scoped="" ref="0x40c68b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c681e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c67388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c68460"/>
        <function-ref name="stop" scoped="" ref="0x40c686e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c669d0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.NeighbourUpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c669d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c634c8"/>
        <function-ref name="fired" scoped="" ref="0x40c65768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c65e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c65c18"/>
        <function-ref name="getdt" scoped="" ref="0x40c63978"/>
        <function-ref name="gett0" scoped="" ref="0x40c63720"/>
        <function-ref name="isRunning" scoped="" ref="0x40c659c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c65010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c631a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c65290"/>
        <function-ref name="stop" scoped="" ref="0x40c65510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c62880" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.NeighbourUpdateStopTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c62880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c60388"/>
        <function-ref name="fired" scoped="" ref="0x40c61628"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c61d30"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c61ad8"/>
        <function-ref name="getdt" scoped="" ref="0x40c60838"/>
        <function-ref name="gett0" scoped="" ref="0x40c605e0"/>
        <function-ref name="isRunning" scoped="" ref="0x40c61880"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c62ea8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c60068"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c61150"/>
        <function-ref name="stop" scoped="" ref="0x40c613d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c9e428" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c9e428"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c9e600"/>
        <function-ref name="getPayload" scoped="" ref="0x40c9e6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c9e7c0"/>
        <function-ref name="cancel" scoped="" ref="0x40c9e8a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c9e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c9eac0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c9eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c9ec98"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c9ed78"/>
        <function-ref name="getPayload" scoped="" ref="0x40c9ee58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c9d010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c9d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c9d230" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c9d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c9d408"/>
        <function-ref name="source" scoped="" ref="0x40c9d4e8"/>
        <function-ref name="address" scoped="" ref="0x40c9d5c8"/>
        <function-ref name="destination" scoped="" ref="0x40c9d6a8"/>
        <function-ref name="setSource" scoped="" ref="0x40c9d788"/>
        <function-ref name="setDestination" scoped="" ref="0x40c9d868"/>
        <function-ref name="type" scoped="" ref="0x40c9d948"/>
        <function-ref name="setType" scoped="" ref="0x40c9da28"/>
        <function-ref name="isForMe" scoped="" ref="0x40c9db08"/>
        <function-ref name="setGroup" scoped="" ref="0x40c9dbe8"/>
        <function-ref name="localGroup" scoped="" ref="0x40c9dcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40c9de28" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.BeaconSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40c9de28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c9c050"/>
        <function-ref name="noAck" scoped="" ref="0x40c9c130"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c9c210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41759700" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.BeaconSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41759700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417598d8"/>
        <function-ref name="getPayload" scoped="" ref="0x417599b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41759a98"/>
        <function-ref name="cancel" scoped="" ref="0x41759b78"/>
        <function-ref name="sendDone" scoped="" ref="0x41759c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41759dc8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.BeaconSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41759dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41757010"/>
        <function-ref name="getPayload" scoped="" ref="0x417570f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417571d0"/>
        <function-ref name="cancel" scoped="" ref="0x417572b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41757390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x417574d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.BeaconSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417574d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417576a8"/>
        <function-ref name="source" scoped="" ref="0x41757788"/>
        <function-ref name="address" scoped="" ref="0x41757868"/>
        <function-ref name="destination" scoped="" ref="0x41757948"/>
        <function-ref name="setSource" scoped="" ref="0x41757a28"/>
        <function-ref name="setDestination" scoped="" ref="0x41757b08"/>
        <function-ref name="type" scoped="" ref="0x41757be8"/>
        <function-ref name="setType" scoped="" ref="0x41757cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41757da8"/>
        <function-ref name="setGroup" scoped="" ref="0x41757e88"/>
        <function-ref name="localGroup" scoped="" ref="0x41756010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c788f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c788f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c78ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c78bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c78c90"/>
        <function-ref name="cancel" scoped="" ref="0x40c78d70"/>
        <function-ref name="sendDone" scoped="" ref="0x40c78e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40ca40a8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ca40a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ca4290"/>
        <function-ref name="getPayload" scoped="" ref="0x40ca4370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca4450"/>
        <function-ref name="cancel" scoped="" ref="0x40ca4530"/>
        <function-ref name="sendDone" scoped="" ref="0x40ca4610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c73908" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c73908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c73af0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c73bd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c73cb0"/>
        <function-ref name="cancel" scoped="" ref="0x40c73d90"/>
        <function-ref name="sendDone" scoped="" ref="0x40c73e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40ca23f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ca23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ca25c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ca26a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ca2788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca2868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ca2948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40ca2ac8" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40ca2ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ca2ca0"/>
        <function-ref name="runTask" scoped="" ref="0x40ca2d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40ca2f00" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40ca2f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ca10f0"/>
        <function-ref name="runTask" scoped="" ref="0x40ca11d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40ca4750" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ca4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ca4928"/>
        <function-ref name="source" scoped="" ref="0x40ca4a08"/>
        <function-ref name="address" scoped="" ref="0x40ca4ae8"/>
        <function-ref name="destination" scoped="" ref="0x40ca4bc8"/>
        <function-ref name="setSource" scoped="" ref="0x40ca4ca8"/>
        <function-ref name="setDestination" scoped="" ref="0x40ca4d88"/>
        <function-ref name="type" scoped="" ref="0x40ca4e68"/>
        <function-ref name="setType" scoped="" ref="0x40ca2010"/>
        <function-ref name="isForMe" scoped="" ref="0x40ca20f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40ca21d0"/>
        <function-ref name="localGroup" scoped="" ref="0x40ca22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cc8d60" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.BeaconReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cc8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cc7010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cc70f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40cc71d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cc72b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cc7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cc8a48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.BeaconReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cc8a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cc8c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40cc74d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.BeaconReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cc74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cc76a8"/>
        <function-ref name="source" scoped="" ref="0x40cc7788"/>
        <function-ref name="address" scoped="" ref="0x40cc7868"/>
        <function-ref name="destination" scoped="" ref="0x40cc7948"/>
        <function-ref name="setSource" scoped="" ref="0x40cc7a28"/>
        <function-ref name="setDestination" scoped="" ref="0x40cc7b08"/>
        <function-ref name="type" scoped="" ref="0x40cc7be8"/>
        <function-ref name="setType" scoped="" ref="0x40cc7cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40cc7da8"/>
        <function-ref name="setGroup" scoped="" ref="0x40cc7e88"/>
        <function-ref name="localGroup" scoped="" ref="0x40cc3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40cc23a0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40cc23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cc2578"/>
        <function-ref name="stopDone" scoped="" ref="0x40cc2658"/>
        <function-ref name="start" scoped="" ref="0x40cc2738"/>
        <function-ref name="stop" scoped="" ref="0x40cc2818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40cc2c78" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40cc2c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc2e50"/>
        <function-ref name="getPayload" scoped="" ref="0x40cbe010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cbe0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40cbe1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cbe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cbea70" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cbea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cbec48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cbed28"/>
        <function-ref name="getPayload" scoped="" ref="0x40cbee08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cbeee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cbc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cbe718" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cbe718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cbe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cbb3b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cbb3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40cbb588"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40cbb668"/>
        <function-ref name="led1On" scoped="" ref="0x40cbb748"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40cbb828"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cbb908"/>
        <function-ref name="get" scoped="" ref="0x40cbb9e8"/>
        <function-ref name="led1Off" scoped="" ref="0x40cbbac8"/>
        <function-ref name="led2Off" scoped="" ref="0x40cbbe48"/>
        <function-ref name="set" scoped="" ref="0x40cbbba8"/>
        <function-ref name="led0On" scoped="" ref="0x40cbbc88"/>
        <function-ref name="led2On" scoped="" ref="0x40cbbd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40cbce60" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cbce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40cbb050"/>
        <function-ref name="noAck" scoped="" ref="0x40cbb130"/>
        <function-ref name="wasAcked" scoped="" ref="0x40cbb210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40cbc1a8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cbc1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cbc380"/>
        <function-ref name="source" scoped="" ref="0x40cbc460"/>
        <function-ref name="address" scoped="" ref="0x40cbc540"/>
        <function-ref name="destination" scoped="" ref="0x40cbc620"/>
        <function-ref name="setSource" scoped="" ref="0x40cbc700"/>
        <function-ref name="setDestination" scoped="" ref="0x40cbc7e0"/>
        <function-ref name="type" scoped="" ref="0x40cbc8c0"/>
        <function-ref name="setType" scoped="" ref="0x40cbc9a0"/>
        <function-ref name="isForMe" scoped="" ref="0x40cbca80"/>
        <function-ref name="setGroup" scoped="" ref="0x40cbcb60"/>
        <function-ref name="localGroup" scoped="" ref="0x40cbcc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ce4538" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ce4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ce4710"/>
        <function-ref name="getPayload" scoped="" ref="0x40ce47f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ce48d0"/>
        <function-ref name="cancel" scoped="" ref="0x40ce49b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ce4a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ce4bf0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ce4bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ce4dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40cb9278" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40cb9278"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cb9460"/>
        <function-ref name="getPayload" scoped="" ref="0x40cb9540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cb9620"/>
        <function-ref name="cancel" scoped="" ref="0x40cb9700"/>
        <function-ref name="sendDone" scoped="" ref="0x40cb97e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cb8930" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cb8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cb8b08"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cb8be8"/>
        <function-ref name="getPayload" scoped="" ref="0x40cb8cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cb8da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cb8e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cb99b8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cb99b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cb9ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40ce4010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ce4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ce41e8"/>
        <function-ref name="noAck" scoped="" ref="0x40ce42c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ce43a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40cb9ce0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cb9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cb9eb8"/>
        <function-ref name="source" scoped="" ref="0x40cb8010"/>
        <function-ref name="address" scoped="" ref="0x40cb80f0"/>
        <function-ref name="destination" scoped="" ref="0x40cb81d0"/>
        <function-ref name="setSource" scoped="" ref="0x40cb82b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40cb8390"/>
        <function-ref name="type" scoped="" ref="0x40cb8470"/>
        <function-ref name="setType" scoped="" ref="0x40cb8550"/>
        <function-ref name="isForMe" scoped="" ref="0x40cb8630"/>
        <function-ref name="setGroup" scoped="" ref="0x40cb8710"/>
        <function-ref name="localGroup" scoped="" ref="0x40cb87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ce03a8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ce03a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ce0580"/>
        <function-ref name="stopDone" scoped="" ref="0x40ce0660"/>
        <function-ref name="start" scoped="" ref="0x40ce0740"/>
        <function-ref name="stop" scoped="" ref="0x40ce0820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d0d288" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d0d288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404ca9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d0d460"/>
        <function-ref name="getPayload" scoped="" ref="0x40d0d540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d0d620"/>
        <function-ref name="cancel" scoped="" ref="0x40d0d700"/>
        <function-ref name="sendDone" scoped="" ref="0x40d0d7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ce0010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ce0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ce01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ce0c68" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ce0c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404ca9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ce0e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d08e80" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d08e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d0b070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d0b150"/>
        <function-ref name="led1On" scoped="" ref="0x40d0b230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d0b310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d0b3f0"/>
        <function-ref name="get" scoped="" ref="0x40d0b4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40d0b5b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40d0b930"/>
        <function-ref name="set" scoped="" ref="0x40d0b690"/>
        <function-ref name="led0On" scoped="" ref="0x40d0b770"/>
        <function-ref name="led2On" scoped="" ref="0x40d0b850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40d08978" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40d08978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404ca9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40d08b50"/>
        <function-ref name="offset" scoped="" ref="0x40d08c30"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40d08d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d062d0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d062d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d064a8"/>
        <function-ref name="stopDone" scoped="" ref="0x40d06588"/>
        <function-ref name="start" scoped="" ref="0x40d06668"/>
        <function-ref name="stop" scoped="" ref="0x40d06748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40d281e0" loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40d281e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d283b8"/>
        <function-ref name="runTask" scoped="" ref="0x40d28498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40cfb500" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40cfb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cfb6d8"/>
        <function-ref name="stop" scoped="" ref="0x40cfb7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40d19a18" loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40d19a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d19bf0"/>
        <function-ref name="runTask" scoped="" ref="0x40d19cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d0bf20" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d0bf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d06110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40cf8560" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40cf8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40cf8738"/>
        <function-ref name="flush" scoped="" ref="0x40cf8818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40d29010" loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40d29010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d291e8"/>
        <function-ref name="runTask" scoped="" ref="0x40d292c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40cfcf10" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40cfcf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40d00108"/>
        <function-ref name="resetSend" scoped="" ref="0x40d001e8"/>
        <function-ref name="dataReceived" scoped="" ref="0x40d002c8"/>
        <function-ref name="resetReceive" scoped="" ref="0x40d003a8"/>
        <function-ref name="putData" scoped="" ref="0x40d00488"/>
        <function-ref name="putDone" scoped="" ref="0x40d00568"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40d00648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d007b8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d007b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d00990"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d00a70"/>
        <function-ref name="led1On" scoped="" ref="0x40d00b50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d00c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d00d10"/>
        <function-ref name="get" scoped="" ref="0x40d00df0"/>
        <function-ref name="led1Off" scoped="" ref="0x40d00ed0"/>
        <function-ref name="led2Off" scoped="" ref="0x40cfb2b0"/>
        <function-ref name="set" scoped="" ref="0x40cfb010"/>
        <function-ref name="led0On" scoped="" ref="0x40cfb0f0"/>
        <function-ref name="led2On" scoped="" ref="0x40cfb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40d27e08" loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40d27e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d26010"/>
        <function-ref name="runTask" scoped="" ref="0x40d260f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40d02a80" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40d02a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40d02c58"/>
        <function-ref name="nextByte" scoped="" ref="0x40d02d38"/>
        <function-ref name="startSend" scoped="" ref="0x40d02e18"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40d02ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40cffbd8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40cffbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40cffdb0"/>
        <function-ref name="byteReceived" scoped="" ref="0x40cffe90"/>
        <function-ref name="endPacket" scoped="" ref="0x40d04010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40da7d68" loc="264:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40da7d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40da6010"/>
        <function-ref name="runTask" scoped="" ref="0x40da60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40da9988" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40da9988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404ca9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40da9b70"/>
        <function-ref name="getPayload" scoped="" ref="0x40da9c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40da9d30"/>
        <function-ref name="cancel" scoped="" ref="0x40da9e10"/>
        <function-ref name="sendDone" scoped="" ref="0x40da9ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40da6270" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40da6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40da6448"/>
        <function-ref name="runTask" scoped="" ref="0x40da6528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40da95c8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40da95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404ca9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40da97b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40da8138" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40da8138"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404ca9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40da8320"/>
        <function-ref name="offset" scoped="" ref="0x40da8400"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40da84e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40da7150" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40da7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40da7328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40da7408"/>
        <function-ref name="led1On" scoped="" ref="0x40da74e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40da75c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40da76a8"/>
        <function-ref name="get" scoped="" ref="0x40da7788"/>
        <function-ref name="led1Off" scoped="" ref="0x40da7868"/>
        <function-ref name="led2On" scoped="" ref="0x40da7be8"/>
        <function-ref name="set" scoped="" ref="0x40da7a28"/>
        <function-ref name="led2Off" scoped="" ref="0x40da7948"/>
        <function-ref name="led0On" scoped="" ref="0x40da7b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40da8af8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40da8af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40da8cd0"/>
        <function-ref name="nextByte" scoped="" ref="0x40da8db0"/>
        <function-ref name="startSend" scoped="" ref="0x40da8e90"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40da7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40da8620" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40da8620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40da87f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x40da88d8"/>
        <function-ref name="endPacket" scoped="" ref="0x40da89b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40dcc990" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40dcc990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dccb68"/>
        <function-ref name="receivedByte" scoped="" ref="0x40dccc48"/>
        <function-ref name="receive" scoped="" ref="0x40dccd28"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40dcce08"/>
        <function-ref name="receiveDone" scoped="" ref="0x40dccee8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40da1010"/>
        <function-ref name="sendDone" scoped="" ref="0x40da10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40da5678" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40da5678"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40da5850"/>
        <function-ref name="resetSend" scoped="" ref="0x40da5930"/>
        <function-ref name="dataReceived" scoped="" ref="0x40da5a10"/>
        <function-ref name="resetReceive" scoped="" ref="0x40da5af0"/>
        <function-ref name="putData" scoped="" ref="0x40da5bd0"/>
        <function-ref name="putDone" scoped="" ref="0x40da5cb0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40da5d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40da1260" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40da1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40da1438"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40da1518"/>
        <function-ref name="led1On" scoped="" ref="0x40da15f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40da16d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40da17b8"/>
        <function-ref name="get" scoped="" ref="0x40da1898"/>
        <function-ref name="led1Off" scoped="" ref="0x40da1978"/>
        <function-ref name="led2Off" scoped="" ref="0x40da1cf8"/>
        <function-ref name="set" scoped="" ref="0x40da1a58"/>
        <function-ref name="led0On" scoped="" ref="0x40da1b38"/>
        <function-ref name="led2On" scoped="" ref="0x40da1c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40db82b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40db82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db8488"/>
        <function-ref name="receive" scoped="" ref="0x40db8568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40dbd490" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40dbd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dbd668"/>
        <function-ref name="receivedByte" scoped="" ref="0x40dbd748"/>
        <function-ref name="receive" scoped="" ref="0x40dbd828"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40dbd908"/>
        <function-ref name="receiveDone" scoped="" ref="0x40dbd9e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40dbdac8"/>
        <function-ref name="sendDone" scoped="" ref="0x40dbdba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40dbd010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40dbd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dbd1e8"/>
        <function-ref name="stop" scoped="" ref="0x40dbd2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40db91c8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40db91c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db93a0"/>
        <function-ref name="receive" scoped="" ref="0x40db9480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40db9648" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40db9648"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db9820"/>
        <function-ref name="receivedByte" scoped="" ref="0x40db9900"/>
        <function-ref name="receive" scoped="" ref="0x40db99e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40db9ac0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40db9ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40db9c80"/>
        <function-ref name="sendDone" scoped="" ref="0x40db9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40db60d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40db60d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40db6820"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40db6d10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40db6a98"/>
        <function-ref name="overflow" scoped="" ref="0x40db5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40db8cb8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40db8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40db8e90"/>
        <function-ref name="stop" scoped="" ref="0x40db9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40de6ae8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40de6ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40de6cc0"/>
        <function-ref name="receive" scoped="" ref="0x40de6da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40de57b0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40de57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de5988"/>
        <function-ref name="stop" scoped="" ref="0x40de5a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40de6398" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40de6398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40de6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40de6f00" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40de6f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40de50f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40de51d0"/>
        <function-ref name="receive" scoped="" ref="0x40de52b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40de5390"/>
        <function-ref name="receiveDone" scoped="" ref="0x40de5470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40de5550"/>
        <function-ref name="sendDone" scoped="" ref="0x40de5630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40df1c88" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40df1c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40def3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40def8e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40def668"/>
        <function-ref name="overflow" scoped="" ref="0x40defb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40df1050" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40df1050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40df1228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40df1308"/>
        <function-ref name="rxDone" scoped="" ref="0x40df13e8"/>
        <function-ref name="txDone" scoped="" ref="0x40df14c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40df15a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40df1688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40df1768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40df1848"/>
        <function-ref name="tx" scoped="" ref="0x40df1928"/>
        <function-ref name="rx" scoped="" ref="0x40df1a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40de66d0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40de66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de68a8"/>
        <function-ref name="stop" scoped="" ref="0x40de6988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40de5be8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40de5be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de5dc0"/>
        <function-ref name="stop" scoped="" ref="0x40de5ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40e11010" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40e11010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e111e8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e112c8"/>
        <function-ref name="rxDone" scoped="" ref="0x40e113a8"/>
        <function-ref name="txDone" scoped="" ref="0x40e11488"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e11568"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e11648"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e11728"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e11808"/>
        <function-ref name="tx" scoped="" ref="0x40e118e8"/>
        <function-ref name="rx" scoped="" ref="0x40e119c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40e0f670" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40e0f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e0f848"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e0f928"/>
        <function-ref name="rxDone" scoped="" ref="0x40e0fa08"/>
        <function-ref name="txDone" scoped="" ref="0x40e0fae8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e0fbc8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e0fca8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e0fd88"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e0fe68"/>
        <function-ref name="tx" scoped="" ref="0x40e0e010"/>
        <function-ref name="rx" scoped="" ref="0x40e0e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40e12a70" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40e12a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e12c48"/>
        <function-ref name="stop" scoped="" ref="0x40e12d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40e11c20" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40e11c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e11df8"/>
        <function-ref name="stop" scoped="" ref="0x40e11ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40e0f178" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40e0f178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e0f350"/>
        <function-ref name="stop" scoped="" ref="0x40e0f430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40e12560" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40e12560"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e12738"/>
        <function-ref name="stop" scoped="" ref="0x40e12818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40e0e8d8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40e0e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e0eab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40e0b7a0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40e0b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e0b978"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e0ba58"/>
        <function-ref name="rxDone" scoped="" ref="0x40e0bb38"/>
        <function-ref name="txDone" scoped="" ref="0x40e0bc18"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e0bcf8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e0bdd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e0beb8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e0a010"/>
        <function-ref name="tx" scoped="" ref="0x40e0a0f0"/>
        <function-ref name="rx" scoped="" ref="0x40e0a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40e0a3e0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40e0a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e0a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40e09350" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40e09350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e09528"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e09608"/>
        <function-ref name="rxDone" scoped="" ref="0x40e096e8"/>
        <function-ref name="txDone" scoped="" ref="0x40e097c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e098a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e09988"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e09a68"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e09b48"/>
        <function-ref name="tx" scoped="" ref="0x40e09c28"/>
        <function-ref name="rx" scoped="" ref="0x40e09d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40e0b288" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40e0b288"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e0b460"/>
        <function-ref name="stop" scoped="" ref="0x40e0b540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40e0a830" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40e0a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e0aa08"/>
        <function-ref name="stop" scoped="" ref="0x40e0aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40e0ad60" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40e0ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e09010"/>
        <function-ref name="stop" scoped="" ref="0x40e090f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40e09f00" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40e09f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40e080f0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40e081d0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40e082b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x40e08390"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40e08470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40e08658" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40e08658"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40e08830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40e0ed28" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40e0ed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e0ef00"/>
        <function-ref name="stop" scoped="" ref="0x40e0b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e39618" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e39618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e39d68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e35288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e35010"/>
        <function-ref name="overflow" scoped="" ref="0x40e35500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e32088" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e32088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e327d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e32cc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e32a50"/>
        <function-ref name="overflow" scoped="" ref="0x40e65010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e60d78" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e60d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e5f010"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40e5f0f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e5f1d0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40e5f2b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e5f390"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e5f470"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40e5f550"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40e5f630"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40e5f710"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40e5f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e5fb28" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e5fb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e5c640"/>
        <function-ref name="test" scoped="" ref="0x40e5c150"/>
        <function-ref name="get" scoped="" ref="0x40e5e200"/>
        <function-ref name="captured" scoped="" ref="0x40e5e718"/>
        <function-ref name="reset" scoped="" ref="0x40e5e9b8"/>
        <function-ref name="isOn" scoped="" ref="0x40e5c3c8"/>
        <function-ref name="set" scoped="" ref="0x40e5e478"/>
        <function-ref name="start" scoped="" ref="0x40e5ec30"/>
        <function-ref name="stop" scoped="" ref="0x40e5eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40e5cd50" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40e5cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e5a300"/>
        <function-ref name="fired" scoped="" ref="0x40e5b8f8"/>
        <function-ref name="get" scoped="" ref="0x40e5b3e0"/>
        <function-ref name="reset" scoped="" ref="0x40e5bb70"/>
        <function-ref name="isOn" scoped="" ref="0x40e5a578"/>
        <function-ref name="set" scoped="" ref="0x40e5b658"/>
        <function-ref name="start" scoped="" ref="0x40e5bde8"/>
        <function-ref name="stop" scoped="" ref="0x40e5a088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e65a60" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e65a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e60500"/>
        <function-ref name="test" scoped="" ref="0x40e60010"/>
        <function-ref name="get" scoped="" ref="0x40e620d8"/>
        <function-ref name="setScale" scoped="" ref="0x40e60778"/>
        <function-ref name="getScale" scoped="" ref="0x40e60a18"/>
        <function-ref name="reset" scoped="" ref="0x40e62868"/>
        <function-ref name="overflow" scoped="" ref="0x40e625f0"/>
        <function-ref name="isOn" scoped="" ref="0x40e60288"/>
        <function-ref name="set" scoped="" ref="0x40e62350"/>
        <function-ref name="start" scoped="" ref="0x40e62ae0"/>
        <function-ref name="stop" scoped="" ref="0x40e62d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e54370" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e54370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e54548"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40e54628"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e54708"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40e547e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e548c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e549a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40e54a88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40e54b68"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40e54c48"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40e54d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40e50010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40e50010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e4f578"/>
        <function-ref name="fired" scoped="" ref="0x40e50b70"/>
        <function-ref name="get" scoped="" ref="0x40e50658"/>
        <function-ref name="reset" scoped="" ref="0x40e50de8"/>
        <function-ref name="isOn" scoped="" ref="0x40e4f7f0"/>
        <function-ref name="set" scoped="" ref="0x40e508d0"/>
        <function-ref name="start" scoped="" ref="0x40e4f088"/>
        <function-ref name="stop" scoped="" ref="0x40e4f300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e53078" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e53078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e51af0"/>
        <function-ref name="test" scoped="" ref="0x40e51600"/>
        <function-ref name="get" scoped="" ref="0x40e536c0"/>
        <function-ref name="captured" scoped="" ref="0x40e53bd8"/>
        <function-ref name="reset" scoped="" ref="0x40e53e78"/>
        <function-ref name="isOn" scoped="" ref="0x40e51878"/>
        <function-ref name="set" scoped="" ref="0x40e53938"/>
        <function-ref name="start" scoped="" ref="0x40e51110"/>
        <function-ref name="stop" scoped="" ref="0x40e51388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40e4fc08" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40e4fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e4c1a0"/>
        <function-ref name="fired" scoped="" ref="0x40e4e790"/>
        <function-ref name="get" scoped="" ref="0x40e4e278"/>
        <function-ref name="reset" scoped="" ref="0x40e4ea08"/>
        <function-ref name="isOn" scoped="" ref="0x40e4c418"/>
        <function-ref name="set" scoped="" ref="0x40e4e4f0"/>
        <function-ref name="start" scoped="" ref="0x40e4ec80"/>
        <function-ref name="stop" scoped="" ref="0x40e4eef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40e4c830" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40e4c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e7fd90"/>
        <function-ref name="fired" scoped="" ref="0x40e7f3b0"/>
        <function-ref name="get" scoped="" ref="0x40e4ce78"/>
        <function-ref name="reset" scoped="" ref="0x40e7f628"/>
        <function-ref name="isOn" scoped="" ref="0x40e7e048"/>
        <function-ref name="set" scoped="" ref="0x40e7f110"/>
        <function-ref name="start" scoped="" ref="0x40e7f8a0"/>
        <function-ref name="stop" scoped="" ref="0x40e7fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e56010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e56010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e55a68"/>
        <function-ref name="test" scoped="" ref="0x40e55578"/>
        <function-ref name="get" scoped="" ref="0x40e56658"/>
        <function-ref name="setScale" scoped="" ref="0x40e55ce0"/>
        <function-ref name="getScale" scoped="" ref="0x40e54010"/>
        <function-ref name="reset" scoped="" ref="0x40e56de8"/>
        <function-ref name="overflow" scoped="" ref="0x40e56b70"/>
        <function-ref name="isOn" scoped="" ref="0x40e557f0"/>
        <function-ref name="set" scoped="" ref="0x40e568d0"/>
        <function-ref name="start" scoped="" ref="0x40e55088"/>
        <function-ref name="stop" scoped="" ref="0x40e55300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e9ba30" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e9ba30"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402e4ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402e4ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e9bc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e9be18" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e9be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ece898"/>
        <function-ref name="test" scoped="" ref="0x40ece3a8"/>
        <function-ref name="get" scoped="" ref="0x40e9a488"/>
        <function-ref name="setScale" scoped="" ref="0x40eceb10"/>
        <function-ref name="getScale" scoped="" ref="0x40ecedb0"/>
        <function-ref name="reset" scoped="" ref="0x40e9ac18"/>
        <function-ref name="overflow" scoped="" ref="0x40e9a9a0"/>
        <function-ref name="isOn" scoped="" ref="0x40ece620"/>
        <function-ref name="set" scoped="" ref="0x40e9a700"/>
        <function-ref name="start" scoped="" ref="0x40e9ae90"/>
        <function-ref name="stop" scoped="" ref="0x40ece130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ecc0c0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ecc0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ecc810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40eccd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ecca88"/>
        <function-ref name="overflow" scoped="" ref="0x40ecb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40ecb2f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ecb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ecad30"/>
        <function-ref name="test" scoped="" ref="0x40eca840"/>
        <function-ref name="get" scoped="" ref="0x40ecb938"/>
        <function-ref name="setScale" scoped="" ref="0x40ec8010"/>
        <function-ref name="getScale" scoped="" ref="0x40ec82b0"/>
        <function-ref name="reset" scoped="" ref="0x40eca0d8"/>
        <function-ref name="overflow" scoped="" ref="0x40ecbe50"/>
        <function-ref name="isOn" scoped="" ref="0x40ecaab8"/>
        <function-ref name="set" scoped="" ref="0x40ecbbb0"/>
        <function-ref name="start" scoped="" ref="0x40eca350"/>
        <function-ref name="stop" scoped="" ref="0x40eca5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40ec63b8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40ec63b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TThree" ref="0x40354bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ec6b08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ec4010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ec6d80"/>
        <function-ref name="overflow" scoped="" ref="0x40ec4288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ec7170" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ec7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ec78c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ec7db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ec7b38"/>
        <function-ref name="overflow" scoped="" ref="0x40ec6048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40ec0338" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40ec0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40ec0510"/>
        <function-ref name="offset" scoped="" ref="0x40ec05f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40ec06d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer3" ref="0x40ee34c0" loc="24:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer3" scoped="" ref="0x40ee34c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ee0010"/>
        <function-ref name="fired" scoped="" ref="0x40ee2268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ee2970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ee2718"/>
        <function-ref name="getdt" scoped="" ref="0x40ee04c0"/>
        <function-ref name="gett0" scoped="" ref="0x40ee0268"/>
        <function-ref name="isRunning" scoped="" ref="0x40ee24c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ee3ae8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ee2c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ee3d68"/>
        <function-ref name="stop" scoped="" ref="0x40ee2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMAScheduleTimer" ref="0x40ee08a8" loc="25:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMAScheduleTimer" scoped="" ref="0x40ee08a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ede3a8"/>
        <function-ref name="fired" scoped="" ref="0x40edf648"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40edfd50"/>
        <function-ref name="isOneShot" scoped="" ref="0x40edfaf8"/>
        <function-ref name="getdt" scoped="" ref="0x40ede858"/>
        <function-ref name="gett0" scoped="" ref="0x40ede600"/>
        <function-ref name="isRunning" scoped="" ref="0x40edf8a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ee0ed0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ede088"/>
        <function-ref name="startOneShot" scoped="" ref="0x40edf170"/>
        <function-ref name="stop" scoped="" ref="0x40edf3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40eda010" loc="28:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40eda010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40eda658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASlotTimer" ref="0x40edec18" loc="26:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASlotTimer" scoped="" ref="0x40edec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40edb730"/>
        <function-ref name="fired" scoped="" ref="0x40edc9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40edb0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40edce60"/>
        <function-ref name="getdt" scoped="" ref="0x40edbbe0"/>
        <function-ref name="gett0" scoped="" ref="0x40edb988"/>
        <function-ref name="isRunning" scoped="" ref="0x40edcc08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40edc258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40edb410"/>
        <function-ref name="startOneShot" scoped="" ref="0x40edc4d8"/>
        <function-ref name="stop" scoped="" ref="0x40edc758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40eda8a8" loc="30:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40eda8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40edaa80"/>
        <function-ref name="rand32" scoped="" ref="0x40edab60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer1" ref="0x40ee9d58" loc="22:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer1" scoped="" ref="0x40ee9d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ee78a8"/>
        <function-ref name="fired" scoped="" ref="0x40ee8b18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ee7268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ee7010"/>
        <function-ref name="getdt" scoped="" ref="0x40ee7d58"/>
        <function-ref name="gett0" scoped="" ref="0x40ee7b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40ee8d70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ee83c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ee7588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ee8640"/>
        <function-ref name="stop" scoped="" ref="0x40ee88c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SeedInit" ref="0x40edae88" loc="31:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40edae88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ed94d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40eb6010" loc="16:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40eb6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eb61e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TDMASchedule" ref="0x40eb94a0" loc="15:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40eb94a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40eb9e58"/>
        <function-ref name="getPPB" scoped="" ref="0x40eb9758"/>
        <function-ref name="radioWakeup" scoped="" ref="0x40eb9838"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40eb9918"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40eb99f8"/>
        <function-ref name="setPPB" scoped="" ref="0x40eb9ad8"/>
        <function-ref name="stopTimers" scoped="" ref="0x40eb9bb8"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40eb9c98"/>
        <function-ref name="startTimers" scoped="" ref="0x40eb9d78"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40eb9678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ed9740" loc="32:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ed9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ed9998"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ed9a78"/>
        <function-ref name="led1On" scoped="" ref="0x40ed9b58"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ed9c38"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ed9d18"/>
        <function-ref name="get" scoped="" ref="0x40ed9df8"/>
        <function-ref name="led1Off" scoped="" ref="0x40ed9ed8"/>
        <function-ref name="led2Off" scoped="" ref="0x40ed72b0"/>
        <function-ref name="set" scoped="" ref="0x40ed7010"/>
        <function-ref name="led0On" scoped="" ref="0x40ed70f0"/>
        <function-ref name="led2On" scoped="" ref="0x40ed71d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer2" ref="0x40ee5140" loc="23:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer2" scoped="" ref="0x40ee5140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ee4c20"/>
        <function-ref name="fired" scoped="" ref="0x40ee5ec0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ee45e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ee4388"/>
        <function-ref name="getdt" scoped="" ref="0x40ee30f0"/>
        <function-ref name="gett0" scoped="" ref="0x40ee4e78"/>
        <function-ref name="isRunning" scoped="" ref="0x40ee4130"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ee5768"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ee4900"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ee59e8"/>
        <function-ref name="stop" scoped="" ref="0x40ee5c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PPBListenTimer0" ref="0x40eb6930" loc="21:SchedulerP.nc">
      <component-ref qname="SchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PPBListenTimer0" scoped="" ref="0x40eb6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ee94c8"/>
        <function-ref name="fired" scoped="" ref="0x40eb5768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40eb5e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40eb5c18"/>
        <function-ref name="getdt" scoped="" ref="0x40ee9978"/>
        <function-ref name="gett0" scoped="" ref="0x40ee9720"/>
        <function-ref name="isRunning" scoped="" ref="0x40eb59c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40eb5010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ee91a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40eb5290"/>
        <function-ref name="stop" scoped="" ref="0x40eb5510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40eb7e48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40eb7e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f23988"/>
        <function-ref name="fired" scoped="" ref="0x40f24c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f23348"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f230f0"/>
        <function-ref name="getdt" scoped="" ref="0x40f23e38"/>
        <function-ref name="gett0" scoped="" ref="0x40f23be0"/>
        <function-ref name="isRunning" scoped="" ref="0x40f24e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f244b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f23668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f24738"/>
        <function-ref name="stop" scoped="" ref="0x40f249b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f21c68" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f21c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f56790"/>
        <function-ref name="fired" scoped="" ref="0x40f20a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f56150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f20ed0"/>
        <function-ref name="getdt" scoped="" ref="0x40f56c40"/>
        <function-ref name="gett0" scoped="" ref="0x40f569e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40f20c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f202c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f56470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f20548"/>
        <function-ref name="stop" scoped="" ref="0x40f207c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f55af0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f55af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f526a8"/>
        <function-ref name="fired" scoped="" ref="0x40f54938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f52068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f54de8"/>
        <function-ref name="getdt" scoped="" ref="0x40f52b58"/>
        <function-ref name="gett0" scoped="" ref="0x40f52900"/>
        <function-ref name="isRunning" scoped="" ref="0x40f54b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f541e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f52388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f54460"/>
        <function-ref name="stop" scoped="" ref="0x40f546e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f519a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.PPBListenTimer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f519a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f4f4c8"/>
        <function-ref name="fired" scoped="" ref="0x40f50768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f50e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f50c18"/>
        <function-ref name="getdt" scoped="" ref="0x40f4f978"/>
        <function-ref name="gett0" scoped="" ref="0x40f4f720"/>
        <function-ref name="isRunning" scoped="" ref="0x40f509c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f50010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f4f1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f50290"/>
        <function-ref name="stop" scoped="" ref="0x40f50510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f4e7b8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.TDMAScheduleTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f4e7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f4b330"/>
        <function-ref name="fired" scoped="" ref="0x40f4c560"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f4cc68"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f4ca10"/>
        <function-ref name="getdt" scoped="" ref="0x40f4b7e0"/>
        <function-ref name="gett0" scoped="" ref="0x40f4b588"/>
        <function-ref name="isRunning" scoped="" ref="0x40f4c7b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f4ede0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f4b010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f4c088"/>
        <function-ref name="stop" scoped="" ref="0x40f4c308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f4a658" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="DozerC.TDMASlotTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f4a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f47170"/>
        <function-ref name="fired" scoped="" ref="0x40f493f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f49b00"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f498a8"/>
        <function-ref name="getdt" scoped="" ref="0x40f47620"/>
        <function-ref name="gett0" scoped="" ref="0x40f473c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40f49650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f4ac80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f49e20"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f4af00"/>
        <function-ref name="stop" scoped="" ref="0x40f491a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSend" ref="0x40f41750" loc="16:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x40f41750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f41928"/>
        <function-ref name="getPayload" scoped="" ref="0x40f41a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f41ae8"/>
        <function-ref name="cancel" scoped="" ref="0x40f41bc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f41ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40f443b8" loc="14:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f443b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f44590"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f44670"/>
        <function-ref name="getPayload" scoped="" ref="0x40f44750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f44830"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f44910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataQueueManage" ref="0x40f3fa90" loc="23:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x40f3fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x40f3fc68"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x40f3fd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40f41eb0" loc="17:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40f41eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f400c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f401a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f40280"/>
        <function-ref name="cancel" scoped="" ref="0x40f40360"/>
        <function-ref name="sendDone" scoped="" ref="0x40f40440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASchedule" ref="0x40f409f0" loc="19:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40f409f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40f3f470"/>
        <function-ref name="getPPB" scoped="" ref="0x40f40ca8"/>
        <function-ref name="radioWakeup" scoped="" ref="0x40f40d88"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40f40e68"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40f3f010"/>
        <function-ref name="setPPB" scoped="" ref="0x40f3f0f0"/>
        <function-ref name="stopTimers" scoped="" ref="0x40f3f1d0"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40f3f2b0"/>
        <function-ref name="startTimers" scoped="" ref="0x40f3f390"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40f40bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataReceive" ref="0x40f40658" loc="18:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x40f40658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f40830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f44aa8" loc="15:DataManagerC.nc">
      <component-ref qname="DataManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f44aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f44c80"/>
        <function-ref name="source" scoped="" ref="0x40f44d60"/>
        <function-ref name="address" scoped="" ref="0x40f44e40"/>
        <function-ref name="destination" scoped="" ref="0x40f44f20"/>
        <function-ref name="setSource" scoped="" ref="0x40f41018"/>
        <function-ref name="setDestination" scoped="" ref="0x40f410f8"/>
        <function-ref name="type" scoped="" ref="0x40f411d8"/>
        <function-ref name="setType" scoped="" ref="0x40f412b8"/>
        <function-ref name="isForMe" scoped="" ref="0x40f41398"/>
        <function-ref name="setGroup" scoped="" ref="0x40f41478"/>
        <function-ref name="localGroup" scoped="" ref="0x40f41558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSend" ref="0x40f72748" loc="18:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x40f72748"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f72920"/>
        <function-ref name="getPayload" scoped="" ref="0x40f72a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f72ae0"/>
        <function-ref name="cancel" scoped="" ref="0x40f72bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f72ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x40f8acc0" loc="151:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x40f8acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f8ae98"/>
        <function-ref name="runTask" scoped="" ref="0x40f89010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40f3b378" loc="16:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f3b378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f3b550"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f3b630"/>
        <function-ref name="getPayload" scoped="" ref="0x40f3b710"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f3b7f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f3b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataQueueManage" ref="0x40f642f8" loc="29:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x40f642f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x40f644d0"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x40f645b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40f8c0d0" loc="142:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40f8c0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f8c328"/>
        <function-ref name="runTask" scoped="" ref="0x40f8c408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40f72ea8" loc="19:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40f72ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f710c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f711a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f71280"/>
        <function-ref name="cancel" scoped="" ref="0x40f71360"/>
        <function-ref name="sendDone" scoped="" ref="0x40f71440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataQueue" ref="0x40f6adb8" loc="22:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueue" scoped="" ref="0x40f6adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
              <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40f70af8"/>
        <function-ref name="enqueue" scoped="" ref="0x40f6f208"/>
        <function-ref name="element" scoped="" ref="0x40f6f558"/>
        <function-ref name="maxSize" scoped="" ref="0x40f708a0"/>
        <function-ref name="dequeue" scoped="" ref="0x40f70e68"/>
        <function-ref name="empty" scoped="" ref="0x40f703f0"/>
        <function-ref name="size" scoped="" ref="0x40f70648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMASchedule" ref="0x40f3e3f8" loc="12:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TDMASchedule" scoped="" ref="0x40f3e3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMASchedule"/>
      </instance>
      <interface-functions>
        <function-ref name="clearTableEntry" scoped="" ref="0x40f3edb0"/>
        <function-ref name="getPPB" scoped="" ref="0x40f3e6b0"/>
        <function-ref name="radioWakeup" scoped="" ref="0x40f3e790"/>
        <function-ref name="setBeaconTimeStamp" scoped="" ref="0x40f3e870"/>
        <function-ref name="setParentTDMASlot" scoped="" ref="0x40f3e950"/>
        <function-ref name="setPPB" scoped="" ref="0x40f3ea30"/>
        <function-ref name="stopTimers" scoped="" ref="0x40f3eb10"/>
        <function-ref name="setParentTimeStamp" scoped="" ref="0x40f3ebf0"/>
        <function-ref name="startTimers" scoped="" ref="0x40f3ecd0"/>
        <function-ref name="allocChildTimeSlot" scoped="" ref="0x40f3e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataMessagePool" ref="0x40f690c8" loc="23:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataMessagePool" scoped="" ref="0x40f690c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
            <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f651b8"/>
        <function-ref name="maxSize" scoped="" ref="0x40f69ba0"/>
        <function-ref name="empty" scoped="" ref="0x40f696f0"/>
        <function-ref name="put" scoped="" ref="0x40f69df8"/>
        <function-ref name="size" scoped="" ref="0x40f69948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f65580" loc="26:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f65580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f65758"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f65838"/>
        <function-ref name="led1On" scoped="" ref="0x40f65918"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f659f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f65ad8"/>
        <function-ref name="get" scoped="" ref="0x40f65bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x40f65c98"/>
        <function-ref name="led2Off" scoped="" ref="0x40f640f0"/>
        <function-ref name="set" scoped="" ref="0x40f65d78"/>
        <function-ref name="led0On" scoped="" ref="0x40f65e58"/>
        <function-ref name="led2On" scoped="" ref="0x40f64010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAvailableData" ref="0x40f64c30" loc="34:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAvailableData" scoped="" ref="0x40f64c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f64e08"/>
        <function-ref name="runTask" scoped="" ref="0x40f64ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataReceive" ref="0x40f71658" loc="20:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x40f71658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f71830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f3ba68" loc="17:DataManagerP.nc">
      <component-ref qname="DataManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f3ba68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f3bc40"/>
        <function-ref name="source" scoped="" ref="0x40f3bd20"/>
        <function-ref name="address" scoped="" ref="0x40f3be00"/>
        <function-ref name="destination" scoped="" ref="0x40f3bee0"/>
        <function-ref name="setSource" scoped="" ref="0x40f72010"/>
        <function-ref name="setDestination" scoped="" ref="0x40f720f0"/>
        <function-ref name="type" scoped="" ref="0x40f721d0"/>
        <function-ref name="setType" scoped="" ref="0x40f722b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f72390"/>
        <function-ref name="setGroup" scoped="" ref="0x40f72470"/>
        <function-ref name="localGroup" scoped="" ref="0x40f72550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40fa7eb0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="DataManagerC.DataMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40fa7eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
            <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f91010"/>
        <function-ref name="maxSize" scoped="" ref="0x40f92998"/>
        <function-ref name="empty" scoped="" ref="0x40f924e8"/>
        <function-ref name="put" scoped="" ref="0x40f92bf0"/>
        <function-ref name="size" scoped="" ref="0x40f92740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x417d06f8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="DataManagerC.DataMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x417d06f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
            <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x417ce850"/>
        <function-ref name="maxSize" scoped="" ref="0x417ce268"/>
        <function-ref name="empty" scoped="" ref="0x417d0d20"/>
        <function-ref name="put" scoped="" ref="0x417ce4c0"/>
        <function-ref name="size" scoped="" ref="0x417ce010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417d0350" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="DataManagerC.DataMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417d0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417d0528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40f90ae8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="DataManagerC.DataQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f90ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
              <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40fba8e8"/>
        <function-ref name="enqueue" scoped="" ref="0x40fb9010"/>
        <function-ref name="element" scoped="" ref="0x40fb9360"/>
        <function-ref name="maxSize" scoped="" ref="0x40fba690"/>
        <function-ref name="dequeue" scoped="" ref="0x40fbac58"/>
        <function-ref name="empty" scoped="" ref="0x40fba1e0"/>
        <function-ref name="size" scoped="" ref="0x40fba438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40fb4b00" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fb4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fb4cd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fb4db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fb4e98"/>
        <function-ref name="cancel" scoped="" ref="0x40fde010"/>
        <function-ref name="sendDone" scoped="" ref="0x40fde0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fde230" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fde230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fde408"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fde4e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fde5c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fde6a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fde788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fde8c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fde8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fdeaa0"/>
        <function-ref name="source" scoped="" ref="0x40fdeb80"/>
        <function-ref name="address" scoped="" ref="0x40fdec60"/>
        <function-ref name="destination" scoped="" ref="0x40fded40"/>
        <function-ref name="setSource" scoped="" ref="0x40fdee20"/>
        <function-ref name="setDestination" scoped="" ref="0x40fdef00"/>
        <function-ref name="type" scoped="" ref="0x40fdd010"/>
        <function-ref name="setType" scoped="" ref="0x40fdd0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40fdd1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x40fdd2b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40fdd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40fdd4f0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DozerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40fdd4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40fdd6c8"/>
        <function-ref name="noAck" scoped="" ref="0x40fdd7a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40fdd888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x418182b8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x418182b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41818490"/>
        <function-ref name="getPayload" scoped="" ref="0x41818570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41818650"/>
        <function-ref name="cancel" scoped="" ref="0x41818730"/>
        <function-ref name="sendDone" scoped="" ref="0x41818810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41818980" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41818980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41818b58"/>
        <function-ref name="getPayload" scoped="" ref="0x41818c38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41818d18"/>
        <function-ref name="cancel" scoped="" ref="0x41818df8"/>
        <function-ref name="sendDone" scoped="" ref="0x41818ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41817030" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41817030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41817208"/>
        <function-ref name="source" scoped="" ref="0x418172e8"/>
        <function-ref name="address" scoped="" ref="0x418173c8"/>
        <function-ref name="destination" scoped="" ref="0x418174a8"/>
        <function-ref name="setSource" scoped="" ref="0x41817588"/>
        <function-ref name="setDestination" scoped="" ref="0x41817668"/>
        <function-ref name="type" scoped="" ref="0x41817748"/>
        <function-ref name="setType" scoped="" ref="0x41817828"/>
        <function-ref name="isForMe" scoped="" ref="0x41817908"/>
        <function-ref name="setGroup" scoped="" ref="0x418179e8"/>
        <function-ref name="localGroup" scoped="" ref="0x41817ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40faea98" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40faea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40faec70"/>
        <function-ref name="getPayload" scoped="" ref="0x40faed50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40faee30"/>
        <function-ref name="cancel" scoped="" ref="0x40faef10"/>
        <function-ref name="sendDone" scoped="" ref="0x40fab010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40fe48f0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fe48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fe4ad8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fe4bb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fe4c98"/>
        <function-ref name="cancel" scoped="" ref="0x40fe4d78"/>
        <function-ref name="sendDone" scoped="" ref="0x40fe4e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fe4180" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fe4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fe4368"/>
        <function-ref name="getPayload" scoped="" ref="0x40fe4448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fe4528"/>
        <function-ref name="cancel" scoped="" ref="0x40fe4608"/>
        <function-ref name="sendDone" scoped="" ref="0x40fe46e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40fe3be8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fe3be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fe3dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fe3ea0"/>
        <function-ref name="getPayload" scoped="" ref="0x40fe2010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fe20f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fe21d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40fe2350" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40fe2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fe2528"/>
        <function-ref name="runTask" scoped="" ref="0x40fe2608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40fe2788" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40fe2788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fe2960"/>
        <function-ref name="runTask" scoped="" ref="0x40fe2a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40fe3010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fe3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fe31e8"/>
        <function-ref name="source" scoped="" ref="0x40fe32c8"/>
        <function-ref name="address" scoped="" ref="0x40fe33a8"/>
        <function-ref name="destination" scoped="" ref="0x40fe3488"/>
        <function-ref name="setSource" scoped="" ref="0x40fe3568"/>
        <function-ref name="setDestination" scoped="" ref="0x40fe3648"/>
        <function-ref name="type" scoped="" ref="0x40fe3728"/>
        <function-ref name="setType" scoped="" ref="0x40fe3808"/>
        <function-ref name="isForMe" scoped="" ref="0x40fe38e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40fe39c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40fe3aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40fdcdf8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fdcdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fdb010"/>
        <function-ref name="getPayload" scoped="" ref="0x40fdb0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fdb1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40fdb2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40fdb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fdb4d0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fdb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fdb6a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fdb788"/>
        <function-ref name="getPayload" scoped="" ref="0x40fdb868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fdb948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fdba28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fdbb68" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fdbb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fdbd40"/>
        <function-ref name="source" scoped="" ref="0x40fdbe20"/>
        <function-ref name="address" scoped="" ref="0x40fdbf00"/>
        <function-ref name="destination" scoped="" ref="0x40fda010"/>
        <function-ref name="setSource" scoped="" ref="0x40fda0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40fda1d0"/>
        <function-ref name="type" scoped="" ref="0x40fda2b0"/>
        <function-ref name="setType" scoped="" ref="0x40fda390"/>
        <function-ref name="isForMe" scoped="" ref="0x40fda470"/>
        <function-ref name="setGroup" scoped="" ref="0x40fda550"/>
        <function-ref name="localGroup" scoped="" ref="0x40fda630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40fda790" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="DozerC.DataSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40fda790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40fda968"/>
        <function-ref name="noAck" scoped="" ref="0x40fdaa48"/>
        <function-ref name="wasAcked" scoped="" ref="0x40fdab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x417ef1f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.DataSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x417ef1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417ef3c8"/>
        <function-ref name="getPayload" scoped="" ref="0x417ef4a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417ef588"/>
        <function-ref name="cancel" scoped="" ref="0x417ef668"/>
        <function-ref name="sendDone" scoped="" ref="0x417ef748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x417ef8b8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.DataSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x417ef8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417efa90"/>
        <function-ref name="getPayload" scoped="" ref="0x417efb70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417efc50"/>
        <function-ref name="cancel" scoped="" ref="0x417efd30"/>
        <function-ref name="sendDone" scoped="" ref="0x417efe10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x417ee010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DozerC.DataSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417ee1e8"/>
        <function-ref name="source" scoped="" ref="0x417ee2c8"/>
        <function-ref name="address" scoped="" ref="0x417ee3a8"/>
        <function-ref name="destination" scoped="" ref="0x417ee488"/>
        <function-ref name="setSource" scoped="" ref="0x417ee568"/>
        <function-ref name="setDestination" scoped="" ref="0x417ee648"/>
        <function-ref name="type" scoped="" ref="0x417ee728"/>
        <function-ref name="setType" scoped="" ref="0x417ee808"/>
        <function-ref name="isForMe" scoped="" ref="0x417ee8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x417ee9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x417eeaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fd8150" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.DataReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fd8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fd8328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fd8408"/>
        <function-ref name="getPayload" scoped="" ref="0x40fd84e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fd85c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fd86a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40fd9da0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.DataReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40fd9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fd8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fd87e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="DozerC.DataReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fd87e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fd89c0"/>
        <function-ref name="source" scoped="" ref="0x40fd8aa0"/>
        <function-ref name="address" scoped="" ref="0x40fd8b80"/>
        <function-ref name="destination" scoped="" ref="0x40fd8c60"/>
        <function-ref name="setSource" scoped="" ref="0x40fd8d40"/>
        <function-ref name="setDestination" scoped="" ref="0x40fd8e20"/>
        <function-ref name="type" scoped="" ref="0x40fd8f00"/>
        <function-ref name="setType" scoped="" ref="0x40fd7010"/>
        <function-ref name="isForMe" scoped="" ref="0x40fd70f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40fd71d0"/>
        <function-ref name="localGroup" scoped="" ref="0x40fd72b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40ffa3e0" loc="41:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40ffa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40ffa5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataQueueManage" ref="0x40ff7450" loc="51:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueueManage" scoped="" ref="0x40ff7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="DataQueueManage"/>
      </instance>
      <interface-functions>
        <function-ref name="addToQueue" scoped="" ref="0x40ff7628"/>
        <function-ref name="addLocalDataToQueue" scoped="" ref="0x40ff7708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sample" ref="0x40ff3418" loc="46:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x40ff3418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x40ff3a50"/>
        <function-ref name="set_digital_output" scoped="" ref="0x40ff36d0"/>
        <function-ref name="getSample" scoped="" ref="0x40ff37b0"/>
        <function-ref name="reTask" scoped="" ref="0x40ff3890"/>
        <function-ref name="start" scoped="" ref="0x40ff3970"/>
        <function-ref name="stop" scoped="" ref="0x40ff35f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerInit" ref="0x40ffa7c8" loc="44:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x40ffa7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ffa9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerControl" ref="0x40ffac10" loc="45:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x40ffac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ffade8"/>
        <function-ref name="stopDone" scoped="" ref="0x40ffaec8"/>
        <function-ref name="start" scoped="" ref="0x40ff8010"/>
        <function-ref name="stop" scoped="" ref="0x40ff80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingInit" ref="0x40ff70a0" loc="50:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingInit" scoped="" ref="0x40ff70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ff7278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ff7888" loc="54:uAgriP.nc">
      <component-ref qname="uAgriP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ff7888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ff7a60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ff7b40"/>
        <function-ref name="led1On" scoped="" ref="0x40ff7c20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ff7d00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ff7de0"/>
        <function-ref name="get" scoped="" ref="0x40ff7ec0"/>
        <function-ref name="led1Off" scoped="" ref="0x40ff6010"/>
        <function-ref name="led2Off" scoped="" ref="0x40ff6390"/>
        <function-ref name="set" scoped="" ref="0x40ff60f0"/>
        <function-ref name="led0On" scoped="" ref="0x40ff61d0"/>
        <function-ref name="led2On" scoped="" ref="0x40ff62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sample" ref="0x40fcbe58" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x40fcbe58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x410224b0"/>
        <function-ref name="set_digital_output" scoped="" ref="0x41022130"/>
        <function-ref name="getSample" scoped="" ref="0x41022210"/>
        <function-ref name="reTask" scoped="" ref="0x410222f0"/>
        <function-ref name="start" scoped="" ref="0x410223d0"/>
        <function-ref name="stop" scoped="" ref="0x41022050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerInit" ref="0x40fcb418" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x40fcb418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fcb5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerControl" ref="0x40fcb860" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x40fcb860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40fcba38"/>
        <function-ref name="stopDone" scoped="" ref="0x40fcbb18"/>
        <function-ref name="start" scoped="" ref="0x40fcbbf8"/>
        <function-ref name="stop" scoped="" ref="0x40fcbcd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam8" ref="0x4104a0c0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam8" scoped="" ref="0x4104a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104a298"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam11" ref="0x4104aca0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam11" scoped="" ref="0x4104aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104ae78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC6" ref="0x4104f090" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC6" scoped="" ref="0x4104f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4104f268"/>
        <function-ref name="readDone" scoped="" ref="0x4104f348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam0" ref="0x4104c010" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam0" scoped="" ref="0x4104c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC0" ref="0x41050360" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC0" scoped="" ref="0x41050360"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41050538"/>
        <function-ref name="readDone" scoped="" ref="0x41050618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio2" ref="0x41043e68" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio2" scoped="" ref="0x41043e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41040050"/>
        <function-ref name="high" scoped="" ref="0x41040130"/>
        <function-ref name="Toggle" scoped="" ref="0x41040210"/>
        <function-ref name="read" scoped="" ref="0x410402f0"/>
        <function-ref name="setParam" scoped="" ref="0x410403d0"/>
        <function-ref name="readDone" scoped="" ref="0x410404b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IBADCinit" ref="0x410549c8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IBADCinit" scoped="" ref="0x410549c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41054ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC9" ref="0x4104fe88" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC9" scoped="" ref="0x4104fe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4104e070"/>
        <function-ref name="readDone" scoped="" ref="0x4104e150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC3" ref="0x41051200" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC3" scoped="" ref="0x41051200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410513d8"/>
        <function-ref name="readDone" scoped="" ref="0x410514b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam3" ref="0x4104cce0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam3" scoped="" ref="0x4104cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio5" ref="0x4103f660" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio5" scoped="" ref="0x4103f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x4103f838"/>
        <function-ref name="high" scoped="" ref="0x4103f918"/>
        <function-ref name="Toggle" scoped="" ref="0x4103f9f8"/>
        <function-ref name="read" scoped="" ref="0x4103fad8"/>
        <function-ref name="setParam" scoped="" ref="0x4103fbb8"/>
        <function-ref name="readDone" scoped="" ref="0x4103fc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterInit" ref="0x4103fea8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x4103fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4103e308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC12" ref="0x4104eca8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC12" scoped="" ref="0x4104eca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4104ee80"/>
        <function-ref name="readDone" scoped="" ref="0x4104d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam6" ref="0x4104b8c0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam6" scoped="" ref="0x4104b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104ba98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC4" ref="0x410516a8" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC4" scoped="" ref="0x410516a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41051900"/>
        <function-ref name="readDone" scoped="" ref="0x410519e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio0" ref="0x41041e78" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio0" scoped="" ref="0x41041e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41043070"/>
        <function-ref name="high" scoped="" ref="0x41043150"/>
        <function-ref name="Toggle" scoped="" ref="0x41043230"/>
        <function-ref name="read" scoped="" ref="0x41043310"/>
        <function-ref name="setParam" scoped="" ref="0x410433f0"/>
        <function-ref name="readDone" scoped="" ref="0x410434d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hum" ref="0x41046a68" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hum" scoped="" ref="0x41046a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410450b8"/>
        <function-ref name="readDone" scoped="" ref="0x41045310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Battery" ref="0x41049968" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Battery" scoped="" ref="0x41049968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41048010"/>
        <function-ref name="readDone" scoped="" ref="0x41048268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam9" ref="0x4104a4b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam9" scoped="" ref="0x4104a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104a688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam12" ref="0x410490c8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam12" scoped="" ref="0x410490c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x410492a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC7" ref="0x4104f538" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC7" scoped="" ref="0x4104f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4104f710"/>
        <function-ref name="readDone" scoped="" ref="0x4104f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempHumControl" ref="0x41048680" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempHumControl" scoped="" ref="0x41048680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41048858"/>
        <function-ref name="stopDone" scoped="" ref="0x41048938"/>
        <function-ref name="start" scoped="" ref="0x41048a18"/>
        <function-ref name="stop" scoped="" ref="0x41048af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam1" ref="0x4104c400" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam1" scoped="" ref="0x4104c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sample" ref="0x4105ace0" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x4105ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x41058390"/>
        <function-ref name="set_digital_output" scoped="" ref="0x41058010"/>
        <function-ref name="getSample" scoped="" ref="0x410580f0"/>
        <function-ref name="reTask" scoped="" ref="0x410581d0"/>
        <function-ref name="start" scoped="" ref="0x410582b0"/>
        <function-ref name="stop" scoped="" ref="0x4105aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerTimer" ref="0x41056758" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerTimer" scoped="" ref="0x41056758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41054248"/>
        <function-ref name="fired" scoped="" ref="0x410554e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41055bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41055998"/>
        <function-ref name="getdt" scoped="" ref="0x410546f8"/>
        <function-ref name="gett0" scoped="" ref="0x410544a0"/>
        <function-ref name="isRunning" scoped="" ref="0x41055740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41056d80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41055f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x41055010"/>
        <function-ref name="stop" scoped="" ref="0x41055290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC1" ref="0x41050808" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC1" scoped="" ref="0x41050808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410509e0"/>
        <function-ref name="readDone" scoped="" ref="0x41050ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC10" ref="0x4104e348" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC10" scoped="" ref="0x4104e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4104e520"/>
        <function-ref name="readDone" scoped="" ref="0x4104e600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam4" ref="0x4104b0e0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam4" scoped="" ref="0x4104b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104b2b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio3" ref="0x41040660" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio3" scoped="" ref="0x41040660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41040838"/>
        <function-ref name="high" scoped="" ref="0x41040918"/>
        <function-ref name="Toggle" scoped="" ref="0x410409f8"/>
        <function-ref name="read" scoped="" ref="0x41040ad8"/>
        <function-ref name="setParam" scoped="" ref="0x41040bb8"/>
        <function-ref name="readDone" scoped="" ref="0x41040c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerInit" ref="0x4105a260" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x4105a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4105a438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DioInit" ref="0x41045690" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DioInit" scoped="" ref="0x41045690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41045868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerControl" ref="0x4105a6c8" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x4105a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4105a8a0"/>
        <function-ref name="stopDone" scoped="" ref="0x4105a980"/>
        <function-ref name="start" scoped="" ref="0x4105aa60"/>
        <function-ref name="stop" scoped="" ref="0x4105ab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4103ebb8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4103ebb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x4103ed90"/>
        <function-ref name="high" scoped="" ref="0x4103ee70"/>
        <function-ref name="Toggle" scoped="" ref="0x41079010"/>
        <function-ref name="read" scoped="" ref="0x410790f0"/>
        <function-ref name="setParam" scoped="" ref="0x410791d0"/>
        <function-ref name="readDone" scoped="" ref="0x410792b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC13" ref="0x4104d208" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC13" scoped="" ref="0x4104d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4104d3e0"/>
        <function-ref name="readDone" scoped="" ref="0x4104d4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam7" ref="0x4104bcb0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam7" scoped="" ref="0x4104bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104be88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41058940" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41058940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41058b18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41058bf8"/>
        <function-ref name="led1On" scoped="" ref="0x41058cd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41058db8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41058e98"/>
        <function-ref name="get" scoped="" ref="0x41056010"/>
        <function-ref name="led1Off" scoped="" ref="0x410560f0"/>
        <function-ref name="led2Off" scoped="" ref="0x41056470"/>
        <function-ref name="set" scoped="" ref="0x410561d0"/>
        <function-ref name="led0On" scoped="" ref="0x410562b0"/>
        <function-ref name="led2On" scoped="" ref="0x41056390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC5" ref="0x41051bd0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC5" scoped="" ref="0x41051bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41051da8"/>
        <function-ref name="readDone" scoped="" ref="0x41051e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam10" ref="0x4104a8a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam10" scoped="" ref="0x4104a8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104aa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IBADCcontrol" ref="0x41054e00" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IBADCcontrol" scoped="" ref="0x41054e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41053010"/>
        <function-ref name="stopDone" scoped="" ref="0x410530f0"/>
        <function-ref name="start" scoped="" ref="0x410531d0"/>
        <function-ref name="stop" scoped="" ref="0x410532b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp" ref="0x41048da0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x41048da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410463e0"/>
        <function-ref name="readDone" scoped="" ref="0x41046638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio1" ref="0x41043680" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio1" scoped="" ref="0x41043680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41043858"/>
        <function-ref name="high" scoped="" ref="0x41043938"/>
        <function-ref name="Toggle" scoped="" ref="0x41043a18"/>
        <function-ref name="read" scoped="" ref="0x41043af8"/>
        <function-ref name="setParam" scoped="" ref="0x41043bd8"/>
        <function-ref name="readDone" scoped="" ref="0x41043cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterControl" ref="0x4103e578" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x4103e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4103e750"/>
        <function-ref name="stopDone" scoped="" ref="0x4103e830"/>
        <function-ref name="start" scoped="" ref="0x4103e910"/>
        <function-ref name="stop" scoped="" ref="0x4103e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DioControl" ref="0x41045ab0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DioControl" scoped="" ref="0x41045ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41045c88"/>
        <function-ref name="stopDone" scoped="" ref="0x41045d68"/>
        <function-ref name="start" scoped="" ref="0x41045e48"/>
        <function-ref name="stop" scoped="" ref="0x41045f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam13" ref="0x410494c0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam13" scoped="" ref="0x410494c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x41049698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC8" ref="0x4104f9e0" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC8" scoped="" ref="0x4104f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4104fbb8"/>
        <function-ref name="readDone" scoped="" ref="0x4104fc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam2" ref="0x4104c7f0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam2" scoped="" ref="0x4104c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104cac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC2" ref="0x41050cb0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC2" scoped="" ref="0x41050cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41050e88"/>
        <function-ref name="readDone" scoped="" ref="0x41051010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio4" ref="0x41040e48" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio4" scoped="" ref="0x41040e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x4103f050"/>
        <function-ref name="high" scoped="" ref="0x4103f130"/>
        <function-ref name="Toggle" scoped="" ref="0x4103f210"/>
        <function-ref name="read" scoped="" ref="0x4103f2f0"/>
        <function-ref name="setParam" scoped="" ref="0x4103f3d0"/>
        <function-ref name="readDone" scoped="" ref="0x4103f4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC11" ref="0x4104e7f8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC11" scoped="" ref="0x4104e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4104e9d0"/>
        <function-ref name="readDone" scoped="" ref="0x4104eab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam5" ref="0x4104b4d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam5" scoped="" ref="0x4104b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4104b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4109d5d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SamplerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4109d5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4109b0d8"/>
        <function-ref name="fired" scoped="" ref="0x4109c368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4109ca70"/>
        <function-ref name="isOneShot" scoped="" ref="0x4109c818"/>
        <function-ref name="getdt" scoped="" ref="0x4109b588"/>
        <function-ref name="gett0" scoped="" ref="0x4109b330"/>
        <function-ref name="isRunning" scoped="" ref="0x4109c5c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4109dc00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4109cd90"/>
        <function-ref name="startOneShot" scoped="" ref="0x4109de80"/>
        <function-ref name="stop" scoped="" ref="0x4109c110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x411a6ef8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="SamplerC.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x411a6ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41098558"/>
        <function-ref name="readDone" scoped="" ref="0x410987b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x418314e8" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x418314e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x418316c0"/>
        <function-ref name="configure" scoped="" ref="0x418317a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41832430" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41832430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41832a58"/>
        <function-ref name="readDone" scoped="" ref="0x41832cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x41831010" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41831010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x418311e8"/>
        <function-ref name="getChannel" scoped="" ref="0x418312c8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x418313a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x410ce820" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x410ce820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410cee48"/>
        <function-ref name="readDone" scoped="" ref="0x410ca0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x410c6c48" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x410c6c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410c92a8"/>
        <function-ref name="readDone" scoped="" ref="0x410c9520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x410c9bd8" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x410c9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x410c9db0"/>
        <function-ref name="getChannel" scoped="" ref="0x410c9e90"/>
        <function-ref name="getPrescaler" scoped="" ref="0x410c8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x410c84b0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410c84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410c8688"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410c8768"/>
        <function-ref name="request" scoped="" ref="0x410c8848"/>
        <function-ref name="granted" scoped="" ref="0x410c8928"/>
        <function-ref name="isOwner" scoped="" ref="0x410c8a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410c17f0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410c17f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410c19c8"/>
        <function-ref name="configure" scoped="" ref="0x410c1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x410c1010" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x410c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x410c11e8"/>
        <function-ref name="dataReady" scoped="" ref="0x410c12c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x410bee10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x410bee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x410c2010"/>
        <function-ref name="cancel" scoped="" ref="0x410c20f0"/>
        <function-ref name="dataReady" scoped="" ref="0x410c21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410c3498" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410c3498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410c3670"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410c3750"/>
        <function-ref name="request" scoped="" ref="0x410c3830"/>
        <function-ref name="granted" scoped="" ref="0x410c3910"/>
        <function-ref name="isOwner" scoped="" ref="0x410c39f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410b9440" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410b9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410b9618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x410b72e0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x410b72e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x410b74b8"/>
        <function-ref name="dataReady" scoped="" ref="0x410b7598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x410b9c80" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x410b9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x410b9e58"/>
        <function-ref name="cancel" scoped="" ref="0x410b7010"/>
        <function-ref name="dataReady" scoped="" ref="0x410b70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x410ecbc0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x410ecbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x410ecd98"/>
        <function-ref name="getAdmux" scoped="" ref="0x410ece78"/>
        <function-ref name="setPrescaler" scoped="" ref="0x410b6010"/>
        <function-ref name="isEnabled" scoped="" ref="0x410b60f0"/>
        <function-ref name="enableAdc" scoped="" ref="0x410b61d0"/>
        <function-ref name="setAdmux" scoped="" ref="0x410b62b0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x410b6390"/>
        <function-ref name="isComplete" scoped="" ref="0x410b6470"/>
        <function-ref name="cancel" scoped="" ref="0x410b6550"/>
        <function-ref name="disableAdc" scoped="" ref="0x410b6630"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x410b6710"/>
        <function-ref name="disableInterruption" scoped="" ref="0x410b67f0"/>
        <function-ref name="startConversion" scoped="" ref="0x410b68d0"/>
        <function-ref name="isStarted" scoped="" ref="0x410b6a30"/>
        <function-ref name="setAdcsra" scoped="" ref="0x410b6b10"/>
        <function-ref name="setContinuous" scoped="" ref="0x410b6bf0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x410b6cd0"/>
        <function-ref name="getValue" scoped="" ref="0x410b6db0"/>
        <function-ref name="dataReady" scoped="" ref="0x410b6e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x410b97f0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x410b97f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410b99c8"/>
        <function-ref name="stop" scoped="" ref="0x410b9aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x410f30f8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x410f30f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x410f32d0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x410f33b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x410f3490"/>
        <function-ref name="actualMicro" scoped="" ref="0x410f3570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x410f3650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x4110c278" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x4110c278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x4110c450"/>
        <function-ref name="getAdmux" scoped="" ref="0x4110c530"/>
        <function-ref name="setPrescaler" scoped="" ref="0x4110c610"/>
        <function-ref name="isEnabled" scoped="" ref="0x4110c6f0"/>
        <function-ref name="enableAdc" scoped="" ref="0x4110c7d0"/>
        <function-ref name="setAdmux" scoped="" ref="0x4110c8b0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x4110c990"/>
        <function-ref name="isComplete" scoped="" ref="0x4110ca70"/>
        <function-ref name="cancel" scoped="" ref="0x4110cb50"/>
        <function-ref name="disableAdc" scoped="" ref="0x4110cc30"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x4110cd10"/>
        <function-ref name="disableInterruption" scoped="" ref="0x4110cdf0"/>
        <function-ref name="startConversion" scoped="" ref="0x4110ced0"/>
        <function-ref name="isStarted" scoped="" ref="0x4110b090"/>
        <function-ref name="setAdcsra" scoped="" ref="0x4110b170"/>
        <function-ref name="setContinuous" scoped="" ref="0x4110b250"/>
        <function-ref name="getAdcsra" scoped="" ref="0x4110b330"/>
        <function-ref name="getValue" scoped="" ref="0x4110b410"/>
        <function-ref name="dataReady" scoped="" ref="0x4110b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x4110beb0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x4110beb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x411080c0"/>
        <function-ref name="getAdmux" scoped="" ref="0x411081a0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x41108280"/>
        <function-ref name="isEnabled" scoped="" ref="0x41108360"/>
        <function-ref name="enableAdc" scoped="" ref="0x41108440"/>
        <function-ref name="setAdmux" scoped="" ref="0x41108520"/>
        <function-ref name="enableInterruption" scoped="" ref="0x41108600"/>
        <function-ref name="isComplete" scoped="" ref="0x411086e0"/>
        <function-ref name="cancel" scoped="" ref="0x411087c0"/>
        <function-ref name="disableAdc" scoped="" ref="0x411088a0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x41108980"/>
        <function-ref name="disableInterruption" scoped="" ref="0x41108a60"/>
        <function-ref name="startConversion" scoped="" ref="0x41108b40"/>
        <function-ref name="isStarted" scoped="" ref="0x41108ca0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x41108d80"/>
        <function-ref name="setContinuous" scoped="" ref="0x41108e60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x41107010"/>
        <function-ref name="getValue" scoped="" ref="0x411070f0"/>
        <function-ref name="dataReady" scoped="" ref="0x411071d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x411073b8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x411073b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x41107590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41128068" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41128068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41128250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41128330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41164010" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41164010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411641f8"/>
        <function-ref name="configure" scoped="" ref="0x411642d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41128470" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41128470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41128648"/>
        <function-ref name="requested" scoped="" ref="0x41128728"/>
        <function-ref name="granted" scoped="" ref="0x41128808"/>
        <function-ref name="isOwner" scoped="" ref="0x411288e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411289c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41109910" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41109910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41109af8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41109bd8"/>
        <function-ref name="request" scoped="" ref="0x41109cb8"/>
        <function-ref name="granted" scoped="" ref="0x41109d98"/>
        <function-ref name="isOwner" scoped="" ref="0x41109e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41128b08" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41128b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41128ce0"/>
        <function-ref name="userId" scoped="" ref="0x41128dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41828030" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41828030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41828208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x41828368" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x41828368"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41828540"/>
        <function-ref name="isEmpty" scoped="" ref="0x41828620"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41828700"/>
        <function-ref name="dequeue" scoped="" ref="0x418287e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41827c20" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41827c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41827e08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41827ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41826b98" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41826b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41826d80"/>
        <function-ref name="configure" scoped="" ref="0x41826e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41824010" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41824010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x418241e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x418242c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x418243a8"/>
        <function-ref name="dequeue" scoped="" ref="0x41824488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41826040" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41826040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41826218"/>
        <function-ref name="requested" scoped="" ref="0x418262f8"/>
        <function-ref name="granted" scoped="" ref="0x418263d8"/>
        <function-ref name="isOwner" scoped="" ref="0x418264b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41826598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x418245c8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x418245c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x418247a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41824880"/>
        <function-ref name="led1On" scoped="" ref="0x41824960"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41824a40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41824b20"/>
        <function-ref name="get" scoped="" ref="0x41824c00"/>
        <function-ref name="led1Off" scoped="" ref="0x41824ce0"/>
        <function-ref name="led0On" scoped="" ref="0x418230f0"/>
        <function-ref name="set" scoped="" ref="0x41824ea0"/>
        <function-ref name="led2On" scoped="" ref="0x41824dc0"/>
        <function-ref name="led2Off" scoped="" ref="0x41823010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x418274e0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x418274e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x418276c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x418277a8"/>
        <function-ref name="request" scoped="" ref="0x41827888"/>
        <function-ref name="granted" scoped="" ref="0x41827968"/>
        <function-ref name="isOwner" scoped="" ref="0x41827a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x418266d8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x418266d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x418268b0"/>
        <function-ref name="userId" scoped="" ref="0x41826990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41823270" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41823270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41823448"/>
        <function-ref name="runTask" scoped="" ref="0x41823528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41163de8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41163de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41162010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41162150" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41162150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41162328"/>
        <function-ref name="requested" scoped="" ref="0x41162408"/>
        <function-ref name="granted" scoped="" ref="0x411624e8"/>
        <function-ref name="isOwner" scoped="" ref="0x411625c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411626a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x411639f0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x411639f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41163bc8"/>
        <function-ref name="stop" scoped="" ref="0x41163ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x411627e8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411627e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411629c0"/>
        <function-ref name="userId" scoped="" ref="0x41162aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41865b00" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41865b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41865cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41865e18" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41865e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41863010"/>
        <function-ref name="requested" scoped="" ref="0x418630f0"/>
        <function-ref name="granted" scoped="" ref="0x418631d0"/>
        <function-ref name="isOwner" scoped="" ref="0x418632b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41863390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x41865708" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41865708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x418658e0"/>
        <function-ref name="stop" scoped="" ref="0x418659c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x418634d0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x418634d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x418636a8"/>
        <function-ref name="userId" scoped="" ref="0x41863788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x411901d8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x411901d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41190800"/>
        <function-ref name="readDone" scoped="" ref="0x41190a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x4118f178" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x4118f178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4118f7c0"/>
        <function-ref name="readDone" scoped="" ref="0x4118fa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4118e6b0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4118e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4118e888"/>
        <function-ref name="getChannel" scoped="" ref="0x4118e968"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4118ea48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x4118fde8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4118fde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4118e010"/>
        <function-ref name="cancel" scoped="" ref="0x4118e0f0"/>
        <function-ref name="dataReady" scoped="" ref="0x4118e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x41185e90" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x41185e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41184080"/>
        <function-ref name="runTask" scoped="" ref="0x41184160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41152560" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41152560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41152b98"/>
        <function-ref name="readDone" scoped="" ref="0x41152e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x41179280" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x41179280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411798b8"/>
        <function-ref name="readDone" scoped="" ref="0x41179b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41179ea0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41179ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411ab0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411ab1a0"/>
        <function-ref name="request" scoped="" ref="0x411ab280"/>
        <function-ref name="granted" scoped="" ref="0x411ab360"/>
        <function-ref name="isOwner" scoped="" ref="0x411ab440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x411a7468" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x411a7468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x411a7640"/>
        <function-ref name="getChannel" scoped="" ref="0x411a7720"/>
        <function-ref name="getPrescaler" scoped="" ref="0x411a7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411a1520" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411a1520"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411a16f8"/>
        <function-ref name="stopDone" scoped="" ref="0x411a17d8"/>
        <function-ref name="start" scoped="" ref="0x411a18b8"/>
        <function-ref name="stop" scoped="" ref="0x411a1998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x412457f0" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x412457f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41245e18"/>
        <function-ref name="readDone" scoped="" ref="0x41243088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x411a1ba8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x411a1ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412451f0"/>
        <function-ref name="readDone" scoped="" ref="0x41245448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht15Temp" ref="0x41857550" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht15Temp" scoped="" ref="0x41857550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x41857728"/>
        <function-ref name="measureHumidity" scoped="" ref="0x41857808"/>
        <function-ref name="measureTemperature" scoped="" ref="0x418578e8"/>
        <function-ref name="reset" scoped="" ref="0x418579c8"/>
        <function-ref name="resetDone" scoped="" ref="0x41857aa8"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x41857b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x4185a760" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x4185a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x4185a938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x4185ab48" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x4185ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x418581e0"/>
        <function-ref name="readDone" scoped="" ref="0x41858438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x4185b7c0" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x4185b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x4185b998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x41858750" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x41858750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41858928"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41858a08"/>
        <function-ref name="request" scoped="" ref="0x41858ae8"/>
        <function-ref name="granted" scoped="" ref="0x41858bc8"/>
        <function-ref name="isOwner" scoped="" ref="0x41858ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht15Hum" ref="0x41857d08" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht15Hum" scoped="" ref="0x41857d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x41857ee0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x41856010"/>
        <function-ref name="measureTemperature" scoped="" ref="0x418560f0"/>
        <function-ref name="reset" scoped="" ref="0x418561d0"/>
        <function-ref name="resetDone" scoped="" ref="0x418562b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x41856390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x41858e28" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x41858e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41857050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41857130"/>
        <function-ref name="request" scoped="" ref="0x41857210"/>
        <function-ref name="granted" scoped="" ref="0x418572f0"/>
        <function-ref name="isOwner" scoped="" ref="0x418573d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x4185bba8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x4185bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4185a1f0"/>
        <function-ref name="readDone" scoped="" ref="0x4185a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x411bc2c8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411bc2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411bc4a0"/>
        <function-ref name="stopDone" scoped="" ref="0x411bc580"/>
        <function-ref name="start" scoped="" ref="0x411bc660"/>
        <function-ref name="stop" scoped="" ref="0x411bc740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht15" ref="0x411ba6c8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht15" scoped="" ref="0x411ba6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x411ba8a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x411ba980"/>
        <function-ref name="measureTemperature" scoped="" ref="0x411baa60"/>
        <function-ref name="reset" scoped="" ref="0x411bab40"/>
        <function-ref name="resetDone" scoped="" ref="0x411bac20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x411bad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411bcc00" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411bcc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411bcdd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411bceb8"/>
        <function-ref name="request" scoped="" ref="0x411ba010"/>
        <function-ref name="granted" scoped="" ref="0x411ba0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x411ba1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht15" ref="0x411b7c20" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht15" scoped="" ref="0x411b7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x411b7e08"/>
        <function-ref name="measureHumidity" scoped="" ref="0x411b7ee8"/>
        <function-ref name="measureTemperature" scoped="" ref="0x41208010"/>
        <function-ref name="reset" scoped="" ref="0x412080f0"/>
        <function-ref name="resetDone" scoped="" ref="0x412081d0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x412082b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x412077b0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x412077b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41207988"/>
        <function-ref name="disable" scoped="" ref="0x41207a68"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x41207b48"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x41207c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x41203c48" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x41203c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41203e20"/>
        <function-ref name="runTask" scoped="" ref="0x41203f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x41208da8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x41208da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41207010"/>
        <function-ref name="isInput" scoped="" ref="0x412070f0"/>
        <function-ref name="toggle" scoped="" ref="0x412071d0"/>
        <function-ref name="isOutput" scoped="" ref="0x412072b0"/>
        <function-ref name="get" scoped="" ref="0x41207390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41207470"/>
        <function-ref name="set" scoped="" ref="0x41207550"/>
        <function-ref name="clr" scoped="" ref="0x41207630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x41208430" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x41208430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41208608"/>
        <function-ref name="isInput" scoped="" ref="0x412086e8"/>
        <function-ref name="toggle" scoped="" ref="0x412087c8"/>
        <function-ref name="isOutput" scoped="" ref="0x412088a8"/>
        <function-ref name="get" scoped="" ref="0x41208988"/>
        <function-ref name="makeOutput" scoped="" ref="0x41208a68"/>
        <function-ref name="set" scoped="" ref="0x41208b48"/>
        <function-ref name="clr" scoped="" ref="0x41208c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41203030" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41203030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41203208"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412032e8"/>
        <function-ref name="led1On" scoped="" ref="0x412033c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412034a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41203588"/>
        <function-ref name="get" scoped="" ref="0x41203668"/>
        <function-ref name="led1Off" scoped="" ref="0x41203748"/>
        <function-ref name="led2On" scoped="" ref="0x41203ac8"/>
        <function-ref name="set" scoped="" ref="0x41203908"/>
        <function-ref name="led2Off" scoped="" ref="0x41203828"/>
        <function-ref name="led0On" scoped="" ref="0x412039e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41207e18" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41207e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41204920"/>
        <function-ref name="fired" scoped="" ref="0x41205bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x412042e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41204088"/>
        <function-ref name="getdt" scoped="" ref="0x41204dd0"/>
        <function-ref name="gett0" scoped="" ref="0x41204b78"/>
        <function-ref name="isRunning" scoped="" ref="0x41205e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41205468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41204600"/>
        <function-ref name="startOneShot" scoped="" ref="0x412056e8"/>
        <function-ref name="stop" scoped="" ref="0x41205968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412019c0" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412019c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41201b98"/>
        <function-ref name="stopDone" scoped="" ref="0x41201c78"/>
        <function-ref name="start" scoped="" ref="0x41201d58"/>
        <function-ref name="stop" scoped="" ref="0x41201e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x411fb010" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x411fb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411fb1e8"/>
        <function-ref name="disable" scoped="" ref="0x411fb2c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x411fb3a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x411fb488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x411fd4b0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x411fd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411fd688"/>
        <function-ref name="isInput" scoped="" ref="0x411fd768"/>
        <function-ref name="toggle" scoped="" ref="0x411fd848"/>
        <function-ref name="isOutput" scoped="" ref="0x411fd928"/>
        <function-ref name="get" scoped="" ref="0x411fda08"/>
        <function-ref name="makeOutput" scoped="" ref="0x411fdae8"/>
        <function-ref name="set" scoped="" ref="0x411fdbc8"/>
        <function-ref name="clr" scoped="" ref="0x411fdca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x411fea58" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x411fea58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411fec30"/>
        <function-ref name="isInput" scoped="" ref="0x411fed10"/>
        <function-ref name="toggle" scoped="" ref="0x411fedf0"/>
        <function-ref name="isOutput" scoped="" ref="0x411feed0"/>
        <function-ref name="get" scoped="" ref="0x411fd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411fd0f0"/>
        <function-ref name="set" scoped="" ref="0x411fd1d0"/>
        <function-ref name="clr" scoped="" ref="0x411fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411fe2f0" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411fe4c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411fe5a8"/>
        <function-ref name="request" scoped="" ref="0x411fe688"/>
        <function-ref name="granted" scoped="" ref="0x411fe768"/>
        <function-ref name="isOwner" scoped="" ref="0x411fe848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x411fbc30" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x411fbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411fbe08"/>
        <function-ref name="isInput" scoped="" ref="0x411fbee8"/>
        <function-ref name="toggle" scoped="" ref="0x411f8010"/>
        <function-ref name="isOutput" scoped="" ref="0x411f80f0"/>
        <function-ref name="get" scoped="" ref="0x411f81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f82b0"/>
        <function-ref name="set" scoped="" ref="0x411f8390"/>
        <function-ref name="clr" scoped="" ref="0x411f8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x41233ec8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x41233ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41232188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x411f7a28" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x411f7a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f7c00"/>
        <function-ref name="isInput" scoped="" ref="0x411f7ce0"/>
        <function-ref name="toggle" scoped="" ref="0x411f7dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x411f7ea0"/>
        <function-ref name="get" scoped="" ref="0x411f6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f60f0"/>
        <function-ref name="set" scoped="" ref="0x411f61d0"/>
        <function-ref name="clr" scoped="" ref="0x411f62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x411f5850" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x411f5850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f5a28"/>
        <function-ref name="isInput" scoped="" ref="0x411f5b08"/>
        <function-ref name="toggle" scoped="" ref="0x411f5be8"/>
        <function-ref name="isOutput" scoped="" ref="0x411f5cc8"/>
        <function-ref name="get" scoped="" ref="0x411f5da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f5e88"/>
        <function-ref name="set" scoped="" ref="0x411f4010"/>
        <function-ref name="clr" scoped="" ref="0x411f40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x41232b20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x41232b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41232cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x412312d8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x412312d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x412314b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x41235740" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x41235740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41235918"/>
        <function-ref name="isInput" scoped="" ref="0x412359f8"/>
        <function-ref name="toggle" scoped="" ref="0x41235ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x41235bb8"/>
        <function-ref name="get" scoped="" ref="0x41235c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x41235d78"/>
        <function-ref name="set" scoped="" ref="0x41235e58"/>
        <function-ref name="clr" scoped="" ref="0x41234010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x411f8650" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x411f8650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f8828"/>
        <function-ref name="isInput" scoped="" ref="0x411f8908"/>
        <function-ref name="toggle" scoped="" ref="0x411f89e8"/>
        <function-ref name="isOutput" scoped="" ref="0x411f8ac8"/>
        <function-ref name="get" scoped="" ref="0x411f8ba8"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f8c88"/>
        <function-ref name="set" scoped="" ref="0x411f8d68"/>
        <function-ref name="clr" scoped="" ref="0x411f8e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x411f6490" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x411f6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f6668"/>
        <function-ref name="isInput" scoped="" ref="0x411f6748"/>
        <function-ref name="toggle" scoped="" ref="0x411f6828"/>
        <function-ref name="isOutput" scoped="" ref="0x411f6908"/>
        <function-ref name="get" scoped="" ref="0x411f69e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f6ac8"/>
        <function-ref name="set" scoped="" ref="0x411f6ba8"/>
        <function-ref name="clr" scoped="" ref="0x411f6c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x41232380" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x41232380"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41232558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x411f42d0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x411f42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f44a8"/>
        <function-ref name="isInput" scoped="" ref="0x411f4588"/>
        <function-ref name="toggle" scoped="" ref="0x411f4668"/>
        <function-ref name="isOutput" scoped="" ref="0x411f4748"/>
        <function-ref name="get" scoped="" ref="0x411f4828"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f4908"/>
        <function-ref name="set" scoped="" ref="0x411f49e8"/>
        <function-ref name="clr" scoped="" ref="0x411f4ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x412316a8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x412316a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41231880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x41234200" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x41234200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412343d8"/>
        <function-ref name="isInput" scoped="" ref="0x412344b8"/>
        <function-ref name="toggle" scoped="" ref="0x41234598"/>
        <function-ref name="isOutput" scoped="" ref="0x41234678"/>
        <function-ref name="get" scoped="" ref="0x41234758"/>
        <function-ref name="makeOutput" scoped="" ref="0x41234838"/>
        <function-ref name="set" scoped="" ref="0x41234918"/>
        <function-ref name="clr" scoped="" ref="0x412349f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x411f7050" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x411f7050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f7228"/>
        <function-ref name="isInput" scoped="" ref="0x411f7308"/>
        <function-ref name="toggle" scoped="" ref="0x411f73e8"/>
        <function-ref name="isOutput" scoped="" ref="0x411f74c8"/>
        <function-ref name="get" scoped="" ref="0x411f75a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f7688"/>
        <function-ref name="set" scoped="" ref="0x411f7768"/>
        <function-ref name="clr" scoped="" ref="0x411f7848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x411f6e68" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x411f6e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f5050"/>
        <function-ref name="isInput" scoped="" ref="0x411f5130"/>
        <function-ref name="toggle" scoped="" ref="0x411f5210"/>
        <function-ref name="isOutput" scoped="" ref="0x411f52f0"/>
        <function-ref name="get" scoped="" ref="0x411f53d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f54b0"/>
        <function-ref name="set" scoped="" ref="0x411f5590"/>
        <function-ref name="clr" scoped="" ref="0x411f5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x41232750" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x41232750"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41232928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x411f4cb8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x411f4cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f4e90"/>
        <function-ref name="isInput" scoped="" ref="0x41235010"/>
        <function-ref name="toggle" scoped="" ref="0x412350f0"/>
        <function-ref name="isOutput" scoped="" ref="0x412351d0"/>
        <function-ref name="get" scoped="" ref="0x412352b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x41235390"/>
        <function-ref name="set" scoped="" ref="0x41235470"/>
        <function-ref name="clr" scoped="" ref="0x41235550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x41232ef0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x41232ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x412310e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x41231a78" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x41231a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41231c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x41234be8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x41234be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41234dc0"/>
        <function-ref name="isInput" scoped="" ref="0x41234ea0"/>
        <function-ref name="toggle" scoped="" ref="0x41233010"/>
        <function-ref name="isOutput" scoped="" ref="0x412330f0"/>
        <function-ref name="get" scoped="" ref="0x412331d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x412332b0"/>
        <function-ref name="set" scoped="" ref="0x41233390"/>
        <function-ref name="clr" scoped="" ref="0x41233470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x412305c0" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x412305c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41230798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x4122d208" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x4122d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4122d3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x4122d9a8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x4122d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4122db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x41230990" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x41230990"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x41230b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x4122dd78" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x4122dd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4122c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x41230d60" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x41230d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4122d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x4122d5d8" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x4122d5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4122d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x4122c208" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x4122c208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4122c3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x41221d88" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht15C.Int"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x41221d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41220010"/>
        <function-ref name="fired" scoped="" ref="0x412200f0"/>
        <function-ref name="disable" scoped="" ref="0x412201d0"/>
        <function-ref name="edge" scoped="" ref="0x412202b0"/>
        <function-ref name="enable" scoped="" ref="0x41220390"/>
        <function-ref name="getValue" scoped="" ref="0x41220470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x41221790" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht15C.Int"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x41221790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41221968"/>
        <function-ref name="disable" scoped="" ref="0x41221a48"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x41221b28"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x41221c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4121fe48" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4121fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4121c050"/>
        <function-ref name="stopDone" scoped="" ref="0x4121c130"/>
        <function-ref name="start" scoped="" ref="0x4121c210"/>
        <function-ref name="stop" scoped="" ref="0x4121c2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x41217040" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x41217040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41217218"/>
        <function-ref name="runTask" scoped="" ref="0x412172f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x41218210" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x41218210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412183e8"/>
        <function-ref name="isInput" scoped="" ref="0x412184c8"/>
        <function-ref name="toggle" scoped="" ref="0x412185a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41218688"/>
        <function-ref name="get" scoped="" ref="0x41218768"/>
        <function-ref name="makeOutput" scoped="" ref="0x41218848"/>
        <function-ref name="set" scoped="" ref="0x41218928"/>
        <function-ref name="clr" scoped="" ref="0x41218a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x412197d8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x412197d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412199b0"/>
        <function-ref name="isInput" scoped="" ref="0x41219a90"/>
        <function-ref name="toggle" scoped="" ref="0x41219b70"/>
        <function-ref name="isOutput" scoped="" ref="0x41219c50"/>
        <function-ref name="get" scoped="" ref="0x41219d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x41219e10"/>
        <function-ref name="set" scoped="" ref="0x41219ef0"/>
        <function-ref name="clr" scoped="" ref="0x41218010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4121c558" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4121c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41219048"/>
        <function-ref name="fired" scoped="" ref="0x4121b2f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4121b9f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4121b7a0"/>
        <function-ref name="getdt" scoped="" ref="0x412194f8"/>
        <function-ref name="gett0" scoped="" ref="0x412192a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4121b548"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4121cb80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4121bd18"/>
        <function-ref name="startOneShot" scoped="" ref="0x4121ce00"/>
        <function-ref name="stop" scoped="" ref="0x4121b098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4121dc30" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht15C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4121dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41254730"/>
        <function-ref name="fired" scoped="" ref="0x412559d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x412540f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41255e80"/>
        <function-ref name="getdt" scoped="" ref="0x41254be0"/>
        <function-ref name="gett0" scoped="" ref="0x41254988"/>
        <function-ref name="isRunning" scoped="" ref="0x41255c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41255278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41254410"/>
        <function-ref name="startOneShot" scoped="" ref="0x412554f8"/>
        <function-ref name="stop" scoped="" ref="0x41255778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41251ea0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41251ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x412500c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412501a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41250790" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41250790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41250978"/>
        <function-ref name="configure" scoped="" ref="0x41250a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41251760" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41251760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41251948"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41251a28"/>
        <function-ref name="request" scoped="" ref="0x41251b08"/>
        <function-ref name="granted" scoped="" ref="0x41251be8"/>
        <function-ref name="isOwner" scoped="" ref="0x41251cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x412502e0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412502e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412504b8"/>
        <function-ref name="userId" scoped="" ref="0x41250598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4188f9b8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4188f9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4188fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4188fcf0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4188fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4188fec8"/>
        <function-ref name="isEmpty" scoped="" ref="0x4188d010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4188d0f0"/>
        <function-ref name="dequeue" scoped="" ref="0x4188d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4188c490" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4188c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4188c678"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4188c758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4188cd58" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4188cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4188b010"/>
        <function-ref name="configure" scoped="" ref="0x4188b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4188b250" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4188b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4188b428"/>
        <function-ref name="isEmpty" scoped="" ref="0x4188b508"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4188b5e8"/>
        <function-ref name="dequeue" scoped="" ref="0x4188b6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4188dd38" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4188dd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4188df20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4188c018"/>
        <function-ref name="request" scoped="" ref="0x4188c0f8"/>
        <function-ref name="granted" scoped="" ref="0x4188c1d8"/>
        <function-ref name="isOwner" scoped="" ref="0x4188c2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4188c898" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4188c898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4188ca70"/>
        <function-ref name="userId" scoped="" ref="0x4188cb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4188b848" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4188b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4188ba20"/>
        <function-ref name="runTask" scoped="" ref="0x4188bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4124d878" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht15C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4124d878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4124a388"/>
        <function-ref name="fired" scoped="" ref="0x4124c628"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4124cd30"/>
        <function-ref name="isOneShot" scoped="" ref="0x4124cad8"/>
        <function-ref name="getdt" scoped="" ref="0x4124a838"/>
        <function-ref name="gett0" scoped="" ref="0x4124a5e0"/>
        <function-ref name="isRunning" scoped="" ref="0x4124c880"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4124dea0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4124a068"/>
        <function-ref name="startOneShot" scoped="" ref="0x4124c150"/>
        <function-ref name="stop" scoped="" ref="0x4124c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41240220" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41240220"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412403f8"/>
        <function-ref name="stopDone" scoped="" ref="0x412404d8"/>
        <function-ref name="start" scoped="" ref="0x412405b8"/>
        <function-ref name="stop" scoped="" ref="0x41240698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x41240890" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x41240890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41240a78"/>
        <function-ref name="high" scoped="" ref="0x41240b58"/>
        <function-ref name="Toggle" scoped="" ref="0x41240c38"/>
        <function-ref name="read" scoped="" ref="0x41240d18"/>
        <function-ref name="setParam" scoped="" ref="0x41240df8"/>
        <function-ref name="readDone" scoped="" ref="0x41240ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41241ed8" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41241ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412400c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4123c510" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4123c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4123c6e8"/>
        <function-ref name="stopDone" scoped="" ref="0x4123c7c8"/>
        <function-ref name="start" scoped="" ref="0x4123c8a8"/>
        <function-ref name="stop" scoped="" ref="0x4123c988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x4123ce18" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x4123ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x4123b010"/>
        <function-ref name="high" scoped="" ref="0x4123b0f0"/>
        <function-ref name="Toggle" scoped="" ref="0x4123b1d0"/>
        <function-ref name="read" scoped="" ref="0x4123b2b0"/>
        <function-ref name="setParam" scoped="" ref="0x4123b390"/>
        <function-ref name="readDone" scoped="" ref="0x4123b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4123c158" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4123c158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4123c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412370e0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412370e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412372b8"/>
        <function-ref name="stopDone" scoped="" ref="0x41237398"/>
        <function-ref name="start" scoped="" ref="0x41237478"/>
        <function-ref name="stop" scoped="" ref="0x41237558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x41277418" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x41277418"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x41277b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x412379c8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x412379c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41237ba0"/>
        <function-ref name="high" scoped="" ref="0x41237c80"/>
        <function-ref name="Toggle" scoped="" ref="0x41237d60"/>
        <function-ref name="read" scoped="" ref="0x41237e40"/>
        <function-ref name="setParam" scoped="" ref="0x41237f20"/>
        <function-ref name="readDone" scoped="" ref="0x41236018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read_io" ref="0x4128cba0" loc="233:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read_io" scoped="" ref="0x4128cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4128cdf8"/>
        <function-ref name="runTask" scoped="" ref="0x4128ced8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4123bcd8" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4123bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4123beb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init_io" ref="0x412691d8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init_io" scoped="" ref="0x412691d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412693b0"/>
        <function-ref name="runTask" scoped="" ref="0x41269490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x41278bf8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x41278bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41278dd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41278eb0"/>
        <function-ref name="request" scoped="" ref="0x4126d010"/>
        <function-ref name="granted" scoped="" ref="0x4126d0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4126d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntPin" ref="0x4126d3d0" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x4126d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4126d5a8"/>
        <function-ref name="isInput" scoped="" ref="0x4126d688"/>
        <function-ref name="toggle" scoped="" ref="0x4126d768"/>
        <function-ref name="isOutput" scoped="" ref="0x4126d848"/>
        <function-ref name="get" scoped="" ref="0x4126d928"/>
        <function-ref name="makeOutput" scoped="" ref="0x4126da08"/>
        <function-ref name="set" scoped="" ref="0x4126dae8"/>
        <function-ref name="clr" scoped="" ref="0x4126dbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_low" ref="0x4125b430" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_low" scoped="" ref="0x4125b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4125b608"/>
        <function-ref name="runTask" scoped="" ref="0x4125b6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_toggle" ref="0x4129a730" loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_toggle" scoped="" ref="0x4129a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4129a908"/>
        <function-ref name="runTask" scoped="" ref="0x4129a9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x4126fc70" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4126fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412792e8"/>
        <function-ref name="writeDone" scoped="" ref="0x41278558"/>
        <function-ref name="write" scoped="" ref="0x41279908"/>
        <function-ref name="readDone" scoped="" ref="0x41279f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x4126de40" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x4126de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4126c050"/>
        <function-ref name="fired" scoped="" ref="0x4126c130"/>
        <function-ref name="disable" scoped="" ref="0x4126c210"/>
        <function-ref name="edge" scoped="" ref="0x4126c2f0"/>
        <function-ref name="enable" scoped="" ref="0x4126c3d0"/>
        <function-ref name="getValue" scoped="" ref="0x4126c4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_high" ref="0x4125f1e0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_high" scoped="" ref="0x4125f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4125f3b8"/>
        <function-ref name="runTask" scoped="" ref="0x4125f498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x412b8840" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x412b8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x412b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntPin" ref="0x412b7480" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x412b7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412b7658"/>
        <function-ref name="isInput" scoped="" ref="0x412b7738"/>
        <function-ref name="toggle" scoped="" ref="0x412b7818"/>
        <function-ref name="isOutput" scoped="" ref="0x412b78f8"/>
        <function-ref name="get" scoped="" ref="0x412b79d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x412b7ab8"/>
        <function-ref name="set" scoped="" ref="0x412b7b98"/>
        <function-ref name="clr" scoped="" ref="0x412b7c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CResource" ref="0x412af7c8" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x412af7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412af9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412afa80"/>
        <function-ref name="request" scoped="" ref="0x412afb60"/>
        <function-ref name="granted" scoped="" ref="0x412afc40"/>
        <function-ref name="isOwner" scoped="" ref="0x412afd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x412b27f8" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x412b27f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412b2e40"/>
        <function-ref name="writeDone" scoped="" ref="0x412af128"/>
        <function-ref name="write" scoped="" ref="0x412b1498"/>
        <function-ref name="readDone" scoped="" ref="0x412b1ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x412b7ef0" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x412b7ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412b20e0"/>
        <function-ref name="fired" scoped="" ref="0x412b21c0"/>
        <function-ref name="disable" scoped="" ref="0x412b22a0"/>
        <function-ref name="edge" scoped="" ref="0x412b2380"/>
        <function-ref name="enable" scoped="" ref="0x412b2460"/>
        <function-ref name="getValue" scoped="" ref="0x412b2540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412ada38" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300DigitalC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412ada38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412adc10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412adcf0"/>
        <function-ref name="request" scoped="" ref="0x412addd0"/>
        <function-ref name="granted" scoped="" ref="0x412adeb0"/>
        <function-ref name="isOwner" scoped="" ref="0x412ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x412ac200" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300DigitalC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x412ac200"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412ac848"/>
        <function-ref name="writeDone" scoped="" ref="0x41362ab8"/>
        <function-ref name="write" scoped="" ref="0x412ace68"/>
        <function-ref name="readDone" scoped="" ref="0x41362498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412a4470" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412a4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412a4648"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412a4728"/>
        <function-ref name="request" scoped="" ref="0x412a4808"/>
        <function-ref name="granted" scoped="" ref="0x412a48e8"/>
        <function-ref name="isOwner" scoped="" ref="0x412a49c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x412a2010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x412a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412a2658"/>
        <function-ref name="writeDone" scoped="" ref="0x412a18e0"/>
        <function-ref name="write" scoped="" ref="0x412a2c78"/>
        <function-ref name="readDone" scoped="" ref="0x412a12c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x412d7b58" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x412d7b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x412d7d40"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412d7e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x412d6b58" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x412d6b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x412d6d40"/>
        <function-ref name="configure" scoped="" ref="0x412d6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x412d6010" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412d6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412d61e8"/>
        <function-ref name="requested" scoped="" ref="0x412d62c8"/>
        <function-ref name="granted" scoped="" ref="0x412d63a8"/>
        <function-ref name="isOwner" scoped="" ref="0x412d6488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412d6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412d7418" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412d7418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412d7600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412d76e0"/>
        <function-ref name="request" scoped="" ref="0x412d77c0"/>
        <function-ref name="granted" scoped="" ref="0x412d78a0"/>
        <function-ref name="isOwner" scoped="" ref="0x412d7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x412d66a8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412d66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412d6880"/>
        <function-ref name="userId" scoped="" ref="0x412d6960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x418cd0a0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x418cd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x418cd278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x418cd3d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x418cd3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x418cd5b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x418cd690"/>
        <function-ref name="isEnqueued" scoped="" ref="0x418cd770"/>
        <function-ref name="dequeue" scoped="" ref="0x418cd850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x418ccc88" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x418ccc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x418cce70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x418cb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x418cbca8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x418cbca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x418cbe90"/>
        <function-ref name="configure" scoped="" ref="0x418ca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x418ca170" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x418ca170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x418ca348"/>
        <function-ref name="isEmpty" scoped="" ref="0x418ca428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x418ca508"/>
        <function-ref name="dequeue" scoped="" ref="0x418ca5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x418cb150" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x418cb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x418cb328"/>
        <function-ref name="requested" scoped="" ref="0x418cb408"/>
        <function-ref name="granted" scoped="" ref="0x418cb4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x418cb5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x418cb6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x418ca728" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x418ca728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x418ca900"/>
        <function-ref name="led0Toggle" scoped="" ref="0x418ca9e0"/>
        <function-ref name="led1On" scoped="" ref="0x418caac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x418caba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x418cac80"/>
        <function-ref name="get" scoped="" ref="0x418cad60"/>
        <function-ref name="led1Off" scoped="" ref="0x418cae40"/>
        <function-ref name="led0On" scoped="" ref="0x418c91d8"/>
        <function-ref name="set" scoped="" ref="0x418c9018"/>
        <function-ref name="led2On" scoped="" ref="0x418caf20"/>
        <function-ref name="led2Off" scoped="" ref="0x418c90f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x418cc548" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x418cc548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x418cc730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x418cc810"/>
        <function-ref name="request" scoped="" ref="0x418cc8f0"/>
        <function-ref name="granted" scoped="" ref="0x418cc9d0"/>
        <function-ref name="isOwner" scoped="" ref="0x418ccab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x418cb7e8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x418cb7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x418cb9c0"/>
        <function-ref name="userId" scoped="" ref="0x418cbaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x418c9358" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x418c9358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x418c9530"/>
        <function-ref name="runTask" scoped="" ref="0x418c9610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x412d4230" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x412d4230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x412d4408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x412d4548" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412d4548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412d4720"/>
        <function-ref name="requested" scoped="" ref="0x412d4800"/>
        <function-ref name="granted" scoped="" ref="0x412d48e0"/>
        <function-ref name="isOwner" scoped="" ref="0x412d49c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412d4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x412d5d90" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x412d5d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412d4010"/>
        <function-ref name="stop" scoped="" ref="0x412d40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x412d4be0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412d4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412d4db8"/>
        <function-ref name="userId" scoped="" ref="0x412d4e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x412f5dd8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x412f5dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x412f4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x412f7f20" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x412f7f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412f6580"/>
        <function-ref name="writeDone" scoped="" ref="0x412f5800"/>
        <function-ref name="write" scoped="" ref="0x412f6ba0"/>
        <function-ref name="readDone" scoped="" ref="0x412f51e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412d1010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412d11f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412d12d8"/>
        <function-ref name="request" scoped="" ref="0x412d13b8"/>
        <function-ref name="granted" scoped="" ref="0x412d1498"/>
        <function-ref name="isOwner" scoped="" ref="0x412d1578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x412d1800" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x412d1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412d1e58"/>
        <function-ref name="writeDone" scoped="" ref="0x412f7128"/>
        <function-ref name="write" scoped="" ref="0x412d0498"/>
        <function-ref name="readDone" scoped="" ref="0x412d0ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x412f77a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x412f77a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412f7990"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412f7a70"/>
        <function-ref name="request" scoped="" ref="0x412f7b50"/>
        <function-ref name="granted" scoped="" ref="0x412f7c30"/>
        <function-ref name="isOwner" scoped="" ref="0x412f7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x41348d50" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x41348d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x41348f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x413470b8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x413470b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x41347290"/>
        <function-ref name="sendCommand" scoped="" ref="0x41347370"/>
        <function-ref name="setStart" scoped="" ref="0x41347450"/>
        <function-ref name="status" scoped="" ref="0x41347530"/>
        <function-ref name="hasAcks" scoped="" ref="0x41347610"/>
        <function-ref name="isEnabled" scoped="" ref="0x413476f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x413477d0"/>
        <function-ref name="read" scoped="" ref="0x413478b0"/>
        <function-ref name="init" scoped="" ref="0x41347990"/>
        <function-ref name="enableAck" scoped="" ref="0x41347a70"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x41347b50"/>
        <function-ref name="hasStart" scoped="" ref="0x41347c30"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x41347d10"/>
        <function-ref name="commandComplete" scoped="" ref="0x41347e70"/>
        <function-ref name="enable" scoped="" ref="0x41346010"/>
        <function-ref name="write" scoped="" ref="0x413460f0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x413461d0"/>
        <function-ref name="off" scoped="" ref="0x413462b0"/>
        <function-ref name="setStop" scoped="" ref="0x41346390"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x41346470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x41346550"/>
        <function-ref name="hasStop" scoped="" ref="0x41346630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x413467b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x413467b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41346988"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41346a68"/>
        <function-ref name="led1On" scoped="" ref="0x41346b48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41346c28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41346d08"/>
        <function-ref name="get" scoped="" ref="0x41346de8"/>
        <function-ref name="led1Off" scoped="" ref="0x41346ec8"/>
        <function-ref name="led2On" scoped="" ref="0x413452b0"/>
        <function-ref name="set" scoped="" ref="0x413450f0"/>
        <function-ref name="led2Off" scoped="" ref="0x41345010"/>
        <function-ref name="led0On" scoped="" ref="0x413451d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x41345430" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x41345430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41345608"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413456e8"/>
        <function-ref name="led1On" scoped="" ref="0x413457c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413458a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41345988"/>
        <function-ref name="get" scoped="" ref="0x41345a68"/>
        <function-ref name="led1Off" scoped="" ref="0x41345b48"/>
        <function-ref name="led2On" scoped="" ref="0x41345ec8"/>
        <function-ref name="set" scoped="" ref="0x41345d08"/>
        <function-ref name="led2Off" scoped="" ref="0x41345c28"/>
        <function-ref name="led0On" scoped="" ref="0x41345de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x412f39e8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x412f39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412f3bc0"/>
        <function-ref name="stop" scoped="" ref="0x412f3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x412f3e90" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x412f3e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413494f8"/>
        <function-ref name="writeDone" scoped="" ref="0x41348778"/>
        <function-ref name="write" scoped="" ref="0x41349b18"/>
        <function-ref name="readDone" scoped="" ref="0x41348158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x413439b8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x413439b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x41343b90"/>
        <function-ref name="sendCommand" scoped="" ref="0x41343c70"/>
        <function-ref name="setStart" scoped="" ref="0x41343d50"/>
        <function-ref name="status" scoped="" ref="0x41343e30"/>
        <function-ref name="hasAcks" scoped="" ref="0x41343f10"/>
        <function-ref name="isEnabled" scoped="" ref="0x41340010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x413400f0"/>
        <function-ref name="read" scoped="" ref="0x413401d0"/>
        <function-ref name="init" scoped="" ref="0x413402b0"/>
        <function-ref name="enableAck" scoped="" ref="0x41340390"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x41340470"/>
        <function-ref name="hasStart" scoped="" ref="0x41340550"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x41340630"/>
        <function-ref name="commandComplete" scoped="" ref="0x41340790"/>
        <function-ref name="enable" scoped="" ref="0x41340870"/>
        <function-ref name="write" scoped="" ref="0x41340950"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x41340a30"/>
        <function-ref name="off" scoped="" ref="0x41340b10"/>
        <function-ref name="setStop" scoped="" ref="0x41340bf0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x41340cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x41340db0"/>
        <function-ref name="hasStop" scoped="" ref="0x41340e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x4133fa88" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x4133fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x4133fc60"/>
        <function-ref name="sendCommand" scoped="" ref="0x4133fd40"/>
        <function-ref name="setStart" scoped="" ref="0x4133fe20"/>
        <function-ref name="status" scoped="" ref="0x4133ff00"/>
        <function-ref name="hasAcks" scoped="" ref="0x4133c010"/>
        <function-ref name="isEnabled" scoped="" ref="0x4133c0f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x4133c1d0"/>
        <function-ref name="read" scoped="" ref="0x4133c2b0"/>
        <function-ref name="init" scoped="" ref="0x4133c390"/>
        <function-ref name="enableAck" scoped="" ref="0x4133c470"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x4133c550"/>
        <function-ref name="hasStart" scoped="" ref="0x4133c630"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4133c710"/>
        <function-ref name="commandComplete" scoped="" ref="0x4133c870"/>
        <function-ref name="enable" scoped="" ref="0x4133c950"/>
        <function-ref name="write" scoped="" ref="0x4133ca30"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x4133cb10"/>
        <function-ref name="off" scoped="" ref="0x4133cbf0"/>
        <function-ref name="setStop" scoped="" ref="0x4133ccd0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x4133cdb0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x4133ce90"/>
        <function-ref name="hasStop" scoped="" ref="0x4133b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x4133b240" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x4133b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4133b418"/>
        <function-ref name="isInput" scoped="" ref="0x4133b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x4133b5d8"/>
        <function-ref name="isOutput" scoped="" ref="0x4133b6b8"/>
        <function-ref name="get" scoped="" ref="0x4133b798"/>
        <function-ref name="makeOutput" scoped="" ref="0x4133b878"/>
        <function-ref name="set" scoped="" ref="0x4133b958"/>
        <function-ref name="clr" scoped="" ref="0x4133ba38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x4133bc40" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x4133bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4133be18"/>
        <function-ref name="isInput" scoped="" ref="0x4133bef8"/>
        <function-ref name="toggle" scoped="" ref="0x4133a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4133a0f0"/>
        <function-ref name="get" scoped="" ref="0x4133a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4133a2b0"/>
        <function-ref name="set" scoped="" ref="0x4133a390"/>
        <function-ref name="clr" scoped="" ref="0x4133a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41361c60" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplMDA300DigitalC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41361c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4135e790"/>
        <function-ref name="fired" scoped="" ref="0x41360a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4135e150"/>
        <function-ref name="isOneShot" scoped="" ref="0x41360ed0"/>
        <function-ref name="getdt" scoped="" ref="0x4135ec40"/>
        <function-ref name="gett0" scoped="" ref="0x4135e9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x41360c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x413602c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4135e470"/>
        <function-ref name="startOneShot" scoped="" ref="0x41360548"/>
        <function-ref name="stop" scoped="" ref="0x413607c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4135a918" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4135a918"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4135aaf0"/>
        <function-ref name="stopDone" scoped="" ref="0x4135abd0"/>
        <function-ref name="start" scoped="" ref="0x4135acb0"/>
        <function-ref name="stop" scoped="" ref="0x4135ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x41359c10" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x41359c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x41359de8"/>
        <function-ref name="off" scoped="" ref="0x41359ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4135a600" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4135a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4135a7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x41359010" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x41359010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413591f8"/>
        <function-ref name="readDone" scoped="" ref="0x413592d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x413594b0" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x413594b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x41359698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x41423050" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x41423050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x41423228"/>
        <function-ref name="off" scoped="" ref="0x41423308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x413597f8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x413597f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x413599d0"/>
        <function-ref name="off" scoped="" ref="0x41359ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41355a48" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41355a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41355c20"/>
        <function-ref name="stopDone" scoped="" ref="0x41355d00"/>
        <function-ref name="start" scoped="" ref="0x41355de0"/>
        <function-ref name="stop" scoped="" ref="0x41355ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x4134f3c8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x4134f3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x4134f5a0"/>
        <function-ref name="off" scoped="" ref="0x4134f680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413556b0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413556b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41355888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x413503b8" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x413503b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41350590"/>
        <function-ref name="readDone" scoped="" ref="0x41350670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x41350b00" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x41350b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x41350cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x4134f888" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x4134f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x4134fa60"/>
        <function-ref name="off" scoped="" ref="0x4134fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x41350ee0" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x41350ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x4134f0e0"/>
        <function-ref name="off" scoped="" ref="0x4134f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBuffer" ref="0x413916d8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x413916d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413918b0"/>
        <function-ref name="isInput" scoped="" ref="0x41391990"/>
        <function-ref name="toggle" scoped="" ref="0x41391a70"/>
        <function-ref name="isOutput" scoped="" ref="0x41391b50"/>
        <function-ref name="get" scoped="" ref="0x41391c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x41391d10"/>
        <function-ref name="set" scoped="" ref="0x41391df0"/>
        <function-ref name="clr" scoped="" ref="0x41391ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation33" ref="0x41392b98" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x41392b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41392d70"/>
        <function-ref name="isInput" scoped="" ref="0x41392e50"/>
        <function-ref name="toggle" scoped="" ref="0x41391010"/>
        <function-ref name="isOutput" scoped="" ref="0x413910f0"/>
        <function-ref name="get" scoped="" ref="0x413911d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x413912b0"/>
        <function-ref name="set" scoped="" ref="0x41391390"/>
        <function-ref name="clr" scoped="" ref="0x41391470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerStabalizingTimer" ref="0x4138b010" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x4138b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4138ab78"/>
        <function-ref name="fired" scoped="" ref="0x4138be10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4138a538"/>
        <function-ref name="isOneShot" scoped="" ref="0x4138a2e0"/>
        <function-ref name="getdt" scoped="" ref="0x41388048"/>
        <function-ref name="gett0" scoped="" ref="0x4138add0"/>
        <function-ref name="isRunning" scoped="" ref="0x4138a088"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4138b6b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4138a858"/>
        <function-ref name="startOneShot" scoped="" ref="0x4138b938"/>
        <function-ref name="stop" scoped="" ref="0x4138bbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x4134b718" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x4134b718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x4134b8f0"/>
        <function-ref name="off" scoped="" ref="0x4134b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x4134e708" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x4134e708"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4134e8e0"/>
        <function-ref name="readDone" scoped="" ref="0x4134e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x4134ee50" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x4134ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x4134b050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation50" ref="0x41392150" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x41392150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41392328"/>
        <function-ref name="isInput" scoped="" ref="0x41392408"/>
        <function-ref name="toggle" scoped="" ref="0x413924e8"/>
        <function-ref name="isOutput" scoped="" ref="0x413925c8"/>
        <function-ref name="get" scoped="" ref="0x413926a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41392788"/>
        <function-ref name="set" scoped="" ref="0x41392868"/>
        <function-ref name="clr" scoped="" ref="0x41392948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBooster" ref="0x41390170" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x41390170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41390348"/>
        <function-ref name="isInput" scoped="" ref="0x41390428"/>
        <function-ref name="toggle" scoped="" ref="0x41390508"/>
        <function-ref name="isOutput" scoped="" ref="0x413905e8"/>
        <function-ref name="get" scoped="" ref="0x413906c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x413907a8"/>
        <function-ref name="set" scoped="" ref="0x41390888"/>
        <function-ref name="clr" scoped="" ref="0x41390968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Switch" ref="0x413846a8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x413846a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x41384880"/>
        <function-ref name="get" scoped="" ref="0x41384960"/>
        <function-ref name="getDone" scoped="" ref="0x41384a40"/>
        <function-ref name="setAll" scoped="" ref="0x41384b20"/>
        <function-ref name="set" scoped="" ref="0x41384c00"/>
        <function-ref name="setAllDone" scoped="" ref="0x41384ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x4138c708" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x4138c708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4138c8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4138c9c0"/>
        <function-ref name="request" scoped="" ref="0x4138caa0"/>
        <function-ref name="granted" scoped="" ref="0x4138cb80"/>
        <function-ref name="isOwner" scoped="" ref="0x4138cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41384e70" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41384e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41387070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41387150"/>
        <function-ref name="led1On" scoped="" ref="0x41387230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41387310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x413873f0"/>
        <function-ref name="get" scoped="" ref="0x413874d0"/>
        <function-ref name="led1Off" scoped="" ref="0x413875b0"/>
        <function-ref name="led2Off" scoped="" ref="0x41387930"/>
        <function-ref name="set" scoped="" ref="0x41387690"/>
        <function-ref name="led0On" scoped="" ref="0x41387770"/>
        <function-ref name="led2On" scoped="" ref="0x41387850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x4134bbd8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x4134bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x4134bdb0"/>
        <function-ref name="off" scoped="" ref="0x4134be90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x4134b258" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x4134b258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x4134b430"/>
        <function-ref name="off" scoped="" ref="0x4134b510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Amplifier" ref="0x41390ba8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x41390ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41390d80"/>
        <function-ref name="isInput" scoped="" ref="0x41390e60"/>
        <function-ref name="toggle" scoped="" ref="0x4138f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4138f0f0"/>
        <function-ref name="get" scoped="" ref="0x4138f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4138f2b0"/>
        <function-ref name="set" scoped="" ref="0x4138f390"/>
        <function-ref name="clr" scoped="" ref="0x4138f470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x4138f748" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4138f748"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4138fd90"/>
        <function-ref name="writeDone" scoped="" ref="0x4138c048"/>
        <function-ref name="write" scoped="" ref="0x4138d3c8"/>
        <function-ref name="readDone" scoped="" ref="0x4138d9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adc_get_data" ref="0x413b6bd8" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adc_get_data" scoped="" ref="0x413b6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413b6db0"/>
        <function-ref name="runTask" scoped="" ref="0x413b6e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SwitchControl" ref="0x413d7010" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <component-ref qname="MDA300IBADCSwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x413d7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413d71e8"/>
        <function-ref name="stopDone" scoped="" ref="0x413d72c8"/>
        <function-ref name="start" scoped="" ref="0x413d73a8"/>
        <function-ref name="stop" scoped="" ref="0x413d7488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Switch" ref="0x413d7608" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <component-ref qname="MDA300IBADCSwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x413d7608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x413d77e0"/>
        <function-ref name="get" scoped="" ref="0x413d78c0"/>
        <function-ref name="getDone" scoped="" ref="0x413d79a0"/>
        <function-ref name="setAll" scoped="" ref="0x413d7a80"/>
        <function-ref name="set" scoped="" ref="0x413d7b60"/>
        <function-ref name="setAllDone" scoped="" ref="0x413d7c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413d6520" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MDA300IBADCSwitchC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413d6520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413d66f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413d67d8"/>
        <function-ref name="request" scoped="" ref="0x413d68b8"/>
        <function-ref name="granted" scoped="" ref="0x413d6998"/>
        <function-ref name="isOwner" scoped="" ref="0x413d6a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x413d6c68" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MDA300IBADCSwitchC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x413d6c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413d52e8"/>
        <function-ref name="writeDone" scoped="" ref="0x413d4558"/>
        <function-ref name="write" scoped="" ref="0x413d5908"/>
        <function-ref name="readDone" scoped="" ref="0x413d5f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SwitchControl" ref="0x413d36f8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x413d36f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413d38d0"/>
        <function-ref name="stopDone" scoped="" ref="0x413d39b0"/>
        <function-ref name="start" scoped="" ref="0x413d3a90"/>
        <function-ref name="stop" scoped="" ref="0x413d3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Switch" ref="0x413d3cf0" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x413d3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x413d3ec8"/>
        <function-ref name="get" scoped="" ref="0x413d0010"/>
        <function-ref name="getDone" scoped="" ref="0x413d00f0"/>
        <function-ref name="setAll" scoped="" ref="0x413d01d0"/>
        <function-ref name="set" scoped="" ref="0x413d02b0"/>
        <function-ref name="setAllDone" scoped="" ref="0x413d0390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x413d05e8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x413d05e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413d07c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413d08a0"/>
        <function-ref name="request" scoped="" ref="0x413d0980"/>
        <function-ref name="granted" scoped="" ref="0x413d0a60"/>
        <function-ref name="isOwner" scoped="" ref="0x413d0b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x413d0e18" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x413d0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413ce488"/>
        <function-ref name="writeDone" scoped="" ref="0x413cd748"/>
        <function-ref name="write" scoped="" ref="0x413ceaa8"/>
        <function-ref name="readDone" scoped="" ref="0x413cd128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x413d16c8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x413d16c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413d18a0"/>
        <function-ref name="stopDone" scoped="" ref="0x413d1980"/>
        <function-ref name="start" scoped="" ref="0x413d1a60"/>
        <function-ref name="stop" scoped="" ref="0x413d1b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageBuffer" ref="0x413b9338" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x413b9338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413b9510"/>
        <function-ref name="isInput" scoped="" ref="0x413b95f0"/>
        <function-ref name="toggle" scoped="" ref="0x413b96d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413b97b0"/>
        <function-ref name="get" scoped="" ref="0x413b9890"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b9970"/>
        <function-ref name="set" scoped="" ref="0x413b9a50"/>
        <function-ref name="clr" scoped="" ref="0x413b9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Exitation33" ref="0x413ba860" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x413ba860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413baa38"/>
        <function-ref name="isInput" scoped="" ref="0x413bab18"/>
        <function-ref name="toggle" scoped="" ref="0x413babf8"/>
        <function-ref name="isOutput" scoped="" ref="0x413bacd8"/>
        <function-ref name="get" scoped="" ref="0x413badb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x413bae98"/>
        <function-ref name="set" scoped="" ref="0x413b9010"/>
        <function-ref name="clr" scoped="" ref="0x413b90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerStabalizingTimer" ref="0x413febd8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x413febd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413fc6d8"/>
        <function-ref name="fired" scoped="" ref="0x413fd970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x413fc098"/>
        <function-ref name="isOneShot" scoped="" ref="0x413fde20"/>
        <function-ref name="getdt" scoped="" ref="0x413fcb88"/>
        <function-ref name="gett0" scoped="" ref="0x413fc930"/>
        <function-ref name="isRunning" scoped="" ref="0x413fdbc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x413fd218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x413fc3b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x413fd498"/>
        <function-ref name="stop" scoped="" ref="0x413fd718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413d1330" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413d1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413d1508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Exitation50" ref="0x413d1d70" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x413d1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ba010"/>
        <function-ref name="isInput" scoped="" ref="0x413ba0f0"/>
        <function-ref name="toggle" scoped="" ref="0x413ba1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413ba2b0"/>
        <function-ref name="get" scoped="" ref="0x413ba390"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ba470"/>
        <function-ref name="set" scoped="" ref="0x413ba550"/>
        <function-ref name="clr" scoped="" ref="0x413ba630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageBooster" ref="0x413b9d80" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x413b9d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413b8010"/>
        <function-ref name="isInput" scoped="" ref="0x413b80f0"/>
        <function-ref name="toggle" scoped="" ref="0x413b81d0"/>
        <function-ref name="isOutput" scoped="" ref="0x413b82b0"/>
        <function-ref name="get" scoped="" ref="0x413b8390"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b8470"/>
        <function-ref name="set" scoped="" ref="0x413b8550"/>
        <function-ref name="clr" scoped="" ref="0x413b8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CResource" ref="0x413fe340" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x413fe340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413fe518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413fe5f8"/>
        <function-ref name="request" scoped="" ref="0x413fe6d8"/>
        <function-ref name="granted" scoped="" ref="0x413fe7b8"/>
        <function-ref name="isOwner" scoped="" ref="0x413fe898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchControl" ref="0x413fcef0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x413fcef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413fb0e0"/>
        <function-ref name="stopDone" scoped="" ref="0x413fb1c0"/>
        <function-ref name="start" scoped="" ref="0x413fb2a0"/>
        <function-ref name="stop" scoped="" ref="0x413fb380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Amplifier" ref="0x413b8850" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x413b8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413b8a28"/>
        <function-ref name="isInput" scoped="" ref="0x413b8b08"/>
        <function-ref name="toggle" scoped="" ref="0x413b8be8"/>
        <function-ref name="isOutput" scoped="" ref="0x413b8cc8"/>
        <function-ref name="get" scoped="" ref="0x413b8da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x413b8e88"/>
        <function-ref name="set" scoped="" ref="0x413b7010"/>
        <function-ref name="clr" scoped="" ref="0x413b70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x413b73a8" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x413b73a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413b79f0"/>
        <function-ref name="writeDone" scoped="" ref="0x41400c88"/>
        <function-ref name="write" scoped="" ref="0x41400048"/>
        <function-ref name="readDone" scoped="" ref="0x41400668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413fa030" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300IBADCC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413fa030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413fa208"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413fa2e8"/>
        <function-ref name="request" scoped="" ref="0x413fa3c8"/>
        <function-ref name="granted" scoped="" ref="0x413fa4a8"/>
        <function-ref name="isOwner" scoped="" ref="0x413fa588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x413fa778" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300IBADCC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x413fa778"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413fadc0"/>
        <function-ref name="writeDone" scoped="" ref="0x413f7068"/>
        <function-ref name="write" scoped="" ref="0x413f8400"/>
        <function-ref name="readDone" scoped="" ref="0x413f8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x413f61e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplMDA300IBADCC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x413f61e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403349d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40334b98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413f5d58"/>
        <function-ref name="fired" scoped="" ref="0x413f5010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x413f5718"/>
        <function-ref name="isOneShot" scoped="" ref="0x413f54c0"/>
        <function-ref name="getdt" scoped="" ref="0x413f4268"/>
        <function-ref name="gett0" scoped="" ref="0x413f4010"/>
        <function-ref name="isRunning" scoped="" ref="0x413f5268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x413f6810"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x413f5a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x413f6a90"/>
        <function-ref name="stop" scoped="" ref="0x413f6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x413ef3c8" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x413ef3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413ef5a0"/>
        <function-ref name="stopDone" scoped="" ref="0x413ef680"/>
        <function-ref name="start" scoped="" ref="0x413ef760"/>
        <function-ref name="stop" scoped="" ref="0x413ef840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBuffer" ref="0x413ed010" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x413ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ed1e8"/>
        <function-ref name="isInput" scoped="" ref="0x413ed2c8"/>
        <function-ref name="toggle" scoped="" ref="0x413ed3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x413ed488"/>
        <function-ref name="get" scoped="" ref="0x413ed568"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ed648"/>
        <function-ref name="set" scoped="" ref="0x413ed728"/>
        <function-ref name="clr" scoped="" ref="0x413ed808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation33" ref="0x413ee500" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x413ee500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ee6d8"/>
        <function-ref name="isInput" scoped="" ref="0x413ee7b8"/>
        <function-ref name="toggle" scoped="" ref="0x413ee898"/>
        <function-ref name="isOutput" scoped="" ref="0x413ee978"/>
        <function-ref name="get" scoped="" ref="0x413eea58"/>
        <function-ref name="makeOutput" scoped="" ref="0x413eeb38"/>
        <function-ref name="set" scoped="" ref="0x413eec18"/>
        <function-ref name="clr" scoped="" ref="0x413eecf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413ef010" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413ef010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413ef1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation50" ref="0x413efa90" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x413efa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413efc68"/>
        <function-ref name="isInput" scoped="" ref="0x413efd48"/>
        <function-ref name="toggle" scoped="" ref="0x413efe28"/>
        <function-ref name="isOutput" scoped="" ref="0x413eff08"/>
        <function-ref name="get" scoped="" ref="0x413ee010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ee0f0"/>
        <function-ref name="set" scoped="" ref="0x413ee1d0"/>
        <function-ref name="clr" scoped="" ref="0x413ee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBooster" ref="0x413eda78" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x413eda78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413edc50"/>
        <function-ref name="isInput" scoped="" ref="0x413edd30"/>
        <function-ref name="toggle" scoped="" ref="0x413ede10"/>
        <function-ref name="isOutput" scoped="" ref="0x413edef0"/>
        <function-ref name="get" scoped="" ref="0x413ec010"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ec0f0"/>
        <function-ref name="set" scoped="" ref="0x413ec1d0"/>
        <function-ref name="clr" scoped="" ref="0x413ec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchControl" ref="0x413eb998" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x413eb998"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413ebb70"/>
        <function-ref name="stopDone" scoped="" ref="0x413ebc50"/>
        <function-ref name="start" scoped="" ref="0x413ebd30"/>
        <function-ref name="stop" scoped="" ref="0x413ebe10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x413ecf00" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x413ecf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413eb0f0"/>
        <function-ref name="isInput" scoped="" ref="0x413eb1d0"/>
        <function-ref name="toggle" scoped="" ref="0x413eb2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x413eb390"/>
        <function-ref name="get" scoped="" ref="0x413eb470"/>
        <function-ref name="makeOutput" scoped="" ref="0x413eb550"/>
        <function-ref name="set" scoped="" ref="0x413eb630"/>
        <function-ref name="clr" scoped="" ref="0x413eb710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Amplifier" ref="0x413ec4f0" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x413ec4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413ec6c8"/>
        <function-ref name="isInput" scoped="" ref="0x413ec7a8"/>
        <function-ref name="toggle" scoped="" ref="0x413ec888"/>
        <function-ref name="isOutput" scoped="" ref="0x413ec968"/>
        <function-ref name="get" scoped="" ref="0x413eca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x413ecb28"/>
        <function-ref name="set" scoped="" ref="0x413ecc08"/>
        <function-ref name="clr" scoped="" ref="0x413ecce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x4141c988" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x4141c988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4141cb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4141b350" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4141b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x4141b528"/>
        <function-ref name="high" scoped="" ref="0x4141b608"/>
        <function-ref name="Toggle" scoped="" ref="0x4141b6e8"/>
        <function-ref name="read" scoped="" ref="0x4141b7c8"/>
        <function-ref name="setParam" scoped="" ref="0x4141b8a8"/>
        <function-ref name="readDone" scoped="" ref="0x4141b988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x4141cce0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x4141cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4141ceb8"/>
        <function-ref name="stopDone" scoped="" ref="0x4141b010"/>
        <function-ref name="start" scoped="" ref="0x4141b0f0"/>
        <function-ref name="stop" scoped="" ref="0x4141b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x41418e10" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x41418e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41415010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41415900" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41415900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41415ad8"/>
        <function-ref name="high" scoped="" ref="0x41415bb8"/>
        <function-ref name="Toggle" scoped="" ref="0x41415c98"/>
        <function-ref name="read" scoped="" ref="0x41415d78"/>
        <function-ref name="setParam" scoped="" ref="0x41415e58"/>
        <function-ref name="readDone" scoped="" ref="0x41414010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x414152a0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x414152a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41415478"/>
        <function-ref name="stopDone" scoped="" ref="0x41415558"/>
        <function-ref name="start" scoped="" ref="0x41415638"/>
        <function-ref name="stop" scoped="" ref="0x41415718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x4140f128" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x4140f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40333288"/>
            <typename><typedef-ref name="TMicro" ref="0x40333450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x4140f878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x4140d010" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x4140d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4140d1e8"/>
        <function-ref name="fired" scoped="" ref="0x4140d2c8"/>
        <function-ref name="disable" scoped="" ref="0x4140d3a8"/>
        <function-ref name="edge" scoped="" ref="0x4140d488"/>
        <function-ref name="enable" scoped="" ref="0x4140d568"/>
        <function-ref name="getValue" scoped="" ref="0x4140d648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="count_ready" ref="0x4144ac28" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="count_ready" scoped="" ref="0x4144ac28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4144ae00"/>
        <function-ref name="runTask" scoped="" ref="0x4144aee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x41414c78" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x41414c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41414e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41411730" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41411730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x41411908"/>
        <function-ref name="high" scoped="" ref="0x414119e8"/>
        <function-ref name="Toggle" scoped="" ref="0x41411ac8"/>
        <function-ref name="read" scoped="" ref="0x41411ba8"/>
        <function-ref name="setParam" scoped="" ref="0x41411c88"/>
        <function-ref name="readDone" scoped="" ref="0x41411d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x414110f0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x414110f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x414112c8"/>
        <function-ref name="stopDone" scoped="" ref="0x414113a8"/>
        <function-ref name="start" scoped="" ref="0x41411488"/>
        <function-ref name="stop" scoped="" ref="0x41411568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41410308" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41410308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x414104e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x414105c0"/>
        <function-ref name="led1On" scoped="" ref="0x414106a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41410780"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41410860"/>
        <function-ref name="get" scoped="" ref="0x41410940"/>
        <function-ref name="led1Off" scoped="" ref="0x41410a20"/>
        <function-ref name="led2Off" scoped="" ref="0x41410da0"/>
        <function-ref name="set" scoped="" ref="0x41410b00"/>
        <function-ref name="led0On" scoped="" ref="0x41410be0"/>
        <function-ref name="led2On" scoped="" ref="0x41410cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntPin" ref="0x4140fb70" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x4140fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4140fd48"/>
        <function-ref name="isInput" scoped="" ref="0x4140fe28"/>
        <function-ref name="toggle" scoped="" ref="0x4140ff08"/>
        <function-ref name="isOutput" scoped="" ref="0x4140e010"/>
        <function-ref name="get" scoped="" ref="0x4140e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4140e1d0"/>
        <function-ref name="set" scoped="" ref="0x4140e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4140e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x4140e588" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x4140e588"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4140e760"/>
        <function-ref name="isInput" scoped="" ref="0x4140e840"/>
        <function-ref name="toggle" scoped="" ref="0x4140e920"/>
        <function-ref name="isOutput" scoped="" ref="0x4140ea00"/>
        <function-ref name="get" scoped="" ref="0x4140eae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4140ebc0"/>
        <function-ref name="set" scoped="" ref="0x4140eca0"/>
        <function-ref name="clr" scoped="" ref="0x4140ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntPin" ref="0x41442010" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x41442010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414421e8"/>
        <function-ref name="isInput" scoped="" ref="0x414422c8"/>
        <function-ref name="toggle" scoped="" ref="0x414423a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41442488"/>
        <function-ref name="get" scoped="" ref="0x41442568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41442648"/>
        <function-ref name="set" scoped="" ref="0x41442728"/>
        <function-ref name="clr" scoped="" ref="0x41442808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x41442a00" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x41442a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41442bd8"/>
        <function-ref name="isInput" scoped="" ref="0x41442cb8"/>
        <function-ref name="toggle" scoped="" ref="0x41442d98"/>
        <function-ref name="isOutput" scoped="" ref="0x41442e78"/>
        <function-ref name="get" scoped="" ref="0x41441010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414410f0"/>
        <function-ref name="set" scoped="" ref="0x414411d0"/>
        <function-ref name="clr" scoped="" ref="0x414412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x41441528" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x41441528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41441700"/>
        <function-ref name="fired" scoped="" ref="0x414417e0"/>
        <function-ref name="disable" scoped="" ref="0x414418c0"/>
        <function-ref name="edge" scoped="" ref="0x414419a0"/>
        <function-ref name="enable" scoped="" ref="0x41441a80"/>
        <function-ref name="getValue" scoped="" ref="0x41441b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4143fb10" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300CounterC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4143fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4143fce8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4143fdc8"/>
        <function-ref name="request" scoped="" ref="0x4143fea8"/>
        <function-ref name="granted" scoped="" ref="0x4143e010"/>
        <function-ref name="isOwner" scoped="" ref="0x4143e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x4143e2e0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300CounterC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4143e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x41275450"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x412755b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4143e928"/>
        <function-ref name="writeDone" scoped="" ref="0x4143dc50"/>
        <function-ref name="write" scoped="" ref="0x4143d010"/>
        <function-ref name="readDone" scoped="" ref="0x4143d630"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40381a70" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4037de18" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40382508" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403823b0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4037fb50" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403841c0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40384068" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40384888" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40384730" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40384de0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403953e0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403957c8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40390b70" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40394010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40395010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40395ba0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40390430" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403907c0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402e88b0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402eb1c8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402e8cf0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402f2138" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402f2650" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x4035d418" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4036a010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40321798"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40366a50" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DataQueueManage" loc="3:DataQueueManage.nc">
      <function command="" provided="0" name="addToQueue" ref="0x404a5a10" loc="5:DataQueueManage.nc">
        <interfacedef-ref qname="DataQueueManage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x404a5710" loc="5:DataQueueManage.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable ref="0x404a58b0" loc="5:DataQueueManage.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="addLocalDataToQueue" ref="0x404a5e20" loc="7:DataQueueManage.nc">
        <interfacedef-ref qname="DataQueueManage"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404ac908" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404ac7b0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404ab730" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404ab5d8" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404ac0c8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404ace18" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405070c0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405070c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405075a0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404e6ec0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404e6ec0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x404f0630" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404f2490" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x404f1610" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404f12c8" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404f14b0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404f2de0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x404ef010" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x404f0a78" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404f2920" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x404e7540" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404e73e8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x404f0010" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404f1cb0" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404f1e98" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404e7bd8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404e7a80" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404f20c8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x4050c5e0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x4050c138" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404adb18" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404ad5b8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404ad7d0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404ad9b0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404eca88" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ec728" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404ec908" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404ec1c8" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404dfb80" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404dfa28" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404eb898" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404eb540" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404eb738" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4050b010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4050b010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4050b660" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4050b010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4050b508" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4050b010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TDMASchedule" loc="3:TDMASchedule.nc">
      <function command="" provided="0" name="allocChildTimeSlot" ref="0x4050f6d8" loc="21:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x404814b8"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x40481cb8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node_id" ref="0x4050f318" loc="21:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="local" ref="0x4050f578" loc="21:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x404814b8"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x40481cb8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPPB" ref="0x405047e8" loc="7:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x40480b88"/>
                  <typename><typedef-ref name="dozer_parent_t" ref="0x4047f908"/></typename>
                </type-tag>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="gparent" ref="0x40504690" loc="7:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x40480b88"/>
                  <typename><typedef-ref name="dozer_parent_t" ref="0x4047f908"/></typename>
                </type-tag>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="radioWakeup" ref="0x4050fe38" loc="23:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x4050fac0" loc="23:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="node_id" ref="0x4050fcd8" loc="23:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBeaconTimeStamp" ref="0x40502890" loc="17:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timestamp" ref="0x40502738" loc="17:TDMASchedule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParentTDMASlot" ref="0x40502e18" loc="19:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tslot" ref="0x40502cc0" loc="19:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPPB" ref="0x405041f0" loc="5:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x40480b88"/>
                <typename><typedef-ref name="dozer_parent_t" ref="0x4047f908"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Index" ref="0x404fbc30" loc="5:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="ppb" ref="0x404fbe78" loc="5:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="dozer_parent" ref="0x40480b88"/>
                <typename><typedef-ref name="dozer_parent_t" ref="0x4047f908"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x40504088" loc="5:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stopTimers" ref="0x40503010" loc="11:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setParentTimeStamp" ref="0x405022c8" loc="15:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x404814b8"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x40481cb8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node_id" ref="0x40503c90" loc="15:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="bmsg" ref="0x40503ee8" loc="15:TDMASchedule.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="dozer_beacon" ref="0x404814b8"/>
                <typename><typedef-ref name="dozer_beacon_t" ref="0x40481cb8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="timestamp" ref="0x40502160" loc="15:TDMASchedule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startTimers" ref="0x40504bf0" loc="9:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTableEntry" ref="0x405037f0" loc="13:TDMASchedule.nc">
        <interfacedef-ref qname="TDMASchedule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node_id" ref="0x40503490" loc="13:TDMASchedule.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x40503690" loc="13:TDMASchedule.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40516520" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40516968" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40516de8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x405146a0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40513458" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40513900" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40514258" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40512058" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40513ee8" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x405160f8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40514b20" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40513010" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x404e9690" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
              <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e9148" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404e9328" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404e9508" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <function command="" provided="0" name="group" ref="0x404e4c50" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404e4af8" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x404db560" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404db408" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x404dd4a0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x404ddb38" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404dd9e0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x404dae58" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404daaf0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404dacf8" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x404da170" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404dbde0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404da010" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x404e55f0" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404e5498" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x404e4170" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404e5df8" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404e4010" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404cc9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x404d9a90" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404d9938" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x404e28e8" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404e2588" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x404e2788" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x404e31a8" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x405779b0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40577858" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40584398" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40584240" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40581370" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40581010" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405811f0" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405829a8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40582010" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40584cb8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40584e98" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x4057df20" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4057df20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4058a0a0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058a0a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x405892a0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058a0a0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40589148" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40589d38" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40589be0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x4058a728" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058a5d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40586820" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058a0a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405864b0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x405866c0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058a0a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40575ad8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40575980" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4058c5f8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058c4a0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4057d090" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058cf28" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x405a4b20" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a49c8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x405959f8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405958a0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x40596b70" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x40596a18" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x40596490" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x40596338" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x40595188" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x40595030" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x405a42f8" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a41a0" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x405a85c8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x405a8250" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405a8468" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x4059ba20" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4059b6c8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x4059b8c0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x4059a168" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4059a010" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x4059b200" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4059b0a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x4059a830" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4059a6d8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x405a1798" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x405ad010" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059ee50" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x405ac268" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x405ac110" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x405a0540" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x405a0dc8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a0a00" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x405a0c68" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x405a1da8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x405a1c50" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x4059e4d8" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059e148" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x4059e378" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x405ada10" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x405ad8b8" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x4059f948" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059f7f0" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x405a1168" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x405a1010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x405a7590" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a7438" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x405a39c8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a3630" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x405a3868" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x405aac28" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405aaad0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x405aa5b0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405aa218" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x405aa450" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x405a7eb0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a7d58" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x4058df08" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058ddb0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405af350" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405af010" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405af1f0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405bdeb0" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bdb50" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405bdd30" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405bd5f0" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405bf010" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405afe38" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405bfca8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bf950" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405bfb48" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x405c5060" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x405c6cb8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x405c6ec0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x405c6320" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x405c7c50" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x405c7860" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x405c7af0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x405b8538" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405b83e0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x405c6838" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x405c8920" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x405c87c8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x405b8ed0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x405b8d78" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x405c5b48" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x405c7350" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x405c71f8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x405c5600" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x405c8348" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x405b9ef0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x405b8948" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x405c8d60" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x405c2b90" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x405c1418" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x405c1018" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x405c26a0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x405c2338" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404ccc48"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x405c2540" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404ccea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x405ba6e8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x404a1e40"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x404a8e30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ba550" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x405b91a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x404b4560"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x404b34a8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b9010" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40616710" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x406163c8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x406165b0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40615250" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x40614960" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40614170" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40614618" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406147f8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40615c58" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40615900" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40615af8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x40616d60" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x40616c08" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4060fe00" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406172e8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x4061b760" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x4061aa30" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x4061a5c8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x406108c8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x4061b288" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x4061bc78" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x4061a158" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x40610dd0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4060c0f8" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4060e7a8" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4060e1a8" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4060ec58" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4060c7f0" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x40620960" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x40621b00" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x406204f8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x406203a0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x40621f18" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x40621010" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x40624e08" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x40621678" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x40621520" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40656e40" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40656e40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40653328" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40653ad8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40656e40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x406537a8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40653978" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40656e40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x406654a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40665350" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40665b40" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406659e8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4064ea48" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4064ea48"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4064ebb0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064ebb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4065deb0" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064ebb0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4065eb38" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4065d868" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064ebb0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064ebb0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4065d518" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064ebb0"/></type-var>
          </variable>
          <variable name="dt" ref="0x4065d708" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064ebb0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4065d010" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4065c368" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064ebb0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4065e1f8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064ebb0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4065e0a0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4064ebb0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4065e6d8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x406649d0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40668538" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40658ce8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x406681d0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x406683d0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40666378" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40668ae0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40666010" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40666210" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x4066a638" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4066a1d8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x40659db8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x40659850" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406c9038" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403558e0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40355b08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x406cba58" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40347c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40347e58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406cb900" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40347c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40347e58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406ca550" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034e398"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4034e5c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x406cd3b8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40343aa8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40343cd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406cab60" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034e398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4034e5c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406caa08" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034e398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4034e5c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406c9648" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403558e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40355b08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406c94f0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403558e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40355b08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x406cdda8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034d2c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4034d4e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x406cd8d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40347c30"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40347e58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x406cb410" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40343aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40343cd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406cb2b8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40343aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40343cd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x406ca090" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034d2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4034d4e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406cbf20" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034d2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4034d4e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406cf860" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406cf860"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x406da3a8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x406da250" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406db970" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406cfd58" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406cf860"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x406dd8f8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406cf860"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406dd7a0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406cf860"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406ddd38" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406dbdd0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406dd320" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406cf860"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406dd1c8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406cf860"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406db158" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406db550" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406d9928" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d9928"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x406d5858" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406d6808" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406d9e20" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d9928"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406d6c10" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406d5cb8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406d63c8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d9928"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406d6270" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d9928"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406d5038" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406d5430" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x406be3e8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406be3e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x406d2ba0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406d2310" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406be8d8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406be3e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x406d0168" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x406d0010" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x406d05f8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406d36c8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406d32a8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406d2778" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406bee50" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406be3e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406becf8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406be3e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406d3ad0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406d3ec8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x406e1010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033dc78"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4033dea0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406e0618" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033fcd0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4033fef8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406e1ae8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40341590"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403417b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406e0168" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40341590"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403417b8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406e0010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40341590"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403417b8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406e0c20" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033fcd0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4033fef8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406e0ac8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033fcd0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4033fef8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x406e1630" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033dc78"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4033dea0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406e14d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033dc78"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4033dea0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x406f17f0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x406f1cc0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x406f13d8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x406f01a8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x406f48e8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033be08"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x4033a048"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x406f4ed8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033be08"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4033a048"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x406f4d80" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4033be08"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4033a048"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407bc6b0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407bc6b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407bc818" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407bc818"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x407bcd00" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407bc818"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x407b87c0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x407b82c0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x407b8be8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40817ba8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x408145b0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40814168" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40814010" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x408176a0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4081df10" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4081ae58" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4081db18" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x4081a990" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x4081a838" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x4081d710" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x4081a380" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40840590" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x4087c010" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4087dc00" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4087de00" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40895730" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408951d0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x408953d0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x408955c8" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4087b970" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4087b610" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4087b810" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x4087d370" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404a1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4087d010" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4087d210" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4087cdb8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4087c858" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4087ca58" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4087cc50" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x40873728" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x40873c18" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x4086f138" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408a13e0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x408a2e58" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x408a1088" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408a1278" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4089fa38" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x4089f2b8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x4089f4d0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4089f6c0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4089f8c8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x408a2020" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40889eb8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x408f61a8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x408f18d8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x408f3a00" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x408f1ec0" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x408f1d68" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x408f7d28" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x408f29d8" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x408f2880" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x408f4c20" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x408f4ac8" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x408f6a38" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x4090b010" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x4090ce38" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x408f3090" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x408ef868" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x408ef710" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x4090c138" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x408f1490" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x408f1338" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x4090ca00" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x408f2010" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x408f3e38" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x408f4010" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408f6e78" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x408f35e0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x408f3488" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x408f2e88" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x408ef308" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x408efc78" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x4090c590" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x408f2448" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x408f65d0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x408f45d8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408f4480" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x408fcd18" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40907250" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40935660" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40935b48" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40967458" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40967a30" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40965750" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40965290" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4095e088" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40968a20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4095fef8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40968a20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40962cd8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x4095f3b8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40968a20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4095f260" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40968a20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4095f968" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40968a20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x409f7578" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40a12f20" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40a129a0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x40a12dc0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x40a12508" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x40a12088" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a15f08" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x40a1dea8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a1dd50" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40a1d5a0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a1d448" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40a1a168" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a1a010" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a1c800" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a1c6a8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40d083a0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d08010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40d08240" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40d090c8" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40d09998" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d09620" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404de1f0"/>
                <typename><typedef-ref name="message_t" ref="0x404dd010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40d09838" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40cf8368" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40cfbed8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40d049b8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40cfd698" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40cfc790" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cfc638" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40cfdbc0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40cfd168" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cfd010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40cfcc98" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40cfc138" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40d03970" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40d02010" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40d03360" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40d03208" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40d02748" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d025f0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40d058d8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40cff168" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cff010" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40cff800" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40cff6a8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40da28a8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40da2558" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40da2748" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40d9dc28" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40d9dad0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40dcd480" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40dcd130" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40dcd320" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40d9d090" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40dcc370" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40dcdda8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40dcc010" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40dcc208" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40d9d618" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40d9f730" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40d9f1e0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d9f3d0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40d9f5c8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40dba468" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40dba310" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40dbad00" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40dba998" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40dbaba0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40ddf4c8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40de0c50" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40dddaa8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ddd950" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40ddd1a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40de03d8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40de0818" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40ddf0c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40ddf8c8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40ddfdd0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ddfc78" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40ddd578" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f71cf0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f71cf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x40f6eed8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f71cf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x40f6cdb0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f71cf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40f6cc58" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f71cf0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40031740"/>
              <value-structured>
                <type-tag size="I:0" alignment="I:1"><attribute-ref name="one" ref="0x40031740"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40f6a6c8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f71cf0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40f6a570" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40f6eaa8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40f6c5a0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f71cf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40f6e1a8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40f6e5f0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f6fd78" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f6fd78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40f66a10" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f6fd78"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40f67c90" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40f67248" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40f662b0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f6fd78"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40f66158" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f6fd78"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40f67758" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Sample" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
      <function command="" provided="0" name="stop" ref="0x40ff4ed0" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x40ff4d78" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_digital_output" ref="0x40ff57f8" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40ff54a0" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="state" ref="0x40ff5698" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSample" ref="0x40ff5010" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40ff8778" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="channelType" ref="0x40ff89a8" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="interval" ref="0x40ff8bd0" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
          <variable name="param" ref="0x40ff8dc8" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reTask" ref="0x40ff4980" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x40ff45f8" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x400341d0"/></typename>
            </type-int>
          </variable>
          <variable name="interval" ref="0x40ff4820" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40ff32b0" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40ff41f0" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40ff5c28" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="channelType" ref="0x40ff5e58" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40ff4088" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetParam" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="setParam" ref="0x4104de00" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
        <interfacedef-ref qname="SetParam"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4104dca8" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ADConvert" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x41053a50" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
          <short>&#10; Initiates an ADC conversion on a given port.</short>
          <long>&#10; Initiates an ADC conversion on a given port.&#10;&#10; @return SUCCESS if the ADC is free and available to accept the request&#10;</long>
        </documentation>
        <interfacedef-ref qname="ADConvert"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x41050088" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ADConvert"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41053ef0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Dio" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="low" ref="0x41044dd8" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="high" ref="0x41044a20" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="Toggle" ref="0x410411c8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x41044658" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setParam" ref="0x41041768" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="modeToSet" ref="0x41041610" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x41041ca0" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41041b48" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x410cfdd8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x410cf8e0" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x410cc2f8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x410ca968" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x410ca968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x410cae38" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x410c6630" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x410ca968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x410c6300" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x410c64d0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x410ca968"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x410bc7f0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x410bc010" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x410bc238" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x410bc460" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x410bc680" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x410bbb60" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410bb130" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x410bb320" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x410bb528" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x410bb780" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x410bb9e8" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x410c0ac8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x410c02e8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x410c0510" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x410c0738" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x410c0958" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x410beb20" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x410be598" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410be248" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x410be438" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x410ef8d8" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x410f2010" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4032fb08"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x4032fd90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x410eddc0" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x410edc68" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x410efd98" loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x410f1a78" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x410f2628" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4032fb08"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4032fd90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x410f24d0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4032fb08"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4032fd90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x410f02e8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x410ed718" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x410ec2a0" loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x410f1e78" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x410f0b70" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x410f0740" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x410ef010" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x410ed270" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x410f1168" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40335df0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403341e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x410f1010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40335df0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403341e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x410ef4d8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x410f2b10" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40335df0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403341e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x410f1618" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x410ec9f0" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410ec898" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x41123668" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x41122070" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x41123138" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x41123b78" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x41122648" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x4115e4d8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht15" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <short>&#10; SensirionSht15 is the rich interface to the Sensirion SHT15&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15 is the rich interface to the Sensirion SHT15&#10; temperature/humidity sensor. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x411d2c30" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x411d28e0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x411d2ad0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x411d2408" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x41193678" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x41196bc8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x41193188" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x41193030" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x41193ec0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x41193b70" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x41193d60" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x41197010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x41233c70" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x41236880" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x41236880"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x412369e8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x412369e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x41277018" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x412369e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x41236ea8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x412369e8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x412741a8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x412741a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x41274e50" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x41275818"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x412746d0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x41275818"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x412748d0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x41274ad0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x41274ce0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x4126f4b0" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x41271ce8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x41271ee8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x4126f130" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4126f340" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x412721d8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x41275818"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x41273a28" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x41275818"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x41273c28" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x41273e28" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x41272068" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x412713b0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x41272c20" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x41272e20" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40034d68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x41271030" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x41271240" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x412c9c60" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x412ebf08" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x412ea310" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x412eac40" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x412eaae8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x412ebb28" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x412e72a8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x412e5568" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x412e7828" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x412e76d0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x412e32e8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x412eb3a0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x412eb248" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x412e8ea8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x412e8d50" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x412e7d00" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x412e8070" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x412e6630" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x412ea718" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x412e5168" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x412e5010" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x412e5ee8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x412e5d90" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x412e61c8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x412eb730" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x412e8578" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x412e8420" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x412e6bf0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x412e6a98" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x412e59b0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x412e8960" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Power" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
      <function command="" provided="0" name="on" ref="0x41357d18" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
        <interfacedef-ref qname="Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x413530c8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
        <interfacedef-ref qname="Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Switch" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function event="" provided="0" name="setDone" ref="0x41384010" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x41385e48" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x41388878" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getDone" ref="0x41385a90" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x41385938" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x41385570" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x41385418" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x41385010" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402eebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x41388c80" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x41388e78" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAllDone" ref="0x41384540" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x413843e8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e5b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
